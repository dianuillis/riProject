<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:58:24[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Needleman-Wunsch algorithm</title>
<id>1004679</id>
<revision>
<id>243115874</id>
<timestamp>2008-10-05T06:08:39Z</timestamp>
<contributor>
<username>Thorwald</username>
<id>74279</id>
</contributor>
</revision>
<categories>
<category>Computational phylogenetics</category>
<category>Bioinformatics algorithms</category>
<category>Algorithms on strings</category>
<category>Dynamic programming</category>
</categories>
</header>
<bdy>

The <b>Needleman–Wunsch algorithm</b> performs a <link xlink:type="simple" xlink:href="../289/149289.xml#xpointer(//*[./st=%22Global+alignment%22])">
global alignment</link> on two sequences (called A and B here). It is commonly used in <link xlink:type="simple" xlink:href="../214/4214.xml">
bioinformatics</link> to align <link xlink:type="simple" xlink:href="../634/23634.xml">
protein</link> or <link xlink:type="simple" xlink:href="../505/21505.xml">
nucleotide</link> sequences. The algorithm was published in 1970 by <link xlink:type="simple" xlink:href="../856/1210856.xml">
Saul Needleman</link> and <link xlink:type="simple" xlink:href="../859/1210859.xml">
Christian Wunsch</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. <p>

The Needleman–Wunsch <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> is an example of <link xlink:type="simple" xlink:href="../297/125297.xml">
dynamic programming</link>, and was the first application of dynamic programming to biological sequence comparison.</p>
<p>

Scores for aligned characters are specified by a <link xlink:type="simple" xlink:href="../743/1004743.xml">
similarity matrix</link>. Here, <math>S(i, j)</math> is the similarity of characters i and j. It uses a linear <link xlink:type="simple" xlink:href="../764/1004764.xml">
gap penalty</link>, here called d.</p>
<p>

For example, if the similarity matrix was</p>
<p>

<table>
<row>
<header>
-</header>
<header>
A</header>
<header>
G</header>
<header>
C</header>
<header>
T</header>
</row>
<row>
<header>
A</header>
<col align="right">
10</col>
</row>
<row >
</row>
<row >
</row>
<row >
</row>
<row>
<header>
G</header>
</row>
<row >
<col align="right">
7</col>
</row>
<row >
</row>
<row >
</row>
<row>
<header>
C</header>
</row>
<row >
</row>
<row >
<col align="right">
9</col>
<col align="right">
0</col>
</row>
<row>
<header>
T</header>
</row>
<row >
</row>
<row >
<col align="right">
0</col>
<col align="right">
8</col>
</row>
</table>
</p>
<p>

then the alignment:
AGACTAGTTAC
CGA---GACGT
with a gap penalty of -5, would have the following score...
<math>S(A,C) + S(G,G) + S(A,A) + 3\times d + S(G,G) + S(T,A) + S(T,C) + S(A,G) + S(C,T)</math>
<math>= -3 + 7 + 10 - 3\times 5 + 7 + -4 + 0 + -1 + 0 = 1</math></p>
<p>

To find the alignment with the highest score, a two-dimensional <link xlink:type="simple" xlink:href="../052/2052.xml">
array</link> (or <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link>) is allocated. This matrix is often called the F matrix, and its (i,j)th entry is often denoted <math>F_{ij}</math> There is one column for each character in sequence A, and one row for each character in sequence B. Thus, if we are aligning sequences of sizes n and m, the running time of the algorithm is O(nm) and the amount of memory used is in O(nm). (However, there is a modified version of the algorithm which uses only O(m + n) space, at the cost of a higher running time. This modification is in fact a general technique which applies to many dynamic programming algorithms; this method was introduced in <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../509/10171509.xml">
Hirschberg's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 for solving the <link xlink:type="simple" xlink:href="../105/236105.xml">
longest common subsequence problem</link>.)</p>
<p>

As the algorithm progresses, the <math>F_{ij}</math> will be assigned to be the optimal score for the alignment of the first i characters in A and the first j characters in B. The principle of optimality is then applied as follows.
Basis:
<math>F_{0j} = d*j</math>
<math>F_{i0} = d*i</math>
Recursion, based on the principle of optimality:
<math>F_{ij} = \max(F_{i-1,j-1} + S(A_i, B_j), F_{i,j-1} + d, F_{i-1,j} + d)</math></p>
<p>

The pseudo-code for the algorithm to compute the F matrix therefore looks like this (the sequence indexes start at 1, the F array starts at 0 to include the boundary values defined above):
for i=0 to length(A)
F(i,0) - d*i
for j=0 to length(B)
F(0,j) - d*j
for i=1 to length(A)
for j = 1 to length(B)
{
Choice1 - F(i-1,j-1) + S(A(i), B(j))
Choice2 - F(i-1, j) + d
Choice3 - F(i, j-1) + d
F(i,j) - max(Choice1, Choice2, Choice3)
}
Once the F matrix is computed, note that the bottom right hand corner of the matrix is the maximum score for any alignments. To compute which alignment actually gives this score, you can start from the bottom right cell, and compare the value with the three possible sources(Choice1, Choice2, and Choice3 above) to see which it came from. If Choice1, then A(i) and B(i) are aligned, if Choice2, then A(i) is aligned with a gap, and if Choice3, then B(i) is aligned with a gap. (In general several choices may have the same value, leading to alternative optimal alignments.)
AlignmentA - ""
AlignmentB - ""
i - length(A)
j - length(B)
while (i &amp;gt; 0 AND j &amp;gt; 0)
{
Score - F(i,j)
ScoreDiag - F(i - 1, j - 1)
ScoreUp - F(i, j - 1)
ScoreLeft - F(i - 1, j)
if (Score == ScoreDiag + S(A(i), B(j)))
{
AlignmentA - A(i-1) + AlignmentA
AlignmentB - B(j-1) + AlignmentB
i - i - 1
j - j - 1
}
else if (Score == ScoreLeft + d)
{
AlignmentA - A(i-1) + AlignmentA
AlignmentB - "-" + AlignmentB
i - i - 1
}
otherwise (Score == ScoreUp + d)
{
AlignmentA - "-" + AlignmentA
AlignmentB - B(j-1) + AlignmentB
j - j - 1
}
}
while (i &amp;gt; 0)
{
AlignmentA - A(i-1) + AlignmentA
AlignmentB - "-" + AlignmentB
i - i - 1
}
while (j &amp;gt; 0)
{
AlignmentA - "-" + AlignmentA
AlignmentB - B(j-1) + AlignmentB
j - j - 1
}</p>

<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal">Needleman SB, Wunsch CD.&#32;(1970).&#32;"<weblink xlink:type="simple" xlink:href="http://linkinghub.elsevier.com/retrieve/pii/0022-2836(70)90057-4">
A general method applicable to the search for similarities in the amino acid sequence of two proteins</weblink>". <it>J Mol Biol</it>&#32;<b>48</b>&#32;(3): 443-53. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2F0022-2836%2870%2990057-4">
10.1016/0022-2836(70)90057-4</weblink>. PMID 5420325.</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.bigbold.com/snippets/posts/show/2199">
Needleman-Wunsch Algorithm as Ruby Code</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www25.brinkster.com/denshade/NeedlemanWunsch.java.htm">
Java Implementation of the Needleman-Wunsch Algorithm</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://baba.sourceforge.net/">
B.A.B.A.</weblink> &mdash; an applet (with source) which visually explains the algorithm.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ludwig.edu.au/course/lectures2005/Likic.pdf">
A clear explanation of NW and its applications to sequence alignment</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../195/1606195.xml">
Smith-Waterman algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../695/363695.xml">
BLAST</link></entry>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../418/406418.xml">
Levenshtein distance</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../855/342855.xml">
Dynamic time warping</link></entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</entity>
</event>
</article>
