<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:03:29[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Applix 1616</title>
<id>1031771</id>
<revision>
<id>240563328</id>
<timestamp>2008-09-23T23:41:17Z</timestamp>
<contributor>
<username>CmdrObot</username>
<id>1079367</id>
</contributor>
</revision>
<categories>
<category>Microcomputers</category>
</categories>
</header>
<bdy>

<image location="right" width="265px" src="Applix-1616-logo.png">
</image>
<p>

The <b>Applix 1616</b> was a kit <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link> with a <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
Motorola 68000</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>, produced by a small company called Applix in <link xlink:type="simple" xlink:href="../862/27862.xml">
Sydney, Australia</link>, from 1986 to the early 1990s. It ran a custom <link xlink:type="simple" xlink:href="../857/6857.xml">
multitasking</link> <link xlink:type="simple" xlink:href="../751/39751.xml">
multiuser</link> <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> that was resident in <link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link>. A version of <link xlink:type="simple" xlink:href="../977/18977.xml">
Minix</link> was also ported to the 1616, as was the <link xlink:type="simple" xlink:href="../377/6056377.xml">
MGR Window System</link>. <person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../940/384940.xml">
Andrew Morton</link></programmer>
</person>
, designer of the 1616 and one of the founders of Applix, later became the maintainer of the 2.6 version of the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../510/18510.xml">
Linux kernel</link></software>
.</p>

<sec>
<st>
 History </st>

<p>

Paul Berger and Andrew Morton formed the Australian company Applix <link xlink:type="simple" xlink:href="../278/1988278.xml">
Pty. Ltd.</link> in approximately 1984 to sell a <link>
Z80</link> card they had developed for the <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../275/255275.xml">
Apple IIc</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 that allowed it to run <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
. This product was not a commercial success, but Paul later proposed they develop a <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
Motorola 68000</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
-based personal computer for sale in kit form.</p>
<p>

The project was presented to Jon Fairall, then editor of the Australia and New Zealand electronics magazine <link>
Electronics Today International</link>, and in December 1986, the first of four construction articles was published as "Project 1616", with the series concluding in June 1987. In October and November of 1987, a disk controller card was also published as "Project 1617".</p>
<p>

Over the next decade, about 400 1616s were sold <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.</p>
<p>

Applix Pty. Ltd., was in no way related to the North American company of the same name that produced <link>
Applixware</link>.</p>

</sec>
<sec>
<st>
 Hardware </st>

<ss1>
<st>
 Main board </st>

<p>

The main board contains:
<list>
<entry level="1" type="bullet">

 a <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
Motorola 68000</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 running at 7.5&nbsp;MHz, or a <link xlink:type="simple" xlink:href="../863/38863.xml">
68010</link> running at 15&nbsp;MHz.</entry>
<entry level="1" type="bullet">

 512 <link xlink:type="simple" xlink:href="../755/149755.xml">
kibibyte</link>s of <link xlink:type="simple" xlink:href="../567/74567.xml">
Dynamic RAM</link></entry>
<entry level="1" type="bullet">

 between 64 <link xlink:type="simple" xlink:href="../755/149755.xml">
kibibyte</link>s and 256 <link xlink:type="simple" xlink:href="../755/149755.xml">
kibibyte</link>s of <link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link></entry>
<entry level="1" type="bullet">

 on board <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../742/25742.xml">
bit mapped</link></format>
</artifact>
</structure>
</information>
</message>
 colour graphics (no "text" mode), with timing provided by a <bit wordnetid="109222051" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<part wordnetid="109385911" confidence="0.8">
<fragment wordnetid="109285254" confidence="0.8">
<link xlink:type="simple" xlink:href="../665/1109665.xml">
Motorola 6845</link></fragment>
</part>
</commodity>
</merchandise>
</artifact>
</bit>
 CRT controller. The video could produce 320x200 in 16 colours, or 640x200 in a palette of 4 colours out of 16, with a later modification providing a 960x512 monochrome mode. The frame buffer resided in system memory and video refresh provided DRAM refresh cycles. The video output was able to drive CGA, EGA, MGA and multisync monitors.</entry>
<entry level="1" type="bullet">

 dual <link xlink:type="simple" xlink:href="../023/26023.xml">
RS232</link> <link xlink:type="simple" xlink:href="../359/77359.xml">
serial ports</link> using a <link>
Zilog Z8530</link>.</entry>
<entry level="1" type="bullet">

 a <link xlink:type="simple" xlink:href="../616/100616.xml">
parallel port</link> for Centronics-type printers or general purpose I/O. This was provided by a <link>
Rockwell 6522</link> Versatile Interface Adaptor, which was also the source of timer interrupts.</entry>
<entry level="1" type="bullet">

 4 channel analog/audio output via an 8 bit <link xlink:type="simple" xlink:href="../943/92943.xml">
DAC</link> and multiplexor.</entry>
<entry level="1" type="bullet">

 software audio/analogue input via the <link xlink:type="simple" xlink:href="../943/92943.xml">
DAC</link> and a comparator.</entry>
<entry level="1" type="bullet">

 a PC/XT keyboard interface.</entry>
</list>
</p>
<p>

The main board also had four 80-pin <link xlink:type="simple" xlink:href="../022/75022.xml">
expansion slot</link>s. The 1616 shared this <link xlink:type="simple" xlink:href="../352/4352.xml">
backplane</link> with a platform developed by Andrew Morton for Keno Computer Systems, allowing the 1616 to use expansion boards developed for the Keno Computer Systems platform (primarily the 34010 graphics coprocessor), although the form-factor was different, which left the KCS cards sticking out of the top of the 1616 case!</p>

</ss1>
<ss1>
<st>
 Disk controller card </st>

<p>

The disk controller card contains:
<list>
<entry level="1" type="bullet">

 A <link xlink:type="simple" xlink:href="../461/34461.xml">
Zilog Z80</link> <link xlink:type="simple" xlink:href="../831/2172831.xml">
processor</link> running at 6&nbsp;MHz</entry>
<entry level="1" type="bullet">

 32 <link xlink:type="simple" xlink:href="../755/149755.xml">
kibibyte</link>s of  <link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link></entry>
<entry level="1" type="bullet">

 64 <link xlink:type="simple" xlink:href="../755/149755.xml">
kibibyte</link>s of <link xlink:type="simple" xlink:href="../915/63915.xml">
Static RAM</link></entry>
<entry level="1" type="bullet">

 a <link>
WD1772</link> <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link> controller</entry>
<entry level="1" type="bullet">

 dual <link xlink:type="simple" xlink:href="../023/26023.xml">
RS232</link> <link xlink:type="simple" xlink:href="../359/77359.xml">
serial ports</link> using a <link>
Zilog Z8530</link></entry>
<entry level="1" type="bullet">

 An <link xlink:type="simple" xlink:href="../285/3645285.xml">
NCR5380</link> <link xlink:type="simple" xlink:href="../313/28313.xml">
SCSI</link> controller</entry>
</list>
</p>
<p>

The coprocessor is able to run <link>
ZRDOS</link> (a <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
 clone), or can act as a smart disk controller.</p>

</ss1>
<ss1>
<st>
 Memory expansion card </st>

<p>

The memory card:
<list>
<entry level="1" type="bullet">

 accepts between 1 and 4 <link xlink:type="simple" xlink:href="../727/60727.xml">
mebibyte</link>s of <link xlink:type="simple" xlink:href="../567/74567.xml">
Dynamic RAM</link> in 1 mebibyte increments,</entry>
<entry level="1" type="bullet">

 has an optional <link xlink:type="simple" xlink:href="../112/177112.xml">
memory management unit</link> implemented in fast <link xlink:type="simple" xlink:href="../915/63915.xml">
Static RAM</link> and <arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../693/578693.xml">
PALs</link></array>
</group>
</arrangement>
,</entry>
<entry level="1" type="bullet">

 Another <link xlink:type="simple" xlink:href="../285/3645285.xml">
NCR5380</link> <link xlink:type="simple" xlink:href="../313/28313.xml">
SCSI</link> hard disk interface. This SCSI controller was mapped into the 68000's address space, and was considerably faster than the one on the Z80 coprocessor card.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 34010 graphics coprocessor card </st>

<p>

The <link xlink:type="simple" xlink:href="../740/3882740.xml">
TMS34010</link> card was developed by Andrew Morton for <link>
Keno Computer Systems</link>. The 34010 was a bit-addressable <link xlink:type="simple" xlink:href="../214/390214.xml">
graphics processor</link> with instructions for two-dimensional graphics primitives and arbitrary width arithmetic operations on pixel data.</p>

</ss1>
<ss1>
<st>
 User developed cards </st>

<p>

<list>
<entry level="1" type="bullet">

 Graham Redwood developed an <link xlink:type="simple" xlink:href="../499/9499.xml">
Ethernet</link> card (<link xlink:type="simple" xlink:href="../897/65897.xml">
Wire-wrap</link> or <link>
SpeedWire</link> prototype?).</entry>
<entry level="1" type="bullet">

 Philip Hutchison developed a <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../322/20322.xml">
Motorola 68030</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 <link xlink:type="simple" xlink:href="../193/378193.xml">
coprocessor</link> card (small run of working double sided <link xlink:type="simple" xlink:href="../910/65910.xml">
PCBs</link>).</entry>
</list>
</p>
<p>

Other one-off interface cards were developed for specific projects, including a numerically controlled sheet metal spinning machine controller, a <link xlink:type="simple" xlink:href="../858/87858.xml">
Transputer</link> card, several EEPROM programmers, etc.</p>

</ss1>
</sec>
<sec>
<st>
 Operating systems </st>

<ss1>
<st>
 1616/OS </st>

<p>

1616/OS was initially little more than a powerful monitor, with commands for dumping and modifying memory, loading and saving to tape, and a built in macro assembler and full screen editor. Over time, the operating system gained a hierarchical <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>, <link xlink:type="simple" xlink:href="../566/2204566.xml">
preemptive multitasking</link>, support for multiple users with access controls (although no memory protection), lightweight threads, message passing primitives and pipes. Ultimately, the operating system had around 250 system calls, and 78 commands built into the shell. The operating system had enough similarity to <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 that porting Unix source to the 1616/OS was relatively painless.</p>

</ss1>
<ss1>
<st>
 Minix </st>

<p>

Colin McCormack ported <link xlink:type="simple" xlink:href="../977/18977.xml">
Minix</link> to the 1616. He worked around the lack of a <link xlink:type="simple" xlink:href="../112/177112.xml">
memory management unit</link> when fork()ing by copying BSS, heap and stack of the child and parent processes before scheduling each one. The MMU on the RAM expansion card was developed to support Colin's Minix port, although it's unclear if it was ever used for this purpose.</p>

</ss1>
<ss1>
<st>
 ZRDOS </st>

<p>

<link>
Conal Walsh</link> ported the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
 clone <link>
ZRDOS</link> to the <link>
Z80</link>-based disk controller card. When operating in this mode, the 68000 acted as a console for ZRDOS, although it was still possible to suspend the connection to ZRDOS, and run 1616 programs, provided they didn't need disk I/O.</p>

</ss1>
<ss1>
<st>
 MGR </st>

<p>

Not strictly an operating system, the MGR windowing system run under 1616/OS, but usurped the console video and keyboard, and added virtual tty devices for each window. The MGR port required a video hack to add a higher resolution but monochrome video mode; this was done by replacing a <arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../693/578693.xml">
PAL</link></array>
</group>
</arrangement>
 in the video circuit.</p>

</ss1>
</sec>
<sec>
<st>
 Applications </st>

<p>

Most Unix and Minix programs were able to be ported to 1616/OS. Ports included:</p>
<p>

<indent level="1">

advent, ar, arc, at, cal, cat, chess (gnu), cmp, comm, compress, conquest, cron, dd, diff, ed, eroff, grep, head, indent, make, <skilled_worker wordnetid="110605985" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<editor wordnetid="110044879" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../202/3727202.xml">
MicroEMACS</link></causal_agent>
</worker>
</editor>
</person>
</physical_entity>
</skilled_worker>
, more, nroff, roff, sc, sed, sort, split, STEVIE, strings, sum, tail, tar, tee, ularn, uniq, vi, wanderer, wc, xmodem, ymodem, zmodem, zoo
</indent>

Several messaging or <link xlink:type="simple" xlink:href="../925/270925.xml">
bulletin board</link> systems were written, including <work wordnetid="100575741" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<community wordnetid="108223802" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/18588994.xml">
Usenet</link></activity>
</psychological_feature>
</group>
</act>
</service>
</gathering>
</rule>
</event>
</social_group>
</message>
</system_of_measurement>
</community>
</direction>
</standard>
</protocol>
</work>
 and <link xlink:type="simple" xlink:href="../442/11442.xml">
Fidonet</link> gateways, and many utilities to allow safe shell-level dial-up access.</p>
<p>

Several computer languages were supported, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC</link></entry>
<entry level="2" type="bullet">

<link xlink:type="simple" xlink:href="../894/86894.xml">
Tiny BASIC</link></entry>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 (HiTech C, and later <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/12323.xml">
gcc</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
)</entry>
<entry level="2" type="bullet">

cscript - an interpreted C-like scripting language created by Andrew Morton. He later added <link xlink:type="simple" xlink:href="../757/22757.xml">
OOP</link> features and renamed it to CS++. CS++ has been ported to Unix, and the source is free to download from Andrew Morton's site: http://www.zipworld.com.au/~akpm/cs++.html</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../012/11012.xml">
Forth</link></entry>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../016/18016.xml">
Lisp</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../723/19723.xml">
MUMPS</link></entry>
<entry level="1" type="bullet">

 68000 <link xlink:type="simple" xlink:href="../368/1368.xml">
assembly language</link></entry>
</list>
</p>
<p>

The collection of 1616/OS shareware eventually grew to seventeen 800kB floppies. Included were innumerable small utilities and ported applications from other environments.</p>

</sec>
<sec>
<st>
 The 1616 users group </st>

<p>

Applix <link xlink:type="simple" xlink:href="../278/1988278.xml">
Pty Ltd</link> started holding informal user group meetings in their <site wordnetid="108651247" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/27862.xml">
Sydney</link></site>
 store in 1987. The meetings were held on the second Saturday of the month, and often finished well after midnight after consumption of much <link xlink:type="simple" xlink:href="../768/24768.xml">
pizza</link>. Users brought their latest 1616-related creations to demonstrate and share, and discussion ranged from hardware design, operating system theory, language design, to politics and philosophy.</p>
<p>

When the Mortons sold the shop in 199?, the meetings moved to their house at <site wordnetid="108651247" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../595/5619595.xml">
Yerrinbool</link></site>
, in the Southern Highlands, <body wordnetid="107965085" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<colony wordnetid="108374049" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../654/21654.xml">
NSW</link></group>
</colony>
</social_group>
</body>
. When the Mortons again moved to <site wordnetid="108651247" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../276/234276.xml">
Wollongong</link></site>
, the meetings moved with them. Not able to escape the User Group by moving around NSW, the Mortons moved to <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../445/53445.xml">
Palo Alto, California</link></village>
 in 2001.</p>
<p>

The user group still meets on the second Saturday of every month, although it has been many years since an Applix 1616 has been booted at one, and, everyone being older, the meetings tend to end somewhat before midnight, and pizza is consumed in moderation.</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.zipworld.com.au/~akpm/1616.html">
The Applix 1616 Project</weblink> Andrew Morton's pages on the 1616</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ericlindsay.com/applix/index.htm">
Applix 1616 manuals</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://kerneltrap.org/node/10">
KernelTrap.org interview with Andrew Morton</weblink></entry>
</reflist>
</p>

</sec>
</bdy>
</article>
