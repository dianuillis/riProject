<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:25:13[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Euclidean algorithm</title>
<id>10377</id>
<revision>
<id>244000989</id>
<timestamp>2008-10-08T21:57:35Z</timestamp>
<contributor>
<username>Paul August</username>
<id>87355</id>
</contributor>
</revision>
<categories>
<category>Number theoretic algorithms</category>
<category>Articles containing proofs</category>
<category>Articles with example pseudocode</category>
</categories>
</header>
<bdy>

Not to be confused with <link xlink:type="simple" xlink:href="../417/9417.xml">
Euclidean geometry</link>.<p>

In <link xlink:type="simple" xlink:href="../527/21527.xml">
number theory</link>, the <b>Euclidean algorithm</b> (also called <b>Euclid's algorithm</b>) is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> to determine the <link xlink:type="simple" xlink:href="../354/12354.xml">
greatest common divisor</link> (GCD) of two elements of any <link xlink:type="simple" xlink:href="../376/10376.xml">
Euclidean domain</link> (for example, the <link xlink:type="simple" xlink:href="../563/14563.xml">
integers</link>). Its major significance is that it does not require <link xlink:type="simple" xlink:href="../341/82341.xml">
factoring</link> the two integers, and it is also significant in that it is one of the oldest algorithms known, dating back to the <link>
ancient Greeks</link>. </p>

<sec>
<st>
History of the Euclidean algorithm</st>
<p>

The Euclidean algorithm is one of the oldest algorithms known, since it appeared in <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<oeuvre wordnetid="103841417" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<end_product wordnetid="103287178" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../107/244107.xml">
Euclid's <it>Elements''</it></link></publication>
</end_product>
</book>
</oeuvre>
</artifact>
</creation>
</product>
</work>
 around <link xlink:type="simple" xlink:href="../530/58530.xml">
300 BC</link> (7th book, Proposition 2). Euclid originally formulated the problem geometrically, as the problem of finding the greatest common "measure" for two line lengths (a line that could be used to measure both lines without a remainder), and his algorithm proceeded by repeated subtraction of the shorter from the longer segment. However, the algorithm was probably not discovered by <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../331/9331.xml">
Euclid</link></causal_agent>
</physical_entity>
 and it may have been known up to 200 years earlier.  It was almost certainly known by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<philosopher wordnetid="110423589" confidence="0.8">
<physicist wordnetid="110428004" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<astronomer wordnetid="109818343" confidence="0.8">
<health_professional wordnetid="110165109" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<doctor wordnetid="110020890" confidence="0.8">
<medical_practitioner wordnetid="110305802" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../388/48388.xml">
Eudoxus of Cnidus</link></scholar>
</mathematician>
</causal_agent>
</medical_practitioner>
</doctor>
</professional>
</health_professional>
</astronomer>
</adult>
</scientist>
</intellectual>
</physicist>
</philosopher>
</person>
</physical_entity>
 (about 375 BC), and <person wordnetid="100007846" confidence="0.9508927676800064">
<philosopher wordnetid="110423589" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../308/308.xml">
Aristotle</link></philosopher>
</person>
 (about 330 BC) hinted at it in his <it>Topics</it>, 158b, 29&ndash;35.</p>

</sec>
<sec>
<st>
Description of the algorithm</st>
<p>

Given two <link xlink:type="simple" xlink:href="../474/21474.xml">
natural number</link>s <it>a</it> and <it>b</it>, not both equal to zero: check if <it>b</it> is zero; if yes, <it>a</it> is the gcd. If not, repeat the process using, respectively, <it>b</it>, and the remainder after dividing <it>a</it> by <it>b</it>.  The remainder after dividing <it>a</it> by <it>b</it> is usually written as <it>a</it> <link xlink:type="simple" xlink:href="../428/1352428.xml">
mod</link> <it>b</it>.</p>
<p>

These algorithms can be used in any context where division with remainder is possible. This includes <link xlink:type="simple" xlink:href="../065/373065.xml">
rings of polynomials</link> over a <link xlink:type="simple" xlink:href="../603/10603.xml">
field</link> as well as the ring of <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../628/48628.xml">
Gaussian integer</link></geographical_area>
</tract>
</location>
</field>
</region>
s, and in general all <link xlink:type="simple" xlink:href="../376/10376.xml">
Euclidean domain</link>s. Applying the algorithm to the more general case other than natural numbers will be discussed in more detail later in the article.</p>

<ss1>
<st>
Using recursion</st>
<p>

Using <link xlink:type="simple" xlink:href="../407/25407.xml">
recursion</link>, the algorithm can be expressed:
<b>function</b> gcd(a, b)
<b>if</b> b = 0 <b>return</b> a
<b>else</b> <b>return</b> gcd(b, a <b>mod</b> b)</p>
<p>

or in C/C++ as</p>

<p>

int gcd(int a, int b) 
{ 
return ( b != 0 ? gcd(b, a % b) : a ); 
}</p>


</ss1>
<ss1>
<st>
Using iteration</st>
<p>

An efficient, iterative method, for compilers that don't optimize <link xlink:type="simple" xlink:href="../742/30742.xml">
tail recursion</link>:</p>
<p>

<b>function</b> gcd(a, b)
<b>while</b> b ≠ 0
t := b
b := a <b>mod</b> b
a := t
<b>return</b> a</p>

</ss1>
<ss1>
<st>
The extended Euclidean algorithm</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../438/99438.xml">
extended Euclidean algorithm</link></it>
</indent>
By keeping track of the quotients occurring during the algorithm, one can also determine integers <it>p</it> and <it>q</it> with <it>ap</it>&nbsp;+&nbsp;<it>bq</it>&nbsp;=&nbsp;gcd(<it>a</it>,&nbsp;<it>b</it>).
This is known as the extended Euclidean algorithm.</p>

</ss1>
<ss1>
<st>
Original algorithm</st>
<p>

The original algorithm as described by Euclid treated the problem geometrically, using repeated subtraction rather than mod (remainder).</p>

<p>

<b>function</b> gcd(a, b)
<b>if</b> a = 0 <b>return</b> b
<b>while</b> b ≠ 0
<b>if</b> a &amp;gt; b
a := a − b
<b>else</b>
b := b − a
<b>return</b> a</p>

</ss1>
</sec>
<sec>
<st>
An example</st>
<p>

As an example, consider computing the gcd of 1071 and 1029, which is 21.
Recall that &amp;ldquo;mod&amp;rdquo; means &amp;ldquo;the remainder after dividing.&amp;rdquo;</p>
<p>

With the recursive algorithm:
<table class="wikitable">


<header>
a</header>
<header>
b</header>
<header>
Explanations</header>
<row align="right">

<col>
gcd(</col>
<col>
1071,</col>
<col>
1029)</col>
<col align="left">
The initial arguments</col>
</row>
<row align="right">
<col>
=</col>
<col>
gcd(</col>
<col>
1029,</col>
<col>
42)</col>
<col align="left">
The second argument is 1071 mod 1029</col>
</row>
<row align="right">
<col>
=</col>
<col>
gcd(</col>
<col>
42,</col>
<col>
21)</col>
<col align="left">
The second argument is 1029 mod 42</col>
</row>
<row align="right">
<col>
=</col>
<col>
gcd(</col>
<col>
21,</col>
<col>
0)</col>
<col align="left">
The second argument is 42 mod 21</col>
</row>
<row align="right">
<col>
=</col>

<col>
21</col>

<col align="left">
Since b=0, we return a</col>
</row>
</table>
</p>
<p>

With the iterative algorithm:
<table class="wikitable">
<header>
a</header>
<header>
b</header>
<header>
Explanation</header>
<row>
<col>
1071</col>
<col>
1029</col>
<col>
Step 1: The initial inputs</col>
</row>
<row>
<col>
1029</col>
<col>
42</col>
<col>
Step 2: The remainder of 1071 divided by 1029 is 42, which is put on the right, and the divisor 1029 is put on the left.</col>
</row>
<row>
<col>
42</col>
<col>
21</col>
<col>
Step 3: We repeat the loop, dividing 1029 by 42, and get 21 as remainder.</col>
</row>
<row>
<col>
21</col>
<col>
0</col>
<col>
Step 4: Repeat the loop again, since 42 is divisible by 21, we get 0 as remainder, and the algorithm terminates. The number on the left, that is 21, is the gcd as required.</col>
</row>
</table>
</p>
<p>

Observe that <it>a</it> &amp;ge; <it>b</it> in each call.  If initially, <it>b</it> &amp;gt; <it>a</it>, there is no problem; the first iteration effectively swaps the two values.</p>

</sec>
<sec>
<st>
Proof</st>
<p>

Suppose <it>a</it> and <it>b</it> are the natural numbers whose gcd has to be determined. Now, suppose <it>b</it>&nbsp;&amp;gt;&nbsp;0,  and the remainder of the division of <it>a</it> by <it>b</it> is <it>r</it>.  Therefore <it>a</it>&nbsp;=&nbsp;<it>qb</it>&nbsp;+&nbsp;<it>r</it> where <it>q</it> is the quotient of the division. </p>
<p>

Any common divisor of <it>a</it> and <it>b</it> is also a divisor of <it>r</it>. To see why this is true, consider that <it>r</it> can be written as <it>r</it>&nbsp;=&nbsp;<it>a</it>&nbsp;&amp;minus;&nbsp;<it>qb</it>. Now, if there is a  common divisor <it>d</it> of <it>a</it> and <it>b</it> such that <it>a</it>&nbsp;=&nbsp;<it>sd</it> and <it>b</it>&nbsp;=&nbsp;<it>td</it>, then  <it>r</it>&nbsp;=&nbsp;(<it>s</it>&amp;minus;<it>qt</it>)<it>d</it>. Since all these numbers, including <it>s</it>&amp;minus;<it>qt</it>, are whole numbers, it can be seen that <it>r</it> is divisible by <it>d</it>.</p>
<p>

The above analysis is true for any divisor <it>d</it>; thus, the greatest common divisor of <it>a</it> and <it>b</it> is also the greatest common divisor of <it>b</it> and <it>r</it>. Therefore it is enough if we continue searching for the greatest common divisor with the numbers <it>b</it> and <it>r</it>.
Since <it>r</it> is smaller in <link xlink:type="simple" xlink:href="../991/991.xml">
absolute value</link> than <it>b</it>, we will reach <it>r</it>&nbsp;=&nbsp;0 after finitely many steps.</p>

</sec>
<sec>
<st>
Running time</st>
<p>

<image width="230px" src="Euclidean_algorithm_running_time_X_Y.png" type="thumb">
<caption>

Plot of the running time for gcd(x,y). Red indicates a fast computation, while successively bluer points indicate slower computations
</caption>
</image>
</p>
<p>

When analyzing the running time of Euclid's algorithm, the inputs requiring the most divisions are two successive <link xlink:type="simple" xlink:href="../918/10918.xml">
Fibonacci number</link>s (because their ratios are the <link xlink:type="simple" xlink:href="../045/4951045.xml">
convergents</link> in the slowest <link xlink:type="simple" xlink:href="../802/46802.xml">
continued fraction</link> expansion to converge, that of the <link xlink:type="simple" xlink:href="../386/12386.xml">
golden ratio</link>) as proved by <link>
Gabriel Lamé</link>, and the worst case requires <link xlink:type="simple" xlink:href="../578/44578.xml">
<it>O</it>(<it>n</it>)</link> divisions, where <it>n</it> is the number of digits in the input. However, the divisions themselves are not constant time operations; the actual time complexity of the algorithm is <math>O(n^2)</math>.
The reason is that division of two <it>n</it>-bit numbers takes time <math>O(n(m+1))</math>, where <it>m</it> is the length of the quotient. Consider the computation of gcd(<it>a</it>,<it>b</it>) where <it>a</it> and <it>b</it> have at most <it>n</it> bits, let <math>a_0,\dots,a_k</math> be the sequence of numbers produced by the algorithm, and let <math>n_0,\dots,n_k</math> be their lengths. Then <math>k=O(n)</math>, and the running time is bounded by
<indent level="1">

<math>O\Big(\sum_{i&amp;lt;k}n_i(n_i-n_{i+1}+2)\Big)\subseteq O\Big(n\sum_{i&amp;lt;k}(n_i-n_{i+1}+2)\Big)\subseteq O(n(n_0+2k))\subseteq O(n^2).</math>
</indent>

This is considerably better than Euclid's original algorithm, in which the modulus operation is effectively performed using repeated subtraction in <math>O(2^n)</math> steps. Consequently, that version of the algorithm requires <math>O(2^n n)</math> time for <it>n</it>-digit numbers, or <math>O(m \ \log{m})</math> time for the number <it>m</it>.</p>
<p>

Euclid's algorithm is widely used in practice, especially for small numbers, due to its simplicity. An alternative algorithm, the <link xlink:type="simple" xlink:href="../410/985410.xml">
binary GCD algorithm</link>, exploits the <link xlink:type="simple" xlink:href="../686/238686.xml">
binary</link> representation used by computers to avoid divisions and thereby increase efficiency, although it too is <it>O</it>(<it>n</it>²); it merely shrinks the constant hidden by the <link xlink:type="simple" xlink:href="../578/44578.xml">
big-O notation</link> on many real machines.</p>
<p>

There are more complex algorithms that can reduce the running time to <math>O(n (\log n)^2 (\log \log n))</math>.  See <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../220/6497220.xml">
Computational complexity of mathematical operations</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 for more details.</p>

</sec>
<sec>
<st>
Relation with continued fractions</st>
<p>

The quotients that appear when the Euclidean algorithm is applied to the inputs <it>a</it> and <it>b</it> are precisely the numbers occurring in the <link xlink:type="simple" xlink:href="../802/46802.xml">
continued fraction</link> representation of <it>a</it>/<it>b</it>. 
Take for instance the example of <it>a</it>&nbsp;=&nbsp;1071 and <it>b</it>&nbsp;=&nbsp;1029 used above. 
Here is the calculation with highlighted quotients:
<indent level="1">

1071 = 1029 &amp;times; <b>1</b> + 42
</indent>
:1029 = 42 &amp;times; <b>24</b> + 21
<indent level="1">

42 = 21 &amp;times; <b>2</b> + 0
</indent>

Consequently,
<indent level="1">

<math>\frac{1071}{1029} = \mathbf{1} + \frac{1}{\mathbf{24} + \frac{1}{\mathbf{2}}}</math>.
</indent>
This method applies to arbitrary <link xlink:type="simple" xlink:href="../491/19725491.xml">
real</link> inputs <it>a</it> and nonzero <it>b</it>; if <it>a</it>/<it>b</it> is <link xlink:type="simple" xlink:href="../804/19724804.xml">
irrational</link>, then the Euclidean algorithm does not terminate, but the computed sequence of quotients still represents the (now infinite) continued fraction representation of <it>a</it>/<it>b</it>.</p>
<p>

The quotients <b>1</b>,<b>24</b>,<b>2</b> count certain squares nested within a rectangle R having length 1071 and width 1029, in the following manner:</p>
<p>

(1)  there is <b>1</b> 1029&amp;times;1029 square in R whose removal leaves a 42&amp;times;1029 rectangle, R1;</p>
<p>

(2)  there are <b>24</b> 42&amp;times;42 squares in R1 whose removal leaves a 21&amp;times;42 rectangle, R2;</p>
<p>

(3)  there are <b>2</b> 21&amp;times;21 squares in R2 whose removal leaves nothing.</p>
<p>

The "visual Euclidean algorithm" of nested squares applies to an arbitrary rectangle R.  If the (length)/(width) of R is an irrational number, then the visual Euclidean algorithm extends to a visual continued fraction.</p>

</sec>
<sec>
<st>
Generalization to Euclidean domains</st>
<p>

The Euclidean algorithm can be applied to some <link xlink:type="simple" xlink:href="../404/48404.xml">
rings</link>, not just the <link xlink:type="simple" xlink:href="../563/14563.xml">
integers</link>. The most general context in which the algorithm terminates with the greatest common divisor is in a <link xlink:type="simple" xlink:href="../376/10376.xml">
Euclidean domain</link>. For instance, the <link xlink:type="simple" xlink:href="../628/48628.xml">
Gaussian integers</link> and <link xlink:type="simple" xlink:href="../065/373065.xml">
polynomial ring</link>s over a <link xlink:type="simple" xlink:href="../603/10603.xml">
field</link> are both Euclidean domains.</p>
<p>

As an example, consider the ring of polynomials with <link xlink:type="simple" xlink:href="../024/19727024.xml">
rational</link> coefficients. In this ring, division with remainder is carried out using <link xlink:type="simple" xlink:href="../205/314205.xml">
long division</link>. The resulting polynomials are then made <link xlink:type="simple" xlink:href="../000/23000.xml">
monic</link> by factoring out the leading coefficient. </p>
<p>

We calculate the greatest common divisor of</p>
<p>

<indent level="1">

 <math>x^4-4x^3+4x^2-3x+14 = (x^2-5x+7)(x^2+x+2)</math>
</indent>

and</p>
<p>

<indent level="1">

 <math>x^4+8x^3+12x^2+17x+6 = (x^2+7x+3)(x^2+x+2).</math>
</indent>

Following the algorithm gives these values:</p>
<p>

<table class="wikitable">
<header>
a</header>
<header>
b</header>
<row>
<col>
<math>x^4+8x^3+12x^2+17x+6</math></col>
<col>
<math>x^4-4x^3+4x^2-3x+14</math></col>
</row>
<row>
<col>
<math>x^4-4x^3+4x^2-3x+14</math></col>
<col>
<math>x^3+\tfrac{2}{3}x^2+\tfrac{5}{3}x-\tfrac{2}{3}</math></col>
</row>
<row>
<col>
<math>x^3+\tfrac{2}{3}x^2+\tfrac{5}{3}x-\tfrac{2}{3}</math></col>
<col>
<math>x^2+x+2</math></col>
</row>
<row>
<col>
<math>x^2+x+2</math></col>
<col>
<math>0</math></col>
</row>
</table>
</p>
<p>

This agrees with the explicit factorization. For general Euclidean domains, the proof of correctness is by induction on some size function. For the integers, this size function is just the identity. For rings of polynomials over a field, it is the degree of the polynomial (note that each step in the above table reduces the degree by at least one).</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../961/17961.xml">
Least common multiple</link></entry>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/99438.xml">
Extended Euclidean algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../410/985410.xml">
Binary GCD algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../944/8547944.xml">
Lehmer's GCD algorithm</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Donald Knuth</link></scientist>
</person>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../358/31358.xml">
The Art of Computer Programming</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Volume 2: <it>Seminumerical Algorithms</it>, Third Edition. Addison-Wesley, 1997. ISBN 0-201-89684-2. Sections 4.5.2&ndash;4.5.3, pp.333&ndash;379.</entry>
<entry level="1" type="bullet">

<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Section 31.2: Greatest common divisor, pp.856&ndash;862.</entry>
<entry level="1" type="bullet">

<link>
Clark Kimberling</link>. "A Visual Euclidean Algorithm," <it>Mathematics Teacher</it> 76 (1983) 108-109.</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cut-the-knot.org/blue/Euclid.shtml">
Euclid's Algorithm</weblink> at <link xlink:type="simple" xlink:href="../167/3259167.xml">
cut-the-knot</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cut-the-knot.org/blue/binary.shtml">
Binary Euclid's Algorithm (Java)</weblink> at <link xlink:type="simple" xlink:href="../167/3259167.xml">
cut-the-knot</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cut-the-knot.org/blue/EuclidAlg.shtml">
Euclid's Game (Java)</weblink> at <link xlink:type="simple" xlink:href="../167/3259167.xml">
cut-the-knot</link></entry>
<entry level="1" type="bullet">

 <cite id="Reference-Mathworld-Euclidean Algorithm"><physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<encyclopedist wordnetid="110055566" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/836189.xml">
Eric W. Weisstein</link></scholar>
</mathematician>
</writer>
</scientist>
</causal_agent>
</alumnus>
</compiler>
</encyclopedist>
</intellectual>
</person>
</communicator>
</physical_entity>
, <it><weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/EuclideanAlgorithm.html">
Euclidean Algorithm</weblink></it> at <computer wordnetid="103082979" confidence="0.8">
<work wordnetid="104599396" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<encyclopedia wordnetid="106427387" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<web_site wordnetid="106359193" confidence="0.8">
<link xlink:type="simple" xlink:href="../235/374235.xml">
MathWorld</link></web_site>
</device>
</book>
</instrumentality>
</artifact>
</product>
</encyclopedia>
</publication>
</reference_book>
</machine>
</creation>
</work>
</computer>
.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-Mathworld-Lamé's Theorem"><physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<encyclopedist wordnetid="110055566" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/836189.xml">
Eric W. Weisstein</link></scholar>
</mathematician>
</writer>
</scientist>
</causal_agent>
</alumnus>
</compiler>
</encyclopedist>
</intellectual>
</person>
</communicator>
</physical_entity>
, <it><weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/LamesTheorem.html">
Lamé's Theorem</weblink></it> at <computer wordnetid="103082979" confidence="0.8">
<work wordnetid="104599396" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<encyclopedia wordnetid="106427387" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<web_site wordnetid="106359193" confidence="0.8">
<link xlink:type="simple" xlink:href="../235/374235.xml">
MathWorld</link></web_site>
</device>
</book>
</instrumentality>
</artifact>
</product>
</encyclopedia>
</publication>
</reference_book>
</machine>
</creation>
</work>
</computer>
.</cite></entry>
<entry level="1" type="bullet">

<it><weblink xlink:type="simple" xlink:href="http://planetmath.org/encyclopedia/EuclidsAlgorithm.html">
Euclid's algorithm</weblink></it> at <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../623/161623.xml">
PlanetMath</link></web_site>
.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://plus.maths.org/issue40/features/wardhaugh/index.html">
Music and Euclid's algorithm</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.mathpages.com/home/kmath384.htm">
The Euclidean Algorithm</weblink> at MathPages</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.math.sc.edu/~sumner/numbertheory/euclidean/euclidean.html">
Implementation</weblink> in Javascript</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.sharpdeveloper.net/content/articles/dot-net-data-structures-and-algorithms.aspx">
.NET Implementation of Euclidean algorithm</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible uncollapsed " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../527/21527.xml">
Number-theoretic</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../751/183751.xml">
Primality test</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<b><process wordnetid="105701363" confidence="0.8">
<institute wordnetid="108407330" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<association wordnetid="108049401" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../847/405847.xml">
AKS</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</association>
</thinking>
</inquiry>
</institute>
</process>
</b> · <b><link>
APR</link></b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/3609890.xml">
Ballie-PSW</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><process wordnetid="105701363" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../015/4049015.xml">
ECPP</link></higher_cognitive_process>
</trial>
</shape>
</line>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</curve>
</process>
</b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../755/157755.xml">
Fermat</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><link>
Lucas–Lehmer</link></b> · <b><it><link>
Lucas–Lehmer (Mersenne numbers)</link></it></b> · <b><it><process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../861/15371861.xml">
Lucas–Lehmer–Riesel</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</it></b> · <b><it><statement wordnetid="106722453" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../985/3225985.xml">
Proth's theorem</link></higher_cognitive_process>
</trial>
</proposition>
</experiment>
</problem_solving>
</theorem>
</thinking>
</inquiry>
</message>
</process>
</statement>
</it></b> · <b><it><link>
Pépin's</link></it></b> · <link>
Solovay–Strassen</link> · <link>
Miller–Rabin</link> · <b><problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
</b></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Sieving algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../920/2150920.xml">
Sieve of Atkin</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/73415.xml">
Sieve of Eratosthenes</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../330/14517330.xml">
Sieve of Sundaram</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/4621216.xml">
Wheel factorization</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<premise wordnetid="106753800" confidence="0.8">
<postulate wordnetid="106753299" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/15491.xml">
Integer factorization</link></proposition>
</postulate>
</premise>
</message>
</statement>
algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../392/1335392.xml">
CFRAC</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../877/1033877.xml">
Dixon's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../212/154212.xml">
ECM</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</geographical_area>
</rule>
</event>
</tract>
</location>
</field>
</region>
 · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../069/15822069.xml">
Euler's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/580668.xml">
Pollard's rho</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../753/578753.xml">
P − 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../573/1916573.xml">
P + 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <link xlink:type="simple" xlink:href="../340/582340.xml">
QS</link> · <link xlink:type="simple" xlink:href="../734/152734.xml">
GNFS</link> · <it><link xlink:type="simple" xlink:href="../132/589132.xml">
SNFS</link></it> · <link xlink:type="simple" xlink:href="../510/2608510.xml">
rational sieve</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/2132433.xml">
Fermat's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../328/3387328.xml">
Shanks' square forms</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../674/42674.xml">
Shor's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Other algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/3975814.xml">
Ancient Egyptian multiplication</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../197/4039197.xml">
Aryabhata</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../410/985410.xml">
Binary GCD</link> · <link xlink:type="simple" xlink:href="../658/4050658.xml">
Chakravala</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../377/10377.xml">
Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/99438.xml">
Extended Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../054/13644054.xml">
integer relation algorithm</link> · <link xlink:type="simple" xlink:href="../655/981655.xml">
integer square root</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/903032.xml">
Modular exponentiation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../375/3667375.xml">
Shanks-Tonelli</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<it>Italics</it> indicate that algorithm is for numbers of special forms; <b>bold</b> indicates <link xlink:type="simple" xlink:href="../951/665951.xml">
deterministic algorithm</link>for primality tests.</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
