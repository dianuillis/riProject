<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:04:12[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Euclidean minimum spanning tree</title>
<id>1040597</id>
<revision>
<id>244406821</id>
<timestamp>2008-10-10T17:25:09Z</timestamp>
<contributor>
<username>Twri</username>
<id>7976492</id>
</contributor>
</revision>
<categories>
<category>Geometric graphs</category>
<category>Spanning tree</category>
</categories>
</header>
<bdy>

<image location="right" width="300px" src="Euclidean_minimum_spanning_tree.svg" type="thumb">
<caption>

An EMST of 25 random points in the plane
</caption>
</image>
<p>

The <b>Euclidean minimum spanning tree</b> or <b>EMST</b> is a <link xlink:type="simple" xlink:href="../795/41795.xml">
minimum spanning tree</link> of a set of points in the <link xlink:type="simple" xlink:href="../029/84029.xml">
plane</link> (or more generally in <math>\Bbb{R}^n</math>), where the weight of the edge between each pair of points is the distance between those two points. In simpler terms, an EMST connects a set of dots using lines such that the total length of all the lines is minimized and any dot can be reached from any other by following the lines. This is much like a more difficult version of the child's game <it><link xlink:type="simple" xlink:href="../427/2654427.xml">
connect-the-dots</link></it>.</p>
<p>

In the plane, an EMST for a given set of points may be found in <link xlink:type="simple" xlink:href="../619/3287619.xml">
asymptotically optimal</link> <link xlink:type="simple" xlink:href="../578/44578.xml">
&amp;Theta;</link>(<it>n</it> log <it>n</it>) time using O(<it>n</it>)  space. <link xlink:type="simple" xlink:href="../383/495383.xml">
Randomized algorithms</link> of complexity O{<it>n</it> log log <it>n</it>} are known.</p>
<p>

In higher dimensions (<it>d</it> &amp;ge; 3), finding an optimal algorithm remains an <link xlink:type="simple" xlink:href="../335/1333335.xml">
open problem</link>.</p>

<sec>
<st>
Algorithms for computing EMSTs</st>
<p>

The simplest algorithm to find an EMST, given <it>n</it> points, is to actually construct the <link xlink:type="simple" xlink:href="../816/85816.xml">
complete graph</link> on <it>n</it> vertices, which has <it>n</it>(<it>n</it>-1)/2 edges, compute each edge weight by finding the distance between each pair of points, and then run a standard minimum spanning tree algorithm (such as the version of <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../783/53783.xml">
Prim's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 or <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../776/53776.xml">
Kruskal's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
) on it. Since this graph has <link xlink:type="simple" xlink:href="../578/44578.xml">
&amp;Theta;</link>(<it>n</it>2) edges for <it>n</it> distinct points, constructing it already requires <link xlink:type="simple" xlink:href="../578/44578.xml">
&amp;Omega;</link>(<it>n</it>2) time. This solution also requires &amp;Omega;(<it>n</it>2) space to store all the edges.</p>
<p>

A better approach to finding the EMST in a plane is to note that it is a subgraph of every <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../864/8864.xml">
Delaunay triangulation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 of the <it>n</it> points, a much-reduced set of edges. Although this is not easy to see (a proof is given in the next section), if we are willing to accept it, the algorithm for finding the EMST is clear: 
<list>
<entry level="1" type="number">

 Compute the Delaunay triangulation in  O(<it>n</it> log <it>n</it>)  time and O(<it>n</it>) space. Because the Delaunay triangulation is a <link xlink:type="simple" xlink:href="../314/24314.xml">
planar graph</link>, and there are no more than three times as many edges as vertices in any planar graph, this generates only O(<it>n</it>) edges.</entry>
<entry level="1" type="number">

 Label each edge with its length.</entry>
<entry level="1" type="number">

 Run Prim's algorithm (any variant) on it to find a minimum spanning tree. Since there are O(<it>n</it>) edges, this requires at most O((<it>n</it>+<it>n</it>)log <it>n</it>) or O(<it>n</it> log <it>n</it>) time.</entry>
</list>

The final result is an algorithm taking O(<it>n</it> log <it>n</it>) time and O(<it>n</it>)  space.</p>
<p>

The problem can also be generalized to <it>n</it> points in the <it>d</it>-dimensional space <math>\Bbb{R}^d</math>. The first algorithm listed above solves this problem in O(<it>dn</it>2) time, if we use the <it>d</it>-dimensional distance function, and the second algorithm requires the same amount of time in the worst-case, since Delaunay triangulations can have &amp;Omega;(<it>n</it>2) edges in higher dimensions. In the <link xlink:type="simple" xlink:href="../636/34636.xml">
1996</link> paper "A lower bound for randomized algebraic decision trees," <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../248/9506248.xml">
Dima Grigoriev</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 and others proved that this general problem has a lower bound of &amp;Omega;(<it>n</it>log <it>n</it>) time for <it>n</it> points, but the best solutions so far are close to &amp;Omega;(<it>n</it>2) for large <it>d</it>.</p>

</sec>
<sec>
<st>
 Subtree of Delaunay triangulation </st>

<p>

A simple proof that all edges of an EMST are edges of a <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../864/8864.xml">
Delaunay triangulation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 of the points<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> is in fact the proof of the equivalent <link xlink:type="simple" xlink:href="../497/8556497.xml">
contrapositive</link> statement: <it>every edge not in a Delaunay triangulation is also not in any EMST.</it>  It is based on two <link xlink:type="simple" xlink:href="../634/18634.xml">
lemma</link>s. </p>
<p>

Lemma 1 (the <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../795/41795.xml#xpointer(//*[./st=%22Cycle+property%22])">
cycle property</link></difficulty>
</problem>
</state>
</condition>
 of minimum spanning trees): <it>For any cycle C in the graph, if the weight of an edge e of C is larger than the weights of other edges of C, then this edge cannot belong to a MST</it>.</p>
<p>

Lemma 2 (a property of Delaunay triangulations): <it>If there is a circle with two of the input points on its boundary which contains no other input points, the line between those two points is an edge of every Delaunay triangulation.</it></p>
<p>

<image location="right" width="150px" src="EMST_Delaunay_proof.png">
</image>

Consider an edge <it>e</it> between two input points <it>p</it> and <it>q</it> which is not an edge of a Delaunay triangulation. Lemma 2 implies that the circle  <it>C</it> with <it>e</it> as its diameter must contain some other point <it>r</it> inside. But then <it>r</it> is closer to both <it>p</it> and <it>q</it> than they are to each other, and so the edge from <it>p</it> to <it>q</it> is the longest edge in the cycle of points <it>p</it> &amp;rarr; <it>q</it> &amp;rarr; <it>r</it> &amp;rarr; <it>p</it>, and by Lemma 1 <it>e</it> is not in any EMST.</p>

</sec>
<sec>
<st>
Expected size</st>

<p>

The expected size of the EMST for large numbers of points has been determined by <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../544/9324544.xml">
J. Michael Steele</link></associate>
</mathematician>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
.  If <math>f</math> is the density of the probability function for picking points, then for large <math>n</math> and <math>d \neq 1</math> the size of the EMST is approximately
<indent level="1">

<math>c(d) n^{\frac{d-1}{d}} \int_{\Bbb{R}^d} f(x)^{\frac{d-1}{d}} dx </math>
</indent>
where <math>c(d)</math> is a constant depending only on the dimension <math>d</math>.  The exact value of the constants are unknown but can be estimated from empirical evidence.</p>

</sec>
<sec>
<st>
 Applications </st>

<p>

An obvious application of Euclidean minimum spanning trees is to find the cheapest network of wires or pipes to connect a set of places, assuming the links cost a fixed amount per unit length. However, while these give an absolute lower bound on the amount of connection needed, most such networks prefer a <it>k</it>-connected graph to a tree, so that failure of an any individual link will not split the network into parts.</p>
<p>

Another application of EMSTs is a <link xlink:type="simple" xlink:href="../925/2018925.xml">
constant-factor approximation algorithm</link> for approximately solving the <link>
Euclidean traveling salesman problem</link>, the version of the <link xlink:type="simple" xlink:href="../248/31248.xml">
traveling salesman problem</link> on a set of points in the plane with edges labelled by their length. This realistic variation of the problem can be solved within a factor of 2 by computing the EMST, doing a walk along its boundary which outlines the entire tree, and then removing all but one occurrence of each vertex from this walk.</p>

</sec>
<sec>
<st>
Miscellanea</st>
<p>

Testing whether a <link xlink:type="simple" xlink:href="../560/48560.xml">
tree</link> may be drawn in the plane so that it represents the  Euclidean  minimum spanning tree for its vertices
is <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
</p>
<p>

This is called the realization problem for Euclidean minimum spanning trees: Given a tree <math>T = (V, E)</math>, find a location <math>D(u)</math> for each vertex <math>u \in V</math> so that <math>T</math> is a minimum spanning tree of <math>{D(u) : u \in V}</math>, or determine that no such locations exist.
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
Robert Pless. Lecture 17: Voronoi Diagrams and Delauney Triangulations. Spring 2003, Computational Geometry Class Page. Associate Professor of Computer Science and Engineering at Washington University. http://www.cs.wustl.edu/~pless/506/l17.html</entry>
<entry id="2">
Robert Sedgewick and Kevin Wayne. Minimum Spanning Tree lecture notes. Computer Science 226: Algorithms &amp; Data Structures, Spring 2007. Princeton University.  http://www.cs.princeton.edu/courses/archive/spr07/cos226/lectures/19MST.pdf</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?doid=177424.177507">
The realization problem for Euclidean minimum spanning trees is NP-hard (1994)</weblink></entry>
</reflist>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://cs.smith.edu/~orourke/TOPP/P5.html#gkms-lbrad-96">
Smith College: The Open Problems Project: Problem 5: Euclidean Minimum Spanning Tree</weblink></entry>
<entry level="1" type="bullet">

 Dima Grigoriev, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/2994042.xml">
Marek Karpinski</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
, Friedhelm Meyer auf der Heide, and Roman Smolensky. "A lower bound for randomized algebraic decision trees." <it>Proceedings of the 28th Annual ACM Symposium on the Theory of Computation</it>, pages 612-619, 1996.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.mpi-sb.mpg.de/~kavitha/assignment10-sol.ps">
Max-Planck-Institut fuer Informatik: Exercise solutions</weblink>, by Kavitha Telikepalli (Postscript)</entry>
</list>
</p>

</sec>
</bdy>
</article>
