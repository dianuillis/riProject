<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:58:01[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<bug  confidence="0.9511911446218017" wordnetid="102236355">
<anomaly  confidence="0.9511911446218017" wordnetid="114505821">
<header>
<title>Deadlock</title>
<id>105181</id>
<revision>
<id>243075375</id>
<timestamp>2008-10-05T01:14:21Z</timestamp>
<contributor>
<username>Cybercobra</username>
<id>670947</id>
</contributor>
</revision>
<categories>
<category>Software anomalies</category>
<category>Programming bugs</category>
<category>Concurrency</category>
</categories>
</header>
<bdy>

For other uses, see <link xlink:type="simple" xlink:href="../349/4205349.xml">
Deadlock (disambiguation)</link>. 
A <b>deadlock</b>  is a situation wherein two or more competing actions are waiting for the other to finish, and thus neither ever does. It is often seen in a <link xlink:type="simple" xlink:href="../390/24390.xml">
paradox</link> like '<link xlink:type="simple" xlink:href="../878/30878.xml">
the chicken or the egg</link>'.
<p>

<table style="border-collapse:collapse; border-style:none; background-color:transparent;" align="center" class="cquote2">
<row>
<col style="color:#B2B7F2;font-size:40px;font-family:serif;font-weight:bold;text-align:left;padding:10px 10px;" width="20" valign="top">
“</col>
<col style="padding:4px 10px;" valign="top">
When two trains approach each other at a crossing, both shall come to a full stop and neither shall start up again until the other has gone.</col>
<col style="color:#B2B7F2;font-size:40px;font-family:serif;font-weight:bold;text-align:right;padding:10px 10px;" width="20" valign="bottom">
”</col>
</row>
<row>
<col>
&nbsp;</col>
<col valign="top">
 <cite style="font-style:normal;">&mdash; Illogical <link xlink:type="simple" xlink:href="../783/26783.xml">
statute</link> passed by the <link xlink:type="simple" xlink:href="../118/4175118.xml">
Kansas Legislature</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></cite></col>
</row>
</table>
</p>
<p>

In computer science, <b>deadlock</b>  refers to a specific condition when two or more processes are each waiting for another to release a resource, or more than two processes are waiting for resources in a <link xlink:type="simple" xlink:href="../504/744504.xml">
circular chain</link> (see <it><link xlink:type="simple" xlink:href="../181/105181.xml#xpointer(//*[./st=%22Necessary+conditions%22])">
Necessary conditions</link></it>). Deadlock is a common problem in <link xlink:type="simple" xlink:href="../020/64020.xml">
multiprocessing</link> where many processes share a specific type of mutually exclusive resource known as a <it>software,</it> or <it>soft,</it> <link xlink:type="simple" xlink:href="../593/244593.xml">
lock</link>. Computers intended for the <it><link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link></it> and/or <it><link xlink:type="simple" xlink:href="../767/25767.xml">
real-time</link></it> markets are often equipped with a <it>hardware lock</it> (or <it>hard lock</it>) which guarantees <it><structure wordnetid="105726345" confidence="0.8">
<form wordnetid="105930736" confidence="0.8">
<link xlink:type="simple" xlink:href="../893/164893.xml">
exclusive access</link></form>
</structure>
</it> to processes, forcing <link xlink:type="simple" xlink:href="../555/28555.xml">
serialization</link>.  Deadlocks are particularly troubling because there is no <it>general</it> solution to avoid (soft) deadlocks.</p>
<p>

This situation may be likened to two people who are drawing diagrams, with only one pencil and one ruler between them. If one person takes the pencil and the other takes the ruler, a deadlock occurs when the person with the pencil needs the ruler and the person with the ruler needs the pencil, before he can give up the ruler. Both requests can't be satisfied, so a deadlock occurs.</p>
<p>

The telecommunications description of deadlock is a little stronger: deadlock occurs when none of the processes meet the condition to move to another state (as described in the process's <link xlink:type="simple" xlink:href="../931/10931.xml">
finite state machine</link>) <it>and</it> all the communication channels are empty. The second condition is often left out on other systems but is important in the telecommunication context.</p>

<sec>
<st>
Necessary conditions</st>

<p>

There are four necessary conditions for a deadlock to occur, known as the <it>Coffman conditions</it> from their first description in a <link xlink:type="simple" xlink:href="../748/34748.xml">
1971</link> article by <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../196/1303196.xml">
E. G. Coffman</link></associate>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
.</p>
<p>

<list>
<entry level="1" type="number">

<link xlink:type="simple" xlink:href="../827/36827.xml">
Mutual exclusion</link> condition: a resource that cannot be used by more than one process at a time</entry>
<entry level="1" type="number">

Hold and wait condition: processes already holding resources may request new resources</entry>
<entry level="1" type="number">

No <link xlink:type="simple" xlink:href="../566/2204566.xml">
preemption</link> condition: only a process holding a resource may release it</entry>
<entry level="1" type="number">

Circular wait condition: two or more processes form a circular chain where each process waits for a resource that the next process in the chain holds</entry>
</list>
</p>

<p>

Deadlock can only occur in systems where all 4 conditions hold true.</p>

<ss1>
<st>
 Circular wait prevention </st>
<p>

Circular wait prevention consists of allowing processes to wait for resources, but ensure that the waiting can't be circular. One approach might be to assign a <link xlink:type="simple" xlink:href="../596/275596.xml">
precedence</link> to each resource and force processes to request resources in order of increasing precedence. That is to say that if a process holds some resources, and the highest precedence of these resources is m, then this process cannot request any resource with precedence smaller than m. This forces resource allocation to follow a particular and non-circular ordering, so circular wait cannot occur. Another approach is to allow holding only one resource per process; if a process requests another resource, it must first free the one it's currently holding (or hold-and-wait).</p>

</ss1>
</sec>
<sec>
<st>
 Examples </st>

<p>

An example of a deadlock which may occur in <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link> products is the following. Client applications using the database may require exclusive access to a table, and in order to gain exclusive access they ask for a <it>lock</it>. If one client application holds a lock on a table and attempts to obtain the lock on a second table that is already held by a second client application, this may lead to deadlock if the second application then attempts to obtain the lock that is held by the first application. (But this particular type of deadlock is easily prevented, e.g., by using an <it>all-or-none</it> resource allocation algorithm.)</p>
<p>

Another example might be a text <link xlink:type="simple" xlink:href="../904/153904.xml">
format</link>ting program that accepts text sent to it to be processed and then returns the results, but does so only after receiving "enough" text to work on (e.g. 1KB). A <link xlink:type="simple" xlink:href="../310/30310.xml">
text editor</link> program is written that sends the formatter with some text and then waits for the results. In this case a deadlock may occur on the last block of text. Since the formatter may not have sufficient text for processing, it will suspend itself while waiting for the additional text, which will never arrive since the text editor has sent it all of the text it has. Meanwhile, the text editor is itself suspended waiting for the last output from the formatter. This type of deadlock is sometimes referred to as a <it>deadly embrace</it> (properly used only when only two applications are involved) or <it><link xlink:type="simple" xlink:href="../591/501591.xml">
starvation</link></it>. However, this situation, too, is easily prevented by having the text editor send a <it>forcing</it> message (eg. EOF) with its last (partial) block of text, which will <it>force</it> the formatter to return the last (partial) block after formatting, and not wait for additional text.</p>
<p>

Nevertheless, since there is no <it>general</it> solution for deadlock prevention, each type of deadlock must be anticipated and specially prevented. But <it>general</it> algorithms can be implemented within the operating system so that if one or more applications becomes blocked, it will usually be terminated after  (and, in the meantime, is allowed no other resources and may need to surrender those it already has, rolled back to a state prior to being obtained by the application).</p>

</sec>
<sec>
<st>
 Avoidance</st>

<p>

Deadlock can be avoided if certain information about processes is available in advance of resource allocation. For every resource request, the system sees if granting the request will mean that the system will enter an <it>unsafe</it> state, meaning a state that could result in deadlock. The system then only grants requests that will lead to <it>safe</it> states. In order for the system to be able to figure out whether the next state will be safe or unsafe, it must know in advance at any time the number and type of all resources in existence, available, and requested. One known algorithm that is used for deadlock avoidance is the <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/5348805.xml">
Banker's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, which requires resource usage limit to be known in advance. However, for many systems it is impossible to know in advance what every process will request. This means that deadlock avoidance is often impossible.</p>
<p>

Two other algorithms are Wait/Die and Wound/Wait, each of which uses a <link xlink:type="simple" xlink:href="../378/1240378.xml">
symmetry-breaking</link> technique. In both these algorithms there exists an older process (O) and a younger process (Y).
Process age can be determined by a time stamp at process creation time. Smaller time stamps are older processes, while larger timestamps represent younger processes.</p>
<p>

<table class="wikitable">

<header>
Wait/Die</header>
<header>
Wound/Wait</header>
<row>
<col>
O needs a resource held by Y</col>
<col>
O waits</col>
<col>
Y dies</col>
</row>
<row>
<col>
Y needs a resource held by O</col>
<col>
Y dies</col>
<col>
Y waits</col>
</row>
</table>
</p>

<p>

It is important to note that a process may be in unsafe state but would not result in a deadlock. The notion of safe/unsafe state only refers to the ability of the system to enter a deadlock state or not. For example, if a process requests A which would result in an unsafe state, but releases B which would prevent circular wait, then the state is unsafe but the system is not in deadlock</p>

</sec>
<sec>
<st>
Prevention</st>
<p>

Deadlocks can be prevented by ensuring that at least one of the following four conditions occur:
<list>
<entry level="1" type="bullet">

Removing the <link xlink:type="simple" xlink:href="../827/36827.xml">
mutual exclusion</link> condition means that no process may have exclusive access to a resource. This proves impossible for resources that cannot be <link xlink:type="simple" xlink:href="../801/469801.xml">
spooled</link>, and even with spooled resources deadlock could still occur. Algorithms that avoid mutual exclusion are called <link xlink:type="simple" xlink:href="../867/554867.xml">
non-blocking synchronization</link> algorithms.</entry>
<entry level="1" type="bullet">

The "hold and wait" conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations); this advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to release all their resources before requesting all the resources they will need. This too is often impractical. (Such algorithms, such as <link xlink:type="simple" xlink:href="../222/666222.xml">
serializing tokens</link>, are known as the all-or-none algorithms.)</entry>
<entry level="1" type="bullet">

A "no <link xlink:type="simple" xlink:href="../566/2204566.xml">
preemption</link>" (lockout) condition may also be difficult or impossible to avoid as a process has to be able to have a resource for a certain amount of time, or the processing outcome may be inconsistent or <link xlink:type="simple" xlink:href="../891/665891.xml">
thrashing</link> may occur.  However, inability to enforce preemption may interfere with a <it>priority</it> algorithm. (Note: Preemption of a "locked out" resource generally implies a rollback, and is to be avoided, since it is very costly in overhead.) Algorithms that allow preemption include <link xlink:type="simple" xlink:href="../864/554864.xml">
lock-free and wait-free algorithms</link> and <link xlink:type="simple" xlink:href="../011/233011.xml">
optimistic concurrency control</link>.</entry>
<entry level="1" type="bullet">

The <link xlink:type="simple" xlink:href="../181/105181.xml">
circular wait</link> condition: Algorithms that avoid circular waits include "disable interrupts during critical sections" , and "use a hierarchy to determine a <link xlink:type="simple" xlink:href="../572/23572.xml">
partial order</link>ing of resources"  (where no obvious hierarchy exists, even the memory address of resources has been used to determine ordering) and <link xlink:type="simple" xlink:href="../344/285344.xml#xpointer(//*[./st=%22Resource_hierarchy_solution%22])">
Dijkstra's solution</link>.</entry>
</list>
</p>

</sec>
<sec>
<st>
Detection</st>
<p>

Often neither deadlock avoidance nor deadlock prevention may be used. Instead deadlock detection and process restart are used by employing an algorithm that tracks resource allocation and process states, and rolls back and restarts one or more of the processes in order to remove the deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler or OS.</p>
<p>

Detecting the possibility of a deadlock <it>before</it> it occurs is much more difficult and is, in fact, <it>generally</it> <link xlink:type="simple" xlink:href="../795/54795.xml">
undecidable</link>, because the <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link> can be rephrased as a deadlock scenario. However, in <it>specific</it> environments, using <it>specific</it> means of locking resources, deadlock detection may be <it>decidable</it>. In the <it>general</it> case, it is not possible to distinguish between algorithms that are merely waiting for a very unlikely set of circumstances to occur and algorithms that will never finish because of deadlock....</p>

</sec>
<sec>
<st>
Distributed deadlock</st>

<p>

Distributed deadlocks can occur in <link xlink:type="simple" xlink:href="../501/8501.xml">
distributed systems</link> when <link xlink:type="simple" xlink:href="../053/619053.xml">
distributed transaction</link>s or <link xlink:type="simple" xlink:href="../356/217356.xml">
concurrency control</link> is being used. Distributed deadlocks can be detected either by constructing a global <link xlink:type="simple" xlink:href="../676/15433676.xml">
wait-for graph</link>, from local wait-for graphs at a deadlock detector or by a <link xlink:type="simple" xlink:href="../202/3367202.xml">
distributed algorithm</link> like <link xlink:type="simple" xlink:href="../427/1473427.xml">
edge chasing</link>. </p>
<p>

<it>Phantom deadlocks</it> are deadlocks that are detected in a distributed system.</p>

</sec>
<sec>
<st>
Livelock</st>
<p>

A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/326777.html">
http://citeseer.ist.psu.edu/326777.html</weblink> Livelock is a special case of <link xlink:type="simple" xlink:href="../591/501591.xml">
resource starvation</link>; the general definition only states that a specific process is not progressing. <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/anderson01sharedmemory.html">
http://citeseer.ist.psu.edu/anderson01sharedmemory.html</weblink></p>
<p>

As a real-world example, livelock occurs when two people meet in a narrow corridor, and each tries to be polite by moving aside to let the other pass, but they end up swaying from side to side without making any progress because they always both move the same way at the same time. </p>
<p>

Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can repeatedly trigger. This can be avoided by ensuring that only one process (chosen randomly or by priority) takes action. <weblink xlink:type="simple" xlink:href="http://doi.acm.org/10.1145/850752.850753">
http://doi.acm.org/10.1145/850752.850753</weblink></p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../981/1582981.xml">
Ostrich algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/5348805.xml">
Banker's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../882/5815882.xml">
Deadlock provision</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../344/285344.xml">
Dining philosophers problem</link></entry>
<entry level="1" type="bullet">

<link>
Gridlock (in vehicular traffic)</link></entry>
<entry level="1" type="bullet">

<abnormality wordnetid="114501726" confidence="0.8">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<physical_condition wordnetid="114034177" confidence="0.8">
<anomaly wordnetid="114505821" confidence="0.8">
<link xlink:type="simple" xlink:href="../417/19005417.xml">
Hang</link></anomaly>
</physical_condition>
</state>
</condition>
</abnormality>
</entry>
<entry level="1" type="bullet">

<parlance wordnetid="107081177" confidence="0.8">
<invertebrate wordnetid="101905661" confidence="0.8">
<arthropod wordnetid="101767661" confidence="0.8">
<formulation wordnetid="107069948" confidence="0.8">
<bug wordnetid="102236355" confidence="0.8">
<insect wordnetid="102159955" confidence="0.8">
<expressive_style wordnetid="107066659" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../273/45273.xml">
Infinite loop</link></animal>
</expressive_style>
</insect>
</bug>
</formulation>
</arthropod>
</invertebrate>
</parlance>
</entry>
<entry level="1" type="bullet">

<accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../661/98661.xml">
Race condition</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../196/363196.xml">
Sleeping barber problem</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../632/266632.xml">
Stalemate</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../017/4726017.xml">
Synchronization</link></entry>
<entry level="1" type="bullet">

 the <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../533/1211533.xml">
SPIN model checker</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
 can be used to formally verify that a system will never enter a deadlock.</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
A Treasury of Railroad Folklore, B.A. Botkin &amp; A.F. Harlow, p. 381</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-db.in.tum.de/research/projects/dda.html">
Deadlock Detection Agents</weblink></entry>
<entry level="1" type="bullet">

Paper "<weblink xlink:type="simple" xlink:href="http://www.cs.ucl.ac.uk/staff/w.emmerich/publications/ESEC01/ModelChecking/">
Deadlock Detection in Distributed Object Systems</weblink>" by Nima Kaveh and Wolfgang Emmerich</entry>
<entry level="1" type="bullet">

Article "<weblink xlink:type="simple" xlink:href="http://www.cse.scu.edu/~jholliday/dd_9_16.htm">
Distributed Deadlock Detection</weblink>" by JoAnne L. Holliday and Amr El Abbadi</entry>
<entry level="1" type="bullet">

Article "<weblink xlink:type="simple" xlink:href="http://doi.acm.org/10.1145/45075.46163">
Deadlock detection in distributed databases</weblink>" by Edgar Knapp</entry>
<entry level="1" type="bullet">

Article "<weblink xlink:type="simple" xlink:href="http://www.onjava.com/pub/a/onjava/2004/10/20/threads2.html">
Advanced Synchronization in Java Threads</weblink>" by Scott Oaks and Henry Wong</entry>
<entry level="1" type="bullet">

Paper "<weblink xlink:type="simple" xlink:href="http://www.havelund.com/Publications/padtad06.pdf">
Confirmation of Deadlock Potentials Detected by Runtime Analysis</weblink>" by Saddek Bensalem, Jean-Claude Fernandez, Klaus Havelund and Laurent Mounier</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.umass.edu/~mcorner/courses/691J/papers/TS/coffman_deadlocks/coffman_deadlocks.pdf">
Coffman, E.G., M.J. Elphick, and A. Shoshani, System Deadlocks, ACM Computing Surveys, 3, 2, 67-78 (1971)</weblink>.</entry>
<entry level="1" type="bullet">

Paper <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/326777.html">
Eliminating Receive Livelock in an Interrupt-driven Kernel</weblink> by Jeffrey C. Mogul, K. K. Ramakrishnan</entry>
<entry level="1" type="bullet">

  at the Portland Pattern Repository</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.etymonline.com/index.php?term=deadlock">
Etymology of "Deadlock"</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.arcs.us">
ARCS - A Web Service approach to alleviating deadlock</weblink></entry>
</list>
</p>


<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
Topics in <link xlink:type="simple" xlink:href="../924/11924.xml">
game theory</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
Definitions</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../612/1863612.xml">
Normal-form game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../490/1602490.xml">
Extensive-form game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../958/657958.xml">
Cooperative game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../970/1602970.xml">
Information set</link>&nbsp;·  <link xlink:type="simple" xlink:href="../162/170162.xml">
Preference</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../572/227572.xml">
Equilibrium</link>&nbsp;<link xlink:type="simple" xlink:href="../457/1601457.xml">
concepts</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../337/45337.xml">
Nash equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../902/6954902.xml">
Subgame perfection</link></equilibrium>
&nbsp;·  <link xlink:type="simple" xlink:href="../423/1863423.xml">
Bayesian-Nash</link>&nbsp;·  <link xlink:type="simple" xlink:href="../423/1863423.xml">
Perfect Bayesian</link>&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../360/2863360.xml">
Trembling hand</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../223/10276223.xml">
Proper equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../112/10322112.xml">
Epsilon-equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../108/3366108.xml">
Correlated equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../295/5348295.xml">
Sequential equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../452/5348452.xml">
Quasi-perfect equilibrium</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../616/9616.xml">
Evolutionarily stable strategy</link></equilibrium>
&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../690/9292690.xml">
Risk dominance</link></equilibrium>
&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../468/45468.xml">
Pareto efficiency</link></system_of_measurement>
</standard>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../441/1434441.xml">
Strategies</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../847/2352847.xml">
Dominant strategies</link>&nbsp;·  <link xlink:type="simple" xlink:href="../441/1434441.xml">
Pure strategy</link>&nbsp;·  <link xlink:type="simple" xlink:href="../441/1434441.xml#xpointer(//*[./st=%22Mixed+strategy%22])">
Mixed strategy</link>&nbsp;·  <link xlink:type="simple" xlink:href="../800/267800.xml">
Tit for tat</link>&nbsp;·  <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../758/1490758.xml">
Grim trigger</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
&nbsp;·  <link xlink:type="simple" xlink:href="../557/162557.xml">
Collusion</link>&nbsp;·  <link xlink:type="simple" xlink:href="../912/2060912.xml">
Backward induction</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Classes of games</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../692/2710692.xml">
Symmetric game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../438/321438.xml">
Perfect information</link>&nbsp;·  <link xlink:type="simple" xlink:href="../863/2060863.xml">
Dynamic game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../863/2060863.xml">
Sequential game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../089/3143089.xml">
Repeated game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../967/1395967.xml">
Signaling game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../257/1385257.xml">
Cheap talk</link>&nbsp;·  <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../417/34417.xml">
Zero-sum game</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
&nbsp;·  <link xlink:type="simple" xlink:href="../895/689895.xml">
Mechanism design</link>&nbsp;·  <link xlink:type="simple" xlink:href="../395/17237395.xml">
Bargaining&nbsp;problem</link>&nbsp;·  <link xlink:type="simple" xlink:href="../944/10500944.xml">
Stochastic game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../093/11240093.xml">
Nontransitive game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/12486101.xml">
Global games</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../009/2771009.xml">
Games</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<work wordnetid="100575741" confidence="0.8">
<scientific_research wordnetid="100641820" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="100639556" confidence="0.8">
<investigation wordnetid="100633864" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<research wordnetid="100636921" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/43717.xml">
Prisoner's dilemma</link></activity>
</psychological_feature>
</research>
</act>
</investigation>
</experiment>
</event>
</scientific_research>
</work>
&nbsp;·  <link xlink:type="simple" xlink:href="../559/11336559.xml">
Traveler's dilemma</link>&nbsp;·  <link xlink:type="simple" xlink:href="../584/946584.xml">
Coordination game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../323/381323.xml">
Chicken</link>&nbsp;·  <link xlink:type="simple" xlink:href="../776/11351776.xml">
Volunteer's dilemma</link>&nbsp;·  <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<contradiction wordnetid="107206887" confidence="0.8">
<paradox wordnetid="106724559" confidence="0.8">
<falsehood wordnetid="106756407" confidence="0.8">
<link xlink:type="simple" xlink:href="../631/3183631.xml">
Dollar auction</link></falsehood>
</paradox>
</contradiction>
</message>
</statement>
&nbsp;·  <link xlink:type="simple" xlink:href="../497/1596497.xml">
Battle of the sexes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../701/1563701.xml">
Stag hunt</link>&nbsp;·  <link xlink:type="simple" xlink:href="../392/1369392.xml">
Matching pennies</link>&nbsp;·  <link xlink:type="simple" xlink:href="../679/801679.xml">
Ultimatum game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../856/1710856.xml">
Minority game</link>&nbsp;·  <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/27032.xml">
Rock-paper-scissors</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
&nbsp;·  <link xlink:type="simple" xlink:href="../808/5399808.xml">
Pirate game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../970/1556970.xml">
Dictator game</link>&nbsp;·  <link xlink:type="simple" xlink:href="../343/1882343.xml">
Public&nbsp;goods&nbsp;game</link>&nbsp;·   <link xlink:type="simple" xlink:href="../454/5745454.xml">
Blotto games</link> &nbsp;· <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../531/3167531.xml">
War of attrition</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
 &nbsp;· <link xlink:type="simple" xlink:href="../647/2067647.xml">
El Farol Bar problem</link> &nbsp;· <link xlink:type="simple" xlink:href="../899/669899.xml">
Cake cutting</link> &nbsp;· <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/1481119.xml">
Cournot game</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
 &nbsp;· <link xlink:type="simple" xlink:href="../391/2631391.xml">
Deadlock</link> &nbsp;· <link xlink:type="simple" xlink:href="../655/3138655.xml">
Diner's dilemma</link> &nbsp;· <link xlink:type="simple" xlink:href="../630/2729630.xml">
Guess 2/3 of the average</link> &nbsp;· <link xlink:type="simple" xlink:href="../161/1199161.xml">
Kuhn poker</link> &nbsp;· <link xlink:type="simple" xlink:href="../388/1581388.xml">
Nash bargaining game</link> &nbsp;· <link xlink:type="simple" xlink:href="../275/10530275.xml">
Screening game</link> &nbsp;· <link xlink:type="simple" xlink:href="../967/1395967.xml">
Signaling game</link> &nbsp;· <link xlink:type="simple" xlink:href="../970/1556970.xml#xpointer(//*[./st=%22Trust+game%22])">
Trust game</link> &nbsp;· <link xlink:type="simple" xlink:href="../052/12249052.xml">
Princess and monster game</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Theorems</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../589/19589.xml">
Minimax theorem</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
&nbsp;·  <link xlink:type="simple" xlink:href="../452/4929452.xml">
Purification theorem</link>&nbsp;·  <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../390/3013390.xml">
Folk theorem</link></equilibrium>
&nbsp;·  <link xlink:type="simple" xlink:href="../087/6394087.xml">
Revelation principle</link>&nbsp;·  <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../425/89425.xml">
Arrow's impossibility theorem</link></database>
</proposition>
</wordnet>
</theorem>
</lexical_database>
</electronic_database>
</information>
</message>
</statement>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</anomaly>
</bug>
</article>
