<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:03:44[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Vmlinux</title>
<id>1056568</id>
<revision>
<id>242172503</id>
<timestamp>2008-10-01T05:11:21Z</timestamp>
<contributor>
<username>AAAAA</username>
<id>75918</id>
</contributor>
</revision>
<categories>
<category>Linux kernel</category>
</categories>
</header>
<bdy>

<image location="right" width="150px" src="Linux-kernel-vmlinux.png" type="thumb">
<caption>

Linux kernel boot and decompression process.
</caption>
</image>
<p>

On <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 systems, <b>vmlinux</b> is a statically linked <link xlink:type="simple" xlink:href="../392/217392.xml">
executable</link> file that contains the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../510/18510.xml">
Linux kernel</link></software>
 in one of the <link xlink:type="simple" xlink:href="../307/337307.xml">
executable file format</link>s supported by Linux, including <link xlink:type="simple" xlink:href="../914/9914.xml">
ELF</link>, <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../325/328325.xml">
COFF</link></format>
 and <link xlink:type="simple" xlink:href="../358/2885358.xml">
a.out</link>. The <it>vmlinux</it> file might be required for kernel <link xlink:type="simple" xlink:href="../395/323395.xml">
debugging</link>, generating symbol table or other operations, but must be made bootable before being used as an operating system kernel by adding a <link xlink:type="simple" xlink:href="../572/3159572.xml">
multiboot</link> header, bootsector and setup routines.</p>

<sec>
<st>
 Location </st>
<p>

Traditionally, the kernel is located in the <link xlink:type="simple" xlink:href="../871/158871.xml">
root directory</link> of the filesystem hierarchy; however, as the bootloader must use <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 drivers to access the <link xlink:type="simple" xlink:href="../777/13777.xml">
hard disk</link>, limitations on some <link xlink:type="simple" xlink:href="../070/15070.xml">
i386</link> systems meant only the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../104/551104.xml">
first 1024 cylinders</link></medium>
</instrumentality>
</artifact>
 of the <link xlink:type="simple" xlink:href="../777/13777.xml">
hard disk</link> were addressable.</p>
<p>

To overcome this, Linux distributors encouraged users to create a <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../380/55380.xml">
partition</link></instrumentality>
</artifact>
</system>
 at the beginning of their drives specifically for storing <link xlink:type="simple" xlink:href="../909/40909.xml">
bootloader</link> and kernel related files. <link xlink:type="simple" xlink:href="../817/287817.xml">
GRUB</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../810/287810.xml">
LILO</link></software>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../460/357460.xml">
SYSLINUX</link></software>
 are common bootloaders.</p>
<p>

By convention, this partition is <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../987/5176987.xml">
mount</link></instrumentality>
</artifact>
</system>
ed on the filesystem hierarchy as /boot. This was later standardised by the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../790/287790.xml">
Filesystem Hierarchy Standard</link></instrumentality>
</artifact>
</system>
, or <it>FHS</it>, which now requires the Linux kernel image to be located in either / or /boot, although there is no technical restriction enforcing this. See <weblink xlink:type="simple" xlink:href="http://www.pathname.com/fhs/pub/fhs-2.3.html#BOOTSTATICFILESOFTHEBOOTLOADER">
section 3.5.2 of FHS 2.3</weblink></p>

</sec>
<sec>
<st>
 Compression </st>
<p>

Traditionally, when creating a bootable kernel image, the kernel is also <link xlink:type="simple" xlink:href="../013/8013.xml">
compressed</link> using the <link xlink:type="simple" xlink:href="../499/34499.xml">
zlib</link> algorithm, which requires a very small <link xlink:type="simple" xlink:href="../013/8013.xml">
decompression</link> stub to be included in the resulting image. The stub decompresses the kernel code, on some systems printing dots to the console to indicate progress, and then continues the boot process.</p>
<p>

The decompression routine is a negligible factor in boot time, and prior to the development of the  <it>bzImage</it>, the size constraints of some architectures, notably i386, were extremely limiting, making compression a necessity.</p>
<p>

On the <link xlink:type="simple" xlink:href="../954/36954.xml">
SPARC</link> architecture, the vmlinux file is compressed using simple <link xlink:type="simple" xlink:href="../783/12783.xml">
gzip</link>, because the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../262/3872262.xml">
SILO</link></software>
 boot loader transparently decompresses gzipped images.</p>

<p>

The filename of the bootable image is not important, but by convention it is called vmlinux or zImage.</p>

</sec>
<sec>
<st>
 bzImage </st>
<p>

<image location="left" width="150px" src="Anatomy-of-bzimage.png" type="thumb">
<caption>

Anatomy of a <b>bzImage</b>.
</caption>
</image>

As the Linux kernel matured, the size of the kernels generated by users grew beyond the limits imposed by some architectures, where the space available to store the compressed kernel code is limited.</p>
<p>

The <it>bzImage</it> (<b><it>b</it></b><it>ig </it>'zImage<b><it>) format was developed to overcome this limitation by cleverly splitting the kernel over discontiguous <link xlink:type="simple" xlink:href="../300/5300.xml">
memory</link> regions.</it></b></p>
<p>

The <it>bzImage</it> format is still compressed using the zlib <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>.  Although there is the popular misconception that the <it>bz-</it> <link xlink:type="simple" xlink:href="../835/1835.xml">
prefix</link> means that <link xlink:type="simple" xlink:href="../255/66255.xml">
bzip2</link> compression is used (the bzip2 package is often distributed with tools prefixed with <b>bz-</b>, such as <b>bzless</b>, <b>bzcat</b>, etc.), this is not the case.</p>
<p>

The bzImage file is in a specific format: It contains concatenated bootsect.o + setup.o + misc.o + piggy.o.</p>
<p>

piggy.o contains the gzipped vmlinux file in its data section (ELF) (see compressed/Makefile piggy.o). All source files mentioned are in arch/i386/boot/.</p>
<p>

No specific tool exists to unpack the bzImage file, but there exists a script named <weblink xlink:type="simple" xlink:href="http://www.cs.caltech.edu/~weixl/research/fast-mon/scripts/extract-ikconfig">
extract-ikconfig</weblink>, which decompresses the image and extracts build configuration directives from the image. One may modify it to get the decompressed image directly. Some distributions (e.g. Red Hat and clones) may come with a kernel-debuginfo RPM that contains the vmlinux file for the matching kernel RPM, it typically gets installed under /usr/lib/debug/lib/modules/`uname -r`/vmlinux</p>
<p>

See also <weblink xlink:type="simple" xlink:href="http://www.ussg.iu.edu/hypermail/linux/kernel/9909.3/0625.html">
this LKML post</weblink> and <weblink xlink:type="simple" xlink:href="http://www.cpqlinux.com/binary-kernel.html">
this article</weblink>.</p>

</sec>
<sec>
<st>
 Etymology </st>
<p>

Traditionally, UNIX platforms called the kernel image /unix. With the development of <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>, kernels that supported this feature were given the <b>vm-</b> prefix to differentiate them. The name <it>vmlinux</it> is a mutation of <link>
vmunix</link>, while in <it>vmlinuz</it> the letter <b>z</b> at the end denotes that it is compressed.</p>

</sec>
<sec>
<st>
 Executable format </st>
<p>

This is the ELF header from an i386 2.6.7 executable kernel image.</p>
<p>


$ readelf -h vmlinux
ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Intel 80386
  Version:                           0x1
  Entry point address:               0xc019d000
  Start of program headers:          52 (bytes into file)
  Start of section headers:          3135092 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         3
  Size of section headers:           40 (bytes)
  Number of section headers:         33
  Section header string table index: 30
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../510/18510.xml">
Linux kernel</link></software>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../658/371658.xml">
Module (Linux)</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.faqs.org/docs/Linux-HOWTO/Kernel-HOWTO.html#kernel_files_info">
Kernel HOWTO</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.faqs.org/docs/kernel_2_4/lki-1.html">
Boot process</weblink></entry>
</list>
</p>


</sec>
</bdy>
</article>
