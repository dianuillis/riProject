<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:04:09[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<know-how  confidence="0.8" wordnetid="105616786">
<method  confidence="0.8" wordnetid="105660268">
<header>
<title>Digital watermarking</title>
<id>1061511</id>
<revision>
<id>243919898</id>
<timestamp>2008-10-08T16:23:10Z</timestamp>
<contributor>
<username>J.delanoy</username>
<id>2372780</id>
</contributor>
</revision>
<categories>
<category>Articles to be merged since January 2008</category>
<category>Authentication methods</category>
<category>Watermarking</category>
<category>Digital photography</category>
<category>All articles to be merged</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Merge-arrow.svg">
<caption>

Merge arrow
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that this article or section be  into . ()</col>
</row>
</table>

 <image location="right" width="150px" src="Visible_digital_watermarking.jpg" type="thumb">
<caption>

An image with visible digital watermarking. The text "Brian Kell 2006" can be seen across the center of the image.
</caption>
</image>
 <b>Digital watermarking</b> is the process of embedding information into a digital signal. The signal may be audio, pictures or video, for example. If the signal is copied, then the information is also carried in the copy. <p>

In visible watermarking, the information is visible in the picture or video. Typically, the information is text or a logo which identifies the owner of the media. The image on the right has a visible watermark. When a television broadcaster adds its logo to the corner of transmitted video, this is also a visible watermark. </p>
<p>

In invisible watermarking, information is added as digital data to audio, picture or video, but it cannot be perceived as such. An important application of invisible watermarking is to copyright protection systems, which are intended to prevent or deter unauthorized copying of digital media. <link xlink:type="simple" xlink:href="../733/28733.xml">
Steganography</link> is an application of digital watermarking, where two parties communicate a secret message embedded in the digital signal. Annotation of digital photographs with descriptive information is another application of invisible watermarking. While some file formats for digital media can contain additional information called <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link>, digital watermarking is distinct in that the data is carried in the signal itself. </p>
<p>

The use of the word of watermarking is derived from the much older notion of placing a visible <link xlink:type="simple" xlink:href="../921/32921.xml">
watermark</link> on paper. </p>

<sec>
<st>
 Instance of a Digital Watermarking Scheme </st>
<p>
 
A general watermarking scheme is defined as: </p>
<p>

<math>\Omega^* = \left(E,D,R,M,p_E,p_D,p_R\right)</math> </p>
<p>

where E defines the embedding function, D detecting function, R retrieval function and M the message. Furthermore, the embedding parameters <math>p_E \in\mathcal{P}_E</math> defines the parameter set used for watermark embedding, <math>p_D \in\mathcal{P}_D</math> defines the detection parameters and <math>p_R \in\mathcal{P}_R</math> retrieval parameters. Hence, each watermarking scheme <math>\Omega</math> may have different instances according to the values that these parameters may adopt. An instance <math>\Omega^*</math> of the watermarking scheme <math>\Omega</math> for a particular value of the parameter vectors. </p>

</sec>
<sec>
<st>
 Watermarking Life-Cycle Phases </st>
<p>

In general, the usage of digital watermarking can be simplified as follows. An unmarked (mostly original) signal (<math>S</math>, with <math>S\in\mathbb{S}</math>) is the source signal, where the watermark (<math>w</math>) is embedded by using an embedding function <math>E</math>. The result is the marked signal <math>S_E</math>. It can be defined, that this process is done in a secure environment. The following step could be, for example, the distribution of <math>S_E</math> over the Internet or storage of it to provide authenticity or integrity checks. These processes can be seen as an insecure part, where attacks (<math>A_{i,j}\in\mathbb{A}</math>) occur on <math>S_E</math>. After distribution of <math>S_E</math>, the signal is defined as <math>S_{EA}</math> because potential attacks could have destroyed the watermark. A detecting function <math>D</math> tries to detect the watermark <math>w</math> or a retrieval function <math>R</math> tries to retrieve the embedded message <math>m'</math>. The detection/retrieval can be done in a secure or insecure environment, depending on the used application of the watermarking algorithm. </p>
<p>

The complete scenario is defined as <it>life cycle</it> of a watermark, because it begins with embedding and ends with detection/retrieval. This is shown in the following figure with expected secure and insecure parts. </p>
<p>

<image location="center" width="550px" src="watermark_life_cycle.png" type="thumb">
<caption>

General watermark life-cycle phases with embedding-, attacking- and detection/retrieval functions
</caption>
</image>
 </p>
<p>

The information to be embedded is called a digital watermark, although in some contexts the phrase digital watermark means the difference between the watermarked signal and the cover signal. The signal where the watermark is to be embedded is called the host signal. A watermarking system is usually divided into three distinct steps, embedding, attack and detection. In embedding, an algorithm accepts the host and the data to be embedded and produces a watermarked signal. </p>
<p>

The watermarked signal is then transmitted or stored, usually transmitted to another person. If this person makes a modification, this is called an attack. While the modification may not be malicious, the term attack arises from copyright protection application, where pirates attempt to remove the digital watermark through modification. There are many possible modifications, for example, lossy compression of the data, cropping an image or video, or intentionally adding noise. </p>
<p>

Detection (often called extraction) is an algorithm which is applied to the attacked signal to attempt to extract the watermark from it. If the signal was unmodified during transmission, then the watermark is still present and it can be extracted. In robust watermarking applications, the extraction algorithm should be able to correctly produce the watermark, even if the modifications were strong. In fragile watermarking, the extraction algorithm should fail if any change is made to the signal.</p>

</sec>
<sec>
<st>
 Watermark Parameters </st>
<p>
 
In general, the fundamental watermarking parameters are classifies into the 7 watermarking properties capacity, complexity, invertibility, transparency, robustness, security and verification (alphabetic order): </p>

<ss1>
<st>
 Capacity </st>
<p>
 
The Capacity is in general divided into embedding and retrieval capacity. </p>

<ss2>
<st>
 Embedding Capacity </st>
<p>
 
The embedding capacity <math>\text{cap}_E</math> of a watermarking scheme is defined as the amount of information that is (seems to be) embedded into the cover object to obtain the marked object. A simple definition for a capacity measure <math>\text{cap}_E</math> would be related to the size of the embedded message, i.e. <math>\text{cap}_E(\Omega^*,S)=\text{size(M)}=|M|</math>. In addition, capacity is often given relative to the size of the cover object: </p>
<p>

<math> {\text{cap}_E}_\text{rel}(\Omega^*,S)=\frac{\text{cap}_E}{\text{size}(S)}. </math> </p>
<p>

Note that such measure only takes into account the information embedded, but not the information that is retrieved. Note, also, that this measure does not consider the possibility of <it>repeat coding</it>, in which the mark is replicated as many times as needed prior to its insertion. All these issues are related to the <b>retrieval capacity</b> which is defined in the retrieval function. </p>

</ss2>
<ss2>
<st>
 Retrieval Capacity </st>
<p>
 
The definition of retrieval capacity defines the capacity with respect to the retrieved message <math>m'</math>. First of all, zero-bit watermarking schemes do not transmit any message, since the watermark <math>w</math> is just detected but a message <math>m'</math> is not retrieved. In such a case, the retrieval capacity of these schemes is <it>zero</it>. </p>
<p>

For non zero-bit watermarking schemes the retrieval capacity is considered <it>after</it> data extraction. The following retrieval capacity function is defined: <math> {\text{cap}_R}_\text{rel}(\Omega^*,S_{EA})=|m| - \sum_{i=1}^{|m|} m_i\oplus m'_i, </math> where <math>m=m_1 m_2 \dots m_{|m|}</math>, <math>m'=m'_1 m'_2 \dots m'_{|m|}</math> and <math>\oplus</math> depicts the exclusive or operation. This equation counts the number of correctly transmitted bits (those which are equal on both sides of the communication channel) and it is assumed that <math>m</math> and <math>m'</math> have exactly the same length (otherwise <math>m</math> or <math>m'</math> should be padded or cut in some manner). </p>
<p>

In case of repeat coding, the retrieved message is several times longer than the embedded message: <math>m'=m'_{11} m'_{12} \dots m'_{1|m|} m'_{21} m'_{22} \dots m'_{2|m|} \dots \dots m'_{p_{\max}|m|}</math>. In such a situation, the retrieval capacity should consider all the repetitions as follows <math> {\text{cap}^*_R}_\text{rel}(\Omega^*,S_{EA})=\sum_{j=1}^{p_{\max}}\left[ |m| - \sum_{i=1}^{|m|} m_i \oplus m'_{ji}\right], </math> where <math>p_{\max}</math> is the counted number of maximal retrieved <math>m'</math>. In the sequel, no repeat coding is assumed for notational simplicity, but all the formulae can be easily extended to that case. If the watermark is not embedded multiple times, then <math>p_{\max}=1</math>. </p>
<p>

There are two relevant comments about this definition of relative capacity. The first is that usually this kind of measure is given in terms of the size of the cover object <math>S</math>: <math> {\text{cap}_R}_\text{rel}(\Omega^*,S_{EA})=\frac{{\text{cap}^*_R}_\text{rel}(\Omega^*,S_{EA})}{\text{size}(S_{EA})} </math> and it is assumed that the sizes of <math>S</math>, and <math>S_{EA}</math> are, at least, similar. This second definition provides measures such as bits per second or in bits of transmitted information per bit of the marked object. If the latter is used, a value in the interval <math>[0,1]</math> is obtained, where 1 means that all the transmitted bits are used for the message, which is the best case as capacity is concerned. The second comment is that <math>{\text{cap}_R}_\text{rel}</math> is relative to a given pair <math>S_{EA}</math> and <math>S</math>. An absolute measure is provided below. </p>
<p>

Another capacity measure can be defined in terms of the ratio of correctly recovered bits normalized by <math>p_{\max}</math>. If <math>p_{\max}</math> is unknown, the measure of <math>{\text{cap}^{$}_R}_\text{rel}</math> can also be used, but would result in highest, not normalized values.: <math> {\text{cap}^{$}_R}_\text{rel}(\Omega^*,S_{EA})=\frac{{\text{cap}^*_R}_\text{rel}(\Omega^*,S_{EA})}{|m|p_{\max}}. </math> </p>

</ss2>
</ss1>
<ss1>
<st>
 Complexity </st>
<p>
 
Given a function <math>F</math>, the complexity of it can be measured. Thereby the effort or investment needed to embed or attack or detect and retrieve the watermark is defined with complexity. A measuring function <math>C</math> is defined as <math>C(F)</math> to measure the complexity of <math>F</math>. If it is adapted to, for example, the embedding function of <math>\Omega</math>, then the embedding complexity can be computed <math>C(E,S)</math>. Depending on <math>C</math>, for example the computation cost of time, needed memory or IO operations, lines of code, etc. could be measured. The relative complexity of a watermarking scheme <math>\Omega^*</math> and a particular object <math>S</math> is defines as: <math>C(E,S)\rightarrow\text{com}^*_\text{rel}(\Omega^*,S)</math> However, this definition of complexity depends on the signal <math>S</math>. Thereby, a normalization is needed to provide results independent on <math>S</math>. The normalization can be done with the signal and it length (or size) or with the embedded capacity. If the length (or size) of the signal is used for normalization, then the length can be time or size needed for streaming or file size on the storage. Which exactly is defined with the function <math>\mathrm{size}(S)</math>. The normalization done by the embedding capacity measures the needed effort to embed one single bit. Note, that this normalization is only usable for n-bit watermarking schemes. In the following both normalizations are formalized. <math> \text{com}^S_\text{rel}(\Omega^*,S)=\frac{\text{com}^*_\text{rel}}{\mathrm{size}(S)}=\frac{C(E,S)}{\mathrm{size}(S)}</math> Note, that in this case a linear complexity depending on the length of <math>S</math> is assumed. If it is non-linear, then this function cannot be used to measure the complexity. Then, the normalization depending on, for example, the embedding capacity, introduced in the following can be used. <math>\text{com}^C_\text{rel}(\Omega^*,S)=\frac{\text{com}^*_\text{rel}}{\text{cap}^*_E}=\frac{C(E,S)}{\text{cap}^*_E}</math> Both definitions of complexity are related to a particular object <math>S</math>. Similar to other watermark properties, a definition of absolute values applies any of the following definitions: </p>
<p>

<list>
<entry level="1" type="bullet">

 Average complexity based on signal and capacity normalization: <math>\text{com}^S_\text{av}(\Omega^*)=\frac{1}{|\mathbb{S}|}{\sum_{S \in\mathbb{S}}\text{com}^S_\text{rel}(\Omega^*,S)}</math> <math>\text{com}^C_\text{av}(\Omega^*)=\frac{1}{|\mathbb{S}|}{\sum_{S \in\mathbb{S}}\text{com}^C_\text{rel}(\Omega^*,S)}</math> </entry>
<entry level="1" type="bullet">

 Maximum complexity for audio signal and capacity normalization: <math>\text{com}^S_\text{mx}(\Omega^*)=\max_{S \in\mathbb{S}}\left\{\text{com}^S_\text{rel}(\Omega^*,S)\right\}</math> <math>\text{com}^C_\text{mx}(\Omega^*)=\max_{S \in\mathbb{S}}\left\{\text{com}^C_\text{rel}(\Omega^*,S)\right\}</math> </entry>
<entry level="1" type="bullet">

 Minimum complexity for audio signal and capacity normalization: <math>\text{com}^S_\text{mn}(\Omega^*) = \min_{S \in\mathbb{S}}\left\{\text{com}^S_\text{rel}(\Omega^*,S)\right\}</math> <math>\text{com}^C_\text{mn}(\Omega^*)=\min_{S \in\mathbb{S}}\left\{\text{com}^C_\text{rel}(\Omega^*,S)\right\}</math></entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Invertibility</st>
<p>
 
Refers to the property of a watermarking scheme which has the possibility to remove the watermark <math>w</math> from the marked signal <math>S_E</math> completely to receive signal <math>S'</math> and if <math>\Omega</math> is invertible, then <math>S=S'</math>. To provide this feature, the watermarking algorithms must provide special embedding techniques. Furthermore, secret keys are mostly used to protect the original content from unauthorized access. The measured value of invertibility for a watermarking scheme <math>\Omega^*</math> is a boolean value. If this value is <math>0</math>, then <math>\Omega^*</math> cannot remove <math>w</math> from the marked object. If <math>\Omega</math> can remove <math>w</math> completely and <math>S=S'</math>, then <math>1</math> is returned. <math> \text{inv}(\Omega^*,S_E)= \begin{cases} 0 &amp; ((\Omega^*,S_E) \rightarrow S') \wedge (S\not =S') = \text{true}\\ 1 &amp; ((\Omega^*,S_E) \rightarrow S') \wedge (S= S') = \text{true} \end{cases} </math> </p>

</ss1>
<ss1>
<st>
 Robustness </st>
<p>
 
In this section, the robustness of a digital watermarking scheme is described. To introduce the robustness itself, the <it>detection success</it> is needed and introduced as first. </p>

<ss2>
<st>
 Detection Success </st>
<p>
 
To measure the overall success of a detection or retrieval function, the <it>detection success</it> function is introduced. Therefore, the connection to zero-bit an n-bit watermarking scheme are introduced as follows. For zero-bit watermarking schemes, <math>\text{det}_D</math>D returns <math>0</math>, if the watermark could not be successful detected and <math>1</math> if the detection function was able to detect the watermark, see the following equation: <math> \text{det}_D(\Omega^*,S_{EA})= \begin{cases} 0, \text{no successful detection (negative)},\\ 1, \text{positive successful detection (positive).} \end{cases} </math> To measure the successfully embedding rate over a test set <math>\mathbb{S}</math>, the average of <math>\text{det}_D</math> can be computed as follows: <math> {\text{det}_D}_\text{av}(\Omega^*)=\frac{1}{|{\mathbb{S}}|}\sum_{S\in\mathbb{S}}\text{det}_D </math> For n-bit watermarking schemes, it is important to know, if the watermark was successfully detected at least once (in case of multiple embedding). If, for example, a watermark scheme embeds the message <math>m</math> multiple times <math>\left(p_{\max}\right)</math>, and the retrieval function <math>{\text{cap}^*_R}_\text{rel}</math> returns, that 10% are positive retrievable, then it is unknown, which <math>m_i</math> are affected. Therefore, it is useful to define a successful detection, if at least one embedded message could be retrieved positively, which is introduced in the following equation. <math> \text{det}_R(\Omega^*,S_{EA})= \begin{cases} 1, \exists j \in\displaystyle\left\{1,\dots,p_{\max}\right\}: \sum_{i=1}^{|m|} m'_{ji} \oplus m_{ji} = 0, \\ 0, \text{otherwise}. \end{cases} </math> Note that this is not the only possible definition of the detection function in case of repeat coding. For example, another definition could be the following: <math> \text{det}_{R\tau}(\Omega^*,S_{EA})= \begin{cases} 1, \text{if }{\text{cap}^{$}_{R}}_\text{rel}(\Omega^*,\tilde S) \geq \tau, \\ 0, \text{otherwise}. \end{cases} </math> i.e. detection is reported if the ratio of correctly recovered bits is above some threshold <math>\tau</math> (which is equal to or close to 1). </p>

</ss2>
<ss2>
<st>
 Watermark Robustness </st>
<p>
 
The robustness measure <math>\text{rob}_\text{rel}</math> of a watermarking scheme is a value in the closed interval <math>[0,1]</math>, where 0 is the worst possible value (the scheme is not robust for the signal S) and 1 is the best possible value (the method is robust for the signal S). There is a difference, for example, depending on whether the bit error rate (BER) or byte error rate (BYR) is used to measure the robustness. If the robustness is measured based on the byte error rate <math>\text{rob}^{byte}</math>, then a given watermarking scheme is classified as robust if the bytes of the embedded massage (characters) are correctly retrieved. This measurement is similar to the Levenstein distance, which works and measured a distance between two given strings. It is useful in applications scenarios that need to determine how similar two strings are. Another robustness measure function based on the bit error rate <math>\text{rob}^{bit}</math> returns the percentage robustness of the watermarking scheme measured over the whole attacking and test set and is based on the bit changes within the retrieved message. This measurement is similar to the Hamming distance based on bit-strings. Hence, a watermarking scheme is classified as not robust, if more than <math>\nu</math> numbers of retrieved bits are destroyed and the transparency of the attacks if higher than <math>\tau</math>. For zero-bit watermarking schemes no retrieval function exists and no classification based on bit or byte error rates are possible. To simplify matters, the robustness measure for zero-bit watermarking schemes is always classified to <math>\text{rob}^{byte}</math>. </p>
<p>

The following example motivates the distinction between the robustness measure based on bit and byte error rate. If the message <math>m</math>="123", with 3 bytes and 3*8=24 bits, is embedded and after attacking, the last 6 bits are destroyed and incorrectly retrieved, then the byte error rate returns, that 2 bytes are correct (the first two) and one is false (the last), which has a value of <math>\frac{1}{3}=0.3\overline{3}</math>. The bit error rate returns, that 18~bits are correct (the first) and 6 bits are false (the last), which has a value of <math>\frac{6}{24}=0.25</math>. If now the 1., 2., 8., 9., 16. and 17. bit are destroyed, then the byte error rate returns, that all bytes (characters) are false and the result has a value of <math>\frac{3}{3}=1.0</math> and this shows, that 100% of the bytes are destroyed. In contrast, the bit error rate returns, that 18 bits are correct retrieved and 6 bits are wrong, which has a value of <math>\frac{6}{24}=0.25</math>. Although the bit error rate does not change to the first example, differences are apparent in the byte error rater. Therefore, the following equations introduce the robustness for n-bit watermarking schemes divided into <math>\text{rob}^{byte}</math> and <math>\text{rob}^{bit}</math> and for zero-bit watermarking schemes only for <math>\text{rob}^{byte}</math>. The two robustness measures <math>\text{rob}^{byte}</math> and <math>\text{rob}^{bit}</math> returns completely different robustness values. It is introduced to show, that different approaches are possible and depending on test goals, choices are to be made to select the measure function. It is noted, that different measure methods are available to measure the robustness, i.e. based on <math>\text{det}_R</math> in relation to attacking transparency. </p>
<p>

The following function relates robustness based on the byte error rate to transparency for a zero-bit and n-bit watermarking scheme as follows, given <math>S_{EA}=A_{i,j}(S_E)</math>: <math> \text{rob}^{byte}_\text{rel}(\Omega^*,S_E)= 1 - \max_{A_{i,j} \in\mathcal{A}} \left\{T\left(S_E,S_{EA}\right): \text{det}_D\left(S_{EA},p_E^\mathrm{opt},p_D^\mathrm{opt},p_{\mathrm{cod}},[S,m]\right)=0\right\}</math> and for a n-bit watermarking scheme: <math> \text{rob}^{byte}_\text{rel}(\Omega^*,S_E)= 1 - \max_{A_{i,j} \in\mathcal{A}} \left\{T\left(S_E,S_{EA}\right): \text{det}_R\left(S_{EA},p_E^\mathrm{opt},p_D^\mathrm{opt},p_{\mathrm{cod}},[S,m]\right)=0\right\}</math> </p>
<p>

And the robustness based on the bit error rate related to the transparency for n-bit watermarking schemes is given as: <math> \text{rob}^{bit}_\text{av}(\Omega^*)= \frac{1}{|S_{EA}||\mathbb{A}|} \sum_{S\in\mathbb{S}}\sum_{A_{i,j}\in\mathbb{A}} \begin{cases} 1, &amp; \left( {\text{cap}^$_R}_\text{rel} &amp;lt; \tau \right) \wedge \left( {\text{tra}_A}_\text{rel} &amp;gt; \nu\right)\\ 0, &amp; \text{otherwise} \end{cases} </math> </p>
<p>

That is, given a marked object <math>S_E</math> and all the attacks which attack the watermark, even for optimal embedding and detection parameters (<math>p_E^\mathrm{opt}, p_D^\mathrm{opt}</math>), the one which produces less distortion in the marked object <math>S_E</math> determines how robust the scheme is. If none of the attacks in the family <math>\mathbb{A}</math> erases the embedded mark, then this measure is (by definition) equal to 1 (the best possible value). </p>
<p>

The functions measure robustness in a worst case sense. When the security of a system is to be assessed, it is usually considered that a given system is as weak as the weakest of its components. Similarly, the equation establishes that the worst possible attack (in the sense that the mark is erased but the attacked signal preserves good quality) in a given family determines how robust the watermarking scheme <math>\Omega</math> is. If the best (maximum) transparency amongst all the attacks which destroy the mark is <math>0.23</math>, then the robustness of the method as given by is <math>1-0.23=0.77</math>. </p>
<p>

However, the functions of the equation introduced above are \textit{relative} to a given object <math>S_{EA}</math> (hence the use of the subindex "rel") but usually to define the robustness of a watermarking scheme as an inherent property not related to any particular object, but to a family or collection of objects. This may be referred to as the absolute robustness (<math>\text{rob}^{byte}_{\text{rel}}</math>) which can be defined in several ways. Given a family <math>\mathbb{S}</math> of cover objects, and their corresponding marked objects <math>S_E</math> obtained by means of the embedding, the absolute robustness based on bit and byte error rate can be defined according to different criteria, for example: 
<list>
<entry level="1" type="bullet">

 Average robustness based on byte error rate: <math> \text{rob}^{byte}_\text{av}(\Omega^*)=\frac{1}{|{\mathbb{S}}|}{\sum_{S \in\mathbb{S}}\text{rob}^{byte}_\text{rel}(\Omega^*,S_E)}. </math> * Minimum robustness (worst case approach) based on byte error rate: <math> \text{rob}^{byte}_\text{mn}(\Omega^*)=\min_{S \in\mathbb{S}}\text{rob}^{byte}_\text{rel}(\Omega^*,S_E). </math> </entry>
<entry level="1" type="bullet">

 Probabilistic approach based on byte error rate: <math> \text{rob}^{byte}_\mathrm{prob}(\Omega^*,r)=1 - \underset{S\in\mathbb{S}}{p}(\text{rob}^{byte}_\text{rel}(\Omega^*,S_E)&amp;lt;r), </math> where <math>p</math> stands for ``probability<it> and <math>r</math> is some given threshold. For example, if <math>r=0.75</math> and <math>\text{rob}_\text{prob}=0.9</math>, this means that 90% of the objects in <math>\mathbb{S}</math> provide a relative robustness greater than or equal to <math>0.75</math> for the scheme <math>\Omega</math>. Although a maximum robustness measure could thus be defined, it does not seem to have any applicability, since worst or average cases are often reported as robustness is concerned. </it></entry>
</list>
</p>

</ss2>
</ss1>
<ss1>
<st>
 Security</st>
<p>

Described the security of the embedded watermark against specific security attacks. After defining all required security measurements <math>\mathcal{L}</math> (like collusion or subspace security), the relative total security <math>\text{sec}^\text{tot}_\text{rel}</math> can be computed for a particular cover signal. <math>\text{sec}^\text{tot}_\text{rel}(\Omega^*,S)=\frac{1}{|\mathcal{L}|}\sum_{\text{sec}^*_\text{rel}\in\mathcal{L}}\text{sec}^*_\text{rel}(\Omega^*,S)</math> Whereby <math>\text{sec}^*_\text{rel}</math> defines each relative security measurement provided by <math>\mathcal{L}</math>, for example, subspace security <math>\text{sec}^\text{sub}_\text{rel}</math> or collusion security <math>\text{sec}^\text{col}_\text{rel}</math> and all other security measurements defined in the security set <math>\mathcal{L}</math>. If the average total security <math>\text{sec}^\text{tot}_\text{av}</math>, maximum <math>\text{sec}^\text{tot}_\text{mx}</math> and minimum <math>\text{sec}^\text{tot}_\text{mn}</math> are measured, then the following definition are used. 
<list>
<entry level="1" type="bullet">

 Average total security: <math> \text{se}c^\text{tot}_\text{av}(\Omega^*)=\frac{1}{|\mathbb{S}||\mathcal{L}|}\sum_{S\in\mathbb{S}}\sum_{\text{sec}^*_\text{av}\in\mathcal{L}}\text{sec}^*_\text{av}(\Omega^*,S) </math> </entry>
<entry level="1" type="bullet">

 Maximum total security: <math> \text{sec}^\text{tot}_\text{mx}(\Omega^*)=\text{max}_{S \in\mathbb{S}}\left\{\max_{\text{sec}^*_\text{mx}}\left\{\text{sec}^*_\text{rel}(\Omega^*,S)\right\}\right\} </math> </entry>
<entry level="1" type="bullet">

 Minimum total security: <math> \text{sec}^\text{tot}_\text{mn}(\Omega^*)=\min_{S \in\mathbb{S}}\left\{\min_{\text{sec}^*_\text{mn}}\left\{\text{sec}^*_\text{rel}(\Omega^*,S)\right\}\right\} </math> </entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Transparency</st>
<p>
 
Given a reference object <math>S_\text{ref}</math> and a test object <math>S_\text{test}</math> the transparency function T provides a measure of the perceptible distortion between <math>S_\text{ref}</math> and <math>S_\text{test}</math>. Without loss of generality, such a function may take values in the closed interval [0,1] where 0 provides the worst case (the signals <math>S_\text{ref}</math> and <math>S_\text{test}</math> are so different that <math>S_\text{test}</math> cannot be recognized as a version of <math>S_\text{ref}</math>) and 1 is the best case (an observer does not perceive any significant difference between <math>S_\text{ref}</math> and <math>S_\text{test}</math>): <math> T(S_\text{ref},S_\text{test}) \rightarrow [0,1]</math> The relative transparency for a watermarking scheme <math>\Omega^*</math> and a particular object S is defined as: <math>T(S_\text{ref},S_\text{test})\rightarrow{\mathrm{tra}}_\mathrm{rel}(\Omega^*,S)</math> This definition of transparency is related to a particular object <math>S</math>. It is usually better to provide some absolute value of transparency which is not related to a particular object <math>S</math>. A definition of "absolute" transparency is related to a family <math>/mathbb{S}</math> of objects to be marked, which applies any of the following definitions: * Average transparency: </p>
<p>

<math>{\text{tra}}_\text{av}(\Omega^*)=\frac{1}{|\mathbb{S}|}\sum_{S\in\mathbb{S}}{\text{tra}}_\text{rel}(\Omega^*,S),</math> </p>
<p>

<list>
<entry level="1" type="bullet">

 Maximum transparency: </entry>
</list>

<math>{\text{tra}}_\text{mx}(\Omega^*)=\text{max}_{S \in\mathbb{S}}\left\{{\text{tra}}_\text{rel}(\Omega^*,S)\right\}.</math> </p>
<p>

<list>
<entry level="1" type="bullet">

 Minimum transparency: </entry>
</list>

<math>{\text{tra}}_\text{mn}(\Omega^*)=\text{min}_{S \in\mathbb{S}}\left\{{\text{tra}}_\text{rel}(\Omega^*,S)\right\}.</math> </p>

</ss1>
<ss1>
<st>
 Verification</st>
<p>
 
Described the type of the detection/retrieval function <math>D,R</math> which requires information. Therefore three classifications are available: </p>
<p>

<b>Non-blind</b>: If the watermarking scheme requires the cover object <math>S</math>, then it is associated as non-blind watermarking scheme. Often, this type of watermark scheme is referred as <it>informed</it> watermarking scheme. Mostly, the watermark detector/retriever is only usable from a defined group of people, which hides the watermark detector and the required original signal <math>S</math>. </p>
<p>

<b>Informed</b>: If the watermarking scheme requires the embedded message <math>m</math>, the embedding parameters <math>p_E</math> or other additional information (except the original signal <math>S</math>) for detection or retrieval, then the watermarking scheme is associated to this group. Often, watermarking schemes where the embedding function creates a data file needed for detection/retrieval, are associated to this type of verification. </p>
<p>

<b>Blind</b>: If the watermarking scheme does not require the original signal nor additional information (e.g. <math>m</math> or <math>p_E</math>), then the watermarking scheme is associated to this group. The verification (<math>\text{ver}</math>) is defined as list <math>\{0, 0.5,1\}</math>, whereby the <math>1</math> is associated with <it>non-blind</it>, a <math>0.5</math> with <it>informed</it> and a <math>0</math> with <it>blind</it>. The formalization is introduced in the following equation. <math>\text{ver}(\Omega^*,S)= \begin{cases} 0 &amp; (\Omega^*,S)\quad \text{is non-blind}\\ 0.5 &amp; (\Omega^*,S)\quad \text{is informed}\\ 1 &amp; (\Omega^*,S)\quad \text{is blind} \end{cases} </math></p>

</ss1>
</sec>
<sec>
<st>
Classification</st>
<p>
 
A digital watermark is called <b>robust</b> with respect to a class of transformations T if the embedded information can reliably be detected from the marked signal even if degraded by any transformation in T. Typical image degradations are JPEG compression, rotation, cropping, additive noise and quantization. For video content temporal modifications and MPEG compression are often added to this list. A watermark is called <b>imperceptible</b> if the cover signal and marked signal are indistinguishable with respect to an appropriate perceptual metric. In general it is easy to create robust watermarks <it>or</it> imperceptible watermarks, but the creation of robust <b>and</b> imperceptible watermarks has proven to be quite challenging <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. Robust imperceptible watermarks have been proposed as tool for the protection of digital content, for example as an embedded 'no-copy-allowed' flag in professional video content <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. </p>
<p>

Digital watermarking techniques can be classified in several ways. </p>

<ss1>
<st>
 Robustness </st>
<p>

A watermark is called <b>fragile</b> if it fails to be detected after the slightest modification. Fragile watermarks are commonly used for tamper detection (integrity proof).  Modification to an original work that are clearly noticeable are commonly not referred to as watermarks, but referred to as generalized <link xlink:type="simple" xlink:href="../600/60600.xml">
barcode</link>s.</p>
<p>

A watermark is called <b>semi-fragile</b> if it resist benign transformations but fails detection after malignant transformations. Semi-fragile watermarks are commonly used to detect malignant transformations.</p>
<p>

A watermark is called <b>robust</b> if it resists a designated class of transformations. Robust watermarks are commonly used in copyright applications (to carry ownership or forensic information) and copy protection applications (to carry copy and access control information).</p>

</ss1>
<ss1>
<st>
 Perceptibility </st>
<p>

A watermark is called <b>imperceptible</b> if the original cover signal and the marked signal are (close to) perceptually indistinguishable. </p>
<p>

A watermark is called <b>perceptible</b> if its presence in the marked signal is noticeable, but non-intrusive.</p>

</ss1>
<ss1>
<st>
 Capacity </st>
<p>
 
The length of the embedded message <math>|m|</math> determines two different main classes of watermarking schemes: </p>
<p>

<list>
<entry level="1" type="bullet">

 <math>|m|=0</math>: The message <math>m</math> is conceptually zero-bit long and the system is designed in order to detect the presence or the absence of the watermark <math>w</math> in the marked object <math>S_E</math>. This kind of watermarking schemes is usually referred to as <it>Italic zero-bit</it> or <it>Italic presence watermarking schemes</it>. Sometimes, this type of watermarking scheme is called 1-bit watermark, because a 1 denotes the presence and a 0the absence of a watermark. </entry>
<entry level="1" type="bullet">

 <math>|m|=n&amp;gt;0</math>: The message <math>m</math> is a n-bit long stream (<math>m=m_1\ldots m_n,\; n\in\N</math>, with <math>n=|m|</math>) or <math>M=\{0,1\}^n</math> and is modulated in <math>w</math>. This kind of schemes is usually referred to as multiple bit watermarking or non zero-bit watermarking schemes. </entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Embedding method </st>
<p>

A watermarking method is referred to as <b><link>
 spread-spectrum</link></b> if the marked signal is obtained by an additive modification. Spread-spectrum watermarks are known to be modestly robust, but also to have a low information capacity due to host <link>
 interference</link>. </p>
<p>

A watermarking method is referred to be of <b><link>
 quantization</link> type</b> if the marked signal is obtained by quantization. Quantization watermarks suffer from low robustness, but have a high information capacity due to rejection of host interference. </p>
<p>

A watermarking method is referred to as <b><link>
 amplitude modulation</link></b> if the marked signal is embedded by additive modification method which it similar to spread spectrum method but this method is especially embedded in spatial domain. </p>

</ss1>
</sec>
<sec>
<st>
Applications</st>
<p>
 
Digital Watermarking can be used for a wide range of applications such as: 
<list>
<entry level="1" type="bullet">

 Copyright protection.</entry>
<entry level="1" type="bullet">

 Fingerprinting (Different recipients get differently watermarked content). </entry>
<entry level="1" type="bullet">

 Broadcast Monitoring (Television news often contains watermarked video from international agencies).</entry>
<entry level="1" type="bullet">

 Covert Communication (steganography).</entry>
</list>
</p>

</sec>
<sec>
<st>
 Evaluation / Benchmarking </st>
<p>
 
The evaluation of digital watermarking schemes can provide detailed information for watermark designer or end users. Therefore, different evaluation strategies exists. Often used from watermark designer is the evaluation of single properties to show, for example, an improvement. End users, are mostly not interested in detailed information. They want to know, if a given digital watermarking algorithm can be used for their application scenario, and if yes, which parameter sets seems to be the best. </p>

</sec>
<sec>
<st>
 See also </st>
<p>
 
<list>
<entry level="1" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../410/3146410.xml">
Copy attack</link></method>
</know-how>
 </entry>
<entry level="1" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../812/3015812.xml">
Watermark (data file)</link></method>
</know-how>
 </entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>
 
<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.digitalwatermarkingalliance.org/">
Digital Watermarking Alliance – Furthering the Adoption of Digital Watermarking</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.forensics.nl/digital-watermarking">
Digital Watermarking &amp; Data Hiding research papers</weblink> at Forensics.nl </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cl.cam.ac.uk/~mgk25/stirmark.html">
StirMark for Images</weblink> – Watermarking robustness test developed by <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../703/1082703.xml">
Markus Kuhn</link></person>
 and Fabien Petitcolas. </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://wwwiti.cs.uni-magdeburg.de/~alang/smba.php#smba_LA">
StirMark for Audio</weblink> – Watermarking robustness and fragility test developed by Andreas Lang. </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://knowledgebase.aegisdrm.com/knowledgebase_digital_watermarking_drm.htm">
Directory of Books, Journals &amp; Conferences on Digital Watermarking and Digital Watermarking Assessment Tools</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://slashdot.org/articles/04/11/13/0036243.shtml">
Slashdot article</weblink> – "Warezed SoundForge Files In Windows Media Player" </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.petitcolas.net/fabien/steganography/">
Information hiding homepage</weblink> by Fabien Petitcolas * <weblink xlink:type="simple" xlink:href="http://watermarker.com/how-to-ptotect-digital-images.aspx">
Comparison of watermarking methods</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.business-sites.philips.com/contentidentification/about/Index.html">
Watermarking used in monitoring television broadcasts</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cs.princeton.edu/gfx/proj/meshwm/">
Robust Mesh Watermarking</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.smirnov.sp.ru/watermark/cards/card_eng.html">
PhotoWaterMark technology: Holographic approach</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
I.J. Cox, M.L. Miller, J.A. Bloom, J. Fridrich and T. Kalker, "Digital Watermarking and Steganography" (Second Edition), Morgan Kaufmann, 2008</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.cptwg.org">
Copy Protection Technical Working Group (CPTWG)</weblink></entry>
</reflist>
 
<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://omen.cs.uni-magdeburg.de/ecrypt/deliverables/D.WVL.10-1.1.pdf">
ECRYPT report: Audio Benchmarking Tools and Steganalysis</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://omen.cs.uni-magdeburg.de/ecrypt/deliverables/DWVL16_final.pdf">
ECRYPT report: Watermarking Benchmarking</weblink> </entry>
<entry level="1" type="bullet">

 Jana Dittmann, David Megias, Andreas Lang, Jordi Herrera-Joancomarti; <it>Theoretical framework for a practical evaluation and comparison of audio watermarking schemes in the triangle of robustness, transparency and capacity</it>; In: Transaction on Data Hiding and Multimedia Security I; Springer LNCS 4300; Editor Yun Q. Shi; pp. 1-40; ISBN 978-3-540-49071-5,2006 <weblink xlink:type="simple" xlink:href="http://wwwiti.cs.uni-magdeburg.de/~alang/paper/dittmann_magias_lang_joan-eval_audio_WM_triangle-journal.pdf">
PDF</weblink> </entry>
</list>
</p>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://jot.osa.org/abstract.cfm?id=85832">
M. V. Smirnov. Holographic approach to embedding hidden watermarks in a photographic image //Journal of Optical Technology, Vol. 72, Issue 6, pp. 464-468</weblink></entry>
</list>
</p>

</sec>
</bdy>
</method>
</know-how>
</article>
