<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 00:30:55[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Email forwarding</title>
<id>10792005</id>
<revision>
<id>242476775</id>
<timestamp>2008-10-02T11:51:21Z</timestamp>
<contributor>
<username>Ale2006</username>
<id>2952064</id>
</contributor>
</revision>
<categories>
<category>E-mail</category>
</categories>
</header>
<bdy>

<b>Email forwarding</b> consists of the operation of re-sending an <link xlink:type="simple" xlink:href="../738/9738.xml">
email message</link> delivered to one <link>
email address</link> on to another email address. 
Users and administrators of email systems use the same term when speaking of both server-based and client-based forwarding.<p>

Email forwarding can also redirect mail going to one address and send it to one or several other addresses. <it>Vice versa</it>, email items going to several different addresses can converge via forwarding to end up in a single address in-box.</p>

<sec>
<st>
 Server-based forwarding </st>

<p>

The <link xlink:type="simple" xlink:href="../878/39878.xml">
domain name</link> (the part appearing to the right of <it>@</it> in an <link>
email address</link>) defines the target <link>
server</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
for that class of addresses. That server can deliver a message to a user's <link xlink:type="simple" xlink:href="../875/14119875.xml">
mailbox</link> and/or send it forward. ~/.forward files (see <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22=7E/.forward+files%22])">
below</link>) provide a typical example of the implementation of server-based forwarding.</p>
<p>

Email administrators sometimes use the term <it>redirection</it> as a synonym for server-based email-forwarding.</p>

<ss1>
<st>
 Uses of server-based forwarding </st>

<p>

<list>
<entry level="1" type="definition">

 Role-addresses : <it>info</it>, <it>sales</it>, <it>postmaster</it>, and similar names can appear to the left of <it>@</it> in email addresses. An organization may forward messages intended for a given role to the personal address of the person(s) functioning in that role or office.</entry>
<entry level="1" type="definition">

 Vanity-addresses : Most <link xlink:type="simple" xlink:href="../683/3701683.xml">
domain name hosting</link> facilities provide mail-facilities to forward mail to another email address such as the user's <link xlink:type="simple" xlink:href="../245/100245.xml">
Internet Service Provider</link>.</entry>
<entry level="1" type="definition">

 Dismissed addresses : When users change their email addresses, an administrator may set up forwarding from an old address to a current one in order to avoid losing messages.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Forwarding versus remailing </st>

<p>

Plain message-forwarding changes the envelope recipient(s) and leaves the <link xlink:type="simple" xlink:href="../932/17291932.xml">
envelope sender</link> field untouched. The "envelope sender" field does not equate to the <it>From</it> <link xlink:type="simple" xlink:href="../738/9738.xml#xpointer(//*[./st=%22Header%22])">
header</link> which Email client software usually displays: it represents a field used in the early stages of the <link>
SMTP</link> protocol, and subsequently saved as the <it>Return-Path</it> header. This field holds the address to which mail-systems must send <link xlink:type="simple" xlink:href="../353/869353.xml">
bounce message</link>s — reporting delivery-failure (or success) — if any.</p>
<p>

By contrast, the terms <it>remailing</it> or <it>redistribution</it> can sometimes mean re-sending the message and also rewriting the "envelope sender" field. <link xlink:type="simple" xlink:href="../483/52483.xml">
Electronic mailing list</link>s furnish a typical example. Authors submit messages to a <it>reflector</it> that performs remailing to each list address. That way, <link xlink:type="simple" xlink:href="../353/869353.xml">
bounce message</link>s (which report a failure delivering a message to any list- subscriber) will not reach the author of a message. However, annoying misconfigured <it>vacation</it> autoreplies do reach authors.</p>
<p>

Typically, plain message-forwarding does alias-expansion, while proper message-forwarding, also named <it>forwarding</it> tout-court<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> serves for mailing-lists. When additional modifications to the message are carried out, so as to rather resemble the action of a MUA submitting a new message, the term <it>forwarding</it> becomes deceptive and remailing seems more appropriate.</p>
<p>

In the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../928/555928.xml">
Sender Policy Framework</link></rule>
</direction>
</protocol>
</message>
 (SPF), the domain-name in the envelope sender remains subject to policy restrictions. Therefore, SPF generally disallows plain message-forwarding. <it>Intra domain</it> redirection complies with SPF as long as the relevant servers share a consistent configuration. Mail servers that practise <it>inter-domain</it> message-forwarding may break SPF even if they don't implement SPF themselves, i.e. they neither apply SPF checks nor publish SPF records.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>
<link xlink:type="simple" xlink:href="../987/2278987.xml">
Sender Rewriting Scheme</link> provides for a generic forwarding mechanism compatible with SPF.</p>

</ss1>
</sec>
<sec>
<st>
 Client-based forwarding </st>

<ss1>
<st>
 Automated client-based forwarding </st>

<p>

Client forwarding can take place automatically using a non-interactive client such as a <link xlink:type="simple" xlink:href="../018/11517018.xml">
mail retrieval agent</link>. Although the retrieval agent uses a client protocol, this forwarding resembles <it>server forwarding</it> in that it keeps the same message-identity. Concerns about the envelope-sender apply.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</ss1>
<ss1>
<st>
 Manual client-based forwarding </st>

<p>

An <link>
end-user</link> can <it>manually</it> forward a message using an <link xlink:type="simple" xlink:href="../478/43478.xml">
Email client</link>. Forwarding <it>inline</it> quotes the message below the main text of the new message, and preserves original attachments. Forwarding <it>as attachment</it> prepares a <link xlink:type="simple" xlink:href="../045/19045.xml">
MIME</link> attachment that contains the full original message, including all <link xlink:type="simple" xlink:href="../738/9738.xml#xpointer(//*[./st=%22Header%22])">
headers</link> and any attachment. Note that including all the headers discloses much information about the message, such as the servers that transmitted it and any client-tag added on the mailbox.</p>
<p>

This kind of forwarding actually constitutes a <it>remailing</it> from the points of view of the envelope-sender and of the recipient(s). The message identity also changes.</p>

</ss1>
</sec>
<sec>
<st>
 Historical development of email forwarding </st>

<p>

RFC 821, <it>Simple Mail Transfer Protocol</it>, by <link xlink:type="simple" xlink:href="../767/15767.xml">
Jonathan B. Postel</link> in <link xlink:type="simple" xlink:href="../756/34756.xml">
1982</link>, provided for a <it>forward-path</it> for each recipient, in the form of, for example, @USC-ISIE.ARPA, @USC-ISIF.ARPA: Q-Smith@ISI-VAXA.ARPA — an optional list of hosts and a required destination-mailbox.  When the list of hosts existed, it served as a source-route, indicating that each host had to relay the mail to the next host on the list. Otherwise, in the case of insufficient destination-information but where the server knew the correct destination, it could take the responsibility to deliver the message by responding as follows: 
      S: RCPT TO:&amp;lt;Postel@USC-ISI.ARPA&amp;gt;
      R: 251 User not local; will forward to &amp;lt;Postel@USC-ISIF.ARPA&amp;gt;
</p>
<p>

The concept at that time envisaged the elements of the <it>forward-path</it> (source route) moving to the <it>return-path</it> (envelope sender) as a message got relayed from one SMTP server to another. Even if the system discouraged the use of source-routing,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>
dynamically building the <it>return-path</it> implied that the "envelope sender" information could not remain in its original form during forwarding. Thus RFC 821 did not originally allow plain message-forwarding.</p>
<p>

The introduction of the <link xlink:type="simple" xlink:href="../511/66511.xml">
MX record</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> made source-routing unnecessary. In <link xlink:type="simple" xlink:href="../847/34847.xml">
1989</link>, RFC 1123 recommended accepting source-routing only for backward-compatibility. At that point, plain message forwarding<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> became the recommended action for alias-expansion. In <link xlink:type="simple" xlink:href="../825/35825.xml">
2008</link>, RFC 5321 still mentions that "systems <it>may</it> remove the return path and rebuild <it>[it]</it> as needed", taking into consideration that not doing so might inadvertently disclose sensitive information.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>
Actually, plain message-forwarding can be conveniently used for alias expansion within the same server or a set of coordinated servers.</p>

<ss1>
<st>
 ~/.forward files </st>

<p>

<link xlink:type="simple" xlink:href="../600/48600.xml">
sendmail</link>, the reference <link>
SMTP</link> implementation in the early 1980s, provided for ~/.forward files, which can store the target email-addresses for given users. One can configure some email-program <link>
filter</link>s to automatically perform forwarding or replying actions immediately after receiving. Forward files can also contain <link xlink:type="simple" xlink:href="../938/28938.xml">
shell script</link>s, which have become a source of many security problems. Formerly only trusted users could utilize the command-line switch for setting the envelope sender, -f <it>arg</it>; some systems disabled this feature for security reasons.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>
<p>

Email predates the formalization of <link xlink:type="simple" xlink:href="../513/6513.xml">
client-server</link> architectures in the 1990s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>
Therefore, the distinction between <link xlink:type="simple" xlink:href="../970/667970.xml">
client</link> and <link xlink:type="simple" xlink:href="../116/42116.xml">
server</link> seems necessarily forced. The original distinction contrasted <link xlink:type="simple" xlink:href="../986/458986.xml">
daemons</link> and user-controlled <link xlink:type="simple" xlink:href="../783/5783.xml">
programs</link> which run on the same machine. The sendmail daemon used to run with <link>
root</link> <link>
privilege</link>s so it could impersonate any user whose mail it had to manage. On the other hand, users can access their own individual mail-files and configuration files, including ~/.forward. Client programs may assist in editing the server configuration-files of a given user, thereby causing some confusion as to what role each program plays.</p>

</ss1>
<ss1>
<st>
 Virtual users </st>

<p>

The term "virtual users" refers to email users who never log on a mail-server system and only access their mailboxes using remote clients. A mail-server program may work for both virtual and regular users, or it may require minor modifications to take advantage of the fact that virtual users frequently share the same system <it>id</it>. The latter circumstance allows the server program to implement some features more easily, as it doesn't have to obey system-access restrictions. The same principles of operations apply. However, virtual users have more difficulty in accessing their configuration files, for good or ill.</p>

</ss1>
</sec>
<sec>
<st>
 Notes </st>

<p>

<reflist>
<entry id="1">
The primary <link xlink:type="simple" xlink:href="../511/66511.xml">
MX record</link> of the relevant domain usually publishes the name of the <link xlink:type="simple" xlink:href="../624/20624.xml">
mail server</link>. Otherwise the domain name must have an <link xlink:type="simple" xlink:href="../921/14921.xml">
IP address</link>.
</entry>
<entry id="2">
In section 3.9.2 <it>List</it> of RFC 5321, the term <it>forwarding</it> is used ambiguously. It notes that "<it>the key difference between handling aliases (Section 3.9.1) and forwarding (this subsection) is the change to the [''Return-Path'' header]</it>." That wording, new w.r.t. RFC 2821, could be interpreted as the definition of <it>forwarding</it>, if the same term weren't used at the beginning of the same subsection with the opposite meaning.</entry>
<entry id="3">
Consider the following forward path: <p>

<it>A</it>-&amp;gt; <it>B</it> -&amp;gt; <it>C</it></p>
<p>

Domain <it>B</it> must not plainly forward a message from domain <it>A</it> to domain <it>C</it>, unless it controls either the policy of <it>A</it> or the filtering of <it>B</it>. Indeed, if <it>A</it> publishes an SPF policy that prevents <it>B</it> from using <it>A</it>'s name, and <it>C</it> applies sender's policy-checking, <it>C</it> may refuse the message according to RFC 4408. In other words, one cannot formally distinguish  plain message-forwarding from illegal domain-name abuse.
</p>
</entry>
<entry id="4">
See the note in section 6.2.7 <it>Explicit path specification</it> of RFC 822
</entry>
<entry id="5">
MX record has been introduced with RFC 974. See the historical section in <link xlink:type="simple" xlink:href="../511/66511.xml#xpointer(//*[./st=%22History+of+fallback+to+A%22])">
MX record#History of fallback to A</link>.</entry>
<entry id="6">
Plain message forwarding may disclose the final destination-address irrespectively of the user's intention. See sections 7.7 <it>Information Disclosure in Message Forwarding</it>, and 4.4 <it>Trace Information</it> in RFC 5321.
</entry>
<entry id="7">
 <cite style="font-style:normal" class="book">Hunt, Craig&#32;(2002). TCP/IP Network Administration.&#32;O'Reilly,&#32;page 606. ISBN 059600334X.</cite>&nbsp;
The <link>
current</link> (version 8.708 of 2006) <weblink xlink:type="simple" xlink:href="http://www.sendmail.org/doc/sendmail-current/doc/op/op.pdf">
sendmail documentation</weblink> mentions no restrictions in using the -f switch, and uses the verb <it>set</it> rather than <it>override</it> to describe its action on the envelope sender data.
</entry>
<entry id="8">
The book dates in <weblink xlink:type="simple" xlink:href="ftp://ftp.uu.net/usenet/news.answers/client-server-faq.Z">
client-server-faq</weblink> range from the early 1990s. Although <link xlink:type="simple" xlink:href="../346/26346.xml">
remote procedure call</link>s originated in the 1970s, they did not become widely used until networks became quite common.
</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 See also </st>

<p>

<list>
<entry level="1" type="bullet">

 <link>
Chain E-mail</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../483/52483.xml">
Electronic mailing list</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../770/12884770.xml">
E-mail alias</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../478/43478.xml">
E-mail client</link></entry>
<entry level="1" type="bullet">

 Reply All</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../847/459847.xml">
E-mail spam</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.feep.net/sendmail/tutorial/intro/forward.html">
sendmail and the .forward file</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://directory.google.com/Top/Computers/Internet/E-mail/Forwarding/">
Google - E-mail Forwarding</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://video.about.com/email/GmailAliasForwarding-mov.htm">
Email alias and forwarding in Gmail</weblink></entry>
</list>
</p>


</sec>
</bdy>
</article>
