<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 00:27:51[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<header>
<title>Publius Publishing System</title>
<id>10810242</id>
<revision>
<id>207702020</id>
<timestamp>2008-04-23T21:24:03Z</timestamp>
<contributor>
<username>CmdrObot</username>
<id>1079367</id>
</contributor>
</revision>
<categories>
<category>Articles with invalid date parameter in template</category>
<category>All pages needing to be wikified</category>
<category>Wikipedia articles in need of updating</category>
<category>Wikify from July 2007</category>
<category>Cryptographic protocols</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Ambox_outdated_serious.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
<b>This article or section needs to be updated.</b>
Please update the article to reflect recent events / newly available information, and remove this template when finished.</col>
</row>
</table>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Wikitext.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>Please  this article or section.</b>
Help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Publius_Publishing_System&amp;action=edit">
improve this article</weblink> by adding  . <it>(July 2007)''</it></col>
</row>
</table>


<b>Publius</b> is (was?) a web protocol developed by <weblink xlink:type="simple" xlink:href="http://www.cs.nyu.edu/~waldman/">
Waldman</weblink>, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../317/4868317.xml">
Rubin</link></scientist>
 &amp; <weblink xlink:type="simple" xlink:href="http://lorrie.cranor.org/">
Cranor</weblink> for allowing individuals the ability to publish information on the web anonymously and with a high guarantee that their publications will not be censored or modified by a third party.</p>
<p>

The nine design goals of the Publius development team are:
<list>
<entry level="1" type="bullet">

<it>Censorship resistance</it> - decreasing the chance that a third party will manage to modify or delete the published materials.</entry>
<entry level="1" type="bullet">

<it>Tamper evident</it> - unauthorized changes are traceable.</entry>
<entry level="1" type="bullet">

<it>Source Anonymous</it> - there is no way to tell who published the material once it is available on the web.</entry>
<entry level="1" type="bullet">

<it>Updatable</it> - publishers are allowed to modify or delete their material.</entry>
<entry level="1" type="bullet">

<it>Deniable</it> - third parties participating in publishing the materials lacks the responsibility for the hosted content.</entry>
<entry level="1" type="bullet">

<it>Fault tolerant</it> - system should function even when some involved third parties are faulty or malicious.</entry>
<entry level="1" type="bullet">

<it>Persistent</it> - there is no expiration date for published materials.</entry>
<entry level="1" type="bullet">

<it>Extensible</it> - support for future protocol extensions or growth in the number of publishers.</entry>
<entry level="1" type="bullet">

<it>Freely available</it> - all software tools required for the system should be out of charge.</entry>
</list>
</p>

<ss1>
<st>
Overview</st>
<p>

The Publius web system consists of the following agents:
<list>
<entry level="1" type="bullet">

<it>Publishers</it> - participants who publish their contents on the web.</entry>
<entry level="1" type="bullet">

<it>Servers</it> - which host the publishers contents on the web (considered as part of the third parties).</entry>
<entry level="1" type="bullet">

<it>Retrievers</it> - participants who browse the web contents published by the publishers.</entry>
</list>
</p>
<p>

The Publius system relies on a static list of <it>m</it> web servers. When a publisher wishes to add a contents <it>M</it> to the web, it first encrypts <it>M</it> using some random  <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric key</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 <it>K</it>. Then <it>K</it> is split into <it>n</it> shares (parts) where at least <it>kn</it> shares are required for the reconstruction of <it>K</it> (see also <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/458253.xml">
Secret sharing</link></rule>
</direction>
</protocol>
</message>
). A subset of the <it>m</it> servers receives another share of <it>K</it> and the encryption result of <it>M</it> using the key <it>K</it> , <it>E(M,K)</it>.
When a retriever whishes to obtain the original contents <it>M</it>, it follows a generated <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> which corresponds to the contents <it>M</it> combined with the portion of <it>K</it> as it appears on a subset of servers from the list. Gathering <it>k</it> different shares and a copy of <it>E(M,K)</it> allows the retriever to reconstruct the key <it>K</it> out of the shares and decrypt <it>E(M,K)</it> back into <it>M</it>. Modification or removal of the server hosted contents can be issued only by the original publishers using a combination of password and the hosting server domain name.</p>
<p>

At present, Publius supports the hosting of <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../191/13191.xml">
HTML</link></format>
 pages, images and other file formats such as <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>s and <link xlink:type="simple" xlink:href="../080/24080.xml">
PostScript</link>s.</p>

</ss1>
<sec>
<st>
Detailed View</st>
<p>

This section covers the Publius protocol in greater details.
</p>
<ss1>
<st>
Operations</st>
<p>

The Publius protocol allows the following operations:
<list>
<entry level="1" type="bullet">

<it>Publish</it> - in which a publisher spreads its contents across the Publius web servers.</entry>
<entry level="1" type="bullet">

<it>Retrieve</it> - in which a retriever follows a specific <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> to gather desired contents.</entry>
<entry level="1" type="bullet">

<it>Update</it> - in which a publisher replaces its server hosted contents file by another.</entry>
<entry level="1" type="bullet">

<it>Delete</it> - in which a publisher removes its server hosted file.</entry>
</list>
</p>
<p>

When a publisher wishes to add a web contents in the Publius web, its Publius client software (Publius Client Proxy) executes the following steps:
<list>
<entry level="1" type="number">

Random <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric key</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 <it>K</it> is generated.</entry>
<entry level="1" type="number">

The original content <it>M</it> is encrypted under <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
Symmetric-key algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 with the key <it>K</it>. Resulting with the encryption <it>E(M,K)</it>.</entry>
<entry level="1" type="number">

<it>K</it> is split into <it>n</it> shares using <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../177/10948177.xml">
Shamir's Secret Sharing</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 method in such that at least <it>kn</it> shares are required for the reconstruction of <it>K</it> under the method of <link xlink:type="simple" xlink:href="../569/14569.xml">
interpolation</link>.</entry>
<entry level="1" type="number">

For each of the <it>n</it> shares, the following computation takes place: <math>name_i\ = wrap(H(M * share_i))</math> where <math>M*share_i</math> is the concatenation result of the original contents <it>M</it> with the key share <math>share_i</math>; <it>H</it> is the <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hush function and <it>wrap</it> is the bitwise <link xlink:type="simple" xlink:href="../979/105979.xml">
xor</link> result of the two halves of the string which returned by <it>H</it>.</entry>
<entry level="1" type="number">

The hosting servers are chosen out of the servers list; the chosen locations in the servers list are determined by <math>location_i = (name_i \  mod  \ m) + 1</math> in order to obtain <it>n</it> values in the range [1,m]. If less than <it>k</it> unique locations were found, this step is repeated till <math>d&amp;gt;=k</math> unique locations are found.</entry>
<entry level="1" type="number">

In each server which appears in the servers list at <math>location_i</math> a directory named <math>name_i</math> is created containing the encrypted contents <math>E(M,K)</math>, the chosen server's share of key <it>K</it> (namely, <math>share_i</math>) and additional information(a <it>password</it> file containing the <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hash value of the chosen server domain name concatenated with a user chosen password used for authentication when a publisher wishes to update or remove its contents from the server).</entry>
<entry level="1" type="number">

A unique Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> is constructed by concatenation of the <it>d</it> different <math>name_i</math> identifiers of the servers containing the encrypted contents <it>M</it> and a key share of <it>K</it>.</entry>
</list>
</p>

<p>

<it>Diagram describing the selection of servers out of the servers list to hold encrypted contents under hashed directory names</it>.</p>
<p>

After the publish operation is done, each chosen server at location <math>location_i</math> at the servers list holds the following files under a directory named <math>name_i</math>:
<list>
<entry level="1" type="bullet">

<it>file</it> - which contains encrypted <it>E(M,K)</it> contents of the original contents <it>M</it>.</entry>
<entry level="1" type="bullet">

<it>share</it> - which holds the share of the chosen server of the encryption key <it>K</it> (namely, <math>share_i</math>).</entry>
<entry level="1" type="bullet">

<it>password</it> - which holds the <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hash value for the concatenation of the server domain name with a user chosen password. This is used for authentication for delete or update operations initiated by the publisher for the contents hosted by the chosen server.</entry>
</list>
</p>
<p>

When a retriever wishes to browse for a web contents in the Publius web, its Publius client software (Publius Client Proxy)executes the following steps:
<list>
<entry level="1" type="number">

The <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> is parsed back into 8 bytes units (which are the <math>name_i</math> units which were concatenated during the publish process).</entry>
<entry level="1" type="number">

For each <math>name_i</math> unit parsed out of the Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>, the hosting server is located from the servers list by computing <math>location_i = (name_i \  mod  \ m) + 1</math> which indicates on the server's location in the list.</entry>
<entry level="1" type="number">

<it>k</it> servers are chosen arbitrarily out of the located servers in order to reconstruct the key <it>K</it> using an <link xlink:type="simple" xlink:href="../569/14569.xml">
interpolation</link> over the retrieved <it>k</it> shares, one from each chosen server.</entry>
<entry level="1" type="number">

Among those <it>k</it> chosen servers, one is chosen for retrieving the encrypted contents <it>E(M,K)</it>. This is issued using an <link xlink:type="simple" xlink:href="../104/2701104.xml">
HTTP</link> GET request to the server for a file named <it>file</it> stored in the server directory named <math>name_i</math>.</entry>
<entry level="1" type="number">

The <it>k</it> shares of the key <it>K</it> are fetched in a similar way, known to be located in a server file named <it>share</it> under the <math>name_i</math> directory.</entry>
<entry level="1" type="number">

The original message is decrypted from <it>E(M,K)</it> using the reconstructed key <it>K</it>.</entry>
<entry level="1" type="number">

The retriever then verifies that the contents <it>M</it> wasn't modified nor did the key share <math>share_i</math> by recomputing <math>wrap(H(M * share_i))</math>  and comparing it with the corresponding <math>name_i</math> chunk which was parsed from the Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>.</entry>
<entry level="2" type="number">

If a mismatch was found, another set of <it>k</it> servers can be tried, or maybe the contents should have been downloaded from another server.</entry>
<entry level="2" type="number">

If verified successfully, the original contents <it>M</it> can be viewed by the web browser.</entry>
</list>
</p>
<p>

The delete operation is implemented by invoking a <link xlink:type="simple" xlink:href="../220/7220.xml">
CGI</link> script running over the servers. To each server the hash result of <math>H(SDN*PASSWD)</math> (namely, the <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hash result for the concatenation of the server domain name with the publisher's password) is sent along with the corresponding <math>name_i</math> string and compared with the one already stored in the <it>password</it> file under the directory <math>name_i</math>; if there is a match, the file <it>file</it> is removed from that directory.</p>
<p>

The update operation similarly uses the hashed concatenation of the server domain name with publisher's password in order to authenticate the original ownership of the hosted contents. Under this operation, the update itself is done by adding additional <it>update</it> file under the <math>name_i</math> which contains the new Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> matching for the updated contents (recall that the Publius URL is tied with the published contents and the share of the encryption key and is verified against the contents when retrieved). In fact, the update operation is equivalent to the publish operation with the addition of adding the <it>update</it> file to the old <math>name_i</math> directory for redirecting future retrieve request to the new <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>. When a retrieve operation will be issued for the old <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>, the Publius proxy client will be redirected to fetch the new <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>, the same will be done with the rest of the <it>k</it>-1 chosen servers; if the <it>k</it> resulting <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>s do not match, then another set of <it>k</it> servers will be chosen for retrieval.</p>

</ss1>
<ss1>
<st>
Publius URLs</st>
<p>

Encrypted web contents in the Publius protocol are traceable by their Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>s. Those have the following format:</p>
<p>

<math>
http://!anon!/ \ options \ name_1 \ name_2 \ ... \ name_n 
</math></p>
<p>

Where <math>name_1name_2...name_n</math> is the concatenation of the hash results of the original contents combined with some key share, as were described for the <it>publish</it> operation in the previous section. The <it>options</it> section of the <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> is 16 bits represented by a two characters <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<representation wordnetid="105926676" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../586/586.xml">
ASCII</link></rule>
</direction>
</representation>
</protocol>
</message>
 string, containing:
<list>
<entry level="1" type="bullet">

version number - which allows the extension of the protocol and backwards compatibility when interacting between different versions.</entry>
<entry level="1" type="bullet">

number of shares required for key reconstruction.</entry>
<entry level="1" type="bullet">

update flag - which its purpose will be mentioned in the next section. </entry>
</list>
</p>

</ss1>
<ss1>
<st>
Security Analysis</st>
<p>

<list>
<entry level="1" type="bullet">

In order for a Publius contents (or its update) to become inaccessible, it is required that all of the <it>n</it> copies of the encrypted contents will be deleted or corrupted so they will fail the verification against their <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>. Another possibility is by losing more than <it>n</it>-<it>k</it> of the encryption key <it>K</it> shares; leaving us with less than <it>k</it> shares which are insufficient for the reconstruction of <it>K</it>. Choosing high values for <it>n</it> and low values for <it>k</it> guarantees low chance of inaccessible contents to occur.</entry>
<entry level="1" type="bullet">

Tampering in the form of inserting false updates by third parties can become unlikely as the value for <it>k</it> increases. Larger value for <it>k</it> means that more shares will participate in the verification of the retrieved contetnts and by doing so, increasing the chance that such modification will be noticed.</entry>
<entry level="1" type="bullet">

The update flag field in the Publius <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> is useful for prevention from redirecting to a false updates; even if a false update was added by a third party, it will be ignored as long as the update flag in the <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> is set to zero.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.nyu.edu/~waldman/publius/">
"Publius Home Page"</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.nyu.edu/~waldman/publius/publius.pdf">
"Publius: A robust, tamper-evident, censorship-resistant web publishing system"</weblink></entry>
</list>
</p>
<p>

See also: Gibbs, W. Wayt: "Speech Without Accountability", Scientific American 283:4 (Oct 2000)</p>

</sec>
</bdy>
</rule>
</direction>
</protocol>
</message>
</article>
