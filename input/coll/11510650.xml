<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 00:53:21[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Edmonds&apos;s algorithm</title>
<id>11510650</id>
<revision>
<id>241578214</id>
<timestamp>2008-09-28T18:15:16Z</timestamp>
<contributor>
<username>Xtifr</username>
<id>2128547</id>
</contributor>
</revision>
<categories>
<category>Graph algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../401/12401.xml">
graph theory</link>, a branch of mathematics, <b>Edmonds's algorithm</b> or <b>Chu–Liu/Edmonds's algorithm</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for finding a maximum or minimum branchings. When nodes are connected by weighted edges that are directed, a <link xlink:type="simple" xlink:href="../795/41795.xml">
minimum spanning tree</link> algorithm cannot be used.  Instead an optimum branching algorithm should be applied using the algorithm proposed independently first by Chu and Liu (1965) and then by <link xlink:type="simple" xlink:href="../459/3625459.xml">
Edmonds</link> (1967). To find a maximum path length, the largest edge value is found and connected between the two nodes, then the next largest value, and so on. If an edge creates a loop, it is erased.  A minimum path length is found by starting from the smallest value.
<sec>
<st>
Conditions</st>
<p>

Let BV be a vertex bucket and BE be an edge bucket. Let <it>v</it> be a vertex and <it>e</it> be an edge of maximum positive weight that is incident to <it>v.</it> Ci is a circuit. G0 = (V0,E0) is the original digraph. <it>ui</it> is a replacement vertex for Ci.</p>

</sec>
<sec>
<st>
Execution</st>

<p>

<math>BV \leftarrow BE \leftarrow \varnothing</math>
i=0
A:
if <math>BV = V_i</math> then goto B
for some vertex <math>v \notin BV</math> and <math>v \in V_i </math> {
<math>BV \leftarrow BV \cup \lbrace v\rbrace</math>
find an edge <math> e = (x,v) </math> such that w(e) = max{ w(w,y)|(w,y) <math>\in</math> Ei}
if w(e) &amp;le; 0 then goto A
}
if <math>BE \cup \lbrace e\rbrace</math> contains a circuit {
i=i+1
construct <math>G_i</math> by shrinking <math>C_i</math> to <math>u_i</math>
modify BE, BV and some edge weights
}
<math>BV \leftarrow BE \cup {e}</math>
goto A
B:
while i &amp;ne; 0 {
reconstruct <math>G_{i-1}</math> and rename some edges in BE
if <math>u_i</math> was a root of an out-tree in BE {
<math>BE \leftarrow BE \cup \lbrace e|e \in C_i </math> and <math> e \ne e_0^i\rbrace</math>
}else{
<math>BE \leftarrow BE \cup \lbrace e|e \in C_i</math> and <math>e \ne \tilde{e}_i\rbrace</math>
}
i=i-1
}
Maximum branching weight = <math>\sum_{e \in BE} w(e)</math></p>

<p>

To author: 
<cite >modify BE, BV and some edge weights</cite> - how?
<math>u_i</math> - what is <math>u_i</math>?</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

 Y. J. Chu and T. H. Liu, "On the Shortest Arborescence of a Directed Graph", <it>Science Sinica</it>, vol. 14, 1965, pp. 1396-1400.</entry>
<entry level="1" type="bullet">

 J. Edmonds, “Optimum Branchings”, <it>J. Res. Nat. Bur. Standards</it>, vol. 71B, 1967, pp. 233-240.</entry>
<entry level="1" type="bullet">

 Alan Gibbons <it>Algorithmic Graph Theory,</it> Cambridge University press, 1985 ISBN: 0-521-28881-9</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ce.rit.edu/~sjyeec/dmst.html">
The Directed Minimum Spanning Tree Problem </weblink> Description of the algorithm summarized by Shanchieh Jay Yang, May 2000.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://edmonds-alg.sourceforge.net/">
Edmonds's algorithm ( edmonds-alg )</weblink> - An <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> implementation of Edmonds's algorithm written in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
 and licensed under the <link xlink:type="simple" xlink:href="../193/19193.xml">
MIT License</link></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://algowiki.net/wiki/index.php/Edmonds%27s_algorithm">
AlgoWiki - Edmonds's algorithm</weblink> - A public-domain implementation of Edmonds's algorithm written in <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
.</entry>
</list>

</p>
</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
