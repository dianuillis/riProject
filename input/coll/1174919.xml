<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:15:18[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<class  confidence="0.8" wordnetid="107997703">
<collection  confidence="0.8" wordnetid="107951464">
<group  confidence="0.8" wordnetid="100031264">
<header>
<title>SL (complexity)</title>
<id>1174919</id>
<revision>
<id>191779520</id>
<timestamp>2008-02-16T02:57:15Z</timestamp>
<contributor>
<username>Jamelan</username>
<id>3529454</id>
</contributor>
</revision>
<categories>
<category>complexity classes</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>, <b>SL</b> (<b>Symmetric Logspace</b> or <b>Sym-L</b>) is the <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link> of problems <link xlink:type="simple" xlink:href="../850/1174850.xml">
log-space reducible</link> to <b>USTCON</b> (<it>undirected s-t connectivity</it>), which is the problem of determining whether there exists a path between two vertices in an <link xlink:type="simple" xlink:href="../806/325806.xml">
undirected graph</link>, otherwise described as the problem of determining whether two vertices are in the same <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../223/246223.xml">
connected component</link></part>
</component>
</concept>
</idea>
. This problem is also called the <b>undirected reachability problem</b>. It does not matter whether <link xlink:type="simple" xlink:href="../983/362983.xml">
many-one reducibility</link> or <link xlink:type="simple" xlink:href="../375/1188375.xml">
Turing reducibility</link> is used. Although originally described in terms of <link xlink:type="simple" xlink:href="../978/18510978.xml">
symmetric Turing machine</link>s, that equivalent formulation is very complex, and the reducibility definition is what is used in practice.<p>

USTCON is a special case of <link xlink:type="simple" xlink:href="../034/2833034.xml">
STCON</link> (<it>directed reachability</it>), the problem of determining whether a directed path between two vertices in a <link xlink:type="simple" xlink:href="../986/19721986.xml">
directed graph</link> exists, which is complete for <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../955/1145955.xml">
NL</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
. Because USTCON is <b>SL</b>-complete, most advances that impact USTCON have also impacted <b>SL</b>. Thus we will discuss them together. </p>
<p>

In October 2004 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../347/9715347.xml">
Omer Reingold</link></recipient>
</acquirer>
</causal_agent>
</laureate>
</honoree>
</person>
</physical_entity>
 showed that <b>SL</b> = <b><mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/1149999.xml">
L</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
</b>.</p>

<sec>
<st>
 Origin </st>

<p>

SL was first defined in 1982 by Lewis and Papadimitriou<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%221%22])">
1</link>, who were looking for a class in which to place USTCON, which until this time could, at best, be placed only in <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../955/1145955.xml">
NL</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
, despite seeming not to require nondeterminism. They defined the <link xlink:type="simple" xlink:href="../978/18510978.xml">
symmetric Turing machine</link>, used it to define SL, showed that USTCON was complete for SL, and proved that
<indent level="1">

 <math>\mathrm{L} \subseteq \mathrm{SL} \subseteq \mathrm{NL}</math>
</indent>
where <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/1149999.xml">
L</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
 is the more well-known class of problems solvable by an ordinary <link xlink:type="simple" xlink:href="../403/30403.xml">
deterministic Turing machine</link> in logarithmic space, and <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../955/1145955.xml">
NL</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
 is the class of problems solvable by <link xlink:type="simple" xlink:href="../935/21935.xml">
nondeterministic Turing machines</link> in logarithmic space. The result of Reingold, discussed later, shows that in fact, when limited to log space, the symmetric Turing machine is equivalent in power to the deterministic Turing machine.</p>

</sec>
<sec>
<st>
 Complete problems </st>

<p>

Using our definition, USTCON is trivially complete for SL (all problems in SL reduce to it, including itself). Many more interesting complete problems were found, most by reducing directly or indirectly from USTCON, and a compendium of them was made by Ã€lvarez and Greenlaw<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%222%22])">
2</link>. Many of the problems are <link xlink:type="simple" xlink:href="../401/12401.xml">
graph theory</link> problems. Some of the simplest and most important SL-complete problems they describe include:
<list>
<entry level="1" type="bullet">

 USTCON</entry>
<entry level="1" type="bullet">

 Simulation of symmetric Turing machines: does an STM accept a given input in a certain space, given in unary?</entry>
<entry level="1" type="bullet">

 Vertex-disjoint paths: are there <it>k</it> paths between two vertices, sharing vertices only at the endpoints? (a generalization of USTCON, equivalent to asking whether a graph is <it>k</it>-edge-connected)</entry>
<entry level="1" type="bullet">

 Is a given graph a <link xlink:type="simple" xlink:href="../431/244431.xml">
bipartite graph</link>, or equivalently, does it have a <link xlink:type="simple" xlink:href="../743/426743.xml">
graph coloring</link> using 2 colors?</entry>
<entry level="1" type="bullet">

 Do two undirected graphs have the same number of <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../223/246223.xml">
connected components</link></part>
</component>
</concept>
</idea>
?</entry>
<entry level="1" type="bullet">

 Does a graph have an even number of connected components?</entry>
<entry level="1" type="bullet">

 Given a graph, is there a cycle containing a given edge?</entry>
<entry level="1" type="bullet">

 Do the <link xlink:type="simple" xlink:href="../770/455770.xml">
spanning forest</link>s of two graphs have the same number of edges?</entry>
<entry level="1" type="bullet">

 Given a graph where all its edges have distinct weights, is a given edge in the <link xlink:type="simple" xlink:href="../795/41795.xml">
minimum weight spanning forest</link>?</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../979/105979.xml">
Exclusive or</link> 2-<condition wordnetid="113920835" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../715/4715.xml">
satisfiability</link></difficulty>
</method>
</problem>
</state>
</know-how>
</condition>
: given a formula requiring that <it>xi</it> xor <it>xj</it> hold for a number of pairs of variables (<it>xi</it>,<it>xj</it>), is there an assignment to the variables that makes it true?</entry>
</list>
</p>
<p>

The <link xlink:type="simple" xlink:href="../955/1929955.xml">
complement</link>s of all these problems are in SL as well, since, as we will see, SL is closed under complement.</p>
<p>

Now that we know <b>L</b> = <b>SL</b>, we know of a great deal more SL-complete problems with respect to log-space reductions: every problem in <b>L</b> or in <b>SL</b> is <b>SL</b>-complete; moreover, even if the reductions are in some smaller class than <b>L</b>, <b>L</b>-completeness is equivalent to <b>SL</b>-completeness. In this sense this class has become somewhat trivial.</p>

</sec>
<sec>
<st>
 Important results </st>

<p>

There are well-known classical algorithms such as <link xlink:type="simple" xlink:href="../034/97034.xml">
depth-first search</link> and <link xlink:type="simple" xlink:href="../026/97026.xml">
breadth-first search</link> which solve USTCON in linear time and space. Their existence, shown long before <b>SL</b> was defined, proves that <b>SL</b> is contained in <b>P</b>. It's also not difficult to show that USTCON, and so <b>SL</b>, is in <b>NL</b>, since we can just nondeterministically guess at each vertex which vertex to visit next in order to discover a path if one exists. </p>
<p>

The first nontrivial result for <b>SL</b>, however, was <link xlink:type="simple" xlink:href="../501/658501.xml">
Savitch's theorem</link>, proved in 1970, which provided an algorithm that solves USTCON in log2 <it>n</it> space. Unlike depth-first search, however, this algorithm is impractical for most applications because of its potentially superpolynomial running time. One consequence of this is that USTCON, and so <b>SL</b>, is in DSPACE(log2<it>n</it>). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%223%22])">
3</link> (Actually, Savitch's theorem gives the stronger result that <b>NL</b> is in DSPACE(log2<it>n</it>).)</p>
<p>

Although there were no <it>deterministic</it> space improvements on Savitch's algorithm for 22 years, a highly practical probabilistic log-space algorithm was found in 1979 by Aleliunas et al: simply start at one vertex and perform a random walk until you find the other one (then accept) or until <it>|V|</it>3 time has passed (then reject)<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%224%22])">
4</link>. False rejections are made with a small bounded probability that shrinks exponentially the longer the random walk is continued. This also showed that <b>SL</b> is contained in <link xlink:type="simple" xlink:href="../206/18415206.xml">
RLP</link>, the class of problems solvable in polynomial time and logarithmic space with probabilistic machines that reject incorrectly less than 1/3 of the time. </p>
<p>

In 1989, Borodin et al. strengthened this result by showing that the <link xlink:type="simple" xlink:href="../955/1929955.xml">
complement</link> of USTCON, determining whether two vertices are in different connected components, is also in <b>RLP</b>. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%225%22])">
5</link> This placed USTCON, and <b>SL</b>, in co-<b>RLP</b> and in the intersection of <b>RLP</b> and co-<b>RLP</b>, which is <link>
ZPLP</link>, the class of problems which have log-space, expected polynomial-time, no-error randomized algorithms.</p>
<p>

In 1992, Nisan, SzemerÃ©di, and Wigderson finally found a new deterministic algorithm to solve USTCON using only log1.5 <it>n</it> space. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%226%22])">
6</link> This was improved slightly, but there would be no more significant gains until Reingold.</p>
<p>

In 1995, Nisan and Ta-Shma showed the surprising result that <b>SL</b> is closed under complement, which at the time was believed by many to be false; that is, <b>SL</b> = co-<b>SL</b>. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%227%22])">
7</link> Equivalently, if a problem can be solved by reducing it to a graph and asking if two vertices are in the <it>same</it> component, it can also be solved by reducing it to another graph and asking if two vertices are in <it>different</it> components. However, Reingold's paper would later make this result redundant.</p>
<p>

One of the most important corollaries of <b>SL</b> = co-<b>SL</b> is that <b>L</b>SL<b> = </b>SL<b>; that is, a deterministic, log-space machine with an <link xlink:type="simple" xlink:href="../431/22431.xml">
oracle</link> for </b>SL<b> can solve problems in </b>SL<b> (trivially) but cannot solve any other problems. This means it doesn't matter whether we use Turing reducibility or many-one reducibility to show a problem is in </b>SL<b>; they are equivalent. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%228%22])">
8</link></b></p>
<p>

A breakthrough October 2004 paper by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../347/9715347.xml">
Omer Reingold</link></recipient>
</acquirer>
</causal_agent>
</laureate>
</honoree>
</person>
</physical_entity>
 showed that USTCON is in fact in <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/1149999.xml">
L</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%229%22])">
9</link> Since USTCON is <b>SL</b>-complete, this implies that <b>SL</b> = <b>L</b>, essentially eliminating the usefulness of consideration of <b>SL</b> as a separate class. A few weeks later, graduate student Vladimir Trifonov showed that USTCON could be solved deterministically using O(log <it>n</it> log log <it>n</it>) spaceâ€”a weaker resultâ€”using different techniques.</p>

</sec>
<sec>
<st>
Consequences of L = SL</st>
<p>
=</p>
<p>

The collapse of <b>L</b> and <b>SL</b> has a number of significant consequences. Most obviously, all <b>SL</b>-complete problems are now in <b>L</b>, and can be gainfully employed in the design of deterministic log-space and polylogarithmic-space algorithms. In particular, we have a new set of tools to use in <link xlink:type="simple" xlink:href="../850/1174850.xml">
log-space reduction</link>s. It is also now known that a problem is in <b>L</b> if and only if it is log-space reducible to USTCON.</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

Romas Aleliunas, <link>
Richard M. Karp</link>, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../414/11532414.xml">
Richard J. Lipton</link></scientist>
, <link>
LÃ¡szlÃ³ LovÃ¡sz</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../853/5202853.xml">
Charles Rackoff</link></scientist>
. Random walks, universal traversal sequences, and the complexity of maze problems. <it>20th Annual Symposium on Foundations of Computer Science</it>, pp.218â€“223. San Juan, Puerto Rico. IEEE. October 1979.</entry>
<entry level="1" type="bullet">

A. Borodin, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../432/39432.xml">
S. A. Cook</link></scientist>
</person>
, P. W. Dymond, W. L. Ruzzo, and M. Tompa. <weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=68485">
Two applications of inductive counting for complementation problems</weblink>. <it>SIAM Journal on Computing</it>, v.18 n.3, p.559-578. June 1989.</entry>
<entry level="1" type="bullet">

Carme Ã€lvarez and Raymond Greenlaw. <weblink xlink:type="simple" xlink:href="http://www.cs.armstrong.edu/greenlaw/research/compendium.ps">
A Compendium of Problems Complete for Symmetric Logarithmic Space</weblink>. <it>Computational Complexity</it>,pp.9:73â€“95. 2000.</entry>
<entry level="1" type="bullet">

Jesper Jansson. <weblink xlink:type="simple" xlink:href="http://www.df.lth.se/~jj/Publications/STCON2.ps">
Deterministic Space-Bounded Graph Connectivity Algorithms</weblink>. Manuscript. 1998.</entry>
<entry level="1" type="bullet">

Harry R. Lewis and Christos H. Papadimitriou. Symmetric space-bounded computation. <it>Theoretical Computer Science</it>. pp.161-187. 1982.</entry>
<entry level="1" type="bullet">

Noam Nisan, <link>
Endre SzemerÃ©di</link>, and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../979/6570979.xml">
Avi Wigderson</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
. <weblink xlink:type="simple" xlink:href="http://www.math.ias.edu/~avi/PUBLICATIONS/MYPAPERS/NSW92/stoc.ps">
Undirected Connectivity in <it>O</it>(log1.5 <it>n</it>) space</weblink>. In <it>Proceedings 33rd Annual Symposium on Foundations of Computer Science</it>. Pittsburgh, PA. IEEE. pp. 24-29. 1992.</entry>
<entry level="1" type="bullet">

Noam Nisan and Amnon Ta-Shma. <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/6378.html">
Symmetric logspace is closed under complement</weblink>. <it>Chicago Journal of Theoretical Computer Science</it>. 1995.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../428/3509428.xml">
C. Papadimitriou</link>. <it>Computational Complexity</it>. Addison-Wesley, 1994. ISBN 0-201-53082-1.</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../347/9715347.xml">
Omer Reingold</link></recipient>
</acquirer>
</causal_agent>
</laureate>
</honoree>
</person>
</physical_entity>
. <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~reingold/publications/sl.ps">
Undirected ST-connectivity in Log-Space</weblink>.  Electronic Colloquium on Computational Complexity. No. 94. (<weblink xlink:type="simple" xlink:href="http://www.cs.cas.cz/~savicky/vyuka/vypsl/sl.pdf">
Draft PDF</weblink>)</entry>
<entry level="1" type="bullet">

W. J. Savitch. Relationships between nondeterministic and deterministic tape complexities. <it>J. Comput. System Sci</it>, 4, 2, pp. 177-192. 1970.</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../015/3644015.xml">
Michael Sipser</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
. <it>Introduction to the Theory of Computation</it>. PWS Publishing Co., Boston 1997 ISBN 0-534-94728-X.</entry>
</list>
</p>

</sec>
<sec>
<st>
Footnotes</st>

<p>

1. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Jansson%22])">
Jansson</link>, section 3.4 (pg.4). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Lewis+and+Papadimitriou%22])">
Lewis and Papadimitriou</link>.
2. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Compendium%22])">
Compendium</link>.
3. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Sipser%22])">
Sipser</link>, section 8.1 (pg.279). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Papadimitriou%22])">
Papadimitriou</link>, section 7.3 (pg.146). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Savitch%22])">
Savitch</link>.
4. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Papadimitriou%22])">
Papadimitriou</link>, section 16.3 (pg.401). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Aleliunas%22])">
Aleliunas</link>.
5. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Borodin%22])">
Borodin</link>.
6. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Jansson%22])">
Jansson</link>, section 5.1 (pg.9). <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Nisan+and+Szemer=C3=A9di%22])">
Nisan and SzemerÃ©di</link>. 
7. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Nisan+and+Ta-Shma%22])">
Nisan and Ta-Shma</link>. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Compendium%22])">
Compendium</link>, pg.2.
8. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Nisan+and+Ta-Shma%22])">
Nisan and Ta-Shma</link>, Corollary 3.1. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Compendium%22])">
Compendium</link>, pg.5.
9. <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reingold%22])">
Reingold</link>.</p>


</sec>
</bdy>
</group>
</collection>
</class>
</article>
