<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:17:06[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>List of undecidable problems</title>
<id>1188090</id>
<revision>
<id>238703610</id>
<timestamp>2008-09-16T00:29:39Z</timestamp>
<contributor>
<username>Peni</username>
<id>7258928</id>
</contributor>
</revision>
<categories>
<category>Theory of computation</category>
<category>Mathematics-related lists</category>
<category>Recursion theory</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../084/3244084.xml">
computability theory</link>, an <b>undecidable problem</b> is a problem whose language is not a <link xlink:type="simple" xlink:href="../264/332264.xml">
recursive set</link>. More informally, such problems cannot be solved in general by computers; see <link xlink:type="simple" xlink:href="../118/913118.xml">
decidability</link>. This is a list of undecidable problems. Note that there are <link xlink:type="simple" xlink:href="../248/32248.xml">
uncountably</link> many undecidable problems, so this list is necessarily incomplete. Though undecidable languages are not recursive languages, they may be a <link xlink:type="simple" xlink:href="../631/27631.xml">
subset</link> of <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../208/1208.xml">
Turing</link></scientist>
</person>
 recognizable languages.
<sec>
<st>
 Problems related to <link xlink:type="simple" xlink:href="../225/3729225.xml">
logic</link> </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../690/279690.xml">
Type inference</link> and <link>
type checking</link> for the second-order <link xlink:type="simple" xlink:href="../203/18203.xml">
lambda calculus</link> (or equivalent).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
 Problems related to <link xlink:type="simple" xlink:href="../492/60492.xml">
abstract machine</link>s </st>

<p>

<list>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link> (determining whether a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 (or equivalent) halts or runs forever).</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../911/67911.xml">
busy beaver</link> problem (determining the length of the longest halting computation among machines of a specified size).</entry>
<entry level="1" type="bullet">

 <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../852/25852.xml">
Rice's theorem</link></proposition>
</theorem>
</message>
</statement>
 states that for all non-trivial properties of partial functions, it is undecidable whether a machine computes a partial function with that property.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Other problems </st>

<p>

<list>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../685/64685.xml">
Post correspondence problem</link>.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../563/33563.xml">
word problem for groups</link>.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../742/1180742.xml">
word problem</link> for certain <link xlink:type="simple" xlink:href="../939/10939.xml">
formal languages</link>.</entry>
<entry level="1" type="bullet">

 The problem of determining if a given set of <link xlink:type="simple" xlink:href="../798/65798.xml">
Wang tile</link>s can tile the plane.</entry>
<entry level="1" type="bullet">

 The problem of determining the <link xlink:type="simple" xlink:href="../635/1635.xml">
Kolmogorov complexity</link> of a string.</entry>
<entry level="1" type="bullet">

 Determination of the solvability of a Diophantine equation, known as <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../851/101851.xml">
Hilbert's tenth problem</link></mathematical_statement>
</equation>
</message>
</statement>
</entry>
<entry level="1" type="bullet">

 Determining whether two finite <link xlink:type="simple" xlink:href="../686/252686.xml">
simplicial complexes</link> are homeomorphic</entry>
<entry level="1" type="bullet">

 Determining whether the <link xlink:type="simple" xlink:href="../004/11004.xml">
fundamental group</link> of a finite simplicial complex is trivial</entry>
<entry level="1" type="bullet">

 Determining if a <link xlink:type="simple" xlink:href="../759/6759.xml">
context-free grammar</link> generates all possible strings, or if it is ambiguous.</entry>
<entry level="1" type="bullet">

 Given two context-free grammars, determining whether they generate the same set of strings, or whether one generates a subset of the strings generated by the other, or whether there is any string at all that both generate.</entry>
<entry level="1" type="bullet">

 Determining whether a given initial point with rational coordinates is periodic, or whether it lies in the basin of attraction of a given open set, in a piecewise-linear iterated map in two dimensions, or in a piecewise-linear flow in three dimensions.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Partial Bibliography </st>
<p>
  
<reflist>
<entry id="1">
J. B. Wells. <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/article/wells96typability.html">
"Typability and type checking in the second-order lambda-calculus are equivalent and undecidable."</weblink> Tech. Rep. 93-011, Comput. Sci. Dept., Boston Univ., 1993.</entry>
</reflist>

<cite id="Reference-Brookshear-1989" style="font-style:normal" class="book">Brookshear, J. Glenn&#32;(1989). Theory of Computation: Formal Languages, Automata, and Complexity.&#32;Redwood City, California:&#32;Benjamin/Cummings Publishing Company, Inc..</cite>&nbsp; Appendix C includes impossibility of algorithms deciding if a grammar contains ambiguities, and impossibility of verifying program correctness by an algorithm as example of Halting Problem.</p>
<p>

<cite id="Reference-Moret-1991" style="font-style:normal" class="book">Moret, B. M. E.&#32;(1991). Algorithms from P to NP, volume 1 - Design and Efficiency.&#32;Redwood City, California:&#32;Benjamin/Cummings Publishing Company, Inc..</cite>&nbsp; Discusses intractability of problems with algorithms having exponential performance in Chapter 2, "Mathematical techniques for the analysis of algorithms."</p>


</sec>
</bdy>
</article>
