<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 01:04:33[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Cascade algorithm</title>
<id>11945602</id>
<revision>
<id>185651711</id>
<timestamp>2008-01-20T15:15:48Z</timestamp>
<contributor>
<username>Andreas Kaufmann</username>
<id>72502</id>
</contributor>
</revision>
<categories>
<category>Numerical analysis</category>
<category>Signal processing</category>
<category>Image processing</category>
<category>Wavelets</category>
</categories>
</header>
<bdy>

The <b>cascade algorithm</b> is a <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical method</link> for calculating the basic scaling function or <link xlink:type="simple" xlink:href="../903/50903.xml">
wavelet</link>s using an iterative algorithm, which computes wavelet coefficients at one scale from those at another. Because it applies the same operation over and over to the output of the previous application, it is known as the <it>cascade algorithm</it>.
<sec>
<st>
 Successive approximation </st>

<p>

The iterative algorithm generate successive approximations to &amp;psi;(<it>t</it>) or &amp;phi;(<it>t</it>) from {<it>h</it>} and {<it>g</it>} filter coefficients. If the algorithm converges to a fixed point, then that fixed point is the basic scaling function or wavelet.</p>
<p>

The iterations are defined by</p>
<p>

<indent level="1">

 <math>\varphi^{(k+1)}(t)=\sum_{n=0}^{N-1} h[n] \sqrt 2 \varphi^{(k)} (2t-n)</math>
</indent>

For the <it>k</it>th iteration, where an initial &amp;phi;(0)(<it>t</it>) must be given.</p>
<p>

The frequency domain estimates of the basic scaling function is given by</p>
<p>

<indent level="1">

 <math>\Phi^{(k+1)}(\omega)= \frac {1} {\sqrt 2} H\left( \frac {\omega} {2}\right) \Phi^{(k)}(\frac {\omega} {2})</math>
</indent>

and the limit can be viewed as an infinite product in the form</p>
<p>

<indent level="1">

 <math>\Phi^{(\infty)}(\omega)= \prod_{k=1}^{\infty} \frac {1} {\sqrt 2} H\left( \frac {\omega} {2^k}\right) \Phi^{(\infty)}(0).</math>
</indent>

If such a limit exists, the spectrum of the scaling function is</p>
<p>

<indent level="1">

 <math>\Phi(\omega)= \prod_{k=1}^{\infty} \frac {1} {\sqrt 2} H( \frac {\omega} {2^k}) \Phi^{(\infty)}(0)</math>
</indent>

The limit does not depends on the initial shape assume for &amp;phi;(0)(<it>t</it>).  This algorithm converges reliably to &amp;phi;(<it>t</it>), even if it is discontinuous.</p>
<p>

From this scaling function, the wavelet can be generated from</p>
<p>

<indent level="1">

 <math>\psi(t)= \sum_{- \infty}^{\infty} g[n]{\sqrt 2} \varphi^{(k)} (2t-n).</math>
</indent>

Plots of the function at each iteration is shown in Figure 1.</p>
<p>

Successive approximation can also be derived in the frequency domain.</p>
<p>

<image width="150px" src="Figure_cascade.png">
<caption>

<b>Figure 1. Iterations of the successive approximations of Daubechies wavelet and scale function by the cascade algorithm.</b>
</caption>
</image>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 C.S. Burrus, R.A. Gopinath, H. Guo, <it>Introduction to Wavelets and Wavelet Transforms: A Primer</it>, Prentice-Hall, 1988,  ISBN 0124896009.</entry>
<entry level="1" type="bullet">

 http://cnx.org/content/m10486/latest/</entry>
<entry level="1" type="bullet">

 http://cm.bell-labs.com/cm/ms/who/wim/cascade/index.html</entry>
</list>
</p>

</sec>
</bdy>
</article>
