<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 01:08:51[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Output-sensitive algorithm</title>
<id>12127990</id>
<revision>
<id>197006862</id>
<timestamp>2008-03-09T14:50:42Z</timestamp>
<contributor>
<username>Andreas Kaufmann</username>
<id>72502</id>
</contributor>
</revision>
<categories>
<category>Analysis of algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, an <b>output-sensitive algorithm</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> whose running time depends not only on the size of the input but also on the size of the output. For certain problems where the output is much smaller than the input, analyses that take the output size explicitly into account can produce better runtime bounds that differentiate algorithms that would otherwise have identical asymptotic complexity.<p>

For example, <link xlink:type="simple" xlink:href="../432/11700432.xml">
convex hull algorithms</link> for finding the <link xlink:type="simple" xlink:href="../634/40634.xml">
convex hull</link> of a finite set of points in the plane require <link xlink:type="simple" xlink:href="../578/44578.xml">
&amp;Omega;</link>(<it>n</it> log <it>n</it>) time for <it>n</it> points; even relatively simple algorithms like the <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../372/393372.xml">
Graham scan</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 achieve this lower bound. If the convex hull uses all <it>n</it> points, this is the best we can do; however, for many practical sets of points, and in particular for random sets of points, the number of points <it>h</it> in the convex hull is typically much smaller than <it>n</it>. Consequently, output-sensitive algorithms such as the <link xlink:type="simple" xlink:href="../089/11699089.xml">
ultimate convex hull algorithm</link> and <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../430/8320430.xml">
Chan's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 which require only O(<it>n</it> log <it>h</it>) time are considerably faster for such point sets.</p>
<p>

Output-sensitive algorithms arise most frequently in <link xlink:type="simple" xlink:href="../927/176927.xml">
computational geometry</link> applications and have been described for problems such as <link xlink:type="simple" xlink:href="../796/469796.xml">
hidden surface removal</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> and resolving <link>
range filter</link> conflicts in router tables<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>
<p>

Frank Nielsen describes a general paradigm of output-sensitive algorithms known as <it>grouping and querying</it> and gives such an algorithm for computing cells of a <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/177668.xml">
Voronoi diagram</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> Nielsen breaks these algorithms into two stages: estimating the output size, and then building data structures based on that estimate which are queried to construct the final solution.</p>

<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
<physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../419/15188419.xml">
Micha Sharir</link></associate>
</research_worker>
</scholar>
</scientist>
</causal_agent>
</alumnus>
</colleague>
</intellectual>
</person>
</peer>
</physical_entity>
, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../516/1177516.xml">
Mark Overmars</link></research_worker>
</scientist>
</causal_agent>
</person>
</physical_entity>
. A simple output-sensitive algorithm for hidden surface removal. ACM Transactions on Graphics. Vol. 11, issue 1, pp.1&ndash;11. January 1992. ISSN 0730-0301. <weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=102377.112141">
ACM portal</weblink> (login required)</entry>
<entry id="2">
Khaireel A. Mohamed and Christine Kupich. An O(<it>n</it> log <it>n</it>) Output-Sensitive Algorithm to Detect and Resolve Conflicts for 1D Range Filters in Router Tables. Institut f√ºr Informatik. August 5, 2006. ftp://ftp.informatik.uni-freiburg.de/documents/reports/report226/report00226.ps.gz</entry>
<entry id="3">
Frank Nielsen. Grouping and Querying: A Paradigm to Get Output-Sensitive Algorithms. Revised Papers from the Japanese Conference on Discrete and Computational Geometry, pp.250&ndash;257. 1998. ISBN:3-540-67181-1. http://www.sonycsl.co.jp/person/nielsen/PT/groupingquerying/n-grouping.ps</entry>
</reflist>
</p>

</sec>
</bdy>
</article>
