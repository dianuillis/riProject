<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:26:35[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<physical_entity  confidence="0.8" wordnetid="100001930">
<communicator  confidence="0.8" wordnetid="109610660">
<person  confidence="0.8" wordnetid="100007846">
<tool  confidence="0.9511911446218017" wordnetid="104451818">
<compiler  confidence="0.8" wordnetid="109946957">
<causal_agent  confidence="0.8" wordnetid="100007347">
<writer  confidence="0.8" wordnetid="110794014">
<header>
<title>GNU Compiler Collection</title>
<id>12323</id>
<revision>
<id>244493620</id>
<timestamp>2008-10-11T02:06:33Z</timestamp>
<contributor>
<username>Lightbot</username>
<id>7178666</id>
</contributor>
</revision>
<categories>
<category>C++ compilers</category>
<category>Fortran compilers</category>
<category>C compilers</category>
<category>1987 software</category>
<category>Java development tools</category>
<category>Cross-platform software</category>
<category>Free compilers and interpreters</category>
<category>GNU project</category>
<category>Compilers</category>
<category>GNU project software</category>
</categories>
</header>
<bdy>
<template>
<name>infobox software</name>
<parameters>
<genre>
<link xlink:type="simple" xlink:href="../739/5739.xml">
Compiler</link></genre>
<platform>
<link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link></platform>
<logo>
<image width="100px" src="Gccegg.svg">
</image>
</logo>
<website>
http://gcc.gnu.org/</website>
<latest_release_version>
4.3.2</latest_release_version>
<developer>
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../549/275549.xml">
GNU Project</link></medium>
</instrumentality>
</artifact>
</developer>
<name>
GNU Compiler Collection</name>
<latest_release_date>
2008-08-27; 232 days ago</latest_release_date>
<license>
<link xlink:type="simple" xlink:href="../683/18938683.xml">
GNU General Public License</link>, <link xlink:type="simple" xlink:href="../073/13073.xml">
GNU Lesser General Public License</link></license>
<operating_system>
<platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../193/81193.xml">
Cross-platform</link></horizontal_surface>
</surface>
</artifact>
</platform>
</operating_system>
</parameters>
</template>

<p>

The <b>GNU Compiler Collection</b> (usually shortened to <b>GCC</b>) is a set of <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link>s produced for various <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>s by the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../549/275549.xml">
GNU Project</link></medium>
</instrumentality>
</artifact>
. GCC is a key component of the <link xlink:type="simple" xlink:href="../980/617980.xml">
GNU toolchain</link>. As well as being the official compiler of the <link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link> system, GCC has been adopted as the standard compiler by most other modern <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 computer <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s, including <link xlink:type="simple" xlink:href="../297/6097297.xml">
GNU/Linux</link>, the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link></O>
 family and <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>. GCC has been <link xlink:type="simple" xlink:href="../804/214804.xml">
ported</link> to a wide variety of <link xlink:type="simple" xlink:href="../509/6509.xml">
computer architecture</link>s, and is widely deployed as a tool in commercial, <link xlink:type="simple" xlink:href="../886/18934886.xml">
proprietary</link> and <link xlink:type="simple" xlink:href="../886/18934886.xml">
closed source software</link> development environments. GCC is also available for most embedded platforms, for example <link xlink:type="simple" xlink:href="../446/72446.xml">
Symbian</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>, <link xlink:type="simple" xlink:href="../360/5374360.xml">
AMCC</link> and <link xlink:type="simple" xlink:href="../512/486512.xml">
Freescale</link> <link xlink:type="simple" xlink:href="../683/6222683.xml">
Power Architecture</link>-based chips<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>, <link xlink:type="simple" xlink:href="../964/23964.xml">
Playstation</link> and <link xlink:type="simple" xlink:href="../036/29036.xml">
Sega Dreamcast</link>.. Companies such as <link>
CodeSourcery</link> make a business out of supplying and supporting gcc ports to various platforms, and chip manufacturers today consider a gcc port almost essential to the success of an architecture. </p>
<p>

Originally named the <b>GNU C Compiler</b>, because it only handled the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C programming language</link></programming_language>
, GCC 1.0 was released in 1987, and the compiler was extended to compile <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
 in December of that year.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> <link xlink:type="simple" xlink:href="../625/428625.xml">
Front end</link>s were later developed for <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link></programming_language>
, <link xlink:type="simple" xlink:href="../802/22802.xml">
Objective C</link>, <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
, and <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link></causal_agent>
</physical_entity>
, among others.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

The <group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
 (FSF) distributes GCC under the <link xlink:type="simple" xlink:href="../683/18938683.xml">
GNU General Public License</link> (GNU GPL) and the <link xlink:type="simple" xlink:href="../073/13073.xml">
GNU Lesser General Public License</link> (GNU LGPL). GCC is <link xlink:type="simple" xlink:href="../635/10635.xml">
free software</link>.</p>

<sec>
<st>
 History </st>

<p>

<president wordnetid="110468559" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../143/3434143.xml">
Richard Stallman</link></person>
</president>
 started GCC in 1985. He extended an existing compiler to compile C.  The compiler originally compiled Pastel, an extended, nonportable dialect of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link></programming_language>
, and was written in Pastel.  It was rewritten in C by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../587/7122587.xml">
Len Tower</link></scientist>
 and Stallman,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> and released in 1987<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> as the compiler for the GNU Project, in order to have a compiler available that was <link xlink:type="simple" xlink:href="../635/10635.xml">
free software</link>. Its development was supervised by the <group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> A history of the release schedule is available at: http://gcc.gnu.org/releases.html</p>

<ss1>
<st>
 EGCS </st>

<p>

By 1991, GCC 1.x had reached a point of stability, but architectural limitations prevented many desired improvements, so the <group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
 (FSF) started work on GCC 2.x. But during the mid-1990s, the FSF kept such close control on what was added to the official version of GCC 2.x that GCC was used as one example of the "cathedral" development model in <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../469/9469.xml">
Eric S. Raymond</link></person>
's essay <it><link xlink:type="simple" xlink:href="../351/40351.xml">
The Cathedral and the Bazaar</link></it>.</p>
<p>

As GCC was <link xlink:type="simple" xlink:href="../635/10635.xml">
free software</link>, programmers wanting to work in other directions—particularly those writing interfaces for languages other than <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
—were free to develop their own <link xlink:type="simple" xlink:href="../506/301506.xml">
fork</link> of the compiler. Multiple forks proved inefficient and unwieldy, however, and the difficulty in getting work accepted by the official GCC project was greatly frustrating for many.</p>
<p>

In 1997, a group of developers formed EGCS, to merge several experimental forks into a single project.  The basis of the merger was a gcc development snapshot taken between the 2.7 and 2.81 releases. Projects merged included <link xlink:type="simple" xlink:href="../132/441132.xml">
g77</link> (<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
), PGCC (<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/24668.xml">
Pentium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
-optimized GCC), many <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
 improvements, and many new architectures and <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> variants.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></p>
<p>

EGCS development proved considerably more vigorous than GCC development, so much so that the FSF officially halted development on their GCC 2.x compiler, "blessed" EGCS as the official version of GCC and appointed the EGCS project as the GCC maintainers in April 1999. Furthermore, the project explicitly adopted the "bazaar" model over the "cathedral" model. With the release of GCC 2.95 in July 1999, the two projects were once again united.</p>

</ss1>
</sec>
<sec>
<st>
 Uses </st>

<p>

GCC is often the compiler of choice for developing software that is required to execute on a wide variety of hardware.  Differences in native compilers lead to difficulties in developing code that will compile correctly on all the compilers and build scripts that will run for all the platforms.  By using GCC, the same parser is used for all platforms, so if the code compiles on one, chances are high that it compiles on all.</p>
<p>

GCC is now maintained by a varied group of programmers from around the world.  It has been ported to more kinds of <link xlink:type="simple" xlink:href="../218/5218.xml">
processor</link>s and <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s than any other compiler.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>

</sec>
<sec>
<st>
Languages</st>


<p>

The standard compiler release 4.3 includes front ends for: <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
 (<it>G++</it>), <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 (<it><link xlink:type="simple" xlink:href="../939/162939.xml">
GCJ</link></it>), <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link></causal_agent>
</physical_entity>
 (<it><link xlink:type="simple" xlink:href="../879/172879.xml">
GNAT</link></it>), <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../802/22802.xml">
Objective-C</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../802/22802.xml#xpointer(//*[./st=%22Objective-C=2B=2B%22])">
Objective-C++</link></programming_language>
, and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
 (<it><link xlink:type="simple" xlink:href="../548/3904548.xml">
GFortran</link></it>). Also available, but not in standard are: <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/81259.xml">
Modula-2</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../545/241545.xml">
Modula-3</link></programming_language>
,  <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../708/23708.xml">
PL/I</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../881/243881.xml">
D</link></programming_language>
 (<it>gdc</it>), <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../726/19726.xml">
Mercury</link></programming_language>
, <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../410/43410.xml">
VHDL</link></language>
 (<it><software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../031/4826031.xml">
GHDL</link></software>
</it>).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>  A popular parallel language extension, <link xlink:type="simple" xlink:href="../842/381842.xml">
OpenMP</link>, is also supported.</p>
<p>

The Fortran front end was g77 before version 4.0, which only supports <link xlink:type="simple" xlink:href="../168/11168.xml#xpointer(//*[./st=%22FORTRAN+77%22])">
Fortran 77</link>. In newer versions, g77 is dropped in favor of the new <link xlink:type="simple" xlink:href="../548/3904548.xml">
GFortran</link> front end that supports <link xlink:type="simple" xlink:href="../168/11168.xml#xpointer(//*[./st=%22Fortran+95%22])">
Fortran 95</link>. A front end for <link xlink:type="simple" xlink:href="../313/765313.xml">
CHILL</link> was previously included, but has been dropped owing to a lack of maintenance.</p>
<p>

A few experimental branches exist to support additional languages, such as the GCC UPC compiler<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref> for <link xlink:type="simple" xlink:href="../616/1057616.xml">
Unified Parallel C</link>.</p>

</sec>
<sec>
<st>
Architectures</st>
<p>

GCC target processors as of version 4.3 include:</p>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../971/8971.xml">
Alpha</link></entry>
<entry level="1" type="bullet">

 <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../558/60558.xml">
ARM</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../290/100290.xml">
Atmel AVR</link></entry>
<entry level="1" type="bullet">

 <enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../678/1085678.xml">
Blackfin</link></business>
</processor>
</enterprise>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../218/1111218.xml">
HC12</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../763/179763.xml">
H8/300</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../046/15046.xml">
IA-32</link> (<artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link></commodity>
</merchandise>
</artifact>
)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../454/15454.xml">
IA-64</link></entry>
<entry level="1" type="bullet">

 <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
Motorola 68000</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../170/20170.xml">
MIPS</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../970/24970.xml">
PA-RISC</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link></entry>
<entry level="1" type="bullet">

 <link>
R8C</link>/<link>
M16C</link>/<link>
M32C</link> </entry>
<entry level="1" type="bullet">

 <link>
SPU</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../266/1856266.xml">
System/390</link>/<link xlink:type="simple" xlink:href="../088/3968088.xml">
zSeries</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../225/102225.xml">
SuperH</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../954/36954.xml">
SPARC</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../517/32517.xml">
VAX</link></entry>
</list>
</p>

<p>

Lesser-known target processors supported in the standard release have included:</p>

<p>

<list>
<entry level="1" type="bullet">

<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../820/1347820.xml">
A29K</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../241/1105241.xml">
ARC</link></company>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../647/3315647.xml">
ETRAX CRIS</link></entry>
<entry level="1" type="bullet">

<link>
D30V</link></entry>
<entry level="1" type="bullet">

<link>
DSP16xx</link></entry>
<entry level="1" type="bullet">

<link>
FR-30</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../986/2882986.xml">
FR-V</link></entry>
<entry level="1" type="bullet">

<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../351/480351.xml">
Intel i960</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

<link>
IP2000</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../181/2869181.xml">
M32R</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../327/20327.xml">
68HC11</link></entry>
<entry level="1" type="bullet">

<link>
MCORE</link></entry>
<entry level="1" type="bullet">

<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../799/20799.xml">
MMIX</link></machine>
</device>
</instrumentality>
</artifact>
</entry>
<entry level="1" type="bullet">

<link>
MN10200</link></entry>
<entry level="1" type="bullet">

<link>
MN10300</link></entry>
<entry level="1" type="bullet">

<artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<link xlink:type="simple" xlink:href="../176/55176.xml">
Motorola 88000</link></commodity>
</merchandise>
</artifact>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../224/35224.xml">
NS32K</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../003/1557003.xml">
ROMP</link></entry>
<entry level="1" type="bullet">

<link>
Stormy16</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../694/2875694.xml">
V850</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../325/638325.xml">
Xtensa</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../294/4103294.xml">
AVR32</link></entry>
</list>
</p>

<p>

Additional processors have been supported by GCC versions maintained separately from the FSF version:</p>

<p>

<list>
<entry level="1" type="bullet">

<link>
D10V</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../319/9566319.xml">
LatticeMico32</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../770/12633770.xml">
MeP</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../326/20326.xml">
Motorola 6809</link></entry>
<entry level="1" type="bullet">

<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../605/1754605.xml">
MicroBlaze</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../382/218382.xml">
MSP430</link></entry>
<entry level="1" type="bullet">

<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../721/1583721.xml">
Nios II</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 and <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../489/1583489.xml">
Nios</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../628/23628.xml">
PDP-10</link></entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<calculator wordnetid="109887034" confidence="0.8">
<link xlink:type="simple" xlink:href="../572/5276572.xml">
TIGCC</link></calculator>
</causal_agent>
</person>
</expert>
</physical_entity>
 (<chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
m68k</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 variant)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../817/368817.xml">
Z8000</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../588/184588.xml#xpointer(//*[./st=%22PIC24_and_dsPIC_16-bit_Microcontrollers%22])">
PIC24/dsPIC</link></entry>
</list>
</p>

<p>

When <link xlink:type="simple" xlink:href="../095/1364095.xml">
retargeting</link> GCC to a new platform, <link xlink:type="simple" xlink:href="../332/2384332.xml">
bootstrapping</link> is often used.</p>

</sec>
<sec>
<st>
Structure</st>
<p>

GCC's external interface is generally standard for a <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 compiler. Users invoke a driver program named gcc, which interprets command arguments, decides which language compilers to use for each input file, runs the <link xlink:type="simple" xlink:href="../368/1368.xml#xpointer(//*[./st=%22Assembler%22])">
assembler</link> on their output, and then possibly runs the <link xlink:type="simple" xlink:href="../566/18566.xml">
linker</link> to produce a complete executable binary.</p>
<p>

Each of the language compilers is a separate program that inputs source code and outputs assembly code. All have a common internal structure. A per-language <link xlink:type="simple" xlink:href="../625/428625.xml">
front end</link> <link xlink:type="simple" xlink:href="../015/310015.xml">
parses</link> the source code in that language and produces an <link xlink:type="simple" xlink:href="../629/75629.xml">
abstract syntax tree</link> ("tree" for short), and a <link xlink:type="simple" xlink:href="../625/428625.xml">
back end</link> converts the trees to GCC's <link xlink:type="simple" xlink:href="../344/26344.xml">
Register Transfer Language</link> (RTL). <link xlink:type="simple" xlink:href="../355/40355.xml">
Compiler optimization</link>s and <link xlink:type="simple" xlink:href="../811/28811.xml">
static code analysis</link> techniques (such as FORTIFY_SOURCE<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref>, a compiler directive which attempts to discover some <link xlink:type="simple" xlink:href="../373/4373.xml">
buffer overflow</link>s)  are applied to the code. Finally, assembly language is produced using architecture-specific <link xlink:type="simple" xlink:href="../688/279688.xml">
pattern matching</link> originally based on an algorithm of <link>
Jack Davidson</link> and <link>
Chris Fraser</link>.</p>
<p>

GCC is written primarily in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, although the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
, <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link></causal_agent>
</physical_entity>
 and <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 frontends contain much code written in those languages.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></p>

<ss1>
<st>
Front-ends</st>
<p>

Frontends vary internally, having to produce trees that can be handled by the backend. The parsers are hand-coded <link xlink:type="simple" xlink:href="../089/70089.xml">
recursive descent parser</link>s.</p>
<p>

Until recently, the tree representation of the program was not fully independent of the processor being targeted. Confusingly, the meaning of a tree was somewhat different for different language front-ends, and front-ends could provide their own tree codes.</p>
<p>

In 2005, two new forms of language-independent trees were introduced. These new tree formats are called <link xlink:type="simple" xlink:href="../278/901278.xml">
GENERIC</link> and <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../233/901233.xml">
GIMPLE</link></artifact>
</structure>
. Parsing now creates temporary language-dependent trees, which are converting to GENERIC. The so-called "gimplifier" then lowers this more complex form into the simpler <link xlink:type="simple" xlink:href="../371/373371.xml">
SSA</link>-based GIMPLE form which is the common language for a large number of new powerful language- and architecture-independent global (function scope) optimizations.</p>

</ss1>
<ss1>
<st>
Optimization</st>
<p>

Optimization on trees does not generally fit into what most compiler developers would consider a front end task, as it is not language dependent and does not involve parsing. GCC developers have given this part of the compiler the somewhat contradictory name the "middle end." These optimizations include <link xlink:type="simple" xlink:href="../793/464793.xml">
dead code elimination</link>, <link xlink:type="simple" xlink:href="../268/2209268.xml">
partial redundancy elimination</link>, <link xlink:type="simple" xlink:href="../807/547807.xml">
global value numbering</link>, <link xlink:type="simple" xlink:href="../610/1836610.xml">
sparse conditional constant propagation</link>, and <link>
scalar replacement of aggregates</link>. Array dependence based optimizations such as <link xlink:type="simple" xlink:href="../569/1854569.xml">
automatic vectorization</link> are currently being developed.</p>

</ss1>
<ss1>
<st>
Back-end</st>
<p>

The behavior of GCC's back end is partly specified by <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../835/231835.xml">
preprocessor macros</link></language>
 and functions specific to a target architecture, for instance to define the <link xlink:type="simple" xlink:href="../026/43026.xml">
endianness</link>, <link xlink:type="simple" xlink:href="../344/1613344.xml">
word size</link>, and <link xlink:type="simple" xlink:href="../571/1795571.xml">
calling convention</link>s. The front part of the back end uses these to help decide RTL generation, so although GCC's RTL is nominally processor-independent, the initial sequence of abstract instructions is already adapted to the target.</p>
<p>

The exact set of GCC optimizations varies from release to release as it develops, but includes the standard algorithms, such as <link xlink:type="simple" xlink:href="../754/1837754.xml">
loop optimization</link>, <link xlink:type="simple" xlink:href="../445/369445.xml">
jump threading</link>, <link xlink:type="simple" xlink:href="../794/547794.xml">
common subexpression elimination</link>, <link xlink:type="simple" xlink:href="../199/1113199.xml">
instruction scheduling</link>, and so forth. The RTL optimizations are of less importance with the recent addition of global SSA-based optimizations on <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../233/901233.xml">
GIMPLE</link></artifact>
</structure>
 trees<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref>, as RTL optimizations have a much more limited scope, and have less high-level information.</p>
<p>

A "reloading" phase changes abstract (pseudo-) <link xlink:type="simple" xlink:href="../432/486432.xml">
registers</link> into real machine registers, using data collected from the patterns describing the target's <link xlink:type="simple" xlink:href="../772/47772.xml">
instruction set</link>. This is a somewhat complicated phase, because it must account for the vagaries of all of GCC's targets.</p>
<p>

The final phase is somewhat anticlimactic, because the patterns to match were generally chosen during reloading, and so the assembly code is simply built by running substitutions of registers and addresses into the strings specifying the instructions.</p>

</ss1>
</sec>
<sec>
<st>
 Debugging GCC programs </st>
<p>

The primary tool to debug GCC code is the <link xlink:type="simple" xlink:href="../052/13052.xml">
GNU Debugger</link> (gdb).  Among more specialized tools are <link xlink:type="simple" xlink:href="../412/428412.xml">
Valgrind</link> for finding memory errors and leaks.  The <link>
GNU Profiler</link> (gprof) can find out how much time is spent in which routines, and how often they are called; this requires programs to be compiled with <it>profiling</it> options.</p>

</sec>
<sec>
<st>
 License </st>
<p>

"GCC 4.2.1 was the last release of GCC covered by <link xlink:type="simple" xlink:href="../683/18938683.xml#xpointer(//*[./st=%22Version+2%22])">
version 2 of the GNU General Public License</link>. All subsequent releases are released under <link xlink:type="simple" xlink:href="../683/18938683.xml#xpointer(//*[./st=%22Version+3%22])">
GPL version 3</link>." <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>

</sec>
<sec>
<st>
 Criticism </st>
<p>

GCC has received criticism from <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../571/18949571.xml">
OpenBSD</link></O>
 developers such as <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../270/356270.xml">
Theo de Raadt</link></scientist>
</person>
 and <link>
Otto Moerbeek</link> for being large, buggy, slow, and generating poor code.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref> Due to this criticism, plus the relatively restrictive GPL that GCC is licensed under (as compared to the <link xlink:type="simple" xlink:href="../111/18933111.xml">
BSD license</link> preferred by the various <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> projects), there has been an attempt to replace GCC with compilers such as <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/6026339.xml">
PCC</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
 in NetBSD and OpenBSD.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></p>

</sec>
<sec>
<st>
See also</st>

<p>

<table style="background:#f9f9f9; font-size:85%; line-height:110%; ">
<row>
<col>
 <image width="32x28px" src="Free_Software_Portal_Logo.svg">
</image>
</col>
<col style="padding:0 0.2em;">
 <b><it>
Free software&#32;portal</it></b></col>
</row>
</table>
</p>

<p>

<list>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/6026339.xml">
Portable C Compiler</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../431/5931431.xml">
Amsterdam Compiler Kit</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../191/566191.xml">
distcc</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../286/555286.xml">
introspector (program)</link></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../611/654611.xml">
Low Level Virtual Machine</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../110/362110.xml">
MinGW</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../842/381842.xml">
OpenMP</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../811/360811.xml">
DJGPP</link></software>
</entry>
<entry level="1" type="bullet">

 <social_group wordnetid="107950920" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<meeting wordnetid="108307589" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<conference wordnetid="108308497" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../687/3666687.xml">
GCC Summit</link></psychological_feature>
</conference>
</group>
</gathering>
</meeting>
</event>
</social_group>
</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../168/2635168.xml">
Watcom C compiler</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../024/3538024.xml">
Tiny C Compiler</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../474/2078474.xml">
Boehm garbage collector</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>


<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.inf.u-szeged.hu/symbian-gcc/">
Symbian GCC Improvement Project</weblink>".&#32;Retrieved on <link>
2007-11-08</link>.</entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://www.freescale.com/webapp/sps/site/overview.jsp?code=CW_BSP&amp;fsrch=1">
Linux Board Support Packages</weblink>".&#32;Retrieved on <link>
2008-08-07</link>.</entry>
<entry id="3">
"<weblink xlink:type="simple" xlink:href="http://www.gnu.org/software/gcc/releases.html">
GCC Releases</weblink>".&#32;  GNU Project.&#32;Retrieved on <link>
2006-12-27</link>.</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/gcc-4.1.1/gcc/G_002b_002b-and-GCC.html#G_002b_002b-and-GCC">
Programming Languages Supported by GCC</weblink>".&#32;  GNU Project.&#32;Retrieved on <link>
2006-12-27</link>.</entry>
<entry id="5">
 <cite style="font-style:normal">Stallman, Richard M.&#32;(February 1986).&#32;"<weblink xlink:type="simple" xlink:href="http://web.cecs.pdx.edu/~trent/gnu/bull/01/bull01.txt">
GNU Status</weblink>". <it>GNU's Bulletin</it>&#32;<b>1</b>&#32;(1).&#32;Free Software Foundation. Retrieved on <link>
2006-09-26</link>.</cite>&nbsp;</entry>
<entry id="6">
Tower, Leonard (1987) "<weblink xlink:type="simple" xlink:href="http://groups.google.com/group/comp.lang.misc/msg/32eda22392c20f98">
GNU C compiler beta test release,</weblink>" <it>comp.lang.misc</it> USENET newsgroup; see also http://gcc.gnu.org/releases.html#timeline</entry>
<entry id="7">
Stallman, Richard M. (2001) "<weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/gcc-2.95.3/gcc_23.html#SEC260">
Contributors to GCC,</weblink>" in <weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/gcc-2.95.3/gcc.html#SEC_Top">
<it>Using and Porting the GNU Compiler Collection (GCC)''</it></weblink> for gcc version 2.95 (Cambridge, Mass.: Free Software Foundation)</entry>
<entry id="8">
"<weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/wiki/History">
A Brief History of GCC</weblink>".</entry>
<entry id="9">
"<weblink xlink:type="simple" xlink:href="http://www.softpanorama.org/People/Stallman/history_of_gcc_development.shtml">
The Short History of GCC development</weblink>".</entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="http://www.bellevuelinux.org/gcc.html">
Linux Information Project</weblink> (LINFO) accessed <link>
2007-03-20</link></entry>
<entry id="11">
<weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/frontends.html">
GCC Front Ends</weblink>, GCC.org, Retrieved May 11, 2008.</entry>
<entry id="12">
<weblink xlink:type="simple" xlink:href="http://www.intrepid.com/upc.html">
GCC UPC (GCC Unified Parallel C) | intrepid.com</weblink></entry>
<entry id="13">
<weblink xlink:type="simple" xlink:href="http://fedoraproject.org/wiki/Security/Features">
fedoraproject.org: Security Features: Compile Time Buffer Checks (FORTIFY_SOURCE)</weblink></entry>
<entry id="14">
"<weblink xlink:type="simple" xlink:href="http://www.ohloh.net/projects/gcc/analyses/latest">
languages used to make GCC</weblink>".</entry>
<entry id="15">
<weblink xlink:type="simple" xlink:href="http://people.redhat.com/dnovillo/pub/tree-ssa/doc/html/">
Tree SSA: Main Page</weblink></entry>
<entry id="17">
http://www.thejemreport.com/content/view/369/</entry>
<entry id="16">
"<weblink xlink:type="simple" xlink:href="http://kerneltrap.org/node/13975">
Tools: GCC 4.2.1 Released</weblink>". 080208 kerneltrap.org</entry>
<entry id="18">
http://it.toolbox.com/blogs/bsd-guru/towards-a-bsdlicensed-compiler-19289</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 Further reading </st>


<p>

<list>
<entry level="1" type="bullet">

 <president wordnetid="110468559" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../143/3434143.xml">
Richard M. Stallman</link></person>
</president>
: <it><weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/gcc-2.95.3/gcc.html">
Using and Porting the GNU Compiler Collection</weblink></it>, <group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
, ISBN 0-595-10035-X</entry>
<entry level="1" type="bullet">

 Richard M. Stallman: <it><weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/gcc-3.3.1/gcc/">
Using Gcc: The Gnu Compiler Collection Reference</weblink></it>, Free Software Foundation, ISBN 1-882114-39-6</entry>
<entry level="1" type="bullet">

 <link>
Brian J. Gough</link>: <it><weblink xlink:type="simple" xlink:href="http://www.network-theory.co.uk/gcc/intro/">
An Introduction to GCC</weblink></it>, Network Theory Ltd., ISBN 0-9541617-9-3</entry>
<entry level="1" type="bullet">

 Arthur Griffith, <it>GCC: The Complete Reference</it>. McGrawHill/Osborne. ISBN 0-07-222405-3.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 The Jem Report: More on OpenBSD's New Compiler: <weblink xlink:type="simple" xlink:href="http://www.thejemreport.com/content/view/369/">
http://www.thejemreport.com/content/view/369/</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/">
GCC homepage</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cfdvs.iitb.ac.in/~amv/gcc-int-docs/#gccdocs">
Collection of GCC architecture/internals documents</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.toad.com/gnu/cygnus/index.html">
Marketing Cygnus Support</weblink>, an essay covering GCC development for the 1990s, with 30 monthly reports for in the "Inside Cygnus Engineering" section near the end.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.network-theory.co.uk/docs/gccintro/">
An Introduction to GCC</weblink>, by Brian Gough</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/onlinedocs/">
The official GCC manuals and user documentation</weblink>, by the GCC developers</entry>
<entry level="1" type="bullet">

 Kerner, Sean Michael&#32;(2005-04-22).&#32;"<weblink xlink:type="simple" xlink:href="http://www.internetnews.com/dev-news/article.php/3499881">
Open Source GCC 4.0: Older, Faster</weblink>", internetnews.com.&nbsp;</entry>
<entry level="1" type="bullet">

 Kerner, Sean Michael&#32;(2006-03-02).&#32;"<weblink xlink:type="simple" xlink:href="http://www.internetnews.com/dev-news/article.php/3588926">
New GCC Heavy on Optimization</weblink>", internetnews.com.&nbsp;</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.goof.com/pcg/egcs.html">
EGCS 1.0 announcement</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://gcc.gnu.org/egcs-1.0/features.html">
EGCS 1.0 features list</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://linuxmafia.com/faq/Licensing_and_Law/forking.html">
Fear of Forking</weblink>, an essay by Rick Moen recording seven well-known forks, including the GCC/EGCS one</entry>
<entry level="1" type="bullet">

 [irc://irc.gnu.org/gcc #gcc] IRC channel</entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="3" style=";" class="navbox-title">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../549/275549.xml">
GNU Project</link></medium>
</instrumentality>
</artifact>
</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
History</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;padding:0.25em 0; line-height:1.4em;;;" class="navbox-list navbox-odd">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<oeuvre wordnetid="103841417" confidence="0.8">
<end_product wordnetid="103287178" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../592/12592.xml">
GNU Manifesto</link></medium>
</end_product>
</oeuvre>
</instrumentality>
</artifact>
</creation>
</product>
&nbsp;·  <group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
&nbsp;·  <link xlink:type="simple" xlink:href="../064/9374064.xml">
History of free software</link></col>
<col style="width:0%;padding:0px 0px 0px 2px;" rowspan="9">
<image width="64px" src="Heckert_GNU_white.svg">
<caption>

GNU is not a gnu
</caption>
</image>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Licences</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;padding:0.25em 0; line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../683/18938683.xml">
GNU General Public License</link>&nbsp;·  <link xlink:type="simple" xlink:href="../073/13073.xml">
GNU Lesser General Public License</link>&nbsp;·  <link xlink:type="simple" xlink:href="../801/6842801.xml">
Affero General Public License</link>&nbsp;·  <link xlink:type="simple" xlink:href="../782/18938782.xml">
GNU Free Documentation License</link>&nbsp;·  <link xlink:type="simple" xlink:href="../406/390406.xml">
GPL linking exception</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Software</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;padding:0.25em 0; line-height:1.4em;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link> (<link xlink:type="simple" xlink:href="../973/8820973.xml">
variants</link>)&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/13236.xml">
Hurd</link></software>
&nbsp;·  <link xlink:type="simple" xlink:href="../362/12362.xml">
GNOME</link>&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/7404018.xml">
Gnuzilla</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<browser wordnetid="106571301" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../024/9937024.xml">
IceCat</link></coding_system>
</code>
</writing>
</written_communication>
</browser>
</program>
</application>
</software>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<player wordnetid="110439851" confidence="0.8">
<contestant wordnetid="109613191" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../806/2844806.xml">
Gnash</link></causal_agent>
</contestant>
</player>
</person>
</physical_entity>
&nbsp;·  <link xlink:type="simple" xlink:href="../547/4547.xml">
Bash</link>&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/12323.xml">
GCC</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
&nbsp;·  <link xlink:type="simple" xlink:href="../234/18933234.xml">
GNU Emacs</link>&nbsp;·  <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../364/324364.xml">
glibc</link></room>
</library>
</area>
</artifact>
</structure>
&nbsp;·  <link xlink:type="simple" xlink:href="../194/940194.xml">
Coreutils</link>&nbsp;·  <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../984/171984.xml">
Build system</link></implement>
</tool>
</instrumentality>
</artifact>
&nbsp;·  <link xlink:type="simple" xlink:href="../936/774936.xml">
Other GNU packages and programs</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Public speakers</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;padding:0.25em 0; line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../966/801966.xml">
Robert J. Chassell</link>&nbsp;·  <link>
Loïc Dachary</link>&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../686/10561686.xml">
Ricardo Galli</link></research_worker>
</scientist>
</causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<disputant wordnetid="109615465" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<reformer wordnetid="110515194" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<militant wordnetid="110315837" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../429/1303429.xml">
Georg C. F. Greve</link></causal_agent>
</engineer>
</programmer>
</militant>
</computer_user>
</reformer>
</person>
</disputant>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/3864098.xml">
Federico Heinz</link></causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<research_worker wordnetid="110523076" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../645/3306645.xml">
Benjamin Mako Hill</link></research_worker>
</person>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../799/1609799.xml">
Bradley M. Kuhn</link></person>
&nbsp;·  <celebrity wordnetid="109903153" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../972/383972.xml">
Eben Moglen</link></celebrity>
&nbsp;·  <president wordnetid="110468559" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../143/3434143.xml">
Richard Stallman</link></person>
</president>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../380/12284380.xml">
John Sullivan</link></person>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../587/7122587.xml">
Leonard H. Tower Jr.</link></scientist>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Other topics</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;padding:0.25em 0; line-height:1.4em;;;" class="navbox-list navbox-odd">
<controversy wordnetid="107183151" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<dispute wordnetid="107181935" confidence="0.8">
<disagreement wordnetid="107180787" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<speech_act wordnetid="107160883" confidence="0.8">
<link xlink:type="simple" xlink:href="../787/501787.xml">
GNU/Linux naming controversy</link></speech_act>
</psychological_feature>
</act>
</disagreement>
</dispute>
</event>
</controversy>
&nbsp;·  <product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<movie wordnetid="106613686" confidence="0.8">
<show wordnetid="106619065" confidence="0.8">
<documentary wordnetid="106616806" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/186501.xml">
Revolution OS</link></psychological_feature>
</documentary>
</show>
</movie>
</social_event>
</event>
</artifact>
</creation>
</product>
</col>
</row>
</table>
</col>
</row>
</table>

</p>
<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="3" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../635/10635.xml">
Free</link> and <link xlink:type="simple" xlink:href="../663/277663.xml">
open source</link>software</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../418/414418.xml">
Common Unix Printing System</link></software>
&nbsp;·  <link xlink:type="simple" xlink:href="../894/10894.xml">
The Free Software Definition</link>&nbsp;·  <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../549/275549.xml">
GNU Project</link></medium>
</instrumentality>
</artifact>
&nbsp;·  <link xlink:type="simple" xlink:href="../314/43314.xml">
List of applications</link>&nbsp;·  <link xlink:type="simple" xlink:href="../758/18938758.xml">
Open source</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/34147.xml">
X Window System</link></rule>
</direction>
</protocol>
</message>
</col>
<col style="width:0%;padding:0px 0px 0px 2px;" rowspan="17">
<image width="80px" src="Official_gnu.svg">
</image>
 <image width="80px" src="Tux.svg">
</image>
<table style="background:#f9f9f9; font-size:85%; line-height:110%; ">
<row>
<col>
 <image width="32x28px" src="Portal.svg">
</image>
</col>
<col style="padding:0 0.2em;">
 <b><it>
Free softwareportal</it></b></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../064/9374064.xml">
History</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../417/14032417.xml">
Linux</link>&nbsp;·  <link xlink:type="simple" xlink:href="../225/20225.xml">
Mozilla</link> (<link xlink:type="simple" xlink:href="../570/2024570.xml">
Application Suite</link>&nbsp;·  <link xlink:type="simple" xlink:href="../550/1564550.xml">
Firefox</link>&nbsp;·  <link xlink:type="simple" xlink:href="../227/1890227.xml">
Thunderbird</link>)</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../206/5273206.xml">
Operating system families</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../076/53076.xml">
Darwin</link>&nbsp;·  <link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../977/18977.xml">
MINIX</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../281/554281.xml">
Haiku</link></O>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../314/2356314.xml">
Development</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/12323.xml">
GCC</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../611/654611.xml">
LLVM</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
&nbsp;·  <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/24131.xml">
PHP</link></writer>
</language>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
&nbsp;·  <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/23862.xml">
Python</link></programming_language>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link></causal_agent>
</physical_entity>
&nbsp;·  <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../237/30237.xml">
Tcl</link></programming_language>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../697/6559697.xml">
Desktop environments</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../262/229262.xml">
Blackbox</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../391/68391.xml">
EDE</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../969/79969.xml">
Enlightenment</link></software>
&nbsp;·  <link>
Étoilé</link>&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../364/169364.xml">
Fluxbox</link></software>
&nbsp;·  <link xlink:type="simple" xlink:href="../362/12362.xml">
GNOME</link>&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../977/79977.xml">
IceWM</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../629/16629.xml">
KDE</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../104/761104.xml">
LiteStep</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../016/374016.xml">
Openbox</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../725/294725.xml">
ROX</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../163/432163.xml">
Window Maker</link></software>
&nbsp;·  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../103/69103.xml">
Xfce</link></software>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Organizations</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../437/18949437.xml">
Free Software Foundation</link></group>
 (<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../398/450398.xml">
Europe</link></company>
, <link xlink:type="simple" xlink:href="../326/2305326.xml">
India</link>, <link xlink:type="simple" xlink:href="../125/3175125.xml">
Latin America</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../249/9055249.xml">
Linux Foundation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../489/382489.xml">
Mozilla Foundation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../298/22298.xml">
Open Source Initiative</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../568/18932568.xml">
Licences</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../908/145908.xml">
Apache</link>&nbsp;·  <link xlink:type="simple" xlink:href="../111/18933111.xml">
BSD</link>&nbsp;·  <link xlink:type="simple" xlink:href="../683/18938683.xml">
GPL</link>&nbsp;·  <link xlink:type="simple" xlink:href="../073/13073.xml">
LGPL</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/19193.xml">
MIT</link>&nbsp;·  <link xlink:type="simple" xlink:href="../528/608528.xml">
MPL</link>&nbsp;·  <link xlink:type="simple" xlink:href="../057/2404057.xml">
Permissive free software licences</link>&nbsp;·  <link xlink:type="simple" xlink:href="../003/11689003.xml">
License proliferation</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Challenges</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../467/5540467.xml">
Binary blob</link>&nbsp;·  <link xlink:type="simple" xlink:href="../226/18938226.xml">
Digital rights management</link>&nbsp;·  <link xlink:type="simple" xlink:href="../415/17501415.xml">
Open source software security</link>&nbsp;·  <link xlink:type="simple" xlink:href="../886/18934886.xml">
Proprietary software</link>&nbsp;·  <link xlink:type="simple" xlink:href="../847/872847.xml">
SCO-Linux controversies</link>&nbsp;·  <link xlink:type="simple" xlink:href="../620/9807620.xml">
Software patents and free software</link>&nbsp;·  <word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../340/4570340.xml">
Tivoization</link></language_unit>
</neologism>
</part>
</word>
&nbsp;·  <link xlink:type="simple" xlink:href="../608/58608.xml">
Trusted Computing</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Other topics</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../900/2953900.xml">
Alternative terms</link>&nbsp;·  <link xlink:type="simple" xlink:href="../466/6974466.xml">
Community</link>&nbsp;·  <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../638/10638.xml">
Movement</link></medium>
</instrumentality>
</artifact>
&nbsp;·  <link xlink:type="simple" xlink:href="../636/2009636.xml">
Comparison of open source and closed source</link>&nbsp;·  <link xlink:type="simple" xlink:href="../496/1721496.xml">
Free and open source software</link>&nbsp;·  <link xlink:type="simple" xlink:href="../890/12869890.xml">
Floss manuals</link>&nbsp;·  <it><product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<movie wordnetid="106613686" confidence="0.8">
<show wordnetid="106619065" confidence="0.8">
<documentary wordnetid="106616806" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/186501.xml">
Revolution OS</link></psychological_feature>
</documentary>
</show>
</movie>
</social_event>
</event>
</artifact>
</creation>
</product>
''</it></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</writer>
</causal_agent>
</compiler>
</tool>
</person>
</communicator>
</physical_entity>
</article>
