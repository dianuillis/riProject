<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:20:39[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Universal Virtual Computer</title>
<id>1237540</id>
<revision>
<id>205406624</id>
<timestamp>2008-04-13T20:53:33Z</timestamp>
<contributor>
<username>Frap</username>
<id>612852</id>
</contributor>
</revision>
<categories>
<category>All articles that may contain original research</category>
<category>Operating system technology</category>
<category>Virtualization software</category>
<category>Programming language implementation</category>
<category>Articles that may contain original research since January 2008</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article written by the researcher may contain  or .</b>
Please <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Universal_Virtual_Computer&amp;action=edit">
improve the article</weblink> by adding . See the for details. <it>(January 2008)</it></col>
</row>
</table>



<p>

A <b>Universal Virtual Computer</b> (UVC) is much like a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> (VM) in computing by means that it creates a layer between the underlying <link xlink:type="simple" xlink:href="../196/81196.xml">
computer platform</link> and upperlying software. It offers the benefit of portability between different platforms. Software, developed for running on top of the VM, is then able to operate on a wide variety of computer systems for which a VM exist.</p>
<p>

However, in contrast with normal VM's the UVC is designed to be universal. That is, it offers a platform independent layer that will always remain the same. In this way, programs developed for the UVC are guaranteed to run anytime, in present and future.</p>

<sec>
<st>
 Conceptual model </st>

<p>

The UVC is part of a broader concept, called the Universal Virtual Computer (UVC)-based preservation method. This method is invented by R.A. Lorie<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> (<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 Research Center in Almaden) and allows digital objects (like text documents, spreadsheets, images, sound waves, etc.) to be reconstructed in its original appearance anytime in the future using a unique combination of <link xlink:type="simple" xlink:href="../558/1042558.xml">
emulation</link> and <link xlink:type="simple" xlink:href="../408/1135408.xml">
migration</link>. The method is a long-term solution for the main problem in the field of digital preservation: how can we keep digital objects accessible over the long term?</p>
<p>

The central idea of the UVC-based preservation method is that digital objects preserved in an archive can be reconstructed anytime in the future without losing the meaning of that object. The UVC concept consists of four different components. These are:
<list>
<entry level="1" type="bullet">

Universal Virtual Computer (UVC)</entry>
<entry level="1" type="bullet">

Logical Data Schema (LDS) with type description</entry>
<entry level="1" type="bullet">

UVC program (format decoder)</entry>
<entry level="1" type="bullet">

Logical Data Viewer</entry>
</list>
</p>
<p>

Together with the original data it is possible to reconstruct the meaning of each particular digital object. The UVC can be seen as the heart of the system. Like the <message wordnetid="106598915" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/16389.xml">
Java Virtual Machine</link></machine>
</device>
</request>
</instrumentality>
</artifact>
</message>
 and the <link xlink:type="simple" xlink:href="../003/46003.xml">
Common Language Runtime</link>, the UVC is actually an <link xlink:type="simple" xlink:href="../937/18943937.xml">
emulator</link> for not really existing hardware and will run as software application on a future platform. Because we do not know at this time which hardware is available in the future, the UVC must be created at the time we want to access a particular document from the repository. The UVC forms the platform on which programs specifically written for the UVC can run. Such a UVC program is needed to decode the file format of a digital object. In turn, it retrieves element tags, which hold specific information about the content of the data. These elements form the Logical Data View (LDV) of the data and look like <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../138/34138.xml">
XML</link></format>
. The LDV is an instantiation of the Logical Data Schema (LDS), which describes the elementary parts of a specific information type as a blueprint.</p>
<p>

All these components are controlled by a Logical Data Viewer. This program also runs on future hardware and therefore needs to be created at that time too. The viewer starts the UVC and feeds it with data of the digital object and a format decoder specifically developed for the UVC. It retrieves an LDV from the UVC and reconstructs a specific representation of the original object’s meaning. This process is depicted in figure 1.</p>
<p>

<image width="150px" src="UVC-based_preservation_method.gif">
<caption>

UVC-based preservation method.gif
</caption>
</image>
</p>
<p>

In the figure a distinction is made between preservation time (present) and retrieval time (future). Different steps must be taken during both present and future, which are:</p>

<ss1>
<st>
 At preservation time (present) </st>

<p>

<it>Step 1</it> – To view a digital object in the future, we must understand the structure (logical form) of it. Therefore a detailed description needs to be developed which states what the logical view should look like and what it means. This logical view is returned by the UVC in the future and needs to be interpreted by the viewer; therefore future developers must be able to understand it. 
The information describes the structure of the object’s content in detail. As mentioned above, executing the UVC will return this information in elementary tags. All tags are defined in a blueprint called the Logical Data Schema (LDS), which explains the tags that are retrieved from the UVC for a particular type of digital object. In this, a type is defined as a particular group of files, like an image, sound wave or spreadsheet. The advantage of the LDS is that the same LDS can be used for all formats of a type.
But knowing how the LDV is retrieved is not enough. To understand what they mean, the LDS provides a description of the meaning of important elements. Think of an image from which each pixel is described by the colors red, green and blue. For each type of color a code value is returned, like red: 230, green: 17 and blue: 0. Without understanding the scale and spectrum of these values, colors can not be reconstructed to their authentic appearance. The LDS for images is based on the <link xlink:type="simple" xlink:href="../989/25989.xml">
RGB</link> color model as it is the model used by computer screens and most image formats. To gauge this model it is referenced to a general spectrum of colors by the CIE <link>
chromaticity diagram</link>. Other color models, like the Hue-Saturation-Lightness (<link xlink:type="simple" xlink:href="../814/252814.xml">
HLS color space</link>) model can also be referenced to this spectrum.</p>
<p>

<it>Step 2</it> – Having a digital object and a description of the elements returned by the UVC is still not enough to reconstruct the object’s meaning. The UVC has to know how it should decipher the logical format of a digital object. Therefore a UVC format decoder has to be written that can decode the format and transform it into a Logical Data View (LDV), using the elements defined by the LDS. It is important that this format decoder is written at preservation time, because waiting can eventually lead to a misunderstanding of the format due to its obsolescence. For each format a decoder has to be written, demanding a lot of effort. But once a decoder is available it can be applied to every object of that same type.</p>
<p>

<it>Step 3</it> – Finally future developers have to know how they could construct a UVC, which can execute the format decoder for a particular object format. Developing one now will not guarantee that it is still operational in the future. This implies that it has to be made understandable how software developers in the distant future can create a new one by themselves. The UVC is designed to be a general-purpose computer, running on future hardware. The architecture conforms to the current <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../091/478091.xml">
Von Neumann architecture</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
, but is very flexible. For instance, it assumes it has an unlimited amount of <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> and has no fixed size registers, which differ from today’s computers. To reproduce a UVC in the future, a description of this concept must be carefully preserved. This could be done as a document in a digital repository, but also as a hardcopy on paper.</p>

</ss1>
</sec>
<sec>
<st>
 Current status </st>

<p>

In 2001 the National Library of the Netherlands (Koninklijke Bibliotheek)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and IBM started the Long-Term Preservation (LTP) project. The LTP project’s main objective is to investigate the strategy and functionality needed to preserve the digitally stored information for the long term, which in this context means hundreds of years. In 2002 the study delivered their findings in a report series of six documents<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>. One of the outcomes stated that the UVC is a good candidate for maintaining access to digital objects for the long term.</p>
<p>

Starting in 2003, the second part of the LTP-project was to do a 'proof of concept' of the UVC-based preservation method<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>. As a result, in 2004 a demonstration tool of the UVC became freely available for the wide public<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>. With this undertaking, the LTP-project wants to emphasize on the problems in digital preservation field and to take the first steps towards a solution.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
R.A. Lorie, inventor of the UVC-based preservation method: <weblink xlink:type="simple" xlink:href="http://domino.research.ibm.com/comm/pr.nsf/pages/bio.lorie.html">
R.A. Lorie</weblink></entry>
<entry id="2">
Koninklijke Bibliotheek, the National Library of the Netherlands: <weblink xlink:type="simple" xlink:href="http://www.kb.nl">
KB web site</weblink></entry>
<entry id="3">
The Long-Term Preservation (LTP) study at the National Library of the Netherlands and IBM:
<weblink xlink:type="simple" xlink:href="http://www-5.ibm.com/nl/dias/preservation.html">
LTP / DIAS project</weblink></entry>
<entry id="4">
The UVC project at the National Library of the Netherlands and IBM:
<weblink xlink:type="simple" xlink:href="http://www.kb.nl/hrd/dd/dd_onderzoek/uvc_voor_images-en.html">
UVC for JPEG</weblink></entry>
<entry id="5">
Development of a Universal Virtual Computer (UVC) for long-term preservation of digital objects. <weblink xlink:type="simple" xlink:href="http://jis.sagepub.com/cgi/content/abstract/31/3/196">
http://jis.sagepub.com/cgi/content/abstract/31/3/196</weblink> will give the abstract</entry>
</reflist>
</p>


</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../387/1404387.xml">
Digital preservation</link></room>
</library>
</area>
</artifact>
</structure>
</entry>
</list>
</p>

</sec>
</bdy>
</article>
