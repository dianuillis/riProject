<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:20:32[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<O  confidence="0.9508927676800064" wordnetid="106832680">
<header>
<title>HeliOS</title>
<id>1249771</id>
<revision>
<id>225365785</id>
<timestamp>2008-07-13T08:52:48Z</timestamp>
<contributor>
<username>Raise exception</username>
<id>2689643</id>
</contributor>
</revision>
<categories>
<category>Unix</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox_OS</name>
<parameters>
<latest_release_version>
1.3.1</latest_release_version>
<latest_release_date>
(date unknown)</latest_release_date>
<kernel_type>
Microkernel</kernel_type>
<working_state>
Historic</working_state>
<developer>
Perihelion Software</developer>
<family>
<family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
</family>
<name>
HeliOS</name>
<source_model>
Proprietary</source_model>
</parameters>
</template>


<b>HeliOS</b> was a <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
-like <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> for parallel computers developed and sold by <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../725/1249725.xml">
Perihelion Software</link></institution>
</company>
.  It was most commonly used on various <link xlink:type="simple" xlink:href="../858/87858.xml">
Transputer</link> systems, but also supported other architectures.  The system provided a micro-kernel that implemented a distributed name space and messaging protocol, through which services were accessed.  A <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../305/23305.xml">
POSIX</link></system_of_measurement>
</standard>
 compatibility library enabled the use of Unix application software, and the system provided most of the usual Unix utilities.<p>

Work on Helios began in the autumn of <link xlink:type="simple" xlink:href="../761/34761.xml">
1986</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  Its success was limited by the commercial failure of the Transputer, and efforts to move to other architectures met with limited success.  Perihelion ceased trading in <link xlink:type="simple" xlink:href="../647/34647.xml">
1998</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

<sec>
<st>
 Development </st>
<p>

In the early 1980s, Tim King joined <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/82392.xml">
MetaComCo</link></institution>
</company>
 from Bath University, bringing with him some rights to an operating system called <link xlink:type="simple" xlink:href="../418/82418.xml">
TRIPOS</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>
MetaComCo secured a contract from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../580/7580.xml">
Commodore</link></company>
 to work on <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
, with the <link xlink:type="simple" xlink:href="../823/88823.xml">
AmigaDOS</link> component being derived from TRIPOS.  In 1986, King left MetaComCo to found <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../725/1249725.xml">
Perihelion Software</link></institution>
</company>
, and began development of a parallel operating system, initially targeted at the <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/1064146.xml">
INMOS</link></institution>
</company>
 <link xlink:type="simple" xlink:href="../858/87858.xml">
Transputer</link> series of processors.  Helios extended TRIPOS' use of a light-weight message passing architecture to networked parallel machines.</p>
<p>

Helios 1.0 was the first commercial release in the summer of <link xlink:type="simple" xlink:href="../670/34670.xml">
1988</link>, followed by version 1.1 in autumn <link xlink:type="simple" xlink:href="../847/34847.xml">
1989</link>, 1.1a in early <link xlink:type="simple" xlink:href="../635/34635.xml">
1990</link>, 1.2 in December <link xlink:type="simple" xlink:href="../635/34635.xml">
1990</link> followed by 1.2.1 and 1.2.2 updates.  Version 1.3 was a significant upgrade with numerous utility, library, server and driver improvements.  The last commercial release was 1.3.1.</p>

</sec>
<sec>
<st>
 Kernel and Nucleus </st>
<p>

Helios was designed for a network of multiple nodes, connected by multiple high-bandwidth communications links.  Nodes could be dedicated processing nodes, or processors with attached I/O devices.  Small systems might consist of a host PC or workstation connected to a set of several processing nodes, while larger systems might have hundreds of processing nodes supported by dedicated nodes for storage, graphics, or user terminals.</p>
<p>

A Helios network requires at least one <b>I/O Server</b> node that is able to provide a <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link> server, <link xlink:type="simple" xlink:href="../904/2622904.xml">
console</link> server and reset control for the processing nodes.  At power on, the Helios <b>Nucleus</b> is <link xlink:type="simple" xlink:href="../909/40909.xml">
bootstrapped</link> from the I/O server into the network. Each node is booted using a small first-stage <link xlink:type="simple" xlink:href="../909/40909.xml">
loader</link> that then downloads and initialises the nucleus proper.  Once running, a node communicates with its neighbours, booting them in turn, if required.</p>
<p>

The Helios Nucleus is composed of the kernel, libraries, loader service and the processor manager service.</p>

<ss1>
<st>
 Kernel </st>
<p>

The Helios kernel is effectively a <link xlink:type="simple" xlink:href="../023/20023.xml">
micro-kernel</link>, providing a minimal abstraction above the hardware with most services implemented as non-privileged server processes.  It provides memory allocation, process management, message passing and synchronisation primitives.</p>

</ss1>
<ss1>
<st>
 Libraries </st>
<p>

The Helios Nucleus contains three libraries: the system, server and utility libraries. The utility library provides some basic library routines for C programming that are shared by the other libraries. The system library provides the basic kernel interface, converting C function calls into messages sent to and from the kernel. It implements an abstraction that allows communication between processes regardless of their location in the network. The server library provides name space support functions for writing Helios servers, as described below.</p>

</ss1>
<ss1>
<st>
 Loader and Processor Manager </st>
<p>

The remaining components of the nucleus are the loader and processor manager servers.  Once the kernel is loaded, these processes are bootstrapped, and they integrate the newly running node into the Helios network.</p>

</ss1>
</sec>
<sec>
<st>
 Naming and Servers </st>
<p>

A key feature in Helios is its distributed name system.  A Helios network implements a single unified name space, with a virtual root node, optional virtual network structuring nodes, nodes for each processor, and sub-processor name spaces provides by services. Names are similar to those in <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
, using a forward slash separating character and textual naming elements.</p>
<p>

The name space is managed by the <it>network server</it>, which is started by the I/O server once the nucleus is booted on its first attached node.  The network server uses a provided network map to allocate processor names and initialise drivers for hardware devices at specific nodes in the network.  The kernel includes a name resolver, and manages a local cache of routes to previously resolved names.</p>
<p>

Servers are Helios processes that implement the <it>General Server Protocol</it>, typically with the support of the server library.  The server protocol is conceptually similar to the Unix <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
VFS</link></instrumentality>
</artifact>
</system>
 API, and more closely to <link xlink:type="simple" xlink:href="../226/24226.xml">
Plan9</link>'s <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/683452.xml">
9P</link></rule>
</direction>
</protocol>
</message>
.  It requires that servers represent their resources as files, with standardised open/read/write/close-style operations.  Like Plan9, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
's /proc and other pseudo-filesystems and Unix, files, I/O devices, users, processes and other resources are all represented as virtual files in the namespace served by their managing process.</p>
<p>

Key servers in Helios are the previously mentioned loader, processor manager and network server, together with the session manager, the window server and the file server.  Others include the keyboard, mouse, rs232 and centronics servers (built into the host I/O server), the null server (like Unix's <link xlink:type="simple" xlink:href="../184/305184.xml">
/dev/null</link>), the logger server (like Unix's <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../295/1590295.xml">
Syslog</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
), etc.</p>

</sec>
<sec>
<st>
 Programming and Utilities </st>
<p>

From a user's perspective, Helios is quite similar to Unix.  Most of the usual utility programs were provided, some with extensions to reflect the availability of multiple machines.</p>
<p>

What is not immediately apparent is that Helios extends the notion of Unix pipes into a language called <it>Component Distribution Language</it> (CDL).  In CDL, a typical Unix shell <link xlink:type="simple" xlink:href="../117/1236117.xml">
pipeline</link> such as ls | more is called a <it>task force</it>, and is transparently distributed by the <it>Task Force Manager</it> server across the available CPUs. CDL extended traditional Unix syntax with additional operators for bi-direction pipes, sequential and parallel process farm operators, load balancing and resource management.</p>
<p>

Helios applications can be written using <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
, <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link> and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/81259.xml">
Modula-2</link></programming_language>
.  The POSIX library assists in porting existing Unix software, and provides a familiar environment for programmers.  Helios does not support <link xlink:type="simple" xlink:href="../660/22660.xml">
occam</link> programs.</p>

</sec>
<sec>
<st>
 Hardware </st>
<p>

Helios was predominantly an operating system for Transputer systems.  It supported products from various manufacturers including INMOS' TRAM systems, the <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../539/102539.xml">
Meiko</link></institution>
</company>
 <link xlink:type="simple" xlink:href="../539/102539.xml">
CS</link>, Parsytec MultiCluster and SuperCluster, and the Telmat T.Node. The <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<digital_computer wordnetid="103196324" confidence="0.8">
<workstation wordnetid="104603399" confidence="0.8">
<link xlink:type="simple" xlink:href="../388/87388.xml">
Atari Transputer Workstation</link></workstation>
</digital_computer>
</machine>
</device>
</instrumentality>
</artifact>
</computer>
 was perhaps the highest profile Helios hardware, at least outside academia.</p>
<p>

Helios ran on T4xx and T8xx, 32 bit Transputers (but not the T2xx 16 bit models) and offered device drivers for various SCSI, Ethernet and graphics hardware from Inmos, Transtech, and others.</p>
<p>

In its later versions, Helios was ported to the TI TMS320C40 <link xlink:type="simple" xlink:href="../505/154505.xml">
DSP</link>, and the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../558/60558.xml">
ARM architecture</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
The Helios parallel operating system, p9</entry>
<entry id="2">
King, Tim.&#32;"<weblink xlink:type="simple" xlink:href="http://www.tim-king.com/cv.html">
Tim King - CV</weblink>".&#32;Retrieved on <link>
2007-03-18</link>.</entry>
<entry id="3">
 <cite id="CITEREFRichardsAylwardBondEvans1979" style="font-style:normal">Richards, M.; Aylward, A.R.; Bond, P.; Evans, R.D.&#32;&amp;&#32;Knight, B.J.&#32;(September 1979),&#32;"TRIPOS -- a Portable Operating System for Mini-computers",&#32;<it>Software Practice and Experience</it>&#32;<b>9</b>:  513-526</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 Further reading </st>
<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book">Perihelion Software&#32;(1989). The Helios operating system.&#32;Prentice Hall International (UK) Ltd. ISBN 0-13-386004-3.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book">Perihelion Software&#32;(1991). The Helios parallel operating system.&#32;Prentice Hall International (UK) Ltd. ISBN 0-13-381237-5.</cite>&nbsp;</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.classiccmp.org/transputer/">
Ram Meenakshisundaram's Transputer Home Page</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
AIX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../229/294229.xml">
DragonFly BSD</link></O>
&nbsp;·  <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
&nbsp;·  <link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../537/14537.xml">
IRIX</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../980/867980.xml">
LynxOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../977/18977.xml">
MINIX</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../495/21495.xml">
NetBSD</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../571/18949571.xml">
OpenBSD</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/24226.xml">
Plan 9</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/65184.xml">
QNX</link></O>
&nbsp;·  <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../245/2901245.xml">
Research Unix</link></horizontal_surface>
</surface>
</artifact>
</platform>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../906/1579906.xml">
SCO OpenServer</link></O>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link>
System V</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../275/38275.xml">
Tru64</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../105/157105.xml">
VxWorks</link></O>
&nbsp;·  <it>
Unix variants|more''</it></col>
</row>
</table>
</col>
</row>
</table>
</p>


</sec>
</bdy>
</O>
</article>
