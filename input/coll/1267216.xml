<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:22:17[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Hypervisor</title>
<id>1267216</id>
<revision>
<id>243160982</id>
<timestamp>2008-10-05T12:04:43Z</timestamp>
<contributor>
<username>Lightbot</username>
<id>7178666</id>
</contributor>
</revision>
<categories>
<category>Virtualization software</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../213/5213.xml">
computing</link>, a <b>hypervisor</b>, also called <it>virtual machine monitor</it>, is a <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../819/646819.xml">
virtualization</link></machine>
</device>
</instrumentality>
</artifact>
 platform that allows multiple <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s to run on a host computer at the same time.<p>

<image location="right" width="260px" src="VMware_Workstation.png" type="thumb">
</image>

</p>
<sec>
<st>
Classifications</st>
<p>

Hypervisors are currently classified in two types: <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

<list>
<entry level="1" type="bullet">

 A <it>Type 1</it> (or <it>native</it>, <it>bare-metal</it>) hypervisor is software that runs directly on a given hardware platform (as an operating system control program). A guest operating system thus runs at the second level above the hardware.</entry>
<entry level="1" type="indent">

The classic type 1 hypervisor was <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
, developed at <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 in the 1960s, ancestor of IBM's current <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>.</entry>
<entry level="1" type="indent">

More recent examples are Oracle VM, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
's <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../258/8175258.xml">
ESX Server</link></software>
, LynxSecure from <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../123/11905123.xml">
LynuxWorks</link></institution>
</company>
, <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernels</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../263/958263.xml">
Green Hills Software</link></company>
's INTEGRITY Padded Cell, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../194/17340194.xml">
VirtualLogix</link></company>
's VLX, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../093/16445093.xml">
TRANGO</link></company>
, IBM's POWER Hypervisor (PR/SM), Microsoft's <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../084/11168084.xml">
Hyper-V</link></part>
</component>
</concept>
</idea>
 (released in June 2008), <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
, <link xlink:type="simple" xlink:href="../948/309948.xml">
Citrix</link> XenServer, Parallels Server (released in 2008), ScaleMP's vSMP Foundation (released in 2005) and Sun's <link xlink:type="simple" xlink:href="../832/10536832.xml">
Logical Domains</link> Hypervisor (released in 2005).</entry>
<entry level="1" type="indent">

A variation of this is embedding the hypervisor in the firmware of the platform, as is done in the case of <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../676/188676.xml">
Hitachi</link></company>
's Virtage hypervisor. <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../133/8412133.xml">
KVM</link></software>
, which turns a complete <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 kernel into a hypervisor, is also Type 1.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 A <it>Type 2</it> (or <it>hosted</it>) hypervisor is software that runs within an <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> environment. A "guest" operating system thus runs at the third level above the hardware.</entry>
<entry level="1" type="indent">

Examples include  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../257/8175257.xml">
VMware Server</link></software>
 (formerly known as GSX), <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../250/8175250.xml">
VMware Workstation</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../286/8562286.xml">
VMware Fusion</link></software>
, the <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../669/1465669.xml">
QEMU</link></causal_agent>
</copycat>
</person>
</physical_entity>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
's <link xlink:type="simple" xlink:href="../850/2786850.xml">
Virtual PC</link> and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../391/2785391.xml">
Microsoft Virtual Server</link></software>
 products, Sun's (formerly InnoTek) <link xlink:type="simple" xlink:href="../260/8934260.xml">
VirtualBox</link>, as well as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
 and <link xlink:type="simple" xlink:href="../788/8556788.xml">
Parallels Desktop</link>.</entry>
</list>
</p>
<p>

The term <it>hypervisor</it> apparently originated in <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
's CP-370 reimplementation of <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> for the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>, released in 1972 as <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link>. The term <it>hypervisor call</it>, or <it>hypercall</it>, referred to the <link xlink:type="simple" xlink:href="../546/1441546.xml">
paravirtualization</link> interface, by which a "guest" operating system could access services directly from the (higher-level) control program &ndash; analogous to making a "supervisor call" to the (same level) operating system. The term "<link xlink:type="simple" xlink:href="../761/41761.xml">
supervisor</link>" refers to the operating system <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>, which on IBM mainframes runs in <it>supervisor state</it>.</p>

</sec>
<sec>
<st>
Mainframe origins</st>
<p>

The first hypervisor providing <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link> was IBM's <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>, a one-off research system that began production use in <link xlink:type="simple" xlink:href="../749/34749.xml#xpointer(//*[./st=%22January%22])">
January 1967</link>, and which became the first version of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 operating system. CP-40 ran on a one-off <link xlink:type="simple" xlink:href="../294/29294.xml">
S/360-40</link> that was customized to support virtualization. Prior to this time, computer hardware had only been virtualized enough to allow multiple user applications to be run (see <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
 and <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link>). With CP-40, the hardware's <it>supervisor state</it> was virtualized as well, allowing multiple operating systems to run simultaneously.</p>
<p>

CP-40 was soon re-implemented (as <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link>) for the <link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link>, the first production computer system capable of <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link>. This machine was first shipped in 1966, and included page translation table hardware for virtual memory, and other techniques that allowed a <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link> of all kernel tasks, including I/O and interrupt handling. (Note that its "official" operating system, the ill-fated <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link>, did not employ full virtualization.) Both CP-40 and CP-67 began production use in 1967. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was available to IBM customers from 1968 to 1972, in source code form without support.</p>
<p>

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was part of IBM's attempt to build robust <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> systems for its <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframe</link> computers. By running multiple operating systems simultaneously, the hypervisor increased system robustness and stability: Even if one operating system crashed, the others would continue working without interruption. Indeed, this even allowed <link xlink:type="simple" xlink:href="../901/220901.xml#xpointer(//*[./st=%22Beta%22])">
beta</link> or experimental versions of operating systems &ndash; or even of new hardware<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> &ndash; to be deployed and debugged, without jeopardizing the stable main production system, and without requiring costly additional development systems.</p>
<p>

IBM's <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> series was announced in 1970 without any virtualization features, but these were added to the series in 1972, and have appeared in all successor systems. (All modern-day IBM mainframes, such as the <link xlink:type="simple" xlink:href="../088/3968088.xml">
zSeries</link> line, continue to be backwards-compatible with the 1960s-era IBM S/360 line.) The 1972 announcement also included <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link></O>
, a reimplementation of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 for the S/370. Unlike <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
, IBM provided support for this version (though it was still distributed in source code form for several releases). VM stands for <it><link xlink:type="simple" xlink:href="../353/32353.xml">
Virtual Machine</link></it>, emphasizing that all, and not just some, of the hardware interfaces are virtualized. Both VM and CP/CMS enjoyed early acceptance and rapid development by universities, corporate users, and <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> vendors, as well as within IBM. Users played an active role in ongoing development, anticipating trends seen in modern <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> projects. However, in a series of disputed and bitter battles, time-sharing lost out to batch processing through IBM political infighting, and VM remained IBM's "other" mainframe operating system for decades, losing over <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link>. It has enjoyed a resurgence of popularity and support in recent years as the current <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link> product, e.g. as the platform for <link xlink:type="simple" xlink:href="../604/1266604.xml">
Linux for zSeries</link>.</p>
<p>

As mentioned above, the VM control program includes a <it>hypervisor call</it> handler which intercepts DIAG ("Diagnose") instructions used within a virtual machine. This provides fast-path non-virtualized execution of file system access and other operations. (DIAG is a model-dependent privileged instruction, not used in normal programming, and thus is not virtualized. It is therefore available for use as a signal to the "host" operating system.) When first implemented in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 release 3.1, this use of DIAG provided an operating system interface that was analogous to the <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> SVC ("supervisor call") instruction, but that did not require altering or extending the system's virtualization of SVC.</p>

</sec>
<sec>
<st>
UNIX and Linux servers</st>
<p>

Several factors led to a resurgence in the use of <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> technology among <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 server vendors:</p>
<p>

<list>
<entry level="1" type="bullet">

 Expanding hardware capabilities, allowing more simultaneous work to be done per machine</entry>
<entry level="1" type="bullet">

 Efforts to control costs and simplify management through consolidation of servers</entry>
<entry level="1" type="bullet">

 The need to control large <link xlink:type="simple" xlink:href="../020/64020.xml">
multiprocessor</link> and <link xlink:type="simple" xlink:href="../896/18949896.xml">
cluster</link> installations, e.g. in <link xlink:type="simple" xlink:href="../929/264929.xml">
server farm</link>s and <link xlink:type="simple" xlink:href="../774/25774.xml">
render farm</link>s</entry>
<entry level="1" type="bullet">

 The improved security, reliability, and device independence possible from hypervisor architectures</entry>
<entry level="1" type="bullet">

 The desire to run complex, OS-dependent applications in different hardware or OS environments</entry>
</list>
</p>
<p>

The major <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> vendors, including <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
, <link xlink:type="simple" xlink:href="../973/13973.xml">
HP</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
, and <link xlink:type="simple" xlink:href="../013/28013.xml">
SGI</link>, have been selling virtualized hardware since before 2000. These have generally been large systems with hefty, server-class price tags (in the multi-million dollar range at the high end), although virtualization is also available on some mid-range systems, such as IBM's <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<digital_computer wordnetid="103196324" confidence="0.8">
<workstation wordnetid="104603399" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/39770.xml">
System-P</link></workstation>
</digital_computer>
</machine>
</device>
</instrumentality>
</artifact>
</computer>
 servers, <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun</link></institution>
</company>
's CoolThreads T1000, T2000 and T5x00 servers and <artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<link xlink:type="simple" xlink:href="../894/952894.xml">
HP 9000</link></commodity>
</merchandise>
</artifact>
 Superdome series. </p>
<p>

Multiple host operating systems have been modified to run as guest OSes on Sun's <link xlink:type="simple" xlink:href="../832/10536832.xml">
Logical Domains</link> Hypervisor.  As of late 2006, <link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 (Ubuntu and Gentoo), and <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
 have been ported to run on top of Hypervisor (and can all run simultaneously on the same processor, as fully-virtualized independent guest OSes).  Wind River "Carrier Grade Linux" also plans to run on Sun's Hypervisor.  Full virtualization on <link xlink:type="simple" xlink:href="../954/36954.xml">
SPARC</link> processors was not difficult because the SPARC architecture, since its inception in the mid-1980s, was deliberately kept clean of artifacts that would have impeded virtualization. (Compare with virtualization on x86 processors below)</p>
<p>

HP's technology to host multiple OS technology on its Itanium powered systems (Integrity) is called Integrity Virtual Machines (Integrity VM). Since Itanium is capable of running HP-UX, Linux, and Windows - these environments are also supported as virtual servers on HP's Integrity VM platform. The HP-UX operating system hosts the Integrity VM hypervisor layer which allows for many important features of HP-UX to be taken advantage of and provides major differentiation between this platform and other commodity platforms - such as processor hotswap, memory hotswap, and dyanmic kernel updates without system reboot.  HP also provides more rigid partitioning of their Integrity and HP9000 systems by way of VPAR and NPAR technology, the former offering shared resource partitioning and the later offering complete I/O and processing isolation. The flexibility of VSE has given way to its use more frequently in newer deployments.</p>
<p>

IBM provides non virtualization partition technology known as <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../383/2301383.xml">
logical partitioning</link></device>
</instrumentality>
</artifact>
 (LPAR) and applies to <link xlink:type="simple" xlink:href="../266/1856266.xml">
System/390</link>, <link xlink:type="simple" xlink:href="../088/3968088.xml">
zSeries</link>, <link xlink:type="simple" xlink:href="../770/39770.xml">
pSeries</link> and <link xlink:type="simple" xlink:href="../769/39769.xml">
iSeries</link> systems.</p>
<p>

Similar trends have been seen with x86/x64 server platforms, where virtualization efforts have been led by <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> projects such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
. These include hypervisors built on Linux and Solaris kernels as well as custom kernels. Since these technologies span from large systems down to desktops, they are described in the next section.</p>

</sec>
<sec>
<st>
PCs and desktop systems</st>
<p>

Interest in the high-profit server hardware market sector has led to the development of hypervisors for the Intel x86 instruction-set machines, including traditional desktop <link xlink:type="simple" xlink:href="../032/15032.xml">
PC</link>s. One of the early PC hypervisors was the commercial <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
, introduced in 1998.  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../877/3483877.xml">
Parallels, Inc.</link></company>
 introduced <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
, which is primarily used on PCs, in 2005 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../788/8556788.xml">
Parallels Desktop for Mac</link></software>
, which runs on Mac OS X, in 2006.</p>
<p>

The x86 architecture used in most PC systems is particularly difficult to virtualize. Full virtualization (presenting the illusion of a complete set of standard hardware) on x86 has significant costs in hypervisor complexity and runtime performance.  </p>
<p>

An alternative approach requires that the guest operating system be modified to make system calls to the hypervisor, rather than executing machine I/O instructions which are then simulated by the hypervisor. 
This is called <link xlink:type="simple" xlink:href="../546/1441546.xml">
paravirtualization</link> in <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
, a "hypercall" in <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
, and a "DIAGNOSE code" in IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
. VMware supplements the slowest rough corners of virtualization with device drivers for the guest.  All are really the same thing, a system call to the hypervisor below. Some microkernels such as <link xlink:type="simple" xlink:href="../028/21028.xml">
Mach</link> and <link xlink:type="simple" xlink:href="../763/95763.xml">
L4</link> are flexible enough such that "paravirtualization" of guest operating systems is possible.</p>
<p>

CPU vendors have added hardware virtualization assistance to their products. <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link>'s is called VT (codenamed <link>
Vanderpool</link>), <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
AMD</link>'s is referred to as AMD Virtualization or AMD-V (codename: <link>
Pacifica</link>). These extensions address the parts of x86 that are difficult or inefficient to virtualize, providing additional support to the hypervisor. This enables simpler virtualization code and a higher performance for full virtualization.</p>
<p>

Others, like <link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link>, are implemented as software-only <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>s. Xen runs on a normal host operating system such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, and is able to run both paravirtualized and fully virtualized (i.e. unmodified) operating systems with the help of the hardware virtualization extensions <link xlink:type="simple" xlink:href="../179/996179.xml">
Intel VTx</link>. In fact, Xen has successfully demonstrated Windows XP running unmodified. The Xen distribution already contains versions of <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../495/21495.xml">
NetBSD</link>, and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/24226.xml">
Plan 9 from Bell Labs</link></O>
 that have been so modified. User programs will continue to work on Xen without change. Also, Xen has been re-implemented on the <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link> operating system as of build 75 — the result is called <software wordnetid="106566077" confidence="0.9508927676800064">
<link>
Sun xVM Server</link></software>
.</p>
<p>

In June 2008, Microsoft delivered a new Type 1 hypervisor called <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../084/11168084.xml">
Hyper-V</link></part>
</component>
</concept>
</idea>
 (codenamed "Viridian" and previously referred to as Windows Server virtualization); the design features OS integration at the lowest level.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> New versions of the <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows operating system</link> beginning with <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 include extensions to boost performance when running on top of the Viridian hypervisor.</p>

</sec>
<sec>
<st>
Embedded systems</st>

<p>

Virtual machines have recently appeared in <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded systems</link>, such as <link xlink:type="simple" xlink:href="../137/19644137.xml">
mobile phones</link>. This is driven by the desire to provide a high-level operating-system interface for application programming, such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 or <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, while at the same time maintaining traditional <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link> (RTOS) APIs. The low-level RTOS environments need to be retained for legacy support, and because the real-time capabilities of high-level OSes are insufficient for many embedded applications. </p>
<p>

Hypervisors for embedded use must therefore be <link xlink:type="simple" xlink:href="../767/25767.xml">
real-time</link> capable, a design criterion not present for hypervisors used in other domains. The resource-constrained nature of many embedded systems, especially battery-powered mobile systems, imposes a further requirement for small memory size and low overhead. Finally, in contrast to the ubiquity of the x86 architecture in the PC world, the embedded world uses a wider variety of architectures. Support for virtualization requires <link xlink:type="simple" xlink:href="../373/515373.xml">
memory protection</link> (in the form of a <link xlink:type="simple" xlink:href="../112/177112.xml">
memory management unit</link> or at least a memory protection unit) and a distinction between <link xlink:type="simple" xlink:href="../467/93467.xml">
user mode</link> and <link xlink:type="simple" xlink:href="../185/3446185.xml">
privileged mode</link>, which rules out most <link xlink:type="simple" xlink:href="../017/21017.xml">
microcontrollers</link>. This still leaves x86, <link xlink:type="simple" xlink:href="../170/20170.xml">
MIPS</link>, <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../558/60558.xml">
ARM</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 and <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link> as widely-deployed architectures on medium- to high-end embedded systems.</p>
<p>

As embedded-system manufacturers usually have source code to their operating systems, there is less need for <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link> in this space. Instead, the performance advantages of <link xlink:type="simple" xlink:href="../546/1441546.xml">
paravirtualization</link> make this usually the virtualization technology of choice. Nevertheless, ARM has recently added a limited form of support for full virtualization (single guest only) with their TrustZone technology.</p>
<p>

Other differences between virtualization in server/desktop and embedded environments are requirements for efficient sharing of resources across virtual machines, high-bandwidth, low-latency inter-VM communication, a global view of scheduling and power management, and fine-grained information-flow control.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

The first (and so far only) hypervisor deployed in a commercially-sold mobile embedded system (a <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../703/59703.xml">
Toshiba</link></company>
 mobile phone)  is <weblink xlink:type="simple" xlink:href="http://okl4.org">
OKL4</weblink>, a commercial member of the <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel family</link>. It supports x86, ARM and MIPS processors.</p>
<p>

Other hypervisors for embedded use include TRANGO, which supports ARM, MIPS and PowerPC.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> and x86-based <link xlink:type="simple" xlink:href="../281/18883281.xml">
LynxSecure</link> from <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../123/11905123.xml">
LynuxWorks</link></institution>
</company>
.</p>

</sec>
<sec>
<st>
Rootkits</st>
<p>

A <link xlink:type="simple" xlink:href="../942/223942.xml">
rootkit</link> can in theory install itself as a hypervisor, and thereby intercept any operations of the original operating system, which unknowingly becomes a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>.  The concept has been demonstrated via the "SubVirt" laboratory rootkit, developed jointly by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 and <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../740/31740.xml">
University of Michigan</link></university>
 researchers<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>, as well as <link xlink:type="simple" xlink:href="../272/6669272.xml">
 Blue Pill</link>.  Security best practice therefore is to disable hardware virtualization features at BIOS level on machines that will not be using this technology.</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<it>IBM Systems Virtualization</it>, IBM Corporation, Version 2 Release 1 (2005), available on-line at <weblink xlink:type="simple" xlink:href="http://publib.boulder.ibm.com/infocenter/eserver/v1r2/topic/eicay/eicay.pdf">
publib.boulder.ibm.com</weblink> &ndash; description of basic concepts</entry>
<entry id="2">
See <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link> for virtual hardware simulation in the development of the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link></entry>
<entry id="3">
Peter Galli. <weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0,1895,1946420,00.asp">
"Microsoft Sheds More Light on Windows Hypervisor Technology."</weblink> April 5, 2006.</entry>
<entry id="4">
</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.trango-vp.com/download/TGO-TEC-0340-TRANGO_GPL.pdf">
Reconcile GPL Software and Proprietary Code on Embedded Systems with a Secure Hypervisor</weblink>, TRANGO Virtual Processors, August 2007</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://www.eecs.umich.edu/virtual/papers/king06.pdf">
SubVirt: Implementing malware with virtual machines</weblink>".&#32;  <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../740/31740.xml">
University of Michigan</link></university>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
&#32;(2006-04-03).&#32;Retrieved on <link>
2008-09-15</link>.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../833/1582833.xml">
Comparison of virtual machines</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link></entry>
<entry level="1" type="bullet">

 <link>
Nanokernel</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/windowsserversystem/virtualserver/default.mspx">
Microsoft Virtual Server 2005 R2 SP1</weblink> from Microsoft</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://h71028.www7.hp.com/enterprise/cache/258348-0-0-0-121.html">
HP Virtual Server Environment</weblink> from Hewlett Packard Company</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.oracle.com/technology/tech/virtualization/index.html">
OracleVM</weblink> from Oracle </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/secure_systems_department/projects/hypervisor/">
sHype</weblink> from IBM Research</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.xen.org">
Xen</weblink> from the open source Xen.org community</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://portal.ok-labs.com">
OKL4</weblink> open-source hypervisor based on <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel</link> technology from <weblink xlink:type="simple" xlink:href="http://ok-labs.com">
Open Kernel Labs</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ghs.com/products/rtos/integrity_pc.html">
INTEGRITY Padded Cell</weblink> secure, real-time hypervisor from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../263/958263.xml">
Green Hills Software</link></company>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtuallogix.com/">
VirtualLogix</weblink> Trusted Real-Time VirtualizationTM for Connected Devices from VirtualLogix</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.trango-vp.com/">
TRANGO</weblink> real-time and secure hypervisor for embedded CPUs, from TRANGO Virtual Processors</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.real-time-systems.com/real-time_hypervisor/index.php">
RTS Hypervisor</weblink> real-time hypervisor for x86 CPUs, from Real-Time Systems</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.lynuxworks.com/rtos/secure-rtos-kernel.php">
LynxSecure</weblink> real-time separation kernel and hypervisor from <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../123/11905123.xml">
LynuxWorks</link></institution>
</company>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://openxvm.org/">
OpenxVM Core Projects</weblink> xVM, from SUN, is the intersection of virtualization and management</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualizacion.com">
Virtualization,ParaVirtualization,FullVirtualization </weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualbox.org/">
Virtual Box</weblink> Full virtualizer for x86 hardware</entry>
</list>
</p>



</sec>
</bdy>
</article>
