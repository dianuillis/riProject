<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 01:45:11[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Test OS</title>
<id>12981411</id>
<revision>
<id>243972246</id>
<timestamp>2008-10-08T19:54:52Z</timestamp>
<contributor>
<username>Fabrictramp</username>
<id>1997572</id>
</contributor>
</revision>
<categories>
<category>Free software operating systems</category>
<category>Articles with invalid date parameter in template</category>
<category>All articles lacking sources</category>
<category>Articles lacking reliable references from August 2008</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Question_book-new.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article or section needs  that appear in reliable, third-party publications.</b>
s and sources affiliated with the subject of the article are generally not sufficient for a Wikipedia article. Please include more appropriate  from , or discuss the issue on the talk page. <it>(August 2008)''</it></col>
</row>
</table>



<p>

<b>Test OS</b> is an <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> project, founded to provide an educational <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> which can be used also as a research kernel, developed by a group of students of the National Institute of Computer (INI)- <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../358/358.xml">
Algeria</link></country>
. The kernel is now in an early development phase.</p>

<sec>
<st>
TestOs characteristics</st>

<ss1>
<st>
 Algorithm testing mechanism</st>
<p>

The most important future in TestOs kernel is the ability to test your algorithm and change the algorithm being used by the kernel « <link xlink:type="simple" xlink:href="../147/348147.xml">
on the fly</link> » (i.e. while the kernel is running), this feature is possible via loading your algorithm into kernel as a kernel module and then activating this algorithm using a command from the shell.</p>
<p>

So how it works? Let's say you want to implement the FiFo algorithm for <link xlink:type="simple" xlink:href="../920/231920.xml">
process scheduling</link>, so you need to :
<list>
<entry level="1" type="number">

 take a look at the functions (or « <link xlink:type="simple" xlink:href="../908/102908.xml">
system call</link>s ») we provide to manipulate the ready process Queue;</entry>
<entry level="1" type="number">

 Use these functions to write your FiFo scheduler in C (you must respect some standards that we present in the documentation);</entry>
<entry level="1" type="number">

 compile your module;</entry>
<entry level="1" type="number">

 From the ToS command line upload the module into the Kernel space (currently all the Tos is in kernel space);</entry>
<entry level="1" type="number">

 Change the scheduler algorithm (from the shell) to be the FiFo algorithm;</entry>
<entry level="1" type="number">

 Test performance and compare the result with other results (that you obtained from other tests or that we provide with the testOs by default).</entry>
</list>
</p>

</ss1>
<ss1>
<st>
On the fly kernel configuration</st>
<p>

We provide also the possibility for users to ReConfigure the kernel and to Set some of its parameters while it's running from the shell (via simple commands), for example you can change the quantum used by the scheduler for all processes or set the quantum of a process to whatever you want, you can change the scheduler from a preemptive scheduler to a non-preemptive scheduler and so on; of course changing the kernel parameters must be done carefully otherwise the kernel may crash, (in the future we'll do some work here to make the kernel always under control even after introducing bad parameters). You can even load a configuration file for the kernel, so that kernel takes its parameters from this file.</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://testos.pbwiki.com/">
Test Os</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://baghdadi.olympe-network.com/public/TestOs_0.1.5.pdf">
Documentation</weblink></entry>
</list>
</p>

</sec>
</bdy>
</article>
