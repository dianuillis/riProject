<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:24:49[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<idea  confidence="0.8" wordnetid="105833840">
<concept  confidence="0.8" wordnetid="105835747">
<property  confidence="0.8" wordnetid="105849040">
<feature  confidence="0.8" wordnetid="105849789">
<header>
<title>Full text search</title>
<id>1315248</id>
<revision>
<id>244093696</id>
<timestamp>2008-10-09T09:26:31Z</timestamp>
<contributor>
<username>SmackBot</username>
<id>433328</id>
</contributor>
</revision>
<categories>
<category>Wikipedia articles needing factual verification since October 2008</category>
<category>All pages needing cleanup</category>
<category>Information retrieval</category>
<category>All pages needing factual verification</category>
<category>Text editor features</category>
<category>Articles with invalid date parameter in template</category>
<category>Searching</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../640/731640.xml">
text retrieval</link>, <b>full text search</b> refers to a technique for searching a <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link>-stored <link xlink:type="simple" xlink:href="../228/161228.xml">
document</link> or <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link>. In a full text search, the <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link> examines all of the words in every stored document as it tries to match search words supplied by the user. Full-text searching techniques became common in online <link xlink:type="simple" xlink:href="../929/4629929.xml">
bibliographic database</link>s in the 1970s&#91;&#93;
,. Most Web sites and application programs (such as <link xlink:type="simple" xlink:href="../425/33425.xml">
word processing</link> software) provide full text search capabilities. Some Web search engines, such as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../024/366024.xml">
AltaVista</link></company>
 employ full text search techniques, while others index only a portion of the Web pages examined by its indexing system.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
<sec>
<st>
Indexing</st>
<p>

When dealing with a small number of documents it is possible for the full-text search engine to directly scan the contents of the documents with each <link xlink:type="simple" xlink:href="../390/679390.xml">
query</link>, a strategy called <link>
serial scanning</link>.  This is what some rudimentary tools, such as <link xlink:type="simple" xlink:href="../642/46642.xml">
grep</link>, do when searching.</p>
<p>

However, when the number of documents to search is potentially large or the quantity of search queries to perform is substantial the problem of full text search is often divided into two tasks: indexing and searching.  The indexing stage will scan the text of all the documents and build a list of search terms, often called an <link xlink:type="simple" xlink:href="../386/7602386.xml">
index</link>, but more correctly named a <link xlink:type="simple" xlink:href="../111/2937111.xml">
concordance</link>.  In the search stage, when performing a specific query, only the index is referenced rather than the text of the original documents.</p>
<p>

The indexer will make an entry in the index for each term or word found in a document and possibly its relative position within the document.  Usually the indexer will ignore <link xlink:type="simple" xlink:href="../600/1015600.xml">
stop words</link>, such as the English "the", which are both too common and carry too little meaning to be useful for searching.  Some indexers also employ language-specific <link xlink:type="simple" xlink:href="../964/475964.xml">
stemming</link> on the words being indexed, so for example any of the words "drives", "drove", or "driven" will be recorded in the index under a single concept word "drive".</p>

</sec>
<sec>
<st>
The precision vs. recall tradeoff</st>

<p>

Due to the ambiguities of <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link>, a full text search typically produces a retrieval list that has low precision: most of the items retrieved are irrelevant. <link xlink:type="simple" xlink:href="../719/1850719.xml">
Controlled-vocabulary</link> searching solves this problem by <link xlink:type="simple" xlink:href="../086/1707086.xml">
tagging</link> the documents in such a way that the ambiguities are eliminated. However, a controlled vocabulary search may have low recall: it may fail to retrieve some documents that are actually relevant to the search question. Despite the presence of many irrelevant documents in a free text search's retrieval list, a free text search may be able to locate a document that a controlled vocabulary search failed to retrieve.</p>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../887/14343887.xml">
Precision and recall</link></it>
</indent>

</p>
</sec>
<sec>
<st>
The false positive problem</st>

<p>

Free text searching is likely to retrieve many documents that are not <link xlink:type="simple" xlink:href="../688/442688.xml">
relevant</link> to the <it>intended</it> search question. Such documents are called <link>
false positive</link>s. The retrieval of irrelevant documents is often caused by the inherent ambiguity of <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link>.</p>
<p>

Certain clustering techniques based on <link xlink:type="simple" xlink:href="../571/49571.xml">
Bayesian</link> algorithms (similar to <link xlink:type="simple" xlink:href="../929/515929.xml">
spam filter</link> in gmail) can help reduce the false positive errors. So if the search term is "football", these techniques can categorize the document/data universe into say "American football", "corporate football" etc. Depending on the occurrences of words in a document, it can fall into one of the categories or more. These techniques are being extensively deployed in the e-discovery domain.</p>

</sec>
<sec>
<st>
Improving the performance of full text searching</st>

<p>

The deficiencies of free text searching have been addressed in two ways: By providing users with tools that enable them to express their search questions more precisely, and by developing new search algorithms that improve retrieval precision.</p>

<ss1>
<st>
Improved querying tools</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../138/17138.xml">
Keyword</link>s. Document creators (or trained indexers) are asked to supply a list of words that describe the subject of the text, including synonyms of words that describe this subject. Keywords improve recall, particularly if the keyword list includes a search word that is not in the document text.</entry>
<entry level="1" type="bullet">

 <link>
Field-restricted search</link>. Some search engines enable users to limit free text searches to a particular <link xlink:type="simple" xlink:href="../073/491073.xml">
field</link> within a stored <link>
data record</link>, such as "Title" or "Author."</entry>
<entry level="1" type="bullet">

 <link>
Boolean queries</link>. Searches that use <link xlink:type="simple" xlink:href="../335/212335.xml">
Boolean</link> operators (for example, "encyclopedia" AND "online" NOT "Encarta") can dramatically increase the precision of a free text search. The AND operator says, in effect, "Do not retrieve any document unless it contains both of these terms." The NOT operator says, in effect, "Do not retrieve any document that contains this word." If the retrieval list retrieves too few documents, the OR operator can be used to increase <link xlink:type="simple" xlink:href="../341/11705341.xml">
recall</link>; consider, for example, "encyclopedia" AND "online" OR "Internet" NOT "Encarta". This search will retrieve documents about online encyclopedias that use the term "Internet" instead of "online."  This increase in precision is very commonly counter-productive since it usually comes with a dramatic loss of recall.  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../390/4840390.xml">
Phrase search</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. A phrase search matches only those documents that contain a specified phrase, such as "Wikipedia, the free encyclopedia."</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../245/257245.xml">
Concordance search</link>. A concordance search produces an alphabetical list of all principal words that occur in a <link xlink:type="simple" xlink:href="../930/164930.xml">
text</link> with their immediate context.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../747/7823747.xml">
Proximity search</link>. A phrase search matches only those documents that contain two or more words that are separated by a specified number of words; a search for "Wikipedia" WITHIN2 "free" would retrieve only those documents in which the words "Wikipedia" and "free" occur within two words of each other.</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/25717.xml">
Regular expression</link></language>
</subject>
</message>
. A regular expression employs a complex but powerful querying <link xlink:type="simple" xlink:href="../860/26860.xml">
syntax</link> that can be used to specify retrieval conditions with precision.</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../869/41869.xml">
Wildcard search</link></format>
</information>
</message>
. A search that substitutes one or more characters in a search query for a wildcard character such as an <link xlink:type="simple" xlink:href="../152/59152.xml">
asterisk</link>. For example, in the search function in <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../287/20287.xml">
Microsoft Word</link></software>
, using the asterisk in the search query "s*n" will find "sin", "son", "sun", etc. in a text.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Improved search algorithms</st>

<p>

Technological advances have greatly improved the performance of free text searching. For example, Google's <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../724/23724.xml">
PageRank</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 algorithm gives more prominence to documents to which other Web pages have linked. This algorithm dramatically improves users' perception of search <link xlink:type="simple" xlink:href="../572/41572.xml">
precision</link>, a fact that explains its popularity among Internet users. See <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link> for additional examples.</p>

</ss1>
<ss1>
<st>
Text retrieval software</st>
<p>

The following is a partial list of available software products whose predominant purpose is to perform full text indexing and searching.  Some of these are accompanied with detailed descriptions of their theory of operation or internal algorithms, which can provide additional insight into how full text search may be accomplished.
<list>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../916/670916.xml">
Autonomy Corporation</link></company>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../043/10458043.xml">
Dieselpoint</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../735/9079735.xml">
Endeca</link></entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../908/928908.xml">
Fast Search &amp; Transfer</link></company>
 </entry>
<entry level="1" type="bullet">

</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../521/93521.xml">
Inktomi</link></entry>
<entry level="1" type="bullet">

<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../923/522923.xml">
Lucene</link></room>
</library>
</area>
</artifact>
</structure>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../043/7392043.xml">
mnoGoSearch</link></entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../919/12676919.xml">
Sphinx</link></software>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../756/8611756.xml">
Swish-e</link></entry>
<entry level="1" type="bullet">

<link>
Viv&amp;iacute;simo</link></entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../457/5637457.xml">
Xapian</link></software>
</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
Notes</st>

<p>

<reflist>
<entry id="1">
In practice, it may be difficult to determine how a given search engine works. The <link xlink:type="simple" xlink:href="../249/28249.xml">
search algorithm</link>s actually employed by Web search services are seldom fully disclosed out of fear that Web entrepreneurs will use <link xlink:type="simple" xlink:href="../946/187946.xml">
search engine optimization</link> techniques to improve their prominence in retrieval lists.</entry>
<entry id="2">
Studies have repeatedly shown that most users do not understand the negative impacts of boolean queries.<weblink xlink:type="simple" xlink:href="http://eprints.cs.vt.edu/archive/00000112/">
http://eprints.cs.vt.edu/archive/00000112/</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../719/1850719.xml">
Controlled vocabulary</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../271/15271.xml">
Information retrieval</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../023/4059023.xml">
Search engine</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../386/7602386.xml">
Search engine indexing</link> - how search engines generate indices to support full text searching</entry>
</list>
</p>


</sec>
</bdy>
</feature>
</property>
</concept>
</idea>
</article>
