<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:26:56[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<information  confidence="0.8" wordnetid="106634376">
<protocol  confidence="0.8" wordnetid="106665108">
<standard  confidence="0.8" wordnetid="107260623">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<format  confidence="0.8" wordnetid="106636806">
<system_of_measurement  confidence="0.8" wordnetid="113577171">
<header>
<title>Hypertext Transfer Protocol</title>
<id>13443</id>
<revision>
<id>244580731</id>
<timestamp>2008-10-11T15:20:03Z</timestamp>
<contributor>
<username>Magnus Manske</username>
<id>4</id>
</contributor>
</revision>
<categories>
<category>Web browsers</category>
<category>Network protocols</category>
<category>HTTP</category>
<category>World Wide Web Consortium standards</category>
<category>Internet protocols</category>
<category>Open formats</category>
<category>World Wide Web</category>
<category>Application layer protocols</category>
<category>Internet</category>
</categories>
</header>
<bdy>

<b>Hypertext Transfer Protocol</b> (<b>HTTP</b>) is a <link xlink:type="simple" xlink:href="../235/83235.xml">
communications protocol</link> for the transfer of information on the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>. Its use for retrieving inter-linked text documents (<link xlink:type="simple" xlink:href="../460/13460.xml">
hypertext</link>) led to the establishment of the <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
World Wide Web</link></invention>
.<p>

HTTP development was coordinated by the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../149/33149.xml">
World Wide Web Consortium</link></company>
  and the <link xlink:type="simple" xlink:href="../285/15285.xml">
Internet Engineering Task Force</link> (IETF), culminating in the publication of a series of <link xlink:type="simple" xlink:href="../540/25540.xml">
Request for Comments</link> (RFCs), most notably RFC 2616 (June 1999), which defines HTTP/1.1, the version of HTTP in common use.</p>
<p>

HTTP is a request/response standard between a <link xlink:type="simple" xlink:href="../970/667970.xml">
client</link> and a <link xlink:type="simple" xlink:href="../455/33455.xml">
server</link>. A client is the end-user, the server is the <link xlink:type="simple" xlink:href="../898/33898.xml">
web site</link>. The client making a HTTP request - using a <link xlink:type="simple" xlink:href="../173/33173.xml">
web browser</link>, <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../120/33120.xml">
spider</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, or other end-user tool - is referred to as the <it><link xlink:type="simple" xlink:href="../303/487303.xml">
user agent</link></it>. The responding server - which stores or creates <it>resources</it> such as <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../191/13191.xml">
HTML</link></format>
 files and images - is called the <it>origin server</it>. In between the user agent and origin server may be several intermediaries, such as <link xlink:type="simple" xlink:href="../768/78768.xml">
proxies</link>, <link xlink:type="simple" xlink:href="../166/9953166.xml">
gateways</link>, and <link xlink:type="simple" xlink:href="../738/1272738.xml">
tunnels</link>. HTTP is not constrained to using <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../476/15476.xml">
TCP/IP</link></rule>
</direction>
</protocol>
</message>
 and its supporting layers, although this is its most popular application on the Internet. Indeed HTTP can be "implemented on top of any other protocol on the Internet, or on other networks. HTTP only presumes a reliable transport; any protocol that provides such guarantees can be used."</p>
<p>

Typically, an HTTP client initiates a request. It establishes a <link xlink:type="simple" xlink:href="../538/30538.xml">
Transmission Control Protocol</link> (TCP) connection to a particular <link xlink:type="simple" xlink:href="../331/4971331.xml">
port</link> on a host (port 80 by default; see <link xlink:type="simple" xlink:href="../136/347136.xml">
List of TCP and UDP port numbers</link>). An HTTP server listening on that port waits for the client to send a request message. Upon receiving the request, the server sends back a status line, such as "HTTP/1.1 200 OK", and a message of its own, the body of which is perhaps the requested file, an error message, or some other information.</p>
<p>

The reason that HTTP uses <link xlink:type="simple" xlink:href="../538/30538.xml">
TCP</link> and not <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../929/31929.xml">
UDP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 is because much data must be sent for a webpage, and TCP provides transmission control, presents the data in order, and provides error correction. See the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link>
difference between TCP and UDP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
.</p>
<p>

<link xlink:type="simple" xlink:href="../557/2822557.xml">
Resources</link> to be accessed by HTTP are identified using <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/32146.xml">
Uniform Resource Identifier</link></system_of_measurement>
</standard>
s (URIs) (or, more specifically, <link xlink:type="simple" xlink:href="../277/32277.xml">
Uniform Resource Locator</link>s (URLs)) using the http: or <link xlink:type="simple" xlink:href="../586/13586.xml">
https</link> <link xlink:type="simple" xlink:href="../915/2767915.xml">
URI scheme</link>s.</p>

<p>

<table style="float:right; margin:0 0 1em 1em; width: 19em; font-size:95%;" class="navbox">
<row>
<header style="background:#adb">
 The <link xlink:type="simple" xlink:href="../476/15476.xml">
TCP/IP model</link>(RFC 1122)</header>
</row>
<row>
<header style="background:#cfc">
 <link xlink:type="simple" xlink:href="../179/172179.xml">
Application Layer</link></header>
</row>
<row>
<col><p>

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../893/38893.xml">
BGP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../622/8622.xml">
DHCP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
DNS</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../289/53289.xml">
FTP</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../794/12794.xml">
Gopher</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../049/2365049.xml">
GTP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../443/13443.xml">
HTTP</link></system_of_measurement>
</format>
</rule>
</direction>
</standard>
</protocol>
</information>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../837/14837.xml">
IMAP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <social_group wordnetid="107950920" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<community wordnetid="108223802" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../730/14730.xml">
IRC</link></group>
</community>
</gathering>
</social_group>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../004/173004.xml">
NNTP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../886/159886.xml">
NTP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/23062.xml">
POP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/43389.xml">
RIP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../346/26346.xml">
RPC</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../661/1003661.xml">
RTCP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../163/26163.xml">
RTP</link></rule>
</direction>
</concept>
</idea>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../162/26162.xml">
RTSP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·    <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../702/28702.xml">
SDP</link></system_of_measurement>
</request>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../684/28684.xml">
SIP</link></rule>
</direction>
</concept>
</idea>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml">
SMTP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../710/41710.xml">
SNMP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../215/29215.xml">
SOAP</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/28814.xml">
SSH</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../813/187813.xml">
SSL</link> &nbsp;· <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../602/937602.xml">
STUN</link></rule>
</direction>
</concept>
</idea>
</protocol>
</message>
&nbsp;· <link xlink:type="simple" xlink:href="../062/31062.xml">
Telnet</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 &nbsp;· <link xlink:type="simple" xlink:href="../455/192455.xml">
XMPP</link> &nbsp;·    
Application layer protocols|(more)</p>
</col>
</row>
<row>
<header style="background:#cfc">
 <link xlink:type="simple" xlink:href="../145/146145.xml">
Transport Layer</link></header>
</row>
<row>
<col>
 <link xlink:type="simple" xlink:href="../538/30538.xml">
TCP</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../929/31929.xml">
UDP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../423/1017423.xml">
DCCP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../896/404896.xml">
SCTP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../171/618171.xml">
RSVP</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../470/309470.xml">
ECN</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  
Transport layer protocols|(more)</col>
</row>
<row>
<header style="background:#cfc">
 <link xlink:type="simple" xlink:href="../736/11207736.xml">
Internet Layer</link></header>
</row>
<row>
<col>
 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/15323.xml">
IP</link></rule>
</direction>
</protocol>
</message>
 (<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../317/15317.xml">
IPv4</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../318/15318.xml">
IPv6</link></rule>
</direction>
</protocol>
</message>
)&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../107/15107.xml">
ICMP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../232/5223232.xml">
ICMPv6</link></rule>
</direction>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../654/236654.xml">
IGMP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../342/43342.xml">
IPsec</link></rule>
</direction>
</protocol>
</message>
&nbsp;· 
Internet Layer protocols|(more)</col>
</row>
<row>
<header style="background:#cfc">
 <link xlink:type="simple" xlink:href="../777/18419777.xml">
Link Layer</link></header>
</row>
<row>
<col>
 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../986/47986.xml">
ARP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../720/62720.xml">
RARP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../012/2099012.xml">
NDP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../388/43388.xml">
OSPF</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../738/1272738.xml">
Tunnels</link> &nbsp;·  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../472/207472.xml">
Media Access Control</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
Device Driver</link>s &nbsp;·  
Link protocols|(more)</col>
</row>


</table>

</p>
<sec>
<st>
Request message</st>
<p>

The request message consists of the following:</p>
<p>

<list>
<entry level="1" type="bullet">

 Request line, such as GET /images/logo.gif HTTP/1.1, which requests the file logo.gif from the /images directory</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../156/13106156.xml">
Headers</link>, such as Accept-Language: en</entry>
<entry level="1" type="bullet">

 An empty line</entry>
<entry level="1" type="bullet">

 An optional message body</entry>
</list>
</p>
<p>

The request line and headers must all end with  (that is, a <link xlink:type="simple" xlink:href="../770/238770.xml">
carriage return</link> followed by a <link xlink:type="simple" xlink:href="../775/238775.xml">
line feed</link>). The empty line must consist of only  and no other <link xlink:type="simple" xlink:href="../700/2956700.xml">
whitespace</link>. In the HTTP/1.1 protocol, all headers except Host are optional.</p>
<p>

A request line containing only the path name is accepted by servers to maintain compatibility with HTTP clients before the HTTP/1.0 specification.</p>

</sec>
<sec>
<st>
Request methods</st>
<p>

<image location="right" width="150px" src="Http_request_telnet_ubuntu.png" type="thumb">
<caption>

A HTTP request made using telnet. The request, response headers and response body are highlighted.
</caption>
</image>

HTTP defines eight methods (sometimes referred to as "verbs") indicating the desired action to be performed on the identified <b>resource</b>.</p>
<p>

<list>
<entry level="1" type="definition">

 HEAD</entry>
<entry level="1" type="indent">

 Asks for the response identical to the one that would correspond to a GET request, but without the response body. This is useful for retrieving meta-information written in response headers, without having to transport the entire content.</entry>
<entry level="1" type="definition">

 GET</entry>
<entry level="1" type="indent">

 Requests a representation of the specified resource. By far the most common method used on the Web today. Should not be used for operations that cause side-effects (using it for actions in <link xlink:type="simple" xlink:href="../311/288311.xml">
web application</link>s is a common misuse). See <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Safe+methods%22])">
safe methods</link> below. </entry>
<entry level="1" type="definition">

 POST</entry>
<entry level="1" type="indent">

 Submits data to be processed (e.g. from an <link xlink:type="simple" xlink:href="../674/3422674.xml">
HTML form</link>) to the identified resource. The data is included in the body of the request. This may result in the creation of a new resource or the updates of existing resources or both.</entry>
<entry level="1" type="definition">

 PUT</entry>
<entry level="1" type="indent">

 Uploads a representation of the specified resource.</entry>
<entry level="1" type="definition">

 DELETE</entry>
<entry level="1" type="indent">

 Deletes the specified resource.</entry>
<entry level="1" type="definition">

 TRACE</entry>
<entry level="1" type="indent">

 Echoes back the received request, so that a client can see what intermediate servers are adding or changing in the request.</entry>
<entry level="1" type="definition">

 OPTIONS</entry>
<entry level="1" type="indent">

 Returns the HTTP methods that the server supports for specified <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>. This can be used to check the functionality of a web server by requesting '*' instead of a specific resource.</entry>
<entry level="1" type="definition">

 CONNECT</entry>
<entry level="1" type="indent">

 Converts the request connection to a transparent <link xlink:type="simple" xlink:href="../738/1272738.xml">
TCP/IP tunnel</link>, usually to facilitate <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
SSL</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
-encrypted communication (HTTPS) through an unencrypted HTTP <link xlink:type="simple" xlink:href="../768/78768.xml">
proxy</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></entry>
</list>
</p>
<p>

HTTP servers are required to implement at least the GET and HEAD methods<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and, whenever possible, also the OPTIONS method.</p>


<ss1>
<st>
Safe methods</st>
<p>

Some methods (e.g. HEAD, GET, OPTIONS, and TRACE) are defined as <it>safe</it>, which means they are intended only for information retrieval and should not change the state of the server (in other words, they should not have <link xlink:type="simple" xlink:href="../519/29519.xml">
side effects</link>). Repetition of the same GET request should therefore be harmless. Repetition of unsafe methods (such as POST, PUT and DELETE) should draw special attention, typically as a dialog box requesting confirmation of the action. This is because repeated requests can cause side effects, such as unwanted duplication of a transaction.</p>
<p>

Despite the prescribed safety of <it>GET</it> requests, in practice their handling by the server is not technically limited in any way, and careless or deliberate programming can just as easily (or more easily, due to lack of user agent precautions) cause non-trivial changes on the server. This is discouraged, because it can cause problems for <link>
Web caching</link>, <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engines</link> and other automated agents, which can make unintended changes on the server. Another case is that a GET request may cause the server to create a cache space.</p>

</ss1>
<ss1>
<st>
Idempotent methods and web applications</st>
<p>

Methods PUT and DELETE are defined to be <link xlink:type="simple" xlink:href="../972/14972.xml">
idempotent</link>, meaning that multiple identical requests should have the same effect as a single request. Methods GET, HEAD, OPTIONS and TRACE, being prescribed as safe, should be idempotent. </p>
<p>

The RFC allows a user-agent, such as a browser, to assume that any safe method can be retried without informing the user. This is done to improve the user experience when connecting to unresponsive or heavily-loaded web servers.</p>
<p>

However, note that idempotence is not enforced by the protocol or web server. It is perfectly possible to write a web application in which (for example) a database insert or update is triggered by a GET request - this would be a very normal example of what the spec refers to as "a change in server state." </p>
<p>

This misuse of GET can combine with the retry behavior above to produce erroneous transactions. For this reason GET should be avoided for anything transactional.</p>

</ss1>
</sec>
<sec>
<st>
HTTP versions</st>
<p>

HTTP has evolved into multiple, mostly backwards-compatible protocol versions. RFC 2145 describes the use of HTTP version numbers. The client tells in the beginning of the request the version it uses, and the server uses the same or earlier version in the response.</p>
<p>

<list>
<entry level="1" type="definition">

 0.9</entry>
<entry level="1" type="indent">

 Deprecated. Supports only one command, GET, which does not specify the HTTP version. Does not support headers. Since this version does not support POST, the client cannot pass much information to the server.</entry>
<entry level="1" type="definition">

 HTTP/1.0 (May 1996)</entry>
<entry level="1" type="indent">

 This is the first protocol revision to specify its version in communications and is still in wide use, especially by proxy servers.</entry>
<entry level="1" type="definition">

 HTTP/1.1 (1997-1999)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> </entry>
<entry level="1" type="indent">

 Current version; persistent connections enabled by default and works well with proxies. Also supports <link xlink:type="simple" xlink:href="../572/1218572.xml">
request pipelining</link>, allowing multiple requests to be sent at the same time, allowing the server to prepare for the workload and potentially transfer the requested resources more quickly to the client.</entry>
<entry level="1" type="definition">

 HTTP/1.2</entry>
<entry level="1" type="indent">

 The initial 1995 working drafts of the document <it>PEP – an Extension Mechanism for HTTP</it> (which proposed the <link>
Protocol Extension Protocol</link>, abbreviated PEP) were prepared by the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../149/33149.xml">
World Wide Web Consortium</link></company>
 and submitted to the <link xlink:type="simple" xlink:href="../285/15285.xml">
Internet Engineering Task Force</link>. PEP was originally intended to become a distinguishing feature of HTTP/1.2.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> In later <weblink xlink:type="simple" xlink:href="http://www.w3.org/TR/WD-http-pep">
PEP working drafts</weblink>, however, the reference to HTTP/1.2 was removed. The experimental RFC 2774, <it>HTTP Extension Framework</it>, largely subsumed PEP. It was published in February 2000.</entry>
</list>
</p>
<p>

The major changes between HTTP/1.0 and HTTP/1.1 include the way HTTP handles caching; how it optimizes bandwidth and network connections usage, manages error notifications; how it transmits messages over the network; how internet addresses are conserved; and how it maintains security and integrity.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

<p>

<table style="width: 17em;" class="infobox">
<row style="background:#AADDBB" align="center">
<col style="font-size: 110%">
 <b><message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../443/13443.xml">
HTTP</link></system_of_measurement>
</format>
</rule>
</direction>
</standard>
</protocol>
</information>
</message>
</b></col>
</row>
<row>
<col>
 <link xlink:type="simple" xlink:href="../808/7716808.xml">
Persistence</link> &middot; <link xlink:type="simple" xlink:href="../757/4954757.xml">
Compression</link> &middot; <link xlink:type="simple" xlink:href="../586/13586.xml">
SSL</link></col>
</row>
<row style="background:#CCFFCC" align="center">
<col>
 <link xlink:type="simple" xlink:href="../156/13106156.xml">
Headers</link></col>
</row>
<row>
<col>
 <text wordnetid="106387980" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../769/6376769.xml">
ETag</link></heading>
</line>
</text>
 &middot; <text wordnetid="106387980" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/5068415.xml">
Cookie</link></heading>
</method>
</line>
</know-how>
</text>
 &middot; <text wordnetid="106387980" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../885/5258885.xml">
Referer</link></heading>
</line>
</text>
</col>
</row>

<row style="background:#CCFFCC" align="center">
<col>
 <link xlink:type="simple" xlink:href="../108/1514108.xml">
Status codes</link></col>
</row>
<row>
<col>
 <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../986/11549986.xml">
200 OK</link></code>
</written_communication>
</col>
</row>
<row>
<col>
 <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../020/11550020.xml">
301 Moved permanently</link></code>
</written_communication>
</col>
</row>
<row>
<col>
 <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../022/11550022.xml">
302 Found</link></code>
</written_communication>
</col>
</row>
<row>
<col>
 <link xlink:type="simple" xlink:href="../028/11550028.xml">
303 See Other</link></col>
</row>
<row>
<col>
 <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../567/9519567.xml">
403 Forbidden</link></code>
</written_communication>
</col>
</row>
<row>
<col>
 <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../507/35507.xml">
404 Not Found</link></code>
</written_communication>
</col>
</row>
<row>
<col style="background:#CCFFCC" align="center"></col>
</row>
</table>

</p>
</sec>
<sec>
<st>
Status codes</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../108/1514108.xml">
List of HTTP status codes</link></it>
</indent>
In HTTP/1.0 and since, the first line of the HTTP response is called the <it>status line</it> and includes a numeric <it>status code</it> (such as "<written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../507/35507.xml">
404</link></code>
</written_communication>
") and a textual <it>reason phrase</it> (such as "Not Found"). The way the <link xlink:type="simple" xlink:href="../303/487303.xml">
user agent</link> handles the response primarily depends on the code and secondarily on the response headers. Custom status codes can be used since, if the user agent encounters a code it does not recognize, it can use the first digit of the code to determine the general class of the response.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>
<p>

Also, the standard reason phrases are only recommendations and can be replaced with "local equivalents" at the <link xlink:type="simple" xlink:href="../187/460187.xml">
web developer</link>'s discretion. If the status code indicated a problem, the user agent might display the reason phrase to the user to provide further information about the nature of the problem. The standard also allows the user agent to attempt to interpret the reason phrase, though this might be unwise since the standard explicitly specifies that status codes are machine-readable and reason phrases are human-readable</p>

</sec>
<sec>
<st>
Persistent connections</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../808/7716808.xml">
HTTP persistent connections</link></it>
</indent>
In HTTP/0.9 and 1.0, the connection is closed after a single request/response pair. In HTTP/1.1 a keep-alive-mechanism was introduced, where a connection could be reused for more than one request.</p>
<p>

Such <it>persistent connections</it> reduce <link xlink:type="simple" xlink:href="../286/19572286.xml">
lag</link> perceptibly, because the client does not need to re-negotiate the TCP connection after the first request has been sent. </p>
<p>

Version 1.1 of the protocol made bandwidth optimization improvements to HTTP/1.0. For example, HTTP/1.1 introduced <link xlink:type="simple" xlink:href="../159/7061159.xml">
chunked transfer encoding</link> to allow content on persistent connections to be streamed, rather than buffered. <link xlink:type="simple" xlink:href="../572/1218572.xml">
HTTP pipelining</link> further reduces lag time, allowing clients to send multiple requests before a previous response has been received to the first one. Another improvement to the protocol was <link xlink:type="simple" xlink:href="../686/13920686.xml">
byte serving</link>, which is when a server transmits just the portion of a resource explicitly requested by a client.</p>

</sec>
<sec>
<st>
HTTP session state</st>
<p>

HTTP is a <link xlink:type="simple" xlink:href="../753/479753.xml">
stateless</link> protocol. The advantage of a stateless protocol is that hosts do not need to retain information about users between requests, but this forces <link xlink:type="simple" xlink:href="../187/460187.xml">
web developer</link>s to use alternative methods for maintaining users' states. For example, when a host needs to customize the content of a <link xlink:type="simple" xlink:href="../898/33898.xml">
website</link> for a user, the <link xlink:type="simple" xlink:href="../311/288311.xml">
web application</link> must be written to track the user's progress from page to page. A common method for solving this problem involves sending and receiving <text wordnetid="106387980" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/5068415.xml">
cookies</link></heading>
</method>
</line>
</know-how>
</text>
. Other methods include server side sessions, hidden variables (when the current page is a <link xlink:type="simple" xlink:href="../674/3422674.xml">
form</link>), and <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> encoded parameters (such as /index.php?session_id=some_unique_session_code).</p>

</sec>
<sec>
<st>
Secure HTTP</st>
<p>

There are currently two methods of establishing a secure HTTP connection: the <link xlink:type="simple" xlink:href="../586/13586.xml">
https</link> <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/32146.xml">
URI</link></system_of_measurement>
</standard>
 scheme and the HTTP 1.1 Upgrade header, introduced by RFC 2817. Browser support for the Upgrade header is, however, nearly non-existent, hence the <link xlink:type="simple" xlink:href="../586/13586.xml">
https</link> <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/32146.xml">
URI</link></system_of_measurement>
</standard>
 scheme is still the dominant method of establishing a secure HTTP connection.</p>

<ss1>
<st>
HTTPS URI scheme</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../586/13586.xml">
HTTPS</link></it>
</indent>
HTTPS: is a URI scheme syntactically identical to the http: scheme used for normal HTTP connections, but which signals the browser to use an added encryption layer of <link xlink:type="simple" xlink:href="../813/187813.xml">
SSL</link>/<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 to protect the traffic. SSL is especially suited for HTTP since it can provide some protection even if only one side of the communication is <link xlink:type="simple" xlink:href="../967/47967.xml">
authenticated</link>. This is the case with HTTP transactions over the Internet, where typically only the <link xlink:type="simple" xlink:href="../455/33455.xml">
server</link> is authenticated (by the client examining the server's <link xlink:type="simple" xlink:href="../796/223796.xml">
certificate</link>).</p>

</ss1>
<ss1>
<st>
HTTP 1.1 Upgrade header</st>
<p>

HTTP 1.1 introduced support for the Upgrade header. In the exchange, the client begins by making a clear-text request, which is later upgraded to <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
. Either the client or the server may request (or demand) that the connection be upgraded. The most common usage is a clear-text request by the client followed by a server demand to upgrade the connection, which looks like this:</p>
<p>

Client:

GET /encrypted-area HTTP/1.1
Host: www.example.com
</p>
<p>

Server:

HTTP/1.1 426 Upgrade Required
Upgrade: TLS/1.0, HTTP/1.1
Connection: Upgrade
</p>
<p>

The server returns a 426 status-code because 400 level codes indicate a client failure (see <link xlink:type="simple" xlink:href="../108/1514108.xml">
List of HTTP status codes</link>), which correctly alerts legacy clients that the failure was client-related. </p>
<p>

The benefits of using this method for establishing a secure connection are:</p>
<p>

<list>
<entry level="1" type="bullet">

that it removes messy and problematic redirection and URL rewriting on the server side,</entry>
<entry level="1" type="bullet">

it allows <link xlink:type="simple" xlink:href="../617/407617.xml">
virtual hosting</link> of secured websites (although HTTPS also allows this using <link xlink:type="simple" xlink:href="../235/15499235.xml">
Server Name Indication</link>), and</entry>
<entry level="1" type="bullet">

it reduces user confusion by providing a single way to access a particular resource.</entry>
</list>
</p>
<p>

A weakness with this method is that the requirement for a secure HTTP cannot be specified in the URI. In practice, the (untrusted) server will thus be responsible for enabling secure HTTP, not the (trusted) client.</p>

</ss1>
</sec>
<sec>
<st>
Sample</st>
<p>

Below is a sample conversation between an HTTP client and an HTTP server running on <link xlink:type="simple" xlink:href="../806/1191806.xml">
www.example.com</link>, port 80.</p>
<p>

<b>Client request</b> (followed by a blank line, so that request ends with a double <link xlink:type="simple" xlink:href="../775/238775.xml">
newline</link>, each in the form of a <link xlink:type="simple" xlink:href="../770/238770.xml">
carriage return</link> followed by a <link xlink:type="simple" xlink:href="../775/238775.xml">
line feed</link>):

 GET /index.html HTTP/1.1
 Host: www.example.com
</p>
<p>

The "Host" header distinguishes between various <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
DNS</link></rule>
</direction>
</protocol>
</message>
 names sharing a single <link xlink:type="simple" xlink:href="../921/14921.xml">
IP address</link>, allowing name-based <link xlink:type="simple" xlink:href="../617/407617.xml">
virtual hosting</link>. While optional in HTTP/1.0, it is mandatory in HTTP/1.1.</p>
<p>

<b>Server response</b> (followed by a blank line and text of the requested page):

 HTTP/1.1 200 OK
 Date: Mon, 23&nbsp;May 2005&nbsp;22:38:34 GMT
 Server: Apache/1.3.3.7 (Unix)  (Red-Hat/Linux)
 Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT
 Etag: "3f80f-1b6-3e1cb03b"
 Accept-Ranges: bytes
 Content-Length: 438
 Connection: close
 Content-Type: text/html; charset=UTF-8
</p>
<p>

The <text wordnetid="106387980" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../769/6376769.xml">
ETag</link></heading>
</line>
</text>
 (entity tag) header is used to determine if the <link xlink:type="simple" xlink:href="../146/32146.xml">
URI</link> cached is identical to the requested URI on the server. <b>Content-Type</b> specifies the <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../748/6269748.xml">
Internet media type</link></format>
</information>
</message>
 of the data conveyed by the http message, while <b>Content-Length</b> indicates its length in bytes. The HTTP/1.1 <link xlink:type="simple" xlink:href="../455/33455.xml">
webserver</link> publishes its ability to respond to requests for certain byte ranges of the document by setting the header <b>Accept-Ranges: bytes</b>. This is useful if the client needs to have only certain portions<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> of a file sent by the server, which is called <link xlink:type="simple" xlink:href="../686/13920686.xml">
byte serving</link>. When <b>Connection: close</b> is sent in a header, it means that the <link xlink:type="simple" xlink:href="../455/33455.xml">
web server</link> will close the <link xlink:type="simple" xlink:href="../538/30538.xml">
TCP</link> connection immediately after the transfer of this package.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../512/1214512.xml">
Basic access authentication</link></method>
</know-how>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../267/1674267.xml">
Content negotiation</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../205/1381205.xml">
Digest access authentication</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../757/4954757.xml">
HTTP compression</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../083/1429083.xml">
List of file transfer protocols</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../108/1514108.xml">
List of HTTP status codes</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../156/13106156.xml">
List of HTTP headers</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../849/179849.xml">
WebDAV</link></database>
</system_of_measurement>
</wordnet>
</rule>
</direction>
</standard>
</lexical_database>
</electronic_database>
</protocol>
</information>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../719/437719.xml">
Web cache</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.kb.cert.org/vuls/id/150227">
Vulnerability Note VU#150227: HTTP proxy default configurations allow arbitrary TCP connections</weblink>".&#32;  US-CERT&#32;(2002-05-17).&#32;Retrieved on <link>
2007-05-10</link>.</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://tools.ietf.org/html/rfc2616#section-5.1.1">
HTTP 1.1 Section 5.1.1</weblink></entry>
<entry id="3">
First release of HTTP/1.1 specification is dated January 1997 <weblink xlink:type="simple" xlink:href="http://tools.ietf.org/html/rfc2068">
RFC 2068</weblink></entry>
<entry id="4">
Latest release of HTTP/1.1 specification is dated June 1999 <weblink xlink:type="simple" xlink:href="http://tools.ietf.org/html/rfc2616">
RFC 2616</weblink></entry>
<entry id="5">
<it><weblink xlink:type="simple" xlink:href="http://www.w3.org/TR/WD-http-pep-951122.html">
PEP: An Extension Mechanism for HTTP</weblink></it>. Quote: "For experimental purposes, PEP-compatibility is equated with HTTP/1.2."</entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://www.research.att.com/~bala/papers/h0vh1.html">
AT&amp;T research on HTTP 1.0 and 1.1.</weblink></entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1">
6.1 Status-Line</weblink></entry>
<entry id="8">
<weblink xlink:type="simple" xlink:href="http://tools.ietf.org/html/draft-ietf-http-range-retrieval-00">
draft-ietf-http-range-retrieval-00 - Byte Range Retrieval Extension to HTTP</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://mprzybylski.pl/lab/net/http/browser-requests.html">
What GET requests sent by browsers look like</weblink></entry>
</list>
</p>



</sec>
</bdy>
</system_of_measurement>
</format>
</rule>
</direction>
</standard>
</protocol>
</information>
</message>
</article>
