<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:27:06[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>Hello world program</title>
<id>13834</id>
<revision>
<id>244213773</id>
<timestamp>2008-10-09T20:30:30Z</timestamp>
<contributor>
<username>Adam majewski</username>
<id>441224</id>
</contributor>
</revision>
<categories>
<category>Computer programming</category>
<category>Phrases</category>
</categories>
</header>
<bdy>

A <b>"Hello World" program</b> is a <link xlink:type="simple" xlink:href="../783/5783.xml">
computer program</link> that prints out "Hello world!" on a <link xlink:type="simple" xlink:href="../703/450703.xml">
display device</link>. It is used in many introductory tutorials for teaching a <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>. Such a program is typically one of the simplest programs possible in a computer language. Some are surprisingly complex, especially in some <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link> (GUI) contexts, but most are very simple, especially those which rely heavily on a particular <link xlink:type="simple" xlink:href="../915/71915.xml">
command line interpreter</link> ("shell") to perform the actual output. In many <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded system</link>s, the text may be sent to a one or two-line <link xlink:type="simple" xlink:href="../932/17932.xml">
liquid crystal display</link> (LCD), or some other appropriate signal, such as a <link xlink:type="simple" xlink:href="../290/18290.xml">
LED</link> being turned on, may substitute for the message.<p>

<image location="right" width="150px" src="Hello_World_Perl_GTk2.png" type="thumb">
<caption>

A <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link> Hello World program, written in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
.
</caption>
</image>
</p>

<sec>
<st>
Purpose</st>
<p>

A "hello world" program has become the traditional first program that many people learn. In general, it is simple enough such that people who have no previous experience with computer programming can easily understand it, especially with the guidance of a text or teacher. Using this simple program as a basis, <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> principles or elements of a specific <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link> can be explained to novice programmers. Experienced programmers learning new languages can also gain a lot of information about a given language's syntax and structure from a hello world program.</p>
<p>

In addition, hello world can be a useful <link xlink:type="simple" xlink:href="../893/39893.xml">
sanity test</link> to make sure that a language's <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link>, <link xlink:type="simple" xlink:href="../305/15305.xml">
development environment</link>, and <link xlink:type="simple" xlink:href="../311/5311.xml">
run-time environment</link> are correctly installed. Configuring a complete programming <link xlink:type="simple" xlink:href="../580/648580.xml">
toolchain</link> from scratch to the point where even trivial programs can be compiled and run can involve substantial amounts of work. For this reason, a simple program is used first when testing a new tool chain.</p>
<p>

"Hello world" is also used by computer hackers as a proof of concept that arbitary code can be executed through an <link xlink:type="simple" xlink:href="../127/143127.xml">
exploit</link> where code <it>should not</it> be allowed to be executed, for example, on Sony's <link xlink:type="simple" xlink:href="../009/619009.xml">
Playstation Portable</link>. This is the first step into allowing home-made content ("<link xlink:type="simple" xlink:href="../667/1495667.xml">
homebrew</link>") usable on such a device.</p>

</sec>
<sec>
<st>
History</st>
<p>

While small test programs existed since the development of programmable <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link>s, the tradition of using the phrase "Hello world!" as a test message was influenced by an example program in the seminal book <it><link xlink:type="simple" xlink:href="../671/379671.xml">
The C Programming Language</link></it>. The example program from that book prints "hello,&nbsp;world" (without capital letters or exclamation mark), and was inherited from a 1974 <link xlink:type="simple" xlink:href="../712/3712.xml">
Bell Laboratories</link> internal memorandum by <expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<pioneer wordnetid="110434725" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<originator wordnetid="110383816" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../05x/Tektronix_405x.xml">
Brian Kernighan</link></scholar>
</originator>
</writer>
</causal_agent>
</alumnus>
</communicator>
</creator>
</scientist>
</intellectual>
</specialist>
</pioneer>
</interior_designer>
</person>
</physical_entity>
</expert>
, <it>Programming in C: A Tutorial</it>, which contains the first known version:</p>

<p>

main() {
printf("hello, world");
}</p>
<p>

The first known instance of the usage of the words "hello" and "world" together in computer literature occurred earlier, in Kernighan's 1972 <it>Tutorial Introduction to the Language <link xlink:type="simple" xlink:href="../475/4475.xml">
B</link></it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>, with the following code:</p>
<p>

main( ) {
extrn a, b, c;
putchar(a); putchar(b); putchar(c); putchar('!*n');
}
a 'hell';
b 'o, w';
c 'orld';</p>
<p>

An exposition: the only fundamental data type in B is the machine word. On the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 6070, the machine that the particular version of B that was described ran on, this is 4 bytes long. The character constant correctly expresses this fact. There is no = in initializers in B.</p>

</sec>
<sec>
<st>
Variations</st>
<p>

<image location="right" width="150px" src="PSP-Homebrew.jpeg" type="thumb">
<caption>

Hackers execute unsigned HelloWorld code on Sony's <link xlink:type="simple" xlink:href="../546/2322546.xml">
PlayStation Portable homebrew</link>
</caption>
</image>

<image location="right" width="150px" src="UT_HelloWorld.jpg" type="thumb">
<caption>

A light-programmable <link xlink:type="simple" xlink:href="../946/43946.xml">
biofilm</link> displaying the Hello World message
</caption>
</image>

<image location="right" width="150px" src="CNC_Hello_World.jpg" type="thumb">
</image>
</p>
<p>

There are many variations on the punctuation and casing of the phrase. Variations include the presence or absence of the comma and exclamation mark, and the capitalization of the 'H', both the 'H' and the 'W', or neither. Some languages are forced to implement different forms, such as "HELLO WORLD!", on systems that only support capital letters, while many "hello world" programs in <link xlink:type="simple" xlink:href="../398/53398.xml">
esoteric languages</link> print out a slightly modified string. For example, the first non-trivial <link xlink:type="simple" xlink:href="../720/237720.xml">
Malbolge</link> program printed "HEllO WORld", this having been determined to be "good enough".</p>
<p>

There are variations in spirit, as well. <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../933/10933.xml">
Functional programming</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
 languages, like <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../016/18016.xml">
Lisp</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../607/20607.xml">
ML</link></programming_language>
, and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../630/13630.xml">
Haskell</link></programming_language>
, tend to substitute a <link xlink:type="simple" xlink:href="../606/10606.xml">
factorial</link> program for Hello World, as the former emphasizes recursive techniques, which are a big part of functional programming, while the latter emphasizes I/O, which violates the spirit of pure functional programming by producing side effects.</p>
<p>

The <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8242.xml">
Debian</link></distribution>
</arrangement>
</structure>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../298/990298.xml">
Ubuntu</link></O>
 operating systems provide the "hello world" program through the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/187481.xml">
apt</link></instrumentality>
</artifact>
</system>
 packaging system; this allows users to simply type "apt-get install hello" for the program to be installed, along with any software dependencies. While seemingly useless, the hello package serves as a simple example Debian package for newcomers to learn from -- and in fact, the version of hello used, <link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link> hello, serves a similar purpose itself as an example of how to write a GNU program.</p>

</sec>
<sec>
<st>
 See also </st>

<p>

<list>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<link xlink:type="simple" xlink:href="../596/1149596.xml">
Trabb Pardo-Knuth algorithm</link></subject>
</message>
 </entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../485/16485.xml">
Just another Perl hacker</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../633/169633.xml">
List of basic computer science topics</link></entry>
<entry level="1" type="bullet">

At <work wordnetid="100575741" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<property wordnetid="113244109" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../006/329006.xml">
Wikibooks</link></activity>
</psychological_feature>
</act>
</property>
</undertaking>
</event>
</possession>
</work>
:</entry>
<entry level="2" type="bullet">

</entry>
<entry level="2" type="bullet">

</entry>
<entry level="2" type="bullet">

</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://cm.bell-labs.com/cm/cs/who/dmr/bintro.html">
The Programming Language B</weblink>".
</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.lysator.liu.se/c/bwk-tutor.html#simple-c">
<it>Programming in C: A Tutorial''</it></weblink> by Brian Kernighan &mdash; internal Bell Labs memo, containing the above C program</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www2.latech.edu/~acm/HelloWorld.html">
ACM "Hello World" project</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.roesler-ac.de/wolfram/hello.htm">
The Hello World Collection</weblink> with 400+ programs, including "Hello World" in 60+ human languages</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.rawbw.com/~rem/HelloPlus/hellos.html">
"HelloWorld online on Web, and steps beyond HelloWorld"</weblink></entry>
</list>
</p>


</sec>
</bdy>
</entity>
</article>
