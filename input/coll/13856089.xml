<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:12:08[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>History of IBM mainframe operating systems</title>
<id>13856089</id>
<revision>
<id>242021218</id>
<timestamp>2008-09-30T15:39:57Z</timestamp>
<contributor>
<username>Matthiku</username>
<id>333019</id>
</contributor>
</revision>
<categories>
<category>IBM Mainframe computer operating systems</category>
<category>History of software</category>
</categories>
</header>
<bdy>

The <b>history of operating systems running on IBM mainframes</b> is a notable chapter of <link xlink:type="simple" xlink:href="../395/55395.xml#xpointer(//*[./st=%22The+mainframe+era%22])">
history of mainframe operating systems</link>, because of <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
's long-standing position as the world's largest hardware supplier of <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframe computer</link>s.<p>

Arguably the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s which IBM supplied to customers for use on its early <link xlink:type="simple" xlink:href="../872/14872.xml">
mainframes</link> have seldom been very innovative, except for the <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> systems beginning with  <link xlink:type="simple" xlink:href="../018/315018.xml">
CP67</link>. But the company's well-known reputation for preferring proven technology has generally given potential users the confidence to adopt new IBM systems fairly quickly. IBM's current mainframe operating systems, <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>, <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>, <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link>, and <link xlink:type="simple" xlink:href="../433/30433.xml">
z/TPF</link>, are <link xlink:type="simple" xlink:href="../459/4459.xml">
backwards compatible</link> successors to operating systems introduced in the 1960s, although of course they have been improved in many ways.</p>
<p>

Both IBM-supplied operating systems and those supplied by others are discussed here, if notably used on IBM mainframes.</p>

<p>

<table style="float: right; clear: right; border: 1px solid #8888aa; background: #f7f8ff; padding: 5px; margin: 0 0 15px 15px; text-align: left;" cellpadding="1">
<row>
<col style="background: #ccf; text-align: center;">
 <b><link xlink:type="simple" xlink:href="../089/13856089.xml">
History of IBM mainframeoperating systems</link></b></col>
</row>
<row>
<col style="background: #fff;">
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../891/1680891.xml">
IBSYS</link> 1950s</entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
 1961</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../635/140635.xml">
BOS/360</link> 1965</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../634/140634.xml">
TOS/360</link> 1965</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link> 1967</entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../821/197821.xml">
MUSIC/SP</link></O>
 1960s</entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../432/148432.xml">
MTS</link></O>
1970s</entry>
</list>
</col>
</row>
<row>
<col style="background: #eee;">
<list>
<entry level="1" type="bullet">

 <b><link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360 and successors</link></b> 1966</entry>
<entry level="2" type="bullet">

 DOS/VS 1972</entry>
<entry level="2" type="bullet">

 DOS/VSE 1980s </entry>
<entry level="2" type="bullet">

 VSE/ESA 1991</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link>2005</entry>
</list>
</col>
</row>
<row>
<col style="background: #fff;">
<list>
<entry level="1" type="bullet">

 <b><link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360 and successors</link></b> 1966</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../651/2660651.xml">
MFT</link> 1966</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../217/9815217.xml">
OS/VS1</link> 1972</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../423/19161423.xml">
MVT</link> 1967</entry>
<entry level="3" type="bullet">

 <link>
OS/VS2R1</link> (SVS) 1972</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link> (<link>
OS/VS2R2</link>) 1974</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../812/13302812.xml">
MVS/370</link> 1970s</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../254/39254.xml">
MVS/XA</link> 1980s</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../340/39340.xml">
MVS/ESA</link> 1988</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../129/39129.xml">
OS/390</link> 1995</entry>
<entry level="3" type="bullet">

 <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>2000</entry>
</list>
</col>
</row>
<row>
<col style="background: #eee;">
<list>
<entry level="1" type="bullet">

 <b><link xlink:type="simple" xlink:href="../460/8177460.xml">
VM line</link></b></entry>
<entry level="2" type="bullet">

 <link>
CP-40</link><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
/CMS</link></O>
 1967</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
/CMS</link></O>
 1967</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/6190581.xml">
VP/CSS</link></O>
 1968</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link> 1972</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/SP</link> 1980</entry>
<entry level="2" type="bullet">

 <link>
VM/XA</link> 1988</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/ESA</link> 1990</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>2000</entry>
</list>
</col>
</row>
<row>
<col style="background: #fff;">
<list>
<entry level="1" type="bullet">

<b>TPF line</b></entry>
<entry level="2" type="bullet">

<link>
 ACP</link> 1967</entry>
<entry level="2" type="bullet">

<link>
 TPF</link> 1979</entry>
<entry level="2" type="bullet">

<link xlink:type="simple" xlink:href="../433/30433.xml">
z/TPF</link>2000s</entry>
</list>
</col>
</row>
<row>
<col style="background: #eee;">
<list>
<entry level="1" type="bullet">

 <b><family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 on IBM mainframes</b></entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../332/13227332.xml">
UTS</link></O>
 1981</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link>
AIX/370</link></O>
 1990</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link>
AIX/ESA</link></O>
 1991</entry>
<entry level="2" type="bullet">

 <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../604/1266604.xml">
Linux</link></distribution>
</arrangement>
</structure>
1999</entry>
</list>
</col>
</row>
<row>
<col style="background: #ccf; text-align:right;"></col>
</row>
</table>

</p>
<sec>
<st>
Before System/360</st>
<p>

IBM was slow to introduce operating systems: <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../102/12102.xml">
General Motors</link></company>
 produced General Motors OS in 1955 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../866/13100866.xml">
GM-NAA I/O</link></O>
 in 1956 for use on its own IBM computers; and in 1962 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../524/4524.xml">
Burroughs Corporation</link></institution>
</company>
 released <link xlink:type="simple" xlink:href="../244/966244.xml">
 MCP</link> and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../730/12730.xml">
General Electric</link></company>
 introduced <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../002/195002.xml">
 GECOS</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
, in both cases for use by their customers.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

In fact the first operating systems for IBM computers were written by IBM customers who did not wish to have their very expensive machines ($2M in the mid-1950s!) sitting idle while operators set up jobs manually, and so they wanted a mechanism for maintaining a queue of jobs.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

The operating systems described below ran only on a few processor models and were suitable only for scientific and engineering calculations. Users with other IBM computers or other applications had to manage without operating systems. But one of IBM's smaller computers, the <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../676/143676.xml">
IBM 650</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, introduced a feature which later became part of <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>: if processing was interrupted by a "random processing error" (hardware glitch), the machine could automatically resume from the last checkpoint instead of requiring the operators to restart the job manually from the beginning.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>

<ss1>
<st>
From General Motors' GM-NAA I/O to IBSYS</st>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../102/12102.xml">
General Motors</link></company>
' Research division produced <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../866/13100866.xml">
GM-NAA I/O</link></O>
 for its <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../701/192701.xml">
IBM 701</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 in 1956 (from a prototype, GM Operating System, developed in 1955), and updated it for the 701's successor. In 1960 the IBM user association <link xlink:type="simple" xlink:href="../371/4138371.xml">
SHARE</link> took it over and produced an updated version, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../537/13100537.xml">
SHARE Operating System</link></O>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Finally IBM took over the project and supplied an enhanced version called <link xlink:type="simple" xlink:href="../891/1680891.xml">
IBSYS</link> with the <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../332/147332.xml">
IBM 7090</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 and <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/147324.xml">
IBM 7094</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 computers. IBSYS required 8 <link xlink:type="simple" xlink:href="../109/31109.xml">
tape drive</link>s (fewer if the system had one or more disk drives). Its main components were: a <link xlink:type="simple" xlink:href="../420/24420.xml">
 card</link>-based Job Control language, which was the main user interface; <link xlink:type="simple" xlink:href="../739/5739.xml">
compilers</link> for <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link> and <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>; an <link xlink:type="simple" xlink:href="../368/1368.xml">
 assembler</link>; and various utilities including a <link xlink:type="simple" xlink:href="../442/28442.xml">
 sort</link> program.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>
<p>

In 1958 the University of Michigan Executive System adapted GM-NAA I/O to produce <link xlink:type="simple" xlink:href="../889/484889.xml">
 UMES</link>, which was better-suited to the large number of small jobs created by students. UMES was used until 1967, when it was replaced by the <link xlink:type="simple" xlink:href="../765/276765.xml">
MTS</link> timesharing system.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>

</ss1>
<ss1>
<st>
BESYS</st>
<p>

Bell Labs produced BESYS (sometimes referred to as BELLMON) and used it until the mid-1960s. Bell also made it available to others without charge or formal technical support.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

</ss1>
<ss1>
<st>
FORTRAN Monitor System</st>
<p>

Before IBSYS, IBM produced for its <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../778/206778.xml">
IBM 709</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../332/147332.xml">
 7090</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 and <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/147324.xml">
 7094</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 computers a tape-based operating system whose sole purpose was to <link xlink:type="simple" xlink:href="../739/5739.xml">
 compile</link> <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link> programs - in fact FMS and the FORTRAN compiler were on the same tape.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></p>

</ss1>
</sec>
<sec>
<st>
Early timesharing and virtual machine systems</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link></it>
</indent>

<indent level="1">

<it>For explanation of timesharing, virtual memory or virtual machines, see the <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Technical+notes%22])">
 Technical notes</link> near the end of this article.</it>
</indent>

<link xlink:type="simple" xlink:href="../061/19061.xml">
MIT</link>'s <link>
Fernando Corbató</link> produced the first experimental <link xlink:type="simple" xlink:href="../958/30958.xml">
timesharing</link> systems, such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
, from 1957 to the early 1960s, using slightly modified <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/76492.xml">
IBM 704</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 and <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../332/147332.xml">
IBM 7090</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 mainframes; these systems were based on a proposal by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../362/308362.xml">
John McCarthy</link></scientist>
</person>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> In the 1960s IBM's own laboratories created experimental timesharing systems, using standard mainframes with hardware and <link xlink:type="simple" xlink:href="../999/19999.xml">
microcode</link> modifications to support <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>: <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link> in the early 1960s; <link xlink:type="simple" xlink:href="../207/7506207.xml">
 CP-40</link> from 1964 to 1967; <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> from 1967 to 1972. The company even released CP-67 without warranty or technical support to several large customers from 1968 to 1972. CP-40 and CP-67 used modified <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s, but the M44/44X was based on the <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../859/852859.xml">
IBM 7044</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, an earlier generation of CPU which was very different internally.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></p>
<p>

These experimental systems were too late to be incorporated into the <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> series which IBM announced in 1964, but encouraged the company to add virtual memory and virtual machine capabilities to its <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> mainframes and their operating systems in 1972:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>
<list>
<entry level="1" type="bullet">

The M44/44X showed that a partial approach to virtual machines was not good enough, and that <link xlink:type="simple" xlink:href="../245/660245.xml">
thrashing</link> could severely reduce the speed of virtual memory systems. Thrashing is a condition in which the system runs very slowly because it spends a lot of its time shuffling virtual memory pages between physical memory and disk files.</entry>
<entry level="1" type="bullet">

IBM learned from CP-40 and CP-67: how to make the thrashing problem negligible; that its other virtual memory and virtual machine technologies were sufficiently fast and reliable to be used in the high-volume commercial systems which were its core business. In particular IBM's David Sayre convinced the company that automated virtual memory management could consistently perform at least as well as the best programmer-designed <link xlink:type="simple" xlink:href="../764/5360764.xml">
 overlay</link> schemes.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></entry>
</list>
</p>
<p>

In 1968 a consulting firm called Computer Software Systems used the released version of CP-67 to set up a commercial timesharing service. The company's technical team included 2 recruits from MIT (see CTSS above), Dick Orenstein and Harold Feinleib. As it grew, the company renamed itself <company wordnetid="108058098" confidence="0.8">
<enterprise wordnetid="108056231" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../513/6190513.xml">
National CSS</link></institution>
</business>
</enterprise>
</company>
 and modified the software to increase the number of paying users it could support until the system was sufficiently different to warrant a new name, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/6190581.xml">
VP/CSS</link></O>
. VP/CSS was the delivery mechanism for National CSS' services until the early 1980s, when it switched to IBM's <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link> (see below).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>
<p>

Universities produced two other timesharing operating systems in the late 1960s and early 1970s:
<list>
<entry level="1" type="bullet">

<university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../643/7954643.xml">
McGill University</link></university>
 in <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../681/7954681.xml">
Montreal</link></village>
 started developing <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../821/197821.xml">
MUSIC/SP</link></O>
 in 1969. MUSIC was enhanced several times and eventually supported text searches, web publishing and email as well as software development. The last official version was released in 1999.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></entry>
<entry level="1" type="bullet">

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../432/148432.xml">
 MTS</link></O>
 was developed in the early 1970s by a consortium of universities led by <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../740/31740.xml">
University of Michigan</link></university>
, and the last copy was in use until the mid-1990s. All versions ran on IBM mainframes which had virtual memory capability, starting with a 360/67. MTS was mainly oriented towards software development.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
System/360 operating systems</st>
<p>

Up to the early 1960s IBM's low-end and high-end systems were incompatible - programs could not easily be transferred from one to another, and the systems often used completely different <link xlink:type="simple" xlink:href="../ago/Austin=2C_C$hicago.xml">
peripheral</link>s (e.g. disk drives).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref> IBM concluded that these factors were increasing its design and production costs for both hardware and software to a level that was unsustainable, and were reducing sales by deterring customers from upgrading. So in 1964 the company announced <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link>, a new range of computers which all used the same peripherals and most of which could run the same programs.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>
<p>

IBM originally intended that System/360 should have only one <link xlink:type="simple" xlink:href="../285/37285.xml">
 batch-oriented</link> operating system, OS/360, and  a <link xlink:type="simple" xlink:href="../958/30958.xml">
timesharing</link> operating system, <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link>. There are at least two accounts of why IBM later decided it should also produce a simpler batch-oriented operating system, <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link>: because it found that OS/360 would not fit into the limited memory available on the smaller System/360 models;<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref> or because it realized that the development of OS/MFT and OS/MVT would take much longer than expected, and introduced DOS/360 as one of a series of stop-gaps to prevent System/360 hardware sales from collapsing - the others were <link xlink:type="simple" xlink:href="../635/140635.xml">
BOS/360</link> (Basic Operating System, for the smallest machines) and <link xlink:type="simple" xlink:href="../634/140634.xml">
TOS/360</link> (Tape Operating System, for machines with only tape drives).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>
<p>

System/360's operating systems were more complex than previous IBM operating systems for several reasons, including:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref>
<list>
<entry level="1" type="bullet">

 They had to support <link xlink:type="simple" xlink:href="../857/6857.xml">
multiprogramming</link>, otherwise the faster <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s in the range would have spent most of their time waiting for <link xlink:type="simple" xlink:href="../558/14558.xml">
I/O</link> operations (e.g. disk reads) to complete. This meant that the operating systems had to be the real masters of the systems, to provide whatever services the applications validly requested, and to handle crashes or misbehavior in one application without stopping others that were running at the same time.</entry>
<entry level="1" type="bullet">

They had to support a much wider range of machine sizes. Memory ranged from 16KB to 1MB and processor speeds from a few thousand instructions per second to 500,000.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

System/360's operating systems had to support a wide range of application requirements, for example: some applications only  needed to read through sequential files from start to finish; others needed fast, direct access to specific records in very large files; and a few applications spent nearly all their time doing calculations, with very little reading / writing of files.</entry>
</list>
</p>
<p>

This was one of the largest software projects anyone had attempted, and it soon ran into trouble, with huge time and cost over-runs and large numbers of <invertebrate wordnetid="101905661" confidence="0.8">
<arthropod wordnetid="101767661" confidence="0.8">
<bug wordnetid="102236355" confidence="0.8">
<insect wordnetid="102159955" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../085/37085.xml">
 bugs</link></animal>
</insect>
</bug>
</arthropod>
</invertebrate>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref> So the company had to release a series of short-lived stop-gaps because:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref>
<list>
<entry level="1" type="bullet">

To develop and test the planned operating systems it needed to use System/360 hardware. So it first developed BPS (Basic Programming Support), which it used to develop the tools it needed for developing DOS/360 and OS/360 and the first versions of tools its would supply with these operating systems - <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link>s (<link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link> and <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>), <link xlink:type="simple" xlink:href="../254/904254.xml">
 utilities</link> including <link xlink:type="simple" xlink:href="../442/28442.xml">
 Sort</link>,  and above all the <link xlink:type="simple" xlink:href="../368/1368.xml">
 Assembler</link> it needed to build all the other software.</entry>
<entry level="1" type="bullet">

Competitors took advantage of the delays to announce systems aimed at what they thought were the most vulnerable parts of IBM's market.</entry>
</list>
</p>
<p>

IBM released 4 stop-gap operating systems to prevent sales of System/360 from collapsing:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref>
<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../635/140635.xml">
BOS/360</link> (Basic Operating System), which loaded from a <link xlink:type="simple" xlink:href="../518/4397518.xml">
card reader</link> and supported tape drives and a few disks. This system was supplied to <link>
beta test</link> customers and may have been an early version of DOS/360.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../634/140634.xml">
TOS/360</link>, which was designed to provide an upgrade path for customers who had <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../579/92579.xml">
IBM 1401</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 computers with tape drives and no disks.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link>, which was built by the developers of BOS/360 and TOS/360 (IBM's small business computers division) and went on to become a mainstream operating system whose descendant <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link> is still widely used.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../352/24352.xml">
PCP</link> (Primary Control Program), which was a very early version of OS/360 that didn't support multiprogramming.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref></entry>
</list>
</p>
<p>

TSS/360 was so late and unreliable that IBM cancelled it. By this time <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> was running well enough for IBM to offer it "without warranty" as a timesharing facility for a few large customers.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2224%22])">24</ref></p>
<p>

The traumas of producing the System/360 operating systems gave a boost to the emerging discipline of <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link>, the attempt to apply scientific principles to the development of software and the <link xlink:type="simple" xlink:href="../042/24042.xml">
 management of software projects</link>. <link>
Frederick P. Brooks</link>, who was a senior project manager for the whole System/360 project and then was given specific responsibility for OS/360 (which was already long overdue), wrote an acclaimed book, <it><book wordnetid="106410904" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../340/31340.xml">
The Mythical Man-Month</link></book>
</it>, based on the problems encountered and lessons learned during the project, two of which were:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2225%22])">25</ref>
<list>
<entry level="1" type="bullet">

Throwing additional resources (especially staff) at a struggling project quickly becomes unproductive or even counter-productive because of communication difficulties. This is the "Mythical Man-Month" syndrome which gave the book its title.</entry>
<entry level="1" type="bullet">

The successor to a successful system often runs into difficulties because it gets overloaded with all the features people wished had been in the earlier system. Brooks called this the "<link xlink:type="simple" xlink:href="../313/29313.xml">
second-system effect</link>", and cited OS/360 as a very comprehensive example.</entry>
</list>
</p>

<ss1>
<st>
DOS/360</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360 and successors</link></it>
</indent>

<link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link> became the usual operating system for processors less than  256KB of memory. It had a good set of <link xlink:type="simple" xlink:href="../254/904254.xml">
utility program</link>s, an <link xlink:type="simple" xlink:href="../368/1368.xml">
 Assembler</link>, and <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link>s for <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link>, <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link> and eventually <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../708/23708.xml">
PL/I</link></programming_language>
. And it supported a useful range of file organizations with <link xlink:type="simple" xlink:href="../141/13568141.xml">
access method</link>s to help in using them:
<list>
<entry level="1" type="bullet">

 Sequential data sets were normally read one record at a time from beginning to end.</entry>
<entry level="1" type="bullet">

 In indexed (<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../763/252763.xml">
ISAM</link></instrumentality>
</artifact>
</system>
) files a specified section of each record was defined as a key which could be used to look up specific records.</entry>
<entry level="1" type="bullet">

 In direct access (<link xlink:type="simple" xlink:href="../030/16245030.xml">
BDAM</link>) files, the application program had to specify the physical location on the disk of the data it wanted to access. BDAM programming was not easy and most customers never used it themselves; but it was the fastest way to access data on disks and many software companies used it in their products, especially <link xlink:type="simple" xlink:href="../513/8513.xml">
database management system</link>s such as <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../962/401962.xml">
ADABAS</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../779/1419779.xml">
IDMS</link></instrumentality>
</artifact>
</system>
 and IBM's <link xlink:type="simple" xlink:href="../524/1218524.xml">
 DL/I</link>.</entry>
</list>

Sequential and ISAM files could store either fixed-length or variable-length records, and all types could occupy more than one disk volume.</p>
<p>

DOS/360 also offered <link xlink:type="simple" xlink:href="../832/8252832.xml">
BTAM</link>, a data communications facility which was primitive and hard to use by today's standards. But BTAM could communicate with almost any type of terminal, which was a big advantage at a time when there was hardly any standardization of communications protocols.</p>
<p>

But DOS/360 had significant limitations compared with <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>, which was used to control most larger System/360 machines:
<list>
<entry level="1" type="bullet">

The first version could run only one program at a time. A later enhancement allowed 3 at the same time, in one of 3 "partitions" whose size was set by each customer when DOS/360 was installed.</entry>
<entry level="1" type="bullet">

The <link xlink:type="simple" xlink:href="../487/391487.xml">
 JCL</link> it used for submitting jobs was designed to be easy for the low-end machines to process, and as a result programmers did not find it easy to read or write.</entry>
<entry level="1" type="bullet">

There was no <link xlink:type="simple" xlink:href="../801/469801.xml">
spooling</link> sub-system to improve the efficiency of <link xlink:type="simple" xlink:href="../420/24420.xml">
punched card</link> and printer use. In the late 1960s an independent software company started selling a spooler called GRASP.</entry>
<entry level="1" type="bullet">

DOS/360 had no relocating <link xlink:type="simple" xlink:href="../332/285332.xml">
loader</link>, so users had to <link xlink:type="simple" xlink:href="../566/18566.xml">
 link edit</link> a separate executable version of each program for each partition in which the program was likely to be run.</entry>
<entry level="1" type="bullet">

Executable programs were stored in the Core Image Library, which did not reclaim space when programs were deleted or replaced by newer versions. When the Core Image Library became full, it had to be compressed by one of the utility programs, and this could halt development work for as much as half a day.</entry>
<entry level="1" type="bullet">

Its <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
application programming interface</link> was different from that of OS/360. Programs written in <link xlink:type="simple" xlink:href="../842/189842.xml">
high level language</link>s such as <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link> needed small modifications before they could be used with OS/360 and <link xlink:type="simple" xlink:href="../368/1368.xml">
 Assembler</link> programs needed larger changes.</entry>
</list>
</p>
<p>

IBM expected that DOS/360 users would soon upgrade to OS/360. But despite its limitations DOS/360 became the world's most widely-used operating system because: System/360 hardware sold very well; DOS/360 ran well on System/360 processors which medium-sized organizations could afford; and it was better than the "operating systems" these customers had before. As a result its descendant <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link> is still widely-used today.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2226%22])">26</ref></p>

</ss1>
<ss1>
<st>
OS/360</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360 and successors</link></it>
</indent>

<link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> turned out to be not an operating system but a generic name for a group of operating systems which offered similar facilities. PCP was a stop-gap version which could run only one program at a time, but <link xlink:type="simple" xlink:href="../651/2660651.xml">
OS/MFT</link> ("<link xlink:type="simple" xlink:href="../857/6857.xml">
multiprogramming</link> with fixed number of tasks") and <link xlink:type="simple" xlink:href="../423/19161423.xml">
OS/MVT</link> ("<link xlink:type="simple" xlink:href="../857/6857.xml">
multiprogramming</link> with variable number of tasks") were used until at least the late 1970s, a good five years after their successors had been launched.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2227%22])">27</ref> It is unclear whether the division between OS/MFT and OS/MVT arose because MVT required too much memory to be usable on mid-range machines or because IBM needed to release a multiprogramming version of OS (MFT) as soon as possible.</p>
<p>

OS/MFT and OS/MVT had different approaches to managing memory (see below), but provided very similar facilities:
<list>
<entry level="1" type="bullet">

The same <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
application programming interface</link> (API), so application progams could be transferred betwwen MFT and MVT without even needing <link xlink:type="simple" xlink:href="../739/5739.xml">
 re-compilation</link>.</entry>
<entry level="1" type="bullet">

The same <link xlink:type="simple" xlink:href="../487/391487.xml">
 JCL</link>, which was more flexible and easier to use than that of DOS/360.</entry>
<entry level="1" type="bullet">

The same facilities (<link xlink:type="simple" xlink:href="../141/13568141.xml">
access method</link>s) as DOS/360 for reading and writing files (sequential, indexed and direct) and for data communications (<link xlink:type="simple" xlink:href="../832/8252832.xml">
BTAM</link>).</entry>
<entry level="1" type="bullet">

An additional file structure, partitioned, and access method (<link xlink:type="simple" xlink:href="../642/13578642.xml">
BPAM</link>), which was mainly used for managing program libraries. Although partitioned files needed to be compressed to reclaim free space, this seldom halted development work as it did with DOS/360's Core Image Library, because MFT and MVT allowed an indefinite number of partitioned files and each project generally had at least one.</entry>
<entry level="1" type="bullet">

A file naming system which allowed files to be managed as hierarchies, e.g. <it>PROJECT.USER.FILENAME</it>.</entry>
<entry level="1" type="bullet">

A <link xlink:type="simple" xlink:href="../801/469801.xml">
spooling</link> facility (which DOS/360 lacked).</entry>
<entry level="1" type="bullet">

Applications could create sub-tasks, which allowed <link xlink:type="simple" xlink:href="../857/6857.xml">
multiprogramming</link> within the one job.</entry>
</list>
</p>
<p>

Experience indicated that it was not advisable to install OS/MFT on systems with less than 256KB of memory, which was a lot in the  1960s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2228%22])">28</ref></p>

<ss2>
<st>
 OS/MFT </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../651/2660651.xml">
OS/MFT</link></it>
</indent>

When installing <link xlink:type="simple" xlink:href="../651/2660651.xml">
 MFT</link>, customers would specify up to five "partitions", areas of memory with fixed boundaries, in which application programs could be run simultaneously.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref></p>

</ss2>
<ss2>
<st>
 OS/MVT </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../423/19161423.xml">
OS/MVT</link></it>
</indent>

<link xlink:type="simple" xlink:href="../423/19161423.xml">
OS/MVT</link> was considerably larger and more complex than MFT and therefore was used on the most powerful System/360 CPUs.  It treated all memory not used by the operating system as a single pool from which contiguous "regions" could be allocated as required by an indefinite number of simultaneous application programs.  This scheme was more flexible than MFT's and in principle used memory more efficiently, but was liable to <link xlink:type="simple" xlink:href="../369/3909369.xml">
 fragmentation</link> - after a while one could find that, although there was enough spare memory in total to run a program, it was divided into separate chunks none of which was large enough.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref></p>
<p>

Shortly after the release of MVT, <link xlink:type="simple" xlink:href="../150/212150.xml">
Time Sharing Option</link> (TSO) was added.  TSO became widely used for program development because it provided: an editor; the ability to submit batch jobs, be notified of their completion and view the results without waiting for printed reports; <link xlink:type="simple" xlink:href="../485/50485.xml">
debugger</link>s for some of the programming languages used on System/360.  TSO communicated with terminals by using TCAM (Telecommunications Access Method).  TCAM's name suggests that IBM hoped it would become the standard access method for data communications, but in fact TCAM was used almost entirely for TSO and was largely superseded by <link xlink:type="simple" xlink:href="../826/864826.xml">
VTAM</link> from the late 1970s onwards.</p>

</ss2>
</ss1>
<ss1>
<st>
 TP monitors </st>
<p>

System/360's hardware and operating systems were designed for processing <link xlink:type="simple" xlink:href="../285/37285.xml">
 batch </link> jobs which in extreme cases might run for hours.  As a result they were unsuitable for <link xlink:type="simple" xlink:href="../409/212409.xml">
transaction processing</link>, in which there are thousands of units of work per day and each takes between 30 seconds and a very few minutes.  In 1968 IBM released <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../260/391260.xml">
 IMS</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
</system>
 to handle transaction processing, and in 1969 it released <link xlink:type="simple" xlink:href="../505/391505.xml">
CICS</link>, a simpler <link xlink:type="simple" xlink:href="../193/7757193.xml">
transaction server</link> which a group of IBM's staff had developed for a customer. IMS was only available for OS/360 and its successors, but CICS was also available for DOS/360 and its successors.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2229%22])">29</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2230%22])">30</ref> For many years this type of  product was known as a "TP (teleprocessing) monitor". Strictly speaking TP monitors were not operating system components but application programs which managed other application programs. In the 1970s and 1980s several third-party TP monitors competed with CICS (notably Taskmaster, Shadow and Intercomm), but IBM gradually improved CICS to the point where most customers abandoned the alternatives.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2231%22])">31</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2232%22])">32</ref></p>

</ss1>
<ss1>
<st>
 Special systems for airlines </st>
<p>

In the 1950s airlines were expanding rapidly but this growth was held back by the difficulty of handling thousands of bookings manually (using card files).  In 1957 IBM signed a development contract with <airline wordnetid="102690081" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/24th_century.xml">
American Airlines</link></airline>
 for the development of a computerized reservations system, which became known as <link xlink:type="simple" xlink:href="../993/1155993.xml">
 SABRE</link>. The first experimental system went live in 1960 and the system took over all booking functions in 1964 - in both cases using <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../332/147332.xml">
IBM 7090</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 mainframes.  In the early 1960s IBM undertook similar projects for other airlines, and soon decided to produce a single standard booking system, <link xlink:type="simple" xlink:href="../988/530988.xml">
 PARS</link>, to run on <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> computers.</p>
<p>

In SABRE and early versions of PARS there was no separation between the application and operating system components of the software, but in 1968 IBM divided it into PARS (application) and <link xlink:type="simple" xlink:href="../932/525932.xml">
 ACP</link> (operating system).  Later versions of ACP were named ACP / TPF and then <link xlink:type="simple" xlink:href="../635/3276635.xml">
TPF</link> (Transaction Processing Facility) as non-airline businesses adopted this operating system for handling large volumes of online transactions.  The latest version is <link xlink:type="simple" xlink:href="../433/30433.xml">
z/TPF</link>.</p>
<p>

IBM developed ACP and its successors because: in the mid-1960s IBM's standard operating systems (<link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link> and <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>) were <link xlink:type="simple" xlink:href="../285/37285.xml">
 batch</link>-oriented and could not handle large numbers of short transactions quickly enough; even its <link xlink:type="simple" xlink:href="../027/3765027.xml">
 transaction monitor</link>s <link xlink:type="simple" xlink:href="../260/391260.xml">
 IMS</link> and <link xlink:type="simple" xlink:href="../505/391505.xml">
CICS</link>, which run under the control of standard general-purpose operating systems, are not fast enough for handling reservations on hundreds of flights from thousands of travel agents.</p>

</ss1>
<ss1>
<st>
 System/360 Model 20 </st>
<p>

This machine was labelled as part of the System/360 range because it could be connected to the same peripherals, but it was not program-compatible with other members of the System/360 range. Three operating systems were developed by IBM's labs in Germany, for different 360/20 configurations; with disks (minimum memory required: 12KB); no disk but with tapes (minimum memory required: 8KB); and punched-card-based (minimum memory required: 4KB).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2233%22])">33</ref>
These had no direct successors since IBM introduced the <link xlink:type="simple" xlink:href="../417/875417.xml">
System/3</link> range of small business computers in 1969 and System/3 had a different internal design from the 360/20 and different peripherals from IBM's mainframes.</p>

</ss1>
<ss1>
<st>
 System/360 Model 44 </st>
<p>

This was another processor which used the System/360 peripherals but had a different internal design. The 360/44 was designed for scientific computation using <link xlink:type="simple" xlink:href="../376/11376.xml">
floating point</link> numbers, such as geological or meteorological analyses. Because of the internal differences and the specialized type of work for which it was designed, the 360/44 had its own operating system, PS/44.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2234%22])">34</ref> The 360/44 and PS/44 had no direct successors.</p>

</ss1>
</sec>
<sec>
<st>
System/370 and virtual memory operating systems</st>
<p>

When <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../785/59785.xml">
 System/370</link></horizontal_surface>
</surface>
</artifact>
</platform>
 was announced in 1970 it offered essentially the same facilities as System/360 but with about 4 times the processor speeds of similarly-priced System/360 CPUs.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2235%22])">35</ref> Then in 1972 IBM announced "System/370 Advanced Functions", of which the main item was that future sales of System/370 would include <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> capability and this could also be retro-fitted to existing System/370 CPUs. Hence IBM also committed to delivering enhanced operating systems which could support the use of virtual memory.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2236%22])">36</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2237%22])">37</ref></p>
<p>

Most of the new operating systems were distinguished from their predecessors by the presence of "/VS" in their names. "VS" stands for "Virtual Storage" - IBM avoided the term "memory", allegedly because it might be interpreted to imply that their computers could forget things.</p>
<p>

All of today's IBM mainframe operating systems except <link xlink:type="simple" xlink:href="../433/30433.xml">
z/TPF</link> are descendants of those included in the "System/370 Advanced Functions" announcement - z/TPF is a descendant of <link xlink:type="simple" xlink:href="../932/525932.xml">
 ACP</link>, the system which IBM initially developed to support high-volume airline reservations applications.</p>

<ss1>
<st>
DOS/VS</st>
<p>

<link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/VS</link> was the successor to <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link>. In addition to virtual memory DOS/VS provided other enhancements:
<list>
<entry level="1" type="bullet">

5 memory partitions instead of 3. Later releases increased this to 7.</entry>
<entry level="1" type="bullet">

A relocating loader, so that it was no longer necessary to link-edit a separate copy of each program for each partition in which it was to run.</entry>
<entry level="1" type="bullet">

An improved <link xlink:type="simple" xlink:href="../801/469801.xml">
spooling</link> component, POWER/VS.</entry>
</list>
</p>
<p>

DOS/VS was followed by significant upgrades: DOS/VSE and VSE/SP (1980s), VSE/ESA (1991), and <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link> (2005).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2238%22])">38</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2239%22])">39</ref></p>

</ss1>
<ss1>
<st>
OS/VS1</st>
<p>

<link xlink:type="simple" xlink:href="../217/9815217.xml">
OS/VS1</link> was the successor to <link xlink:type="simple" xlink:href="../651/2660651.xml">
 OS/MFT</link>, and offered identical facilities apart from the addition of virtual memory.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref> IBM released fairly minor enhancements of OS/VS1 until 1983, and in 1984 announced that there would be no more. OS/VS1 is the only System/370 operating system which does not have a modern descendant.</p>

</ss1>
<ss1>
<st>
OS/VS2 and MVS</st>
<p>

OS/VS2 was initially just <link xlink:type="simple" xlink:href="../423/19161423.xml">
OS/MVT</link> plus virtual memory. But in 1974 IBM released what it described as OS/VS2 release 2 but which was really a new operating system which was upwards-compatible with the earlier OS/VS2. The new system was a complete rewrite and its most noticeable feature was that it supported multiple virtual address spaces 
- different applications thought they were using the same range of virtual addresses, but the new system's virtual memory facilities mapped these to different ranges of real memory addresses.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref> As a result the new system rapidly became known as "<link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link>" (Multiple Virtual Storages), the original OS/VS2 became known as "SVS" (Single Virtual Storage). IBM itself accepted this terminology and labelled MVS's successors "MVS/...".<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2240%22])">40</ref></p>
<p>

The other distinctive features of MVS were: its main catalog <it>had</it> to be a <link xlink:type="simple" xlink:href="../497/316497.xml">
VSAM</link> catalog; it supported <link>
 "tightly-coupled multiprocessing"</link> (2 or more CPUs share the same memory and copy of the operating system); it included a System Resources Manager (renamed Workload Manager in later versions) which allowed users to load additional work on to the system without reducing the performance of high-priority jobs.</p>
<p>

IBM has released several MVS upgrades: MVS/XA (1981), MVS/ESA (1985), OS/390 (1996) and currently z/OS (2001).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2241%22])">41</ref></p>

</ss1>
<ss1>
<st>
VM/370</st>
<p>

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
 VM/370</link></O>
 combined a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> facility with a single-user system called <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/154805.xml">
Conversational Monitor System</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
 (CMS); this combination provided <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> by allowing each user to run a copy of CMS on his / her own virtual machine.  This combination was a direct descendant of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2242%22])">42</ref> The virtual machine facility was often used for testing new software while normal production work continued on another virtual machine, and the CMS timesharing system was widely used for program development.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2243%22])">43</ref></p>
<p>

VM/370 was followed by a series of upgrades: VM/ESA, VM/SEPP, VM/BSEPP, VM/SP, VM/HPO, VMXA/SF, VMXA/SP and <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>. IBM also produced optional <link xlink:type="simple" xlink:href="../999/19999.xml">
microcode</link> assists  for VM and successors, to speed up the <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>'s <link xlink:type="simple" xlink:href="../558/1042558.xml">
emulation</link> of privileged instructions (those which only operating systems can use) on behalf of "guest" operating systems.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2244%22])">44</ref></p>

</ss1>
</sec>
<sec>
<st>
Technical notes</st>

<ss1>
<st>
Time-sharing</st>

<p>

<indent level="1">

<it>Main article: <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../958/30958.xml">
Time-sharing</link></instrumentality>
</artifact>
</system>
</it>
</indent>

Time-sharing (or timesharing) is based on the idea that computers are much faster than humans, so while one human user is reading what a computer has just displayed on a screen the computer can do some useful work for another user. Large time-sharing systems can have hundreds or even thousands of simultaneous users, and the memory required by their programs and data generally adds up to much more than the physical memory attached to the computer. Time-sharing systems solve this problem by various combinations of:
<list>
<entry level="1" type="bullet">

virtual memory, described below.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../525/4353525.xml">
swapping</link>, in other words while the computer is waiting for a response from one user it saves that user's programs and data on a disk, and reads it all back into its memory when the user sends a response. Swapping does not require virtual memory and was implemented before virtual memory. It transfers <it>all</it> of a user's programs and data between memory and disk, and is mainly driven by user's responses to information displayed by the system.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Virtual memory</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../354/32354.xml">
Virtual memory</link></it>
</indent>

Virtual memory is a technique by which programs are made to work as if they are using large contiguous areas of memory, but their code and data may be scattered over several areas of the computer's physical memory, and parts may even be saved on a disk until needed. In technical terms, the program is only aware of virtual addresses, not real ones. "Virtual memory" can also mean "the full range of virtual addresses".</p>
<p>

The main components of a virtual memory system are:
<list>
<entry level="1" type="bullet">

Page tables, which tell the hardware and operating system where code and data at all blocks of virtual memory (range of virtual addresses) are stored - either in various areas of real physical memory (<link xlink:type="simple" xlink:href="../847/25847.xml">
 RAM</link>) or on disk. </entry>
<entry level="1" type="bullet">

Dynamic address translation components ("DAT box") in the CPU, which use the page tables to find out where the contents of a virtual address are really stored. If the contents of the virtual address are currently in real memory, the DAT box tells the rest of the CPU which real address to use. If the contents of the virtual address are <it>not</it> in in real memory, the DAT box generates an <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link> (internal signal) which calls the paging supervisor into action.</entry>
<entry level="1" type="bullet">

The paging supervisor (part of the operating system) searches the disk for the contents of the virtual address, reads them into real physical memory, updates the page tables to reflect the new location of the  virtual address and finally tells the DAT box to start the search again. When the system is working fairly hard, all of the real physical memory is already in use and the paging supervisor must first save an area of real physical memory to disk and update the page table to say that the associated virtual addresses are no longer in real physical memory but saved on disk. Paging supervisors generally save and overwrite areas of real physical memory which have not been used recently, assuming that these will be the areas which are used least often. So every time the DAT box matches a virtual address with a real physical memory address, it must put a time-stamp in the page table entry for that virtual address.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Virtual machine</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../353/32353.xml">
Virtual machine</link></it>
</indent>

Virtual machine techniques enable several operating systems ("guest" operating systems) or other software to run on the same computer so that each thinks it has a whole computer to itself, and each of these simulated whole computers is called a "virtual machine". The operating system which really controls the computer is usually called a <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>. Two of the major components of the hypervisor are:
<list>
<entry level="1" type="bullet">

Virtual memory management. Each virtual machine appears to have a complete range of addresses from 0 to some large number, and virtual memory techniques prevent different virtual machines from confusing each other.</entry>
<entry level="1" type="bullet">

Simulating "privileged" functions on behalf of the "guest" operating systems. "Privileged" functions are those which enable programs to take over all or or at least large parts of the computer, and usually operating systems immediately terminate any other program which tries to use them. But "guest" operating systems think they are entitled to use these functions, so the hypervisor detects their attempts to do so and runs the privileged functions on their behalf, using virtual memory techniques to prevent them from corrupting memory areas used by other "guest" operating systems.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../872/14872.xml">
IBM mainframe</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../395/55395.xml">
History of operating systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../968/247968.xml">
Operating systems timeline</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.computerhistory.org/timeline/?year=1956">
Timeline of Computer History: 1956: Software</weblink>".&#32;  Computer History Museum.&#32;Retrieved on <link>
2007-09-04</link>.</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.oshistory.net/metadot/index.pl?id=2300;isa=Category;op=show">
OS History - MCP</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.bozemanlug.org/talks/linux_history.html">
A Brief History of Linux</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/exhibits/650/650_intro.html">
IBM 650 Magnetic Drum Data Processing Machine</weblink></entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.frobenius.com/ibsys.htm">
IBM 7090/94 IBSYS Operating System</weblink></entry>
<entry id="6">
 <cite style="font-style:normal">Vyssotsky, V. and Pierce, E.&#32;(Jan 1985).&#32;"<weblink xlink:type="simple" xlink:href="http://www.bozemanlug.org/talks/linux_history.html">
Putting Unix in Perspective</weblink>"&#32;<b>1</b>&#32;(3).</cite>&nbsp;</entry>
<entry id="7">
 <cite style="font-style:normal">&#32;"<weblink xlink:type="simple" xlink:href="http://csdl2.computer.org/persagen/DLAbsToc.jsp?resourcePath=/dl/mags/an/&amp;toc=comp/mags/an/2001/01/a1toc.xml&amp;DOI=10.1109/MAHC.2001.10001">
A Career Interview with Bernie Galler</weblink>"&#32;&#32;(Jan-Mar 2001). <it>IEEE Annals of the History of Computing</it>&#32;<b>23</b>&#32;(1): 22–33. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1109%2F85.910847">
10.1109/85.910847</weblink>.</cite>&nbsp;</entry>
<entry id="8">
<weblink xlink:type="simple" xlink:href="http://www.idinews.com/Backus.html">
Reminiscences of Fortran</weblink></entry>
<entry id="9">
 <cite style="font-style:normal">&#32;"<weblink xlink:type="simple" xlink:href="http://millosh.wordpress.com/2007/09/07/the-worlds-first-computer-operating-system-implemented-at-general-motors-research-labs-in-warren-michigan-in-1955/">
FORTRAN Anecdotes</weblink>"&#32;&#32;(Jan-Mar, 1984)&#32;<b>6</b>&#32;(1): 59–64.</cite>&nbsp;</entry>
<entry id="10">
John McCarthy, <it><weblink xlink:type="simple" xlink:href="http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html">
Reminiscences on the History of Time Sharing</weblink></it> - describes the origins of <link xlink:type="simple" xlink:href="../958/30958.xml">
timesharing</link></entry>
<entry id="11">
R. J. Creasy, <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/rd/255/ibmrd2505M.pdf">
"The origin of the VM/370 time-sharing system"</weblink>, <it>IBM Journal of Research &amp; Development</it>, Vol. 25, No. 5 (September 1981), pp. 483–90, <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link></entry>
<entry id="12">
Peter J. Denning, "Performance Modeling: Experimental Computer Science at its Best", <it>Communications of the ACM</it>, President's Letter (November 1981), available on-line at <weblink xlink:type="simple" xlink:href="http://cs.gmu.edu/cne/pjd/PUBS/ecs.pdf">
cs.gmu.edu</weblink> &ndash; a survey of research papers</entry>
<entry id="13">
Melinda Varian, <it>VM and the VM community, past present, and future,</it> SHARE 89 Sessions 9059-9061, 1977; available online at <weblink xlink:type="simple" xlink:href="http://www.princeton.edu/~melinda/25paper.pdf">
www.princeton.edu/~melinda</weblink> - outstanding source for CP/CMS and VM history</entry>
<entry id="14">
 <cite style="font-style:normal"><scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../772/974772.xml">
Denning, Peter</link></scientist>
&#32;(1997).&#32;"<weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/denning97before.html">
Before Memory was Virtual</weblink>". <it>In the Beginning: Recollections of Software Pioneers</it>.</cite>&nbsp;</entry>
<entry id="15">
Luanne Johnson&#32;(December 23, 2004).&#32;"<weblink xlink:type="simple" xlink:href="http://www.computerhistory.org/corphist/view.php?s=select&amp;cid=4">
Company Details - National CSS</weblink>".&#32;<it><artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<depository wordnetid="103177349" confidence="0.8">
<museum wordnetid="103800563" confidence="0.8">
<link xlink:type="simple" xlink:href="../478/1115478.xml">
Computer History Museum</link></museum>
</depository>
</facility>
</artifact>
</it>.&#32;Retrieved on <link>
2007-01-30</link>.</entry>
<entry id="17">
<weblink xlink:type="simple" xlink:href="http://webpages.mcgill.ca/staff/group3/dedwar1/web/msi/musicsp.htm">
McGill University - MUSIC/SP</weblink></entry>
<entry id="16">
 <cite style="font-style:normal" class="book"><link>
Harold Feinleib</link>&#32;(March 2005). <weblink xlink:type="simple" xlink:href="http://www.computerhistory.org/corphist/documents/doc-42ae226a5a4a1.pdf">
A technical history of National CSS</weblink>.&#32;<artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<depository wordnetid="103177349" confidence="0.8">
<museum wordnetid="103800563" confidence="0.8">
<link xlink:type="simple" xlink:href="../478/1115478.xml">
Computer History Museum</link></museum>
</depository>
</facility>
</artifact>
.</cite>&nbsp;</entry>
<entry id="19">
 <weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/exhibits/mainframe/mainframe_FT1.html">
 Mainframe Family tree &amp; chronology</weblink></entry>
<entry id="18">
<weblink xlink:type="simple" xlink:href="http://www.everything2.com/index.pl?node_id=1404097&amp;lastnode_id=0">
MTS History</weblink> by Dan Boulet for Everything2.com</entry>
<entry id="21">
 <cite style="font-style:normal">Johnston&#32;(April 1, 2005).&#32;"<weblink xlink:type="simple" xlink:href="http://www.zjournal.com/index.cfm?section=article&amp;aid=293">
VSE: A Look at the Past 40 Years</weblink>". <it>z/Journal</it>&#32;(April/May 2005).&#32;Thomas Communications, Inc..</cite>&nbsp;</entry>
<entry id="20">
Chuck Boyer, <weblink xlink:type="simple" xlink:href="http://www-306.ibm.com/software/os/zseries/pdf/360Revolution_0406.pdf">
<it>The 360 Revolution''</it></weblink></entry>
<entry id="23">
 <cite id="CITEREFAuslanderJaffe1973" style="font-style:normal">Auslander, M. A.&#32;&amp;&#32;Jaffe, J. F.&#32;(1973),&#32;"<weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/sj/124/ibmsj1204D.pdf">
Functional structure of IBM virtual storage operating systems
Part I: Influences of dynamic address translation on operating
system technology</weblink>",&#32;<it>IBM Systems Journal</it>&#32;(IBM)&#32;<b>4</b>, </cite>&nbsp;</entry>
<entry id="22">
Andrew S. Tanenbaum, <weblink xlink:type="simple" xlink:href="http://www.prenhall.com/divisions/esm/app/author_tanenbaum/custom/mos2e/">
<it>History of Modern Operating Systems''</it></weblink>, Prentice Hall (2001)</entry>
<entry id="25">
 <cite id="Reference-Brooks-1995" style="font-style:normal" class="book">Brooks, F.P.&#32;[1975]&#32;(1995). <weblink xlink:type="simple" xlink:href="http://www.developerdotstar.com/mag/bookreviews/read_manmonth.html">
The Mythical Man-Month: Essays on Software Engineering</weblink>.&#32;Addison-Wesley Professional.</cite>&nbsp;</entry>
<entry id="24">
<weblink xlink:type="simple" xlink:href="http://www.multicians.org/thvv/360-67.html">
The IBM 360/67 and CP/CMS</weblink></entry>
<entry id="27">
<weblink xlink:type="simple" xlink:href="http://www.plex86.org/Computer_Folklore/The-midseventies-SHARE-survey.html">
The midseventies SHARE survey</weblink> by an IBM user group</entry>
<entry id="26">
Jerry Johnston, <weblink xlink:type="simple" xlink:href="http://www.zjournal.com/index.cfm?section=article&amp;aid=293">
<it>VSE: A Look at the Past 40 Years''</it></weblink> (2005)</entry>
<entry id="29">
<weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/sj/374/blackman.html">
Technical Note - IMS celebrates thirty years as an IBM product</weblink></entry>
<entry id="28">
Ray Saunders, <weblink xlink:type="simple" xlink:href="http://www.os390-mvs.freesurf.fr/mvs360.htm">
"MVS... And Before OS/360 ?"</weblink></entry>
<entry id="31">
"<weblink xlink:type="simple" xlink:href="http://documentation.softwareag.com/adabas/ada744mfr/adamf/operator/linkapp.htm">
Linking Applications to Adabas</weblink>".&#32;Retrieved on <link>
2008-07-08</link>. lists the major 1970s-1980s TP monitors</entry>
<entry id="30">
<weblink xlink:type="simple" xlink:href="http://www-306.ibm.com/software/htp/cics/35/60s/">
CICS: 35 Years - 1960s</weblink></entry>
<entry id="34">
<weblink xlink:type="simple" xlink:href="http://www.beagle-ears.com/lars/engineer/comphist/model360.htm">
IBM 360/370/3090/390 Model Numbers</weblink></entry>
<entry id="35">
"<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/exhibits/mainframe/mainframe_PR370.html">
System/370 Announcement</weblink>".&#32;  IBM&#32;(June 30, 1970).</entry>
<entry id="32">
 <cite style="font-style:normal">Hugo, I.&#32;(Nov 15, 1989).&#32;"<weblink xlink:type="simple" xlink:href="http://findarticles.com/p/articles/mi_m0SMG/is_n14_v9/ai_7951050">
Metier the model, but few followed - UK software industry</weblink>". Retrieved on <link>
2008-07-08</link>.</cite>&nbsp;</entry>
<entry id="33">
<weblink xlink:type="simple" xlink:href="http://www-05.ibm.com/de/entwicklung/history/menues_en/menue_60.html">
History of IBM Deutschland Entwicklung GmbH - 1960s</weblink></entry>
<entry id="38">
<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/servers/eserver/zseries/zvse/about/history1980s.html">
About VSE - 1980s</weblink></entry>
<entry id="39">
<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/servers/eserver/zseries/zvse/about/history1990s.html">
About VSE - 1990s</weblink></entry>
<entry id="36">
"<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/exhibits/dpd50/dpd50_chronology4.html">
DPD chronology (1970-1974)</weblink>".&#32;  IBM. DPD = Data Processing Division, which was responsible for IBM's medium and large systems.</entry>
<entry id="37">
 <cite style="font-style:normal" class="book">&#32;(1991) <weblink xlink:type="simple" xlink:href="http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&amp;tid=8159">
IBM's 360 and Early 370 Systems</weblink>.&#32;MIT Press. ISBN 0262161230.</cite>&nbsp;</entry>
<entry id="42">
 <cite id="CITEREFCreasy1981" style="font-style:normal">Creasy, R. J.&#32;(1981),&#32;"<weblink xlink:type="simple" xlink:href="http://domino.watson.ibm.com/tchjr/journalindex.nsf/0/d6b9939ef2f3540b85256bfa0067f4d6">
The Origin of the VM/370 Time-Sharing System</weblink>",&#32;<it>IBM Journal of Research and Development</it>&#32;<b>25</b>(5):  483, </cite>&nbsp;</entry>
<entry id="43">
 <cite id="CITEREFSeawrightMacKinnon1979" style="font-style:normal">Seawright, L. H.&#32;&amp;&#32;MacKinnon, R. A.&#32;(1979),&#32;"<weblink xlink:type="simple" xlink:href="http://domino.watson.ibm.com/tchjr/journalindex.nsf/0/d6b9939ef2f3540b85256bfa0067f4d6">
VM/370—A study of multiplicity and usefulness</weblink>",&#32;<it>IBM Journal of Research and Development</it>&#32;<b>18</b>(1):  4, </cite>&nbsp;</entry>
<entry id="40">
<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/exhibits/3033/3033_TR01.html">
3033 Technical press release</weblink></entry>
<entry id="41">
<weblink xlink:type="simple" xlink:href="http://www.operating-system.org/betriebssystem/_english/bs-mvs.htm">
 MVS, OS/390, z/OS operating system</weblink></entry>
<entry id="44">
 <cite style="font-style:normal">Osisek, D.L., Jackson, K.M., and Gum, P.H.&#32;(March 1991).&#32;"<weblink xlink:type="simple" xlink:href="http://findarticles.com/p/articles/mi_m0ISJ/is_n1_v30/ai_10540516/pg_2">
ESA/390 interpretive-execution architecture, foundation for VM/ESA - technical</weblink>". <it>IBM Systems Journal</it>.</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
</bdy>
</article>
