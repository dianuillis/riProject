<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:06:25[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Median search</title>
<id>13988356</id>
<revision>
<id>202087758</id>
<timestamp>2008-03-30T17:16:44Z</timestamp>
<contributor>
<username>SmackBot</username>
<id>433328</id>
</contributor>
</revision>
<categories>
<category>Search algorithms</category>
</categories>
</header>
<bdy>

A <b>median search</b> is an algorithm that finds the median value of list. It belongs to the <link xlink:type="simple" xlink:href="../154/201154.xml">
"divide and conquer" algorithm</link> category and more precisely it is a <link xlink:type="simple" xlink:href="../786/552786.xml">
selection algorithm</link>. A <link xlink:type="simple" xlink:href="../786/552786.xml">
selection algorithm</link> finds the <it>k</it>th element of a list with <it>N</it> elements. To calculate the median, we set <it>k</it>&nbsp;=&nbsp;(<it>N</it>&nbsp;+&nbsp;1)/2 at the selection algorithm.
<sec>
<st>
 Algorithm </st>
<p>
 
The median search algorithm results in finding the median in a unsorted array of numbers.
Algorithm could be as follows:-
input parameters:-  An array =&amp;gt; a;
median value =&amp;gt; median= n/2     if n is even.
= (n-1)/2 if n is odd.
output parameter:-  result =&amp;gt; median of the array.</p>
<p>

// let f(a) be a funtion that returns the size of the array a.</p>

<p>

int mediansearch(median,a)
{
int x=a[median];
// create three array.. a1,a2,a3.
// a1 has elements lesser than x.
// a2 has elements equal to x.
// a3 has elements greater than x.</p>
<p>

if( f(a1) &amp;gt;= median )
return mediansearch(median,a1);
if( ( f(a1)+f(a2) ) &amp;gt;= median )
return x;  
else
return mediansearch( median - (f(a1)+f(a2)),a3);
}</p>


</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../837/18837.xml">
Median</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../687/10324687.xml">
Geometric median</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>


</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 Erik Demaine <weblink xlink:type="simple" xlink:href="http://courses.csail.mit.edu/6.897/spring03/scribe_notes/L16/lecture16.pdf">
"Divide-and-conquer algorithms"</weblink></entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
