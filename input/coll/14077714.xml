<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:18:24[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Ruppert&apos;s algorithm</title>
<id>14077714</id>
<revision>
<id>239785938</id>
<timestamp>2008-09-20T14:24:31Z</timestamp>
<contributor>
<username>Cydebot</username>
<id>1215485</id>
</contributor>
</revision>
<categories>
<category>Geometric algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../716/3050716.xml">
mesh generation</link>, <b>Ruppert's algorithm</b>, also known as <b>Delaunay refinement</b>, is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for creating quality <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../864/8864.xml">
Delaunay triangulation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
s.  The algorithm takes a <link xlink:type="simple" xlink:href="../371/7941371.xml">
piecewise linear</link> system (PLS) and returns a conforming Delaunay triangulation of only quality triangles.  A triangle is considered poor-quality if it has a circumradius to shortest edge ratio larger than some prescribed threshold.  <p>

When doing computer simulations such as <link xlink:type="simple" xlink:href="../924/305924.xml">
computational fluid dynamics</link>, one starts with a model such as a 2D outline of a wing section.
The input to a 2D <link xlink:type="simple" xlink:href="../581/18233581.xml">
finite element method</link> needs to be in the form of triangles that fill all space, and each triangle to be filled with one kind of material -- in this example, either "air" or "wing".
Long, skinny triangles cannot be simulated accurately.
The simulation time is generally proportional to the number of triangles, and so one wants to minimize the number of triangles, while still using enough triangles to give a reasonably accurate results -- typically by using an <link xlink:type="simple" xlink:href="../072/3772072.xml">
unstructured grid</link>.</p>
<p>

The computer uses Ruppert's algorithm (or some similar meshing algorithm) to convert the polygonal model into triangles suitable for the finite element method.</p>
<p>

The algorithm consists of two main operations.</p>
<p>

<list>
<entry level="1" type="bullet">

 The midpoint of a segment with non-empty diametral circles is inserted into the triangulation.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../432/1926432.xml">
circumcenter</link> of a poor-quality triangle is inserted into the triangulation, unless this circumcenter lies in the diametral circle of some segment.  In this case, the encroached segment is split instead.  </entry>
</list>
</p>
<p>

These operations are repeated until no poor-quality triangles exist and all segments are not encroached.  </p>
<p>

According to Shewchuk,
"Ruppert's algorithm for two-dimensional quality mesh generation is perhaps the first theoretically guaranteed meshing algorithm to be truly satisfactory in practice."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

Jim Ruppert discovered this algorithm in the early 1990's.
Since then, various small improvements have been made.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

An extension of Ruppert's algorithm in two dimensions is implemented in the freely available (yet non-<link xlink:type="simple" xlink:href="../635/10635.xml">
free</link>) <weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~quake/triangle.html">
Triangle</weblink> package.</p>
<p>

Ruppert's algorithm has been shown to terminate for any input PLS with no small angles.  The algorithm can be extended to handle any input by slightly relaxing the quality requirement on the output (Miller et al., 2003).  </p>
<p>

Ruppert's algorithm can be naturally extended to three dimensions, however its output guarantees are somewhat weaker due to the sliver type tetrahedron.  </p>
<p>

In two dimensions, the poor-quality threshold must be at least &amp;radic;<it>2</it>.  This means that any triangle which contains some angle less than about 20.7 degrees is poor-quality.  </p>

<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../864/8864.xml">
Delaunay triangulation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/177668.xml">
Voronoi diagram</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../191/988191.xml">
Polygon mesh</link></artifact>
</structure>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 G. L. Miller, S. E. Pav, and N. J. Walkington. When and why Ruppert's algorithm works.  In Proceedings of the 12th International Meshing Roundtable, pages 91-102. Sandia National Laboratory, September 2003.</entry>
<entry level="1" type="bullet">

 J. Ruppert. A Delaunay refinement algorithm for quality 2-dimensional mesh generation, 1995.</entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
