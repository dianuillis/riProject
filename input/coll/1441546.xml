<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:33:00[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Paravirtualization</title>
<id>1441546</id>
<revision>
<id>237783744</id>
<timestamp>2008-09-11T20:17:14Z</timestamp>
<contributor>
<username>Xanderdad</username>
<id>3582966</id>
</contributor>
</revision>
<categories>
<category>Virtualization software</category>
</categories>
</header>
<bdy>

In computing, <b>paravirtualization</b> is a <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> technique that presents a software interface to <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>s that is similar but not identical to that of the underlying hardware.<p>

Paravirtualization may allow the <link xlink:type="simple" xlink:href="../216/1267216.xml">
virtual machine monitor</link> (VMM) to be simpler or virtual machines that run on it to achieve performance closer to non-virtualized hardware. However, <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s must be explicitly <link xlink:type="simple" xlink:href="../804/214804.xml">
ported</link> to run on top of a paravirtualized VMM.</p>

<sec>
<st>
History</st>
<p>

This is a new term for an old idea. IBM's <link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link> operating system has offered such a facility since 1972<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> (and earlier as <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link>). In the VM world, this is referred to as a "DIAGNOSE code", because it uses an instruction code used normally only by hardware maintenance software and thus undefined.</p>
<p>

The <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
 operating system calls its equivalent a "hypercall".  All are the same thing: a system call to the <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link> below.  Such calls require support in the "guest" operating system, which has to have hypervisor-specific code to make such calls.</p>
<p>

The term "paravirtualization" was first used in the research literature in association with the <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../699/754699.xml">
Denali</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 virtual machine monitor<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.  The term is also used to describe the <link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link>, <link xlink:type="simple" xlink:href="../763/95763.xml">
L4</link> and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../093/16445093.xml">
TRANGO</link></company>
 <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>s. All these projects use paravirtualization techniques to support high performance virtual machines on <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> hardware by implementing a virtual machine that does not implement the hard-to-virtualize parts of the actual x86 instruction set.</p>
<p>

An example of using paravirtualization for performance, the virtual monitor can present the host operating system with an <it>intelligent <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../613/243613.xml">
NIC</link></generic>
</it> with support for DMA-based sending of packets, even though the NIC on the real system lacks this capability.  Sending packets is then done entirely by the virtual monitor and NIC interrupts may be processed by the monitor too.  Since delivering interrupts to the host operating system is expensive, performance can improve.</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.vm.ibm.com/history/">
VM History and Heritage</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
.&#32;Retrieved on <link>
2007-10-10</link>.</entry>
<entry id="2">
A. Whitaker, M. Shaw, and S. D. Gribble, "Denali: Lightweight Virtual Machines for Distributed and
Networked Applications", Univ. of Washington Technical Report 02-02-01, (2002). (Available from <weblink xlink:type="simple" xlink:href="http://denali.cs.washington.edu/pubs/index.html">
Denali publications, technical reports, and talks</weblink>)</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Advanced_Power_Virtualization</link> (IBM PowerVM)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../286/594286.xml">
Cooperative Linux</link> (coLinux)</entry>
<entry level="1" type="bullet">

 <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
Exokernel</link></kernel>
</natural_object>
</plant_part>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../133/8412133.xml">
KVM</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../832/10536832.xml">
Logical Domains</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../089/5211089.xml">
OpenVZ</link></software>
</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../669/1465669.xml">
QEMU</link></causal_agent>
</copycat>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../367/5362367.xml">
Virtual Machine Interface</link> (VMI)</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../768/866768.xml">
Win4Lin</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></entry>
</list>
</p>




</sec>
</bdy>
</article>
