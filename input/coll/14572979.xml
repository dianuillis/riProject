<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:33:54[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Block Lanczos algorithm for nullspace of a matrix over a finite field</title>
<id>14572979</id>
<revision>
<id>219063087</id>
<timestamp>2008-06-13T11:53:46Z</timestamp>
<contributor>
<username>Fivemack</username>
<id>230572</id>
</contributor>
</revision>
</header>
<bdy>

The <b>Block Lanczos algorithm for nullspace of a matrix over a finite field</b> is a procedure for finding the <link xlink:type="simple" xlink:href="../679/59679.xml">
nullspace</link> of a <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> using only multiplication of the matrix by long, thin matrices.  These long, thin matrices are considered as vectors of tuples of finite-field entries, and so tend to be called 'vectors' in descriptions of the algorithm.<p>

It was developed by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/14573146.xml">
Peter Montgomery</link></decoder>
</mathematician>
</employee>
</scientist>
</causal_agent>
</worker>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and published in 1995 <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>; it is based on, and bears a strong resemblance to, the <link xlink:type="simple" xlink:href="../852/2593852.xml">
Lanczos algorithm</link> for finding <link xlink:type="simple" xlink:href="../429/2161429.xml">
eigenvalue</link>s of large sparse real matrices.</p>
<p>

The Block Lanczos algorithm is amongst the most efficient methods known for finding nullspaces, which is the final stage in <link xlink:type="simple" xlink:href="../491/15491.xml">
integer factorisation</link> algorithms such as the <link xlink:type="simple" xlink:href="../340/582340.xml">
quadratic sieve</link> and <link xlink:type="simple" xlink:href="../734/152734.xml">
number field sieve</link>, and its development has been entirely driven by this application.</p>

<sec>
<st>
 Parallelisation issues </st>

<p>

The algorithm is essentially not parallel:  it is of course possible to distribute the matrix-'vector' multiplication, but the whole vector must be available for the combination step at the end of each iteration, so all the machines involved in the calculation must be on the same fast network.  In particular, it is not possible to widen the vectors and distribute slices of vectors to different independent machines.</p>
<p>

The <link xlink:type="simple" xlink:href="../717/17911717.xml">
Block Wiedemann algorithm</link> is more useful in contexts where several systems each large enough to hold the entire matrix are available, since in that algorithm the systems can run independently until a final stage at the end.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal">Montgomery, P L&#32;(1995).&#32;"A Block Lanczos Algorithm for Finding Dependencies over GF(2)". <it>EUROCRYPT '95</it>&#32;<b>921</b>: 106â€“120.</cite>&nbsp;</entry>
</reflist>


</p>
</sec>
</bdy>
</article>
