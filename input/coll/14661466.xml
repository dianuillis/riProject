<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:37:25[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Object recognition</title>
<id>14661466</id>
<revision>
<id>244294131</id>
<timestamp>2008-10-10T03:44:51Z</timestamp>
<contributor>
<username>Billinghurst</username>
<id>3596390</id>
</contributor>
</revision>
<categories>
<category>Misleading articles</category>
<category>Computer vision</category>
<category>Wikipedia articles needing context</category>
<category>Object recognition and categorization</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article only describes one highly specialized aspect of its associated subject.</b>
Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Object_recognition&amp;action=edit">
improve this article</weblink>by adding more general information.</col>
</row>
</table>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>Some parts of this article may be misleading</b>.
Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Object_recognition&amp;action=edit">
clarify this article</weblink>. Suggestions may be on the .</col>
</row>
</table>


<b>Object recognition</b> in <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link> is a task of finding given object in an image or video sequence. Humans recognize a multitude of objects in images with little effort, despite the fact that the image of the objects may vary somewhat in different view points, in many different sizes / scale or even when they are translated or rotated. Objects can even be recognized when they are partially obstructed from view. This task is still a challenge for <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link> systems in general. <link>
David Lowe</link> pioneered the <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link> approach to extracting and using scale-invariant <link>
SIFT</link> features from images to perform reliable object recognition. </p>
<p>

For any object in an image, there are many 'features' which are interesting points on the object, that can be extracted to provide a "feature" description of the object. This description extracted from a training image can then be used to identify the object when attempting to locate the object in a test image containing many other objects. It is important that the set of features extracted from the training image is robust to changes in image scale, noise, illumination and local geometric distortion, for performing reliable recognition. Lowe's patented method <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>can robustly identify objects even among clutter and under partial occlusion because his <link>
SIFT</link> feature descriptor is invariant to scale, orientation, affine distortion and partially invariant to illumination changes<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. This article presents Lowe's object recognition method in a nutshell and mentions a few competing techniques available for object recognition under clutter and partial occlusion.</p>


<sec>
<st>
 David Lowe's method </st>
<p>

<link>
SIFT</link> keypoints of objects are first extracted from a set of reference images<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and stored in a database. An object is recognised in a new image by individually comparing each feature from the new image to this database and finding candidate matching features based on <link xlink:type="simple" xlink:href="../932/53932.xml">
Euclidean distance</link> of their feature vectors. From the full set of matches, subsets of keypoints that agree on the object and its location, scale, and orientation in the new image are identified to filter out good matches. The determination of consistent clusters is performed rapidly by using an efficient <link xlink:type="simple" xlink:href="../833/13833.xml">
hash table</link> implementation of the generalized <link xlink:type="simple" xlink:href="../897/434897.xml">
Hough transform</link>. Each cluster of 3 or more features that agree on an object and its pose is then subject to further detailed model verification and subsequently outliers are discarded. Finally the probability that a particular set of features indicates the presence of an object is computed, given the accuracy of fit and number of probable false matches. Object matches that pass all these tests can be identified as correct with high confidence<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>.</p>

<p>

<table class="wikitable">
<row>
<header>
Problem</header>
<header>
Technique</header>
<header>
Advantage</header>
</row>
<row>
<col>
key localization / scale / rotation</col>
<col>
DoG / scale - space pyramid / orientation assignment</col>
<col>
accuracy, stability, scale &amp; rotational invariance</col>
</row>
<row>
<col>
geometric distortion</col>
<col>
blurring / resampling of local image orientation planes</col>
<col>
affine invariance</col>
</row>
<row>
<col>
indexing and matching</col>
<col>
nearest neighbor / Best Bin First search</col>
<col>
Efficiency / speed</col>
</row>
<row>
<col>
Cluster identification</col>
<col>
Hough Transform voting</col>
<col>
reliable pose models</col>
</row>
<row>
<col>
Model verification / outlier detection</col>
<col>
Linear least squares</col>
<col>
better error tolerance with fewer matches</col>
</row>
<row>
<col>
Hypothesis acceptance</col>
<col>
Bayesian Probability analysis</col>
<col>
reliability</col>
</row>
</table>
</p>

</sec>
<sec>
<st>
Key stages</st>


<ss1>
<st>
Scale-invariant feature detection</st>

<p>

Lowe's method for image feature generation called the <b>Scale Invariant Feature Transform</b> (<link>
SIFT</link>) transforms an image into a large collection of feature vectors, each of which is invariant to image translation, scaling, and rotation, partially invariant to illumination changes and robust to local geometric distortion. These features share similar properties with neurons in <link xlink:type="simple" xlink:href="../622/4231622.xml">
inferior temporal cortex</link> that are used for object recognition in primate vision<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>. Key locations are defined as maxima and minima of the result of  <link xlink:type="simple" xlink:href="../943/3334943.xml">
difference of Gaussians</link> function applied in <link xlink:type="simple" xlink:href="../661/1703661.xml">
scale-space</link> to a series of smoothed and resampled images. Low contrast candidate points and edge response points along an edge are discarded. Dominant orientations are assigned to localized keypoints. These steps ensure that the keypoints are more stable for matching and recognition. <link>
SIFT</link> descriptors robust to local affine distortion are then obtained by considering pixels around a radius of the key location, blurring and resampling of local image orientation planes. </p>

</ss1>
<ss1>
<st>
Feature matching and indexing</st>

<p>

Indexing is the problem of storing <link>
SIFT</link> keys and identifying matching keys from the new image. Lowe used a modification of the <link xlink:type="simple" xlink:href="../725/1676725.xml">
k-d tree</link> algorithm called the <b>Best-bin-first search</b> method <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>that can identify the <link xlink:type="simple" xlink:href="../823/1702823.xml">
nearest neighbor</link>s with high probability using only a limited amount of computation. The BBF algorithm uses a modified search ordering for the <link xlink:type="simple" xlink:href="../725/1676725.xml">
k-d tree</link> algorithm so that bins in feature space are searched in the order of their closest distance from the query location. This search order requires the use of a <link xlink:type="simple" xlink:href="../996/13996.xml">
heap (data structure)</link> based <link xlink:type="simple" xlink:href="../485/24485.xml">
priority queue</link> for efficient determination of the search order. The best candidate match for each keypoint is found by identifying its <link xlink:type="simple" xlink:href="../823/1702823.xml">
nearest neighbor</link> in the database of keypoints from training images. The <link xlink:type="simple" xlink:href="../823/1702823.xml">
nearest neighbor</link>s are defined as the keypoints with minimum <link xlink:type="simple" xlink:href="../932/53932.xml">
Euclidean distance</link> from the given descriptor vector. The probability that a match is correct can be determined by taking the ratio of distance from the closest neighbor to the distance of the second closest. </p>
<p>

Lowe<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> rejected all matches in which the distance ratio is greater than 0.8, which eliminates 90% of the false matches while discarding less than 5% of the correct matches. To further improve the efficiency of the best-bin-first algorithm search was cut off after checking the first 200 <link xlink:type="simple" xlink:href="../823/1702823.xml">
nearest neighbor</link> candidates. For a database of 100,000 keypoints, this provides a speedup over exact <link xlink:type="simple" xlink:href="../823/1702823.xml">
nearest neighbor</link> search by about 2 orders of magnitude yet results in less than a 5% loss in the number of correct matches. </p>

</ss1>
<ss1>
<st>
Cluster identification by Hough transform voting</st>
<p>

<link xlink:type="simple" xlink:href="../897/434897.xml">
Hough Transform</link> is used to cluster reliable model hypotheses to search for keys that agree upon a particular model <link xlink:type="simple" xlink:href="../587/256587.xml">
pose</link>. <link xlink:type="simple" xlink:href="../897/434897.xml">
Hough transform</link> identifies clusters of features with a consistent interpretation by using each feature to vote for all object <link xlink:type="simple" xlink:href="../587/256587.xml">
pose</link>s that are consistent with the feature. When clusters of features are found to vote for the same pose of an object, the probability of the interpretation being correct is much higher than for any single feature. An entry in a <link xlink:type="simple" xlink:href="../833/13833.xml">
hash table</link> is created predicting the model location, orientation, and scale from the match hypothesis.The <link xlink:type="simple" xlink:href="../833/13833.xml">
hash table</link> is searched to identify all clusters of at least 3 entries in a bin, and the bins are sorted into decreasing order of size. </p>
<p>

Each of the <link>
SIFT</link> keypoints specifies 2D location, scale, and orientation, and each matched keypoint in the database has a record of the keypoint’s parameters relative to the training image in which it was found. The similarity transform implied by these 4 parameters is only an approximation to the full 6 degree-of-freedom pose space for a 3D object and also does not account for any non-rigid deformations. Therefore, Lowe<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> used broad bin sizes of 30 degrees for orientation, a factor of 2 for scale, and 0.25 times the maximum projected training image dimension (using the predicted scale) for location. The <link>
SIFT</link> key samples generated at the larger scale are given twice the weight of those at the smaller scale. This means that the larger scale is in effect able to filter the most likely neighbours for checking at the smaller scale. This also improves recognition performance by giving more weight to the least-noisy scale. To avoid the problem of boundary effects in bin assignment, each keypoint match votes for the 2 closest bins in each dimension, giving a total of 16 entries for each hypothesis and further broadening the pose range. </p>

</ss1>
<ss1>
<st>
Model verification by linear least squares</st>

<p>

Each identified cluster is then subject to a verification procedure in which a <link xlink:type="simple" xlink:href="../872/484872.xml">
linear least squares</link> solution is performed for the parameters of the <link xlink:type="simple" xlink:href="../449/38449.xml">
affine transformation</link> relating the model to the image. The <link xlink:type="simple" xlink:href="../449/38449.xml">
affine transformation</link> of a model point [x y]T to an image point [u v]T can be written as below </p>

<p>

<indent level="1">

<math>
\begin{bmatrix} u \\ v \end{bmatrix} = \begin{bmatrix} m1 &amp; m2 \\ m3 &amp; m4 \end{bmatrix} \begin{bmatrix} x \\ y \end{bmatrix} + \begin{bmatrix} tx \\ ty \end{bmatrix}
</math>
</indent>
</p>
<p>

where the model translation is [tx ty]T and the affine rotation, scale, and stretch are represented by the parameters m1, m2, m3 and m4. To solve for the transformation parameters the equation above can be rewritten to gather the unknowns into a column vector.</p>
<p>

<indent level="1">

<math>
\begin{bmatrix} x &amp; y &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; x &amp; y &amp; 0 &amp; 1 \\ ....\\ ....\end{bmatrix} \begin{bmatrix}m1 \\ m2 \\ m3 \\ m4 \\ tx \\ ty \end{bmatrix} = \begin{bmatrix} u \\ v  \\ . \\  . \end{bmatrix}
</math>
</indent>

This equation shows a single match, but any number of further matches can be added, with each match contributing two more rows to the first and last matrix. At least 3 matches are needed to provide a solution.
We can write this linear system as   </p>
<p>

<indent level="1">

<math>A\hat{\mathbf{x}} \approx \mathbf{b},</math>
</indent>

where <it>A</it> is a known <it>m</it>-by-<it>n</it> <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> (usually with <it>m</it> &amp;gt; <it>n</it>), <b>x</b> is an unknown <it>n</it>-dimensional parameter <link xlink:type="simple" xlink:href="../370/32370.xml">
vector</link>, and <b>b</b> is a known <it>m</it>-dimensional measurement vector. </p>
<p>

Therefore the minimizing vector <math>\hat{\mathbf{x}}</math> is a solution of the <b>normal equation</b> 
<indent level="1">

<math> A^T \! A \hat{\mathbf{x}} = A^T \mathbf{b}. </math>
</indent>

The solution of the system of linear equations is given in terms of the matrix <math>(A^TA)^{-1}A^T</math> , called the <link xlink:type="simple" xlink:href="../258/331258.xml">
pseudoinverse</link> of <it>A</it>, by</p>
<p>

<indent level="1">

<math> \hat{\mathbf{x}} = (A^T\!A)^{-1} A^T \mathbf{b}. </math> 
</indent>

which minimizes the sum of the squares of the distances from the projected model locations to the corresponding image locations. </p>


</ss1>
<ss1>
<st>
Outlier detection</st>

<p>

<link xlink:type="simple" xlink:href="../951/160951.xml">
Outlier</link>s can now be removed by checking for agreement between each image feature and the model, given the parameter solution.  Given the <link xlink:type="simple" xlink:href="../872/484872.xml">
linear least squares</link> solution, each match is required to agree within half the error range that was used for the parameters in the <link xlink:type="simple" xlink:href="../897/434897.xml">
Hough transform</link> bins. As outliers are discarded, the <link xlink:type="simple" xlink:href="../872/484872.xml">
linear least squares</link> solution is re-solved with the remaining points, and the process iterated.  If fewer than 3 points remain after discarding <link xlink:type="simple" xlink:href="../951/160951.xml">
outlier</link>s, then the match is rejected. In addition, a top-down matching phase is used to add any further matches that agree with the projected model position, which may have been missed from the <link xlink:type="simple" xlink:href="../897/434897.xml">
Hough transform</link> bin due to the similarity transform approximation or other errors.</p>
<p>

The final decision to accept or reject a model hypothesis is based on a detailed probabilistic model<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>. This method first computes the expected number of false matches to the model pose, given the projected size of the model, the number of features within the region, and the accuracy of the fit. A <representation wordnetid="105926676" confidence="0.8">
<interpretation wordnetid="105928513" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/4890.xml">
Bayesian probability</link></interpretation>
</representation>
 analysis then gives the probability that the object is present based on the actual number of matching features found. A model is accepted if the final probability for a correct interpretation is greater than 0.98. Lowe's SIFT based object recognition gives excellent results except under wide illumination variations and under non-rigid transformations.</p>

</ss1>
</sec>
<sec>
<st>
Competing methods for scale invariant object recognition under clutter / partial occlusion</st>

<p>

RIFT <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> is a rotation-invariant generalization of SIFT. The RIFT descriptor is constructed using circular normalized patches divided into concentric rings of equal width and within each ring a gradient orientation histogram is computed. To maintain rotation invariance, the orientation is measured at each point relative to the direction pointing outward from the center.</p>
<p>

G-RIF<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> : Generalized Robust Invariant Feature  is a general context descriptor which encodes edge orientation, edge density and hue information in a unified form combining perceptual information with spatial encoding. The object recognition scheme uses neighbouring context based voting to estimate object models. </p>
<p>

"<link xlink:type="simple" xlink:href="../697/12341697.xml">
SURF</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> : Speeded Up Robust Features" is a performant scale and rotation-invariant interest point detector / descriptor claimed to approximate or even outperform previously proposed schemes with respect to repeatability, distinctiveness, and robustness. <link xlink:type="simple" xlink:href="../697/12341697.xml">
SURF</link> relies on integral images for image convolutions to reduce computation time, builds on the strengths of the leading existing detectors and descriptors (using a fast <link xlink:type="simple" xlink:href="../108/412108.xml">
Hessian matrix</link>-based measure for the detector and a distribution-based descriptor). It describes a distribution of <happening wordnetid="107283608" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<movement wordnetid="107309781" confidence="0.8">
<wave wordnetid="107352190" confidence="0.8">
<ripple wordnetid="107344663" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../905/50905.xml">
Haar wavelet</link></psychological_feature>
</ripple>
</wave>
</movement>
</event>
</happening>
 responses within the interest point neighbourhood. Integral images are used for speed and only 64 dimensions are used reducing the time for feature computation and matching. The indexing step is based on the sign of the <link xlink:type="simple" xlink:href="../706/174706.xml">
Laplacian</link>,which increases the matching speed and the robustness of the descriptor.</p>
<p>

PCA-SIFT <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>and <link xlink:type="simple" xlink:href="../751/12341751.xml">
GLOH</link> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref> are variants of <link>
SIFT</link>. PCA-SIFT descriptor is a vector of image gradients in x and y direction computed within the support region. The gradient region is sampled at 39x39 locations, therefore the vector is of dimension 3042. The dimension is reduced
to 36 with <link xlink:type="simple" xlink:href="../059/38059.xml">
PCA</link>. Gradient location-orientation histogram (<link xlink:type="simple" xlink:href="../751/12341751.xml">
GLOH</link>) is an extension of the <link>
SIFT</link> descriptor designed to increase its robustness and distinctiveness. The <link>
SIFT</link> descriptor is computed for a log-polar location grid with three bins in radial direction (the radius set to 6, 11, and 15) and 8 in angular direction, which results in 17 location bins. The central bin is not divided in angular directions. The gradient orientations are quantized in 16 bins resulting in 272 bin histogram. The size of this descriptor is reduced with <link xlink:type="simple" xlink:href="../059/38059.xml">
PCA</link>. The <link xlink:type="simple" xlink:href="../752/191752.xml">
covariance matrix</link> for <link xlink:type="simple" xlink:href="../059/38059.xml">
PCA</link> is estimated on image patches collected from various images. The 128 largest <link xlink:type="simple" xlink:href="../429/2161429.xml">
eigenvector</link>s are used for description.</p>

</sec>
<sec>
<st>
Applications</st>
<p>

Object recognition methods has the following applications:
<list>
<entry level="1" type="bullet">

 Image panoramas<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref></entry>
<entry level="1" type="bullet">

 Image watermarking<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></entry>
<entry level="1" type="bullet">

 Global robot localization<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=6,711,293">
U.S. Patent 6,711,293</weblink><weblink xlink:type="simple" xlink:href="http://www.pat2pdf.org/pat2pdf/foo.pl?number=6,711,293">
&nbsp;</weblink>, "Method and apparatus for identifying scale invariant features in an image and use of same for locating an object in an image", David Lowe's patent for the SIFT algorithm</entry>
<entry id="2">
Lowe, D. G., “Object recognition from local scale-invariant features”, International Conference on Computer Vision, Corfu, Greece, September 1999.</entry>
<entry id="3">
Lowe, D. G., “Distinctive Image Features from Scale-Invariant Keypoints”, International Journal of Computer Vision, 60, 2, pp. 91-110, 2004.</entry>
<entry id="4">
Serre, T., Kouh, M., Cadieu, C., Knoblich, U., Kreiman, G., Poggio, T., “A Theory of Object Recognition: Computations and Circuits in the Feedforward Path of the Ventral Stream in Primate Visual Cortex”, Computer Science and Artificial Intelligence Laboratory Technical Report, December 19, 2005 MIT-CSAIL-TR-2005-082.</entry>
<entry id="5">
Beis, J., and Lowe, D.G “Shape indexing using approximate nearest-neighbour search in high-dimensional spaces”, Conference on Computer Vision and Pattern Recognition,Puerto Rico, 1997, pp. 1000–1006.</entry>
<entry id="6">
Lowe, D.G., Local feature view clustering for 3D object recognition. IEEE Conference on Computer Vision and Pattern Recognition,Kauai, Hawaii, 2001, pp. 682-688.</entry>
<entry id="7">
Lazebnik, S., Schmid, C., and Ponce, J., Semi-Local Affine Parts for Object Recognition, BMVC, 2004.</entry>
<entry id="8">
Sungho Kim, Kuk-Jin Yoon, In So Kweon, "Object Recognition Using a Generalized Robust Invariant Feature and Gestalt’s Law of Proximity and Similarity," Conference on Computer Vision and Pattern Recognition Workshop (CVPRW'06),  2006</entry>
<entry id="9">
Bay, H., Tuytelaars, T., Gool, L.V., "SURF: Speeded Up Robust Features", Proceedings of the ninth European Conference on Computer Vision, May 2006.</entry>
<entry id="10">
Ke, Y., and Sukthankar, R., PCA-SIFT: A More Distinctive Representation for Local Image DescriptorsComputer Vision and Pattern Recognition, 2004.</entry>
<entry id="11">
Mikolajczyk, K., and Schmid, C., "A performance evaluation of local descriptors", IEEE Transactions on Pattern Analysis and Machine Intelligence, 10, 27, pp 1615--1630, 2005.</entry>
<entry id="12">
Brown, M., and Lowe, D.G., "Recognising Panoramas," ICCV, p. 1218,  Ninth IEEE International Conference on Computer Vision (ICCV'03) - Volume 2,  Nice,France, 2003</entry>
<entry id="13">
Li, L., Guo, B., and Shao, K., " Geometrically robust image watermarking using scale-invariant feature transform and Zernike moments," Chinese Optics Letters, Volume 5, Issue 6, pp. 332-335, 2007.</entry>
<entry id="14">
Se,S., Lowe, D.G., and Little, J.J.,"Vision-based global localization and mapping for mobile robots", IEEE Transactions on Robotics, 21, 3 (2005), pp. 364-375.</entry>
</reflist>
</p>


</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/lowe04distinctive.html">
Lowe, D. G., “Distinctive Image Features from Scale-Invariant Keypoints”, International Journal of Computer Vision, 60, 2, pp. 91-110, 2004.</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.ubc.ca/spider/lowe/pubs.html">
David Lowe's Publications</weblink> </entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.ubc.ca/~lowe/keypoints/">
David Lowe's Demo Software : SIFT keypoint detector</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.vision.ee.ethz.ch/~surf/index.html">
SURF: Speeded up robust features </weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://lear.inrialpes.fr/pubs/2005/MS05/">
Mikolajczyk, K., and Schmid, C., "A performance evaluation of local descriptors", IEEE Transactions on Pattern Analysis and Machine Intelligence, 10, 27, pp 1615--1630, 2005.</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~yke/pcasift/">
PCA-SIFT: A More Distinctive Representation for Local Image Descriptors</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-cvr.ai.uiuc.edu/ponce_grp/publication/paper/bmvc04.pdf">
 Lazebnik, S., Schmid, C., and Ponce, J., Semi-Local Affine Parts for Object Recognition, BMVC, 2004. </weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://user.cs.tu-berlin.de/~nowozin/libsift/">
libsift: Scale Invariant Feature Transform implementation</weblink></entry>
</list>
</p>


</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../421/14669421.xml">
3D single object recognition</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../345/1208345.xml">
Scale-invariant feature transform</link> (SIFT)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../697/12341697.xml">
SURF</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../224/1284224.xml">
Feature detection (computer vision)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../669/7046669.xml">
Interest point detection</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../099/977099.xml">
Template matching</link></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../706/126706.xml">
Pattern recognition</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
</list>
</p>



</sec>
</bdy>
</article>
