<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:41:35[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Bland&apos;s rule</title>
<id>14747415</id>
<revision>
<id>240658828</id>
<timestamp>2008-09-24T11:19:30Z</timestamp>
<contributor>
<username>Tinucherian</username>
<id>1951636</id>
</contributor>
</revision>
<categories>
<category>Optimization algorithms</category>
</categories>
</header>
<bdy>

In applied mathematics, <b>Bland's rule</b> (also known as <b>Bland's algorithm</b> or <b>Bland's anti-cycling rule</b>) is a technique used in the <link xlink:type="simple" xlink:href="../458/349458.xml">
simplex method</link> for ensuring that a <link xlink:type="simple" xlink:href="../730/43730.xml">
linear optimization</link> problem always converges to an answer. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> Whenever there is a degenerate corner in the LP (e.g., when <it>Ax</it> = 0), then the simplex algorithm may cycle forever. Bland's rule can break these cycles by using a simple heuristic to decide which column to pivot on. It was developed by Cornell University Engineering professor Robert Bland.
<sec>
<st>
Algorithm</st>
<p>

One uses Bland's rule during an iteration of the simplex method to decide what first what column (known as the <it>entering column</it>) and then row (known as the <it>leaving row</it>) in the tableau to pivot on. Assuming that the problem is to minimize the objective function, the algorithm is loosely defined as follows:</p>
<p>

<list>
<entry level="1" type="number">

 Choose the lowest-numbered (i.e., leftmost) nonbasic column <it>t</it> with a positive cost.</entry>
<entry level="1" type="number">

 Now among the rows choose the one with the lowest ratio between the cost and the index in the matrix where the index is greater than zero. If several rows have the same minimum ratio, choose the first one (i.e., topmost) of them.</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal" class="book">Christos H. Papadimitriou, Kenneth Steiglitz&#32;(1998-01-29). Combinatorial Optimization: Algorithms and Complexity.&#32;Dover Publications,&#32;53-55.</cite>&nbsp;</entry>
<entry id="2">
<university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../157/4157.xml">
Brown University</link></university>
 - Department of Computer Science&#32;(2007-10-18).&#32;"<weblink xlink:type="simple" xlink:href="http://www.cs.brown.edu/courses/csci1490/notes/day9.pdf">
Notes on the Simplex Algorithm</weblink>".&#32;Retrieved on <link>
2007-12-17</link>.</entry>
</reflist>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
