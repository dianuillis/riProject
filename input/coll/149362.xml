<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:18:25[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>SAPHIRE</title>
<id>149362</id>
<revision>
<id>197233243</id>
<timestamp>2008-03-10T14:22:34Z</timestamp>
<contributor>
<username>Riskspectrum</username>
<id>6634382</id>
</contributor>
</revision>
<categories>
<category>Reliability engineering</category>
<category>Windows software</category>
</categories>
</header>
<bdy>

For the gem, see <link xlink:type="simple" xlink:href="../469/29469.xml">
sapphire</link>.
<b>SAPHIRE</b> is a probabilistic risk and reliability assessment software tool. SAPHIRE stands for <it>Systems Analysis Programs for Hands-on Integrated Reliability Evaluations</it>. The system was developed for the U.S. <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../201/165201.xml">
Nuclear Regulatory Commission</link></agency>
 (NRC) by the <structure wordnetid="104341686" confidence="0.8">
<building wordnetid="102913152" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../118/981118.xml">
Idaho National Laboratory</link></artifact>
</building>
</structure>
.<p>

Development began in the mid-1980s when the NRC began exploring two notions:  1) that <link xlink:type="simple" xlink:href="../354/2080354.xml">
Probabilistic Risk Assessment</link> (PRA) information could be displayed and manipulated using the emerging microcomputer technology of the day and 2) the rapid advancement of PRA technology required a relatively inexpensive and readily available platform for teaching PRA concepts to students.</p>

<sec>
<st>
The history of SAPHIRE</st>

<p>

1987  Version 1 of the code called IRRAS (now known as SAPHIRE) introduced an innovative way to draw, edit, and analyze graphical <link xlink:type="simple" xlink:href="../526/70526.xml">
fault tree</link>s.</p>
<p>

1989  Version 2 is released incorporating the ability to draw, edit, and analyze graphical event trees.</p>
<p>

1990  Analysis improvements to IRRAS led to the release of Version 4 and the formation of the IRRAS Users Group.</p>
<p>

1992  Creation of 32-bit IRRAS, Version 5, resulted in an order-of-magnitude decrease in analysis time. New features included: end state analysis; fire, flood, and seismic modules; rule-base cut set processing; and rule-based fault tree to event tree linking.</p>
<p>

1997  SAPHIRE for Windows, version 6.x, is released. Use of a Windows user-inferface makes SAPHIRE easy to learn. The new "plug-in" feature allows analysts to expand on the built-in probability calculations.</p>
<p>

1999  SAPHIRE for Windows, version 7.x, is released. Enhancements are made to the event tree "linking rules" and to the use of dual language capability inside the SAPHIRE database.</p>
<p>

2005  SAPHIRE for Windows, version 8.x, undergoes development.</p>
<p>

The evolution of software and related analysis methods has led to the current generation of the SAPHIRE tool.  The current SAPHIRE software code-base started in the mid-1980s as part of the NRC’s general risk activities.  In 1986, work commenced on the precursor to the SAPHIRE software – this software package was named the Integrated Reliability and Risk Analysis System, or IRRAS.  IRRAS was the first IBM compatible PC-based risk analysis tool developed at the <structure wordnetid="104341686" confidence="0.8">
<building wordnetid="102913152" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../118/981118.xml">
Idaho National Laboratory</link></artifact>
</building>
</structure>
, thereby allowing users to work in a graphical interface rather than with mainframe punch cards.  While limited to the analysis of only fault trees of medium size, version 1 of IRRAS was the initial step in the progress that today has led to the SAPHIRE software, software that is capable of running on multiple processors simultaneously and is able to handle extremely large analyses.</p>


</sec>
<sec>
<st>
 Advanced Analysis </st>
<p>

SAPHIRE contains an advanced minimal cut set solving engine.  This solver, which has been fine tuned and optimized over time, has a variety of techniques for analysis, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 Extensive use of recursive routines</entry>
<entry level="1" type="bullet">

 Restructuring and expansion of the logic model</entry>
<entry level="1" type="bullet">

 Conversion of complemented gates and treatment of success branches</entry>
<entry level="1" type="bullet">

 Logic pruning due to TRUE or FALSE house events</entry>
<entry level="1" type="bullet">

 Coalescing gates and the identification of modules and independent sub-trees</entry>
<entry level="1" type="bullet">

 Intermediate results caching</entry>
<entry level="1" type="bullet">

 Bit-table Boolean absorption</entry>
</list>
</p>
<p>

Use of these and other optimization methods has resulted in SAPHIRE having one of the most powerful analysis engines in use for <link xlink:type="simple" xlink:href="../354/2080354.xml">
probabilistic risk assessment</link> today.</p>

</sec>
<sec>
<st>
 Basic Event Probabilities </st>

<p>

General basic event probability capabilities for SAPHIRE include:</p>
<p>

<list>
<entry level="1" type="bullet">

 Four different Markov models to represent the failure of a single component</entry>
<entry level="1" type="bullet">

 A common cause module to determine a group common cause failure probability for groups of up to six redundant components</entry>
<entry level="1" type="bullet">

 A load-capacity calculation allowing the user to specify a load and capacity distribution to determine P(Capacity  Load)</entry>
<entry level="1" type="bullet">

 A human reliability analysis calculator to determine a human failure event probability based upon the task type and compounding performance shaping factors</entry>
<entry level="1" type="bullet">

 The use of template events which allow for failure information to be shared where applicable</entry>
<entry level="1" type="bullet">

 A seismic fragility method that uses an associated earthquake acceleration level to determine a components failure probability</entry>
<entry level="1" type="bullet">

 House events to set basic events to logically true or false or to ignore the event</entry>
<entry level="1" type="bullet">

 A module to determine the loss-of-offsite power frequency and recoverability</entry>
</list>
</p>
<p>

SAPHIRE has been designed to handle large fault trees, where a tree may have up to 64,000 basic events and gates.  To handle the fault trees, two mechanisms for developing and modifying the fault tree are available – a graphical editor and a hierarchical logic editor.  Analysts may use either editor; if the logic is modified SAPHIRE can redraw the fault tree graphic.  Conversely, if the user modifies the fault tree graphic, SAPHIRE automatically updates the associated logic.  Applicable objects available in the fault tree editors include basic events and several gate types, including: OR, AND, NOR, NAND, and N-of-M.  In addition to these objects, SAPHIRE has a unique feature known as “table events” that allows the user to group up to eight basic events together on the fault tree graphic, thereby compacting the size of the fault tree on the printed page or computer screen.  All of these objects though represent traditional static-type Boolean logic models.  Models explicitly capturing dynamic or time-dependent situations are not available in current versions of SAPHIRE.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../550/286550.xml">
life-critical</link> system</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../909/442909.xml">
reliability theory</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../278/29278.xml">
safety engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../151/22151.xml">
nuclear reactor</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../827/4827.xml">
biomedical engineering</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 http://saphire.inl.gov</entry>
</list>



<list>
<entry level="1" type="bullet">

 http://www.riskspectrum.com PSA Software (RiskSpectrum)</entry>
</list>
</p>
</sec>
</bdy>
</article>
