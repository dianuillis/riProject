<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:19:40[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Hyper-threading</title>
<id>151443</id>
<revision>
<id>242834698</id>
<timestamp>2008-10-03T21:29:53Z</timestamp>
<contributor>
<username>Miami33139</username>
<id>6082304</id>
</contributor>
</revision>
<categories>
<category>Threads</category>
<category>x86 architecture</category>
<category>Wikipedia articles needing context</category>
<category>Wikipedia introduction cleanup</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 The introduction to this article provides <b>insufficient context</b> for those unfamiliar with the subject.
Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Hyper-threading&amp;action=edit">
improve the article</weblink> with a .</col>
</row>
</table>



<p>

<b>Hyper-threading</b> (officially termed <b>Hyper-Threading Technology</b> or <b>HTT</b>) is an Intel-proprietary technology used to improve parallelization of computations performed on PC microprocessors via <link xlink:type="simple" xlink:href="../021/315021.xml">
simultaneous multithreading</link>. It is an improvement on <link xlink:type="simple" xlink:href="../877/313877.xml">
super-threading</link>. It debuted in U.S. Patent 4,847,755 (Gordon Morrison et al.) and can be seen in use on the <link xlink:type="simple" xlink:href="../920/269920.xml">
Intel Xeon</link>, <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../228/165228.xml">
Pentium 4</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 and <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link>
Atom</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 processors. The technology improves processor performance under certain workloads by providing useful work for <link xlink:type="simple" xlink:href="../828/9828.xml">
execution unit</link>s that would otherwise be idle, for example during a <link xlink:type="simple" xlink:href="../181/849181.xml#xpointer(//*[./st=%22Cache+misses%22])">
cache miss</link>.  A processor with Hyper-Threading enabled is treated by the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> as two processors instead of one.</p>
<p>

Hyper-threading relies on support in the operating system as well as the CPU. Conventional multiprocessor support is not enough to take advantage of hyper-threading.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> For example, even though Windows 2000 supports multiple CPUs, Intel does not recommend that hyper-threading be enabled under that operating system. </p>

<sec>
<st>
 Performance </st>
<p>

<image location="right" width="250px" src="Hyper-threaded_CPU.png" type="thumb">
<caption>

Hyper-threading scheme
</caption>
</image>

The advantages of Hyper-Threading are listed as: improved support for multi-threaded code, allowing multiple threads to run simultaneously, improved reaction and response time.</p>
<p>

According to Intel, the first implementation only used an additional 5% of the <link>
die area</link> over the comparable non-hyperthreaded processor, yet yielded performance improvements of 15â€“30%.</p>
<p>

Intel claims up to a 30% speed improvement compared against an otherwise identical, non-<link xlink:type="simple" xlink:href="../021/315021.xml">
simultaneous multithreading</link> Pentium 4. The performance improvement seen is very application-dependent, however, and some programs actually slow down slightly when Hyper Threading Technology is turned on. This is due to the <link xlink:type="simple" xlink:href="../970/3206970.xml">
replay system</link> of the Pentium 4 tying up valuable execution resources, thereby starving the other thread. (The Pentium 4 Prescott core gained a replay queue, which reduces execution time needed for the replay system, but this is not enough to completely overcome the performance hit.) However, any performance degradation is unique to the Pentium 4 (due to various architectural nuances), and is not characteristic of <link xlink:type="simple" xlink:href="../021/315021.xml">
simultaneous multithreading</link> in general.</p>

</sec>
<sec>
<st>
 Details </st>
<p>

Hyper-Threading works by duplicating certain sections of the processor&mdash;those that store the <link xlink:type="simple" xlink:href="../789/325789.xml">
architectural state</link>&mdash;but not duplicating the main execution resources.  This allows a Hyper-Threading equipped processor to pretend to be two "logical" processors to the host operating system, allowing the operating system to schedule two threads or processes simultaneously.  Where execution resources in a non-Hyper-Threading capable processor are not used by the current task, and especially when the processor is stalled, a Hyper-Threading equipped processor may use those execution resources to execute another scheduled task.   (The processor may stall due to a <link xlink:type="simple" xlink:href="../181/849181.xml#xpointer(//*[./st=%22Cache+misses%22])">
cache miss</link>, <link xlink:type="simple" xlink:href="../877/879877.xml">
branch misprediction</link>, or <link xlink:type="simple" xlink:href="../217/4118217.xml">
data dependency</link>.)</p>
<p>

Except for its performance implications, this innovation is transparent to operating systems and programs.  All that is required to take advantage of Hyper-Threading is <link xlink:type="simple" xlink:href="../318/50318.xml">
symmetric multiprocessing</link> (SMP) support in the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>, as the logical processors appear as standard separate processors.</p>
<p>

However, it is possible to optimize operating system behavior on Hyper-Threading capable systems, such as the Linux techniques discussed in <weblink xlink:type="simple" xlink:href="http://www.kerneltraffic.org/kernel-traffic/topics/Hyperthreading.html">
Kernel Traffic</weblink>. For example, consider an SMP system with two physical processors that are both Hyper-Threaded (for a total of four logical processors). If the operating system's process <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduler</link> is unaware of Hyper-Threading, it would treat all four processors the same. As a result, if only two processes are eligible to run, it might choose to schedule those processes on the two logical processors that happen to belong to one of the physical processors. Thus, one CPU would be extremely busy while the other CPU would be completely idle, leading to poor overall performance. This problem can be avoided by improving the scheduler to treat logical processors differently from physical processors; in a sense, this is a limited form of the scheduler changes that are required for <link xlink:type="simple" xlink:href="../643/40643.xml">
NUMA</link> systems.</p>

</sec>
<sec>
<st>
 Security </st>
<p>

In May 2005 Colin Percival presented a paper, <weblink xlink:type="simple" xlink:href="http://www.daemonology.net/papers/htt.pdf">
Cache Missing for Fun and Profit</weblink> (PDF file), demonstrating that a malicious thread operating with limited privileges can monitor the execution of another thread through their influence on a shared data cache, allowing for the theft of cryptographic keys.  Note that while the attack described in the paper was demonstrated on an Intel Pentium 4 with HyperThreading processor, the same techniques could theoretically apply to any system where caches are shared between two or more non-mutually-trusted execution threads; see also <link xlink:type="simple" xlink:href="../678/667678.xml">
side channel attack</link>.</p>

</sec>
<sec>
<st>
Future</st>
<p>

Older Pentium 4 based CPUs use Hyper-Threading, but the current-generation <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../672/199672.xml">
Pentium M</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 based cores <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../988/5048988.xml#xpointer(//*[./st=%22Merom%22])">
Merom</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
, <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../988/5048988.xml#xpointer(//*[./st=%22Conroe%22])">
Conroe</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
, and <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../920/269920.xml#xpointer(//*[./st=%225100-series+.22Woodcrest.22%22])">
Woodcrest</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 do not.  Hyper-Threading is a specialized form of <link xlink:type="simple" xlink:href="../021/315021.xml">
simultaneous multithreading</link> (SMT), which has been said to be on Intel's plans for the generation after Merom, Conroe and Woodcrest.</p>
<p>

More recently Hyper-Threading has been criticised as being energy inefficient. For example, specialist low-power CPU design company <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../066/1311066.xml">
ARM</link></company>
 has stated <link xlink:type="simple" xlink:href="../021/315021.xml">
SMT</link> can use up to 46% more power than dual CPU designs. Furthermore,  they claim <link xlink:type="simple" xlink:href="../021/315021.xml">
SMT</link> increases <link xlink:type="simple" xlink:href="../891/665891.xml">
cache thrashing</link> by 42%, whereas <link xlink:type="simple" xlink:href="../207/3503207.xml">
dual core</link> results in a 37% decrease<weblink xlink:type="simple" xlink:href="http://www.theinquirer.net/default.aspx?article=33438">
http://www.theinquirer.net/default.aspx?article=33438</weblink>. These considerations are claimed to be the reason Intel dropped <link xlink:type="simple" xlink:href="../021/315021.xml">
SMT</link> from the following <link xlink:type="simple" xlink:href="../175/1410175.xml">
microarchitecture</link>. </p>
<p>

The <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../938/13949938.xml">
Intel Atom</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 is an in-order single-core processor with Hyper-Threading, for low power mobile PCs and low-price desktop PCs.</p>
<p>

However, for 2008 Intel has claimed that the upcoming <link xlink:type="simple" xlink:href="../322/6833322.xml">
Nehalem</link> will see the return of Hyper-Threading. Nehalem is projected to contain up to 8 cores and will be able to effectively scale 16+ threads.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../207/3503207.xml">
Multi-core</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../824/1274824.xml">
Barrel processor</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
Operating Systems that include optimizations for <weblink xlink:type="simple" xlink:href="http://www.intel.com/support/processors/sb/CS-017343.htm">
Hyper-Threading Technology</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.intel.com/pressroom/archive/releases/20070328fact.htm">
Intel Details Upcoming New Processor Generations</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 Intel's <weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/platform-technology/hyper-threading/">
high level overview of Hyper-threading</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.osdcom.info/content/view/30/39/">
HyperThreading Overview</weblink> from OSDEV Community</entry>
<entry level="1" type="bullet">

 An <weblink xlink:type="simple" xlink:href="http://arstechnica.com/articles/paedia/cpu/hyperthreading.ars">
introductory article</weblink> from Ars Technica</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="ftp://download.intel.com/technology/itj/2002/volume06issue01/vol6iss1_hyper_threading_technology.pdf">
<it>Hyper-Threading Technology Architecture and Microarchitecture''</it></weblink>, technical description of Hyper-Threading (<b>1.2 MB <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>-file</b>)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://patft.uspto.gov/netahtml/PTO/srchnum.htm">
http://patft.uspto.gov/netahtml/PTO/srchnum.htm</weblink> Enter Patent Number 4,847,755</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.theregister.co.uk/2005/08/23/intel_next_gen_architecture/">
Merom, Conroe, Woodcrest lose HyperThreading</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://msdn.microsoft.com/msdnmag/issues/05/06/HyperThreading/">
Hyper-threading on MSDN Magazine</weblink></entry>
<entry level="1" type="definition">

 Security</entry>
<entry level="1" type="bullet">

 <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../536/1775536.xml">
KernelTrap</link></web_site>
 discussion: <weblink xlink:type="simple" xlink:href="http://kerneltrap.org/node/5103">
Hyper-Threading Vulnerability</weblink></entry>
<entry level="1" type="definition">

 Performance problems</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://news.zdnet.co.uk/hardware/chips/0,39020354,39237341,00.htm">
ZDnet: Hyperthreading hurts server performance, say developers</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.theinquirer.net/default.aspx?article=33438">
ARM is no fan of HyperThreading</weblink> - Outlines problems of SMT solutions</entry>
</list>
</p>

</sec>
<sec>
<st>
 Sources </st>

<p>

<it>Replay: Unknown Features of the NetBurst Core</it> <weblink xlink:type="simple" xlink:href="http://www.xbitlabs.com/articles/cpu/display/replay.html">
http://www.xbitlabs.com/articles/cpu/display/replay.html</weblink></p>


</sec>
</bdy>
</article>
