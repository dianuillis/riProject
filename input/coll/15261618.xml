<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 03:04:04[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Constellation model</title>
<id>15261618</id>
<revision>
<id>241784736</id>
<timestamp>2008-09-29T15:21:51Z</timestamp>
<contributor>
<username>Ardfern</username>
<id>170952</id>
</contributor>
</revision>
<categories>
<category>Learning in computer vision</category>
</categories>
</header>
<bdy>

The <b>constellation model</b> is a probabilistic, <link xlink:type="simple" xlink:href="../578/1222578.xml">
generative model</link> for category-level object recognition in <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link>.  Like other <link xlink:type="simple" xlink:href="../436/14662436.xml">
part-based models</link>, the constellation model attempts to represent an object class by a set of <it>N</it> parts under mutual geometric constraints.  Because it considers the geometric relationship between different parts, the Constellation Model differs significantly from appearance-only, or "<link>
bag-of-words</link>" representation models, which explicitly disregard the location of image features.<p>

<image width="150px" src="Fergus_constellation_model_2005.png">
<caption>

An example of intra-class variation.  Though the cars are different, a Constellation Model (N=3) selects parts that are consistent in both appearance and relative location.
</caption>
</image>
</p>
<p>

The problem of defining a generative model for object recognition is difficult.  The task becomes significantly complicated by factors such as background clutter, occlusion, and variations in viewpoint, illumination, and scale.  Ideally, we would like the particular representation we choose to be robust to as many of these factors as possible.</p>
<p>

In category-level recognition, the problem is even more challenging because of the fundamental problem of intra-class variation.  Even if two objects belong to the same visual category, their appearances may be significantly different.  However, for structured objects such as cars, bicycles, and people, separate instances of objects from the same category are subject to similar geometric constraints.  For this reason, particular parts of an object梥uch as the headlights or tires of a car梬ill have consistent appearances and relative positions.  The Constellation Model takes advantage of this fact by explicitly modeling the relative location, relative scale, and appearance of these parts for a particular object category.  Model parameters are estimated using an <link xlink:type="simple" xlink:href="../497/233497.xml">
unsupervised learning</link> algorithm, meaning that the visual concept of an object class can be extracted from an unlabeled set of training images, even if that set contains "junk" images or instances of objects from multiple categories.  It can also account for the absence of model parts due to appearance variability, occlusion, clutter, or detector error.</p>

<sec>
<st>
 History </st>

<p>

The idea for a "parts and structure" model was originally introduced by Fischler and Elschlager in 1973.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  This model has since been built upon and extended in many directions.  The Constellation Model, as introduced by Dr. Perona and his colleagues, was a probabilistic adaptation of this approach.</p>
<p>

In the late '90s, Burl et al.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> revisited the Fischler and Elschlager model for the purpose of face recognition.  In their work, Burl et al. used manual selection of constellation parts in training images to construct a statistical model for a set of detectors and the relative locations at which they should be applied.  In 2000, Weber et al. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> made the significant step of training the model using a more unsupervised learning process, which precluded the necessity for tedious hand-labeling of parts.  Their algorithm was particularly remarkable because it performed well even on cluttered and occluded image data.  Fergus et al.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref> then improved upon this model by making the learning step fully unsupervised, having both shape and appearance learned simultaneously, and accounting explicitly for the relative scale of parts.</p>

</sec>
<sec>
<st>
 The method of Weber and Welling et al.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> </st>

<p>

<image width="150px" src="Weber_constellation_model_overview_2000.png">
<caption>

A graphical overview of the Weber &amp; Welling method.  In the first stage, a set of candidate parts (features) are selected.  Then, in model learning, a small set of parts are selected to comprise the object model.
</caption>
</image>
</p>
<p>

In the first step, a standard <link xlink:type="simple" xlink:href="../669/7046669.xml">
interest point detection</link> method, such as Harris <link xlink:type="simple" xlink:href="../759/4921759.xml">
corner detection</link>, is used to generate interest points.  <link xlink:type="simple" xlink:href="../455/3193455.xml">
Image feature</link>s generated from the vicinity of these points are then clustered using <link xlink:type="simple" xlink:href="../407/1860407.xml">
k-means</link> or another appropriate algorithm.  In this process of <link xlink:type="simple" xlink:href="../805/47805.xml">
vector quantization</link>, one can think of the centroids of these clusters as being representative of the appearance of distinctive object parts.  Appropriate <link xlink:type="simple" xlink:href="../905/14784905.xml">
feature detector</link>s are then trained using these clusters, which can be used to obtain a set of candidate parts from images.</p>
<p>

<image width="150px" src="Weber_constellation_model_clusters_2000.png">
<caption>

Points of interest (left) identified on a training image of a human face.  A sample of patterns obtained by k-means clustering of small image patches is shown for faces (center) and cars (right).
</caption>
</image>
</p>
<p>

As a result of this process, each image can now be represented as a set of parts.  Each part has a type, corresponding to one of the aforementioned appearance clusters, as well as a location in the image space.</p>

<ss1>
<st>
 Basic generative model </st>

<p>

Weber &amp; Welling here introduce the concept of <it>foreground</it> and <it>background</it>.  <it>Foreground</it> parts correspond to an instance of a target object class, whereas <it>background</it> parts correspond to background clutter or false detections.</p>
<p>

Let <it>T</it> be the number of different types of parts.  The positions of all parts extracted from an image can then be represented in the following "matrix,"</p>
<p>

<indent level="1">

<math>

X^o =
\begin{pmatrix}
  x_{11}x_{12},{\cdots} ,x_{1N_1} \\
  x_{21}x_{22},{\cdots} ,x_{2N_2} \\
  \vdots \\
  x_{T1}x_{T2},{\cdots} ,x_{TN_2}
\end{pmatrix}

</math>
</indent>

where <math>N_i\,</math> represents the number of parts of type <math>i \in \{1,\dots,T\}</math> observed in the image.  The superscript <it>o</it> indicates that these positions are <it>observable</it>, as opposed to <it>missing</it>.  The positions of unobserved object parts can be represented by the vector <math>x^m\,</math>.  Suppose that the object will be composed of <math>F\,</math> distinct foreground parts.  For notational simplicity, we assume here that <math>F = T\,</math>, though the model can be generalized to <math>F &amp;gt; T\,</math>.  A <it>hypothesis</it> <math>h\,</math> is then defined as a set of indices, with <math>h_i = j\,</math>, indicating that point <math>x_{ij}\,</math> is a foreground point in <math>X^o\,</math>.  The generative probabilistic model is defined through the joint probability density <math>p(X^o,x^m,h)\,</math>.</p>

</ss1>
<ss1>
<st>
 Model details </st>

<p>

The rest of this section summarizes the details of Weber &amp; Welling's model for a single component model.  The formulas for multiple component models<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> are extensions of those described here.</p>
<p>

To parametrize the joint probability density, Weber &amp; Welling introduce the auxiliary variables <math>b\,</math> and <math>n\,</math>, where <math>b\,</math> is a binary vector encoding the presence/absence of parts in detection (<math>b_i = 1\,</math> if <math>h_i &amp;gt; 0\,</math>, otherwise <math>b_i = 0\,</math>), and <math>n\,</math> is a vector where <math>n_i\,</math> denotes the number of <it>background</it> candidates included in the <math>i^{th}</math> row of <math>X^o\,</math>.  Since <math>b\,</math> and <math>n\,</math> are completely determined by <math>h\,</math> and the size of <math>X^o\,</math>, we have <math>p(X^o,x^m,h) = p(X^o,x^m,h,n,b)\,</math>.  By decomposition,</p>
<p>

<indent level="1">

<math>
p(X^o,x^m,h,n,b) = p(X^o,x^m|h,n,b)p(h|n,b)p(n)p(b)\,
</math>
</indent>

The probability density over the number of background detections can be modeled by a <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../561/41561.xml">
Poisson distribution</link></distribution>
</arrangement>
</structure>
,</p>
<p>

<indent level="1">

<math>
p(n) = \prod_{i=1}^T \frac{1}{n_i!}(M_i)^{n_i}e^{-M_i}
</math>
</indent>

where <math>M_i\,</math> is the average number of background detections of type <math>i\,</math> per image.</p>
<p>

Depending on the number of parts <math>F\,</math>, the probability <math>p(b)\,</math> can be modeled either as an explicit table of length <math>2^F\,</math>, or, if <math>F\,</math> is large, as <math>F\,</math> independent probabilities, each governing the presence of an individual part.</p>
<p>

The density <math>p(h|n,b)\,</math> is modeled by</p>
<p>

<indent level="1">

<math>
p(h|n,b) = 

\begin{cases}
  \frac{1}{ \textstyle \prod_{f=1}^F N_f^{b_f}}, &amp; \mbox{if } h \in H(b,n) \\
  0, &amp; \mbox{for other } h
\end{cases}

</math>
</indent>

where <math>H(b,n)\,</math> denotes the set of all hypotheses consistent with <math>b\,</math> and <math>n\,</math>, and <math>N_f\,</math> denotes the total number of detections of parts of type <math>f\,</math>.  This expresses the fact that all consistent hypotheses, of which there are <math>\textstyle \prod_{f=1}^F N_f^{b_f}</math>, are equally likely in the absence of information on part locations.</p>
<p>

And finally,</p>
<p>

<indent level="1">

<math>
p(X^o,x^m|h,n) = p_{fg}(z)p_{bg}(x_{bg})\,
</math>
</indent>

where <math>z = (x^ox^m)\,</math> are the coordinates of all foreground detections, observed and missing, and <math>x_{bg}\,</math> represents the coordinates of the background detections.  Note that foreground detections are assumed to be independent of the background.  <math>p_{fg}(z)\,</math> is modeled as a joint Gaussian with mean <math>\mu\,</math> and covariance <math>\Sigma\,</math>.</p>

</ss1>
<ss1>
<st>
Classification</st>

<p>

The ultimate objective of this model is to classify images into classes "object present" (class <math>C_1\,</math>) and "object absent" (class <math>C_0\,</math>) given the observation <math>X^o\,</math>.  To accomplish this, Weber &amp; Welling run part detectors from the learning step exhaustively over the image, examining different combinations of detections.  If occlusion is considered, then combinations with missing detections are also permitted.  The goal is then to select the class with maximum a posteriori probability, by considering the ratio</p>
<p>

<indent level="1">

<math>
\frac{p(C_1|X^o)}{p(C_0|X^o)} \propto \frac{\sum_h p(X^o,h|C_1)}{p(X^o,h_0|C_0)}
</math>
</indent>

where <math>h_0\,</math> denotes the null hypothesis, which explains all parts as background noise.  In the numerator, the sum includes all hypotheses, including the null hypothesis, whereas in the denominator, the only hypothesis consistent with the absence of an object is the null hypothesis.  In practice, some threshold can be defined such that, if the ratio exceeds that threshold, we then consider an instance of an object to be detected.</p>

</ss1>
<ss1>
<st>
Model learning</st>

<p>

After the preliminary step of interest point detection, feature generation and clustering, we have a large set of candidate parts over the training images.  To learn the model, Weber &amp; Welling first perform a greedy search over possible model configurations, or equivalently, over potential subsets of the candidate parts.  This is done in an iterative fashion, starting with random selection.  At subsequent iterations, parts in the model are randomly substituted, the model parameters are estimated, and the performance is assessed.  The process is complete when further model performance improvements are no longer possible.</p>
<p>

At each iteration, the model parameters</p>
<p>

<indent level="1">

<math>
\Theta = \{\mu, \Sigma, p(b), M\}\,
</math>
</indent>

are estimated using <link xlink:type="simple" xlink:href="../752/470752.xml">
expectation maximization</link>.  <math>\mu\,</math> and <math>\Sigma\,</math>, we recall, are the mean and covariance of the joint Gaussian <math>p_{fg}(z)\,</math>, <math>p(b)\,</math> is the probability distribution governing the binary presence/absence of parts, and <math>M\,</math> is the mean number of background detections over part types.</p>

</ss1>
<ss1>
<st>
M-step</st>

<p>

EM proceeds by maximizing the likelihood of the observed data,</p>
<p>

<indent level="1">

<math>
L(X^o|\Theta) = \sum_{i=1}^I \log \sum_{h_i} \int p(X_i^o,x_i^m,h_i|\Theta)dx_i^m
</math>
</indent>

with respect to the model parameters <math>\Theta\,</math>.  Since this is difficult to achieve analytically, EM iteratively maximizes a sequence of cost functions,</p>
<p>

<indent level="1">

<math>
Q(\tilde{\Theta}|\Theta) = \sum_{i=1}^I E[\log p(X_i^o,x_i^m,h_i|\tilde{\Theta})]
</math>
</indent>

Taking the derivative of this with respect to the parameters and equating to zero produces the update rules:</p>
<p>

<indent level="1">

<math>
\tilde{\mu} = \frac{1}{I} \sum_{i=1}^I E[z_i]
</math>
</indent>

<indent level="1">

<math>
\tilde{\Sigma} = \frac{1}{I} \sum_{i=1}^I E[z_iz_i^T] - \tilde{\mu}\tilde{\mu}^T
</math>
</indent>

<indent level="1">

<math>
\tilde{p}(\bar{b}) = \frac{1}{I} \sum_{i=1}^I E[\delta_{b,\bar{b}}]
</math>
</indent>

<indent level="1">

<math>
\tilde{M} = \frac{1}{I} \sum_{i=1}^I E[n_i]
</math>
</indent>

</p>
</ss1>
<ss1>
<st>
E-step</st>

<p>

The update rules in the M-step are expressed in terms of <link xlink:type="simple" xlink:href="../841/140841.xml">
sufficient statistics</link>, <math>E[z]\,</math>, <math>E[zz^T]\,</math>, <math>E[\delta_{b,\bar{b}}]\,</math> and <math>E[n]\,</math>, which are calculated in the E-step by considering the posterior density:</p>
<p>

<indent level="1">

<math>
p(h_i,x_i^m|X_i^o,\Theta) = \frac{p(h_i,x_i^m,X_i^o|\Theta)}{\textstyle \sum_{h_i \in H_b} \int p(h_i,x_i^m,X_i^o|\Theta) dx_i^m}
</math>
</indent>

</p>
</ss1>
</sec>
<sec>
<st>
The method of Fergus et al.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></st>

<p>

In Weber et al., shape and appearance models are constructed separately.  Once the set of candidate parts had been selected, shape is learned independently of appearance.  The innovation of Fergus et al. is to learn not only two, but three model parameters simultaneously: shape, appearance, and relative scale.  Each of these parameters are represented by Gaussian densities.</p>

<ss1>
<st>
Feature representation</st>

<p>

<image width="150px" src="Kadir_brady_bikes.png">
<caption>

Features generated by Kadir &amp; Brady's detector are defined by both location (center) and scale (radius).
</caption>
</image>
</p>
<p>

Whereas the preliminary step in the Weber et al. method is to search for the locations of interest points, Fergus et al. use the detector of Kadir and Brady<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref> to find salient regions in the image over both location (center) and scale (radius).  Thus, in addition to location information <math>X\,</math> this method also extracts associated scale information <math>S\,</math>.  Fergus et al. then normalize the squares bounding these circular regions to 11 x 11 pixel patches, or equivalently, 121-dimensional vectors in the appearance space.  These are then reduced to 10-15 dimensions by <link xlink:type="simple" xlink:href="../340/76340.xml">
principal component analysis</link>, giving the appearance information <math>A\,</math>.</p>

</ss1>
<ss1>
<st>
Model structure</st>

<p>

Given a particular object class model with parameters <math>\Theta\,</math>, we must decide whether or not a new image contains an instance of that class.  This is accomplished by making a Bayesian decision,</p>
<p>

<indent level="1">

<math>
R = \frac{p(\mbox{Object}|X,S,A)}{p(\mbox{No object}|X,S,A)}
</math>
</indent>

<indent level="1">

<math>
= \frac{p(X,S,A|\mbox{Object})p(\mbox{Object})}{p(X,S,A|\mbox{No object})p(\mbox{No object})}
</math>
</indent>

<indent level="1">

<math>
\approx \frac{p(X,S,A|\Theta)p(\mbox{Object})}{p(X,S,A|\Theta_{bg})p(\mbox{No object})}
</math>
</indent>

where <math>\Theta_{bg}</math> is the background model.  This ratio is compared to a threshold <math>T\,</math> to determine object presence/absence.</p>
<p>

The likelihoods are factored as follows:</p>
<p>

<indent level="1">

<math>
p(X,S,A|\Theta) = \sum_{h \in H} p(X,S,A,h|\Theta) =
</math>
</indent>

<indent level="1">

<math>
\sum_{h \in H} \underbrace{ p(A|X,S,h,\Theta) }_{\mbox{Appearance}} \underbrace{ p(X|S,h,\Theta) }_{\mbox{Shape}} \underbrace{ p(S|h,\Theta) }_{\mbox{Rel. Scale}} \underbrace{ p(h|\Theta) }_{\mbox{Other}}
</math>
</indent>

</p>
</ss1>
<ss1>
<st>
Appearance</st>

<p>

Each part <math>p\,</math> has an appearance modeled by a Gaussian density in the appearance space, with mean and covariance parameters <math>\Theta_p^{app} = \{c_p,V_p\}</math>, independent of other parts' densities.  The background model has parameters <math>\Theta_{bg}^{app} = \{c_{bg},V_{bg}\}</math>.  Fergus et al. assume that, given detected features, the position and appearance of those features are independent.  Thus, <math>p(A|X,S,h,\Theta) = p(A|h,\Theta)\,</math>.  The ratio of the appearance terms reduces to</p>
<p>

<indent level="1">

<math>
\frac{p(A|X,S,h,\Theta)}{p(A|X,S,h,\Theta_{bg})} = \frac{p(A|h,\Theta)}{p(A|h,\Theta_{bg})}
</math>
</indent>

<indent level="1">

<math>
= \prod_{p=1}^P \left ( \frac{G(A(h_p)|c_p,V_p)}{G(A(h_p)|c_{bg},V_{bg})} \right )^{b_p}
</math>
</indent>

Recall from Weber et al. that <math>h\,</math> is the hypothesis for the indices of foreground parts, and <math>b\,</math> is the binary vector giving the occlusion state of each part in the hypothesis.</p>

</ss1>
<ss1>
<st>
Shape</st>

<p>

Shape is represented by a joint Gaussian density of part locations within a particular hypothesis, after those parts have been transformed into a scale-invariant space.  This transformation precludes the need to perform an exhaustive search over scale.  The Gaussian density has parameters <math>\Theta^{\mbox{shape}} = \{\mu,\Sigma\}\,</math>.  The background model <math>\Theta_{bg}\,</math> is assumed to be a uniform distribution over the image, which has area <math>\alpha\,</math>.  Letting <math>f\,</math> be the number of foreground parts,</p>
<p>

<indent level="1">

<math>
\frac{p(X|S,h,\Theta)}{p(X|S,h,\Theta_{bg})} = G(X(h)|\mu,\Sigma)\alpha^f
</math>
</indent>

</p>
</ss1>
<ss1>
<st>
Relative scale</st>

<p>

The scale of each part <math>p\,</math> relative to a reference frame is modeled by a Gaussian density with parameters <math>\Theta^{\mbox{scale}} = \{t_p,U_p\}\,</math>.  Each part is assumed to be independent of other parts.  The background model <math>\Theta_{bg}\,</math> assumes a uniform distribution over scale, within a range <math>r\,</math>.</p>
<p>

<indent level="1">

<math>
\frac{p(S|h,\Theta)}{p(S|h,\Theta_{bg})} = \prod_{p=1}^P G(S(h_p)|t_p,U_p)^{d_p} r^f
</math>
</indent>

</p>
</ss1>
<ss1>
<st>
Occlusion and statistics of feature detection</st>

<p>

<indent level="1">

<math>
\frac{p(h|\Theta)}{p(h|\Theta_{bg})} = \frac{p_{\mbox{Poiss}}(n|M)}{p_{\mbox{Poiss}}(N|M)} \frac{1}{^nC_r(N,f)} p(b|\Theta)
</math>
</indent>

The first term models the number of features detected using a <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../561/41561.xml">
Poisson distribution</link></distribution>
</arrangement>
</structure>
, which has mean M.  The second term serves as a "book-keeping" term for the hypothesis variable.  The last term is a probability table for all possible occlusion patterns.</p>
<p>

<image location="center" width="150px" src="Fergus_constellation_model_sample.png">
<caption>

A motorcycle Constellation Model of 6 parts.  Shown are the shape model (top right), in which the ellipses represent the positional variance of each part, and the appearance model (bottom right), in which 10 images patches closest to the mean of the appearance density are shown for each part.  Also shown are some sample positive test images.
</caption>
</image>
</p>

</ss1>
<ss1>
<st>
Learning</st>

<p>

The task of learning the model parameters <math>\Theta = \{\mu,\Sigma,c,V,M,p(b|\Theta),t,U\}\,</math> is accomplished by <link xlink:type="simple" xlink:href="../752/470752.xml">
expectation maximization</link>.  This is carried out in a spirit similar to that of Weber et al.  Details and formulas for the E-step and M-step can be seen in the literature.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></p>

</ss1>
</sec>
<sec>
<st>
 Performance </st>

<p>

The Constellation Model as conceived by Fergus et al. achieves successful categorization rates consistently above 90% on large datasets of motorbikes, faces, airplanes, and spotted cats.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref>  For each of these datasets, the Constellation Model is able to capture the "essence" of the object class in terms of appearance and/or shape.  For example, face and motorbike datasets generate very tight shape models because objects in those categories have very well-defined structure, whereas spotted cats vary significantly in pose, but have a very distinctive spotted appearance.  Thus, the model succeeds in both cases.  It is important to note that the Constellation Model does not generally account for significant changes in orientation.  Thus, if the model is trained on images of horizontal airplanes, it will not perform well on, for instance, images of vertically oriented planes unless the model is extended to account for this sort of rotation explicitly.</p>
<p>

In terms of computational complexity, the Constellation Model is very expensive.  If <math>N\,</math> is the number of feature detections in the image, and <math>P\,</math> the number of parts in the object model, then the hypothesis space <math>H\,</math> is <math>O(N^P)\,</math>.  Because the computation of sufficient statistics in the E-step of <link xlink:type="simple" xlink:href="../752/470752.xml">
expectation maximization</link> necessitates evaluating the likelihood for every hypothesis, learning becomes a major bottleneck operation.  For this reason, only values of <math>P \le 6</math> have been used in practical applications, and the number of feature detections <math>N\,</math> is usually kept within the range of about 20-30 per image.</p>

</sec>
<sec>
<st>
 Variations </st>

<p>

<image width="150px" src="Fergus_star_model_2005.png">
<caption>

(a) A fully connected shape model with 6 parts.  Each node is a model part, with edges representing dependencies.  (b) A star model with 6 parts.
</caption>
</image>
</p>
<p>

One variation that attempts to reduce complexity is the star model proposed by Fergus et al.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>  The reduced dependencies of this model allows for learning in <math>O(N^2P)\,</math> time instead of <math>O(N^P)\,</math>.  This allows for a greater number of model parts and image features to be used in training.  Because the star model has fewer parameters, it is also better at avoiding the problem of over-fitting when trained on fewer images.</p>

</sec>
<sec>
<st>
 References </st>


<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1672195">
M. Fischler and R. Elschlager.  <it>The Representation and Matching of Pictoral Structures.</it> (1973)</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports-vision/IWAFGR95.ps.Z">
M. Burl, T. Leung, and P. Perona.  <it>Face Localization via Shape Statistics.</it> (1995)</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports-vision/ICCV95-faces.ps.Z">
T. Leung, M. Burl, and P. Perona. <it>Finding Faces in Cluttered Scenes Using Random Labeled Graph Matching.</it> (1995)</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports-vision/CVPR96-recog.ps.gz">
M. Burl and P. Perona.  <it>Recognition of Planar Object Classes</it> (1996)</weblink></entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.vision.caltech.edu/publications/ECCV98-recog.pdf">
M. Burl, M. Weber, and P. Perona.  <it>A Probabilistic Approach to Object Recognition Using Local Photometry and Global Geometry</it> (1998)</weblink></entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://www.vision.caltech.edu/publications/MarkusWeber-thesis.pdf">
M. Weber. <it>Unsupervised Learning of Models for Object Recognition.</it> PhD Thesis. (2000)</weblink></entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports/FG00-recog.pdf">
 M. Weber, W. Einhaeuser, M. Welling and P. Perona. <it>Viewpoint-Invariant Learning and Detection of Human Heads.</it> (2000)</weblink></entry>
<entry id="8">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports/CVPR00-recog.pdf">
M. Weber, M. Welling, and P. Perona.  <it>Towards Automatic Discovery of Object Categories.</it> (2000)</weblink></entry>
<entry id="9">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports/ECCV00-recog.pdf">
M. Weber, M. Welling and P. Perona. <it>Unsupervised Learning of Models for Recognition.</it> (2000)</weblink></entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="ftp://vision.caltech.edu/pub/tech-reports/Fergus_CVPR03.pdf">
R. Fergus, P. Perona, and A. Zisserman.  <it>Object Class Recognition by Unsupervised Scale-Invariant Learning.</it> (2003)</weblink></entry>
<entry id="11">
<weblink xlink:type="simple" xlink:href="http://cs.nyu.edu/~fergus/papers/fergus_thesis.pdf">
R. Fergus.  <it>Visual Object Category Recognition.</it> PhD Thesis. (2005)</weblink></entry>
<entry id="12">
<weblink xlink:type="simple" xlink:href="http://www.springerlink.com/content/t45n2g8543574026/fulltext.pdf">
T. Kadir and M. Brady.  <it>Saliency, scale and image description.</it> (2001)</weblink></entry>
<entry id="13">
<weblink xlink:type="simple" xlink:href="http://www.vision.caltech.edu/html-files/archive.html">
R. Fergus and P. Perona. Caltech Object Category datasets. http://www.vision.caltech.edu/html-files/archive.html (2003)</weblink></entry>
<entry id="14">
<weblink xlink:type="simple" xlink:href="http://www.robots.ox.ac.uk/%7Efergus/papers/fergus_cvpr05.pdf">
R. Fergus, P. Perona, and A. Zisserman. <it>A Sparse Object Category Model for Efficient Learning and Exhaustive Recognition.</it> (2005)</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://courses.ece.uiuc.edu/ece598/ffl/lecture7_ConstellationModel_shortversion.pdf">
L. Fei-fei.  <it>Object categorization: the constellation models</it>.  Lecture Slides.  (2005)</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
 See also </st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../436/14662436.xml">
Part-based models</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../672/15261672.xml">
One-shot learning</link></entry>
</list>
</p>

</sec>
</bdy>
</article>
