<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 02:55:05[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>One-shot learning</title>
<id>15261672</id>
<revision>
<id>238350980</id>
<timestamp>2008-09-14T12:49:03Z</timestamp>
<contributor>
<username>KYN</username>
<id>505011</id>
</contributor>
</revision>
<categories>
<category>Learning in computer vision</category>
</categories>
</header>
<bdy>

<b>One-shot learning</b> is an object categorization problem of current research interest in <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link>.  Whereas most <link xlink:type="simple" xlink:href="../488/233488.xml">
machine learning</link> based object categorization algorithms require training on hundreds or thousands of images and very large datasets, one-shot learning aims to learn information about object categories from one, or only a few, training images.  <p>

The primary focus of this article will be on the solution to this problem presented by L. Fei-Fei, R. Fergus and P. Perona in <link xlink:type="simple" xlink:href="../325/12953325.xml">
IEEE Transactions on Pattern Analysis and Machine Intelligence</link>, Vol28(4), 2006, which uses a <link xlink:type="simple" xlink:href="../578/1222578.xml">
 generative</link> object category model and <link>
variational Bayesian</link> framework for representation and learning of visual object categories from a handful of training examples.  Another paper, presented at the <link xlink:type="simple" xlink:href="../465/5338465.xml">
International Conference on Computer Vision and Pattern Recognition</link> (<link xlink:type="simple" xlink:href="../465/5338465.xml">
CVPR</link>) 2000 by Eric Miller, Nicholas Matasakis, and Paul Viola will also be discussed.</p>

<sec>
<st>
Motivation</st>
<p>

The ability to learn object categories from few examples, and at a rapid pace, has been demonstrated in humans,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and it is estimated that a child has learned almost of all the 10 ~ 30 thousand object categories in the world by the age of six.  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>  Yet this achievement of the human mind is due not only to its computational power, but also to its ability to synthesize and learn new object classes from existing information about different, previously learned classes.  The images below illustrate the idea that given two examples from two different object classes: one, an unknown object composed of familiar shapes, the second, an unknown, amorphous shape; it is much easier for humans to recognize the former than the latter, suggesting that humans make use of this existing knowledge of previously learned classes when learning new ones.   
Thus the key motivation and intuition for this one-shot learning technique in the artificial, computational world is that systems, like humans, can use prior information of object categories to learn and classify new objects.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref><image location="left" width="150px" src="potto1.jpg" type="frame">
<caption>

Find this object...
</caption>
</image>

<image location="none" width="150px" src="potto2.jpg" type="frame">
<caption>

...in this picture!  Easy for a human.
</caption>
</image>
  <image location="right" width="150px" src="slidesUnlikelyShape.jpg" type="frame">
<caption>

Find this one...
</caption>
</image>
  <image location="right" width="150px" src="slidesUnlikelyAppear.jpg" type="frame">
<caption>

...in this picture.  Quite difficult.
</caption>
</image>

</p>
</sec>
<sec>
<st>
Background</st>

<p>

As with most classification schemes, one-shot learning involves three main challenges: "
<list>
<entry level="1" type="bullet">

Representation: How should we model objects and categories?</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Learning: How may we acquire such models?</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Recognition: Given a new image, how do we detect the presence of a known object/category amongst clutter, and despite occlusion, viewpoint, and lighting changes?"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
</list>
</p>
<p>

However, one-shot learning differs greatly from single object recognition and even standard category recognition algorithms is in its emphasis on the principle of knowledge transfer, which encapsulates prior knowledge of learnt categories and allows for learning on minimal training examples.</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Knowledge transfer by model parameters</b>: One set of algorithms for one-shot learning achieves knowledge transfer through the reuse of model parameters, often exploiting the similarity between previously learned classes and the new object classes to be learned.  Classes of objects are first learned on numerous training examples (i.e. not in a one-shot fashion), then new object classes are learned using transformations of model parameters from the previously learnt classes or selection relevant parameters for a classifier as in M. Fink, 2004.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="1" type="bullet">

<b>Knowledge transfer by sharing features</b>:  Another class of algorithms achieves knowledge transfer by sharing parts or features of objects across classes.  In a paper presented at <link xlink:type="simple" xlink:href="../465/5338465.xml">
CVPR</link> 2005 by Bart and Ullman, an algorithm extracts "diagnostic information" in patches from already learnt classes by maximizing the patches' <link xlink:type="simple" xlink:href="../282/427282.xml">
mutual information</link>, and then applies these features to the learning of a new class.  A <it>dog</it> class, for example, may be learned in one shot from previous knowledge of <it>horse</it> and <it>cow</it> classes, because <it>dog</it> objects may contain similar distinguishing patches.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref></entry>
<entry level="1" type="bullet">

<b>Knowledge transfer by contextual information</b>:  Whereas the previous two groups of knowledge transfer work in one-shot learning relied on the similarity between new object classes and the previously learned classes on which they were based, transfer by contextual information instead appeals to global knowledge of the scene in which the object is placed.  A paper presented at <link xlink:type="simple" xlink:href="../156/1175156.xml">
NIPS</link> 2004 by K. Murphy et al. uses such global information as frequency distributions in a <link xlink:type="simple" xlink:href="../276/4118276.xml">
conditional random field</link> framework to recognize objects.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>  Another algorithm by D. Hoeim et al. makes use of contextual information in the form of camera height and scene geometry to prune object detection.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>  Algorithms of this type have two advantages.  First, they should be able to learn object classes which are relatively dissimilar in visual appearance; and second, they should perform well precisely in situations where an image has not been hand-cropped and carefully aligned, but rather which naturally occur.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
Theory</st>
<p>

The Bayesian one-shot learning algorithm represents the foreground and background of images as parametrized by a mixture of constellation models<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref>.  During the learning phase, the parameters of these models are learned using a <link>
 conjugate</link> density parameter <link>
posterior</link> and Variational Bayesian <link>
Expectation-Maximization</link> (VBEM) <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref>.  It is in this stage that the object classes learned previously outside of the one-shot framework inform the choice of model parameters via transfer by contextual information.  For object recognition on new images, the posterior obtained during the learning phase is used in a Bayesian decision framework to estimate the ratio of p(object | test, train) to p(background clutter | test, train).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></p>

<ss1>
<st>
Bayesian framework</st>
<p>

Given the task of finding a particular object in a query image, the overall objective of the Bayesian One-Shot Learning algorithm is to compare the probability that that object is present in the image and the probability that only background clutter is present in the image.  If the former probability is higher, the algorithm reports the object's presence in the image, and if the latter probability is higher, the algorithm reports the absence of that object in the image.  In order to compute these probabilities, the object class must be modelled from a set of (1 ~ 5) training images containing examples of that object.</p>
<p>

To formalize these ideas, let <math> I</math> be the query image, which contains either an example of the foreground category <math> O_{fg} </math> or only background clutter of a generic background category <math> O_{bg} </math>.  Also let <math> I_t </math> be the set of training images used as the foreground category.  The decision of whether <math> I </math> contains an object from the foreground category, or only clutter from the background category is:</p>
<p>

<indent level="1">

 <math> R = \frac{p(O_{fg}|I,I_t)}{p(O_{bg}|I, I_t)} =  \frac{p(I|I_t, O_{fg})p(O_{fg})}{p(I|I_t, O_{bg})p(O_{bg})}, </math>
</indent>

where the class posteriors <math> p(O_{fg} |I, I_t) </math> and <math>p(O_{bg}|I, I_t) </math> have been expanded by <link xlink:type="simple" xlink:href="../569/49569.xml">
Bayes' Theorem</link>, yielding a ratio of <link xlink:type="simple" xlink:href="../968/44968.xml">
likelihoods</link> and a ratio of object category <link xlink:type="simple" xlink:href="../877/472877.xml">
priors</link>.  We decide that the image <math>I</math> contains an object from the foreground class iff <math>R</math> exceeds a certain threshold <math>T</math>.  We next introduce parametric models for the foreground and background classes with parameters <math> \theta </math> and <math> \theta_{bg} </math> respectively.  This foreground parametric model is learned during the learning stage from training images <math> I_t </math>, as well as prior information of learnt classes.  The background model we assume to be uniform across images.  Omitting the constant ratio of category priors, <math> \frac{p(O_{fg})}{p(O_{bg})} </math>, and parametrizing over <math> \theta </math> and <math> \theta_{bg} </math> yields:</p>
<p>

<indent level="1">

 <math> R \propto \frac{\int{p(I | \theta, O_{fg}) p(\theta | I_t, O_{fg})} d\theta}{\int{p(I | \theta_{bg}, O_{bg}) p(\theta_{bg} | I_t, O_{bg})} d\theta_{bg}} = \frac{\int{p(I | \theta) p(\theta | I_t, O_{fg})} d\theta}{\int{p(I | \theta_{bg}) p(\theta_{bg} | I_t, O_{bg})} d\theta_{bg}}</math>, having simplified <math>p(I | \theta, O_{fg}) </math> and <math>p(I | \theta, O_{bg})</math> to <math>p(I | \theta_{fg}) </math> and <math>p(I | \theta_{bg}).</math>
</indent>

The posterior distribution of model parameters given the training images, <math> p(\theta | I_t, O_{fg}) </math> is estimated in the learning phase of the algorithm.  In this estimation, one-shot learning deviates sharply from more traditional Bayesian estimation models which approximate the integral as <math> \delta(\theta^{ML}) </math>, in favor of a variational approach which makes use of prior information from previously learnt categories. For the background model, however, as well as the categories learned in advance through numerous training examples, this traditional <link xlink:type="simple" xlink:href="../806/140806.xml">
maximum likelihood estimation</link> of the model parameters is used.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref></p>

</ss1>
<ss1>
<st>
Object category model</st>
<p>

For each query image <math>I</math> and training images <math> I_t</math>, a <link xlink:type="simple" xlink:href="../618/15261618.xml">
constellation model</link> is used for representation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref>  To obtain this model for a given image <math>I</math>, first a set of N interesting regions is detected in the image using the <link xlink:type="simple" xlink:href="../572/14441572.xml">
Kadir brady saliency detector</link>. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref> Each region selected is represented by a location in the image, <math>X_i</math> and a description of its appearance, <math> A_i </math>.  Letting <math> X = \sum_{i = 1}^N X_i, A = \sum_{i = 1}^N A_i </math> and <math>X_t </math>and <math>A_t</math> the analogous representations for training images, the expression for R becomes:</p>
<p>

<indent level="1">

 <math> R \propto \frac{\int{p(X,A | \theta, O_{fg}) p(\theta | X_t, A_t, O_{fg})} d\theta}{\int{p(X,A | \theta_{bg}, O_{bg}) p(\theta_{bg} | X_t, A_t, O_{bg})} d\theta_{bg}} = \frac{\int{p(X,A | \theta) p(\theta | X_t, A_t, O_{fg})} d\theta}{\int{p(X,A | \theta_{bg}) p(\theta_{bg} | X_t, A_t, O_{bg})} \,d\theta_{bg}}</math>
</indent>

The likelihoods <math> p(X, A|\theta) </math> and <math> p(X, A|\theta_{bg}) </math> are represented as <link xlink:type="simple" xlink:href="../681/871681.xml">
mixtures</link> of constellation models.  A typical constellation model has P(3 ~ 7) parts, but there are N(~100) interest regions.  Thus a P-dimensional vector <b>h</b> assigns one region of interest (out of N regions) to each model part (for P parts).  Thus <b>h</b> denotes a <it>hypothesis</it> (an assignment of interest regions to model parts) for the model and a full constellation model is represented by summing over all possible hypotheses <b>h</b> in the hypothesis space <math>H</math>.  Finally the likelihood is written</p>
<p>

<indent level="1">

 <math>p(X,A|\theta) = \sum_{\omega=1}^{\Omega} \sum_{\textbf{h} \in H} p(X,A,\textbf{h}, \omega | \theta). </math>
</indent>

The different <math>\omega</math>'s represent different configurations of parts, whereas the different hypotheses <b>h</b> represent different assignations of regions to parts, given a part model <math>\omega</math>.  The assumption that the shape of the model (as represented by <math>X</math>, the collection of part locations) and appearance are independent allows one to consider the likelihood expression <math>p(X,A,\textbf{h}, \omega | \theta) </math> as two separate likelihoods of appearance and shape. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>

<ss2>
<st>
Appearance</st>
<p>

The appearance of each feature is represented by a point in appearance space (discussed below in implementation).  "Each part <math> p </math> in the constellation model has a Gaussian density within this space with mean and precision parameters <math> \theta_{p,\omega}^{A} = { \mu_{p,\omega}^{A}, \Gamma_{p,\omega}^{A} } </math>."  From these the appearance likelihood described above is computed as a product of Gaussians over the model parts for a give hypothesis <b>h</b> and mixture component <math> \omega </math>. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref></p>

</ss2>
<ss2>
<st>
Shape</st>
<p>

The shape of the model for a given mixture component <math> \omega </math> and hypothesis <b>h</b> is represented as a joint Gaussian density of the locations of features.  These features are transformed into a scale and translation-invariant space before modelling the relative location of the parts by a 2(P - 1)-dimensional Gaussian.  From this, we obtain the shape likelihood, completing our representation of <math>p(X,A, \textbf{h}, \omega | \theta)</math> .  In order to reduce the number of hypotheses in the hypothesis space <math> H</math>, only those hypotheses which satisfy the ordering constraint that the x-coordinate of each part is monotonically increasing are considered.  This eliminates <math>P! </math> hypotheses from <math> H </math>. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref></p>

</ss2>
</ss1>
<ss1>
<st>
Conjugate densities</st>
<p>

In order to compute <math>R</math>, the integral <math> \int{p(X,A | \theta) p(\theta | X_t, A_t, O_{fg})} d\theta </math> must be evaluated, but is analytically intractable.  The object category model above gives information about <math>p(X,A | \theta)</math>, so what remains is to examine <math> p(\theta| X_t, A_t, O)</math>, the posterior of <math>\theta</math>, and find a sufficient approximation to render the integral tractable.  Previous work approximates the posterior by a <math>\delta</math>function centered at <math>\theta^{*}</math>, collapsing the integral in question into <math>p(X, A|\theta^{*}) </math>.  This <math> \theta^{*} </math> is normally estimated using a <link xlink:type="simple" xlink:href="../806/140806.xml">
Maximum Likelihood</link> (<math> \theta^{*} = \theta^{ML}</math>) or <link xlink:type="simple" xlink:href="../433/1792433.xml">
Maximum A Posteriori</link> (<math> \theta^{*} = \theta^{MAP} </math>) procedure.  However, because in one-shot learning, few training examples are used, the distribution will not be well-peaked, as is assumed in a <math>\delta</math>function approximation.  Thus instead of this traditional approximation, the Bayesian one-shot learning algorithm seeks to "find a parametric form of <math>p(\theta)</math> such that the learning of <math> p(\theta| X_t, A_t, O_{fg})</math> is feasible."  The algorithm employs a <link xlink:type="simple" xlink:href="../462/21462.xml">
Normal</link>-<link xlink:type="simple" xlink:href="../611/2234611.xml">
Wishart</link> distribution as the <link xlink:type="simple" xlink:href="../412/846412.xml">
conjugate prior</link> of <math> p(\theta| X_t, A_t, O_{fg})</math>, and in the learning phase, <link xlink:type="simple" xlink:href="../480/1208480.xml">
variational Bayesian methods</link> with the same computational complexity as maximum likelihood methods are used to learn the <link xlink:type="simple" xlink:href="../585/11641585.xml">
hyperparameter</link>s of the this distribution.  Then, since <math>p(X,A|\theta)</math> is a product of Gaussians, as chosen in the object category model, the integral reduces to a <link xlink:type="simple" xlink:href="../768/7984768.xml">
multivariate Student's T distribution</link>, which can be evaluated.   <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref></p>

</ss1>
</sec>
<sec>
<st>
Implementation</st>


<ss1>
<st>
Feature detection and representation</st>
<p>

To detect features in an image so that it can be represented by a constellation model, the <link xlink:type="simple" xlink:href="../572/14441572.xml">
Kadir Brady feature detector</link> is used on grey-scale images, finding salient regions of the image.  These regions are then clustered, yielding a number of features (the clusters) and the shape parameter <math> X </math>, composed of the cluster centers. The Kadir Brady detector was chosen because it produces fewer, more salient regions, as opposed to feature detectors like multiscale Harris, which produces numerous, less significant regions.  Feature detection is illustrated to the right. </p>
<p>

The regions are then taken from the image and rescaled to a small patch of 11 by 11 pixels, allowing each patch to be represented in 121-dimensional space.  This dimensionality is reduced using <link xlink:type="simple" xlink:href="../340/76340.xml">
principle component analysis</link>, and <math> A </math>, the appearance parameter, is then formed from the first 10 pricinple components of each patch.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2224%22])">24</ref></p>

</ss1>
<ss1>
<st>
Learning</st>
<p>

To obtain shape and appearance priors, three categories(spotted cats, faces, and airplanes) are learned using maximum likelihood estimation.  These object category model parameters are then used to estimate the hyper-parameters of the desired priors.</p>
<p>

Given a set of training examples, the algorithm runs the feature detector on these images, and determines model parameters from the salient regions.   The hypothesis index <b>h</b> assigning features to  parts prevents a closed-form solution of the linear model, so the posterior <math> p(\theta| X_t, A_t, O_{fg})</math> is estimated by variational Bayesian expectation-maximization, which is run until parameter convergence after ~ 100 iterations.  Learning a category in this fashion takes under a minute on a 2.8GHz machine with a 4-part model and  10 training images. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2225%22])">25</ref></p>

</ss1>
</sec>
<sec>
<st>
Experimental results</st>


<ss1>
<st>
Motorbike example</st>
<p>

To learn the motorbike category:
<list>
<entry level="1" type="bullet">

Six training images are selected from the motorbike category of the Caltech 4 Data Set and the Kadir Brady detector is applied, giving <math> X_t </math> and through <link xlink:type="simple" xlink:href="../340/76340.xml">
PCA</link>, <math> A_t </math>.  Examples are shown below.</entry>
</list>
</p>
<p>

<image location="none" width="150px" src="3a.JPG" type="frame">
<caption>

Motorbike after feature detection.
</caption>
</image>

<list>
<entry level="1" type="bullet">

Next, the prior model parameters are computed from 30 models <math> \theta_t </math>, 10 from each of the three learnt categories: spotted cats, faces, and airplanes.  This prior encodes the knowledge that "models lacking visual consistency [ie background clutter] occupy a different  part of the parameter space [from] coherent models."</entry>
</list>
</p>
<p>

<image location="none" width="150px" src="prior.JPG" type="frame">
<caption>

A visualization of the prior parameter density, estimated from ML models of spotted cats, faces, and airplanes.  Models trained on background data are shown in magenta, but not used in estimating the prior density.  The mean is plotted on the the x-axis and the variance on the y-axis. (a) Appearance parameter space for the first four descriptors. (b) X component of the shape term for three of four model parts. (c) Y component of shape.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2226%22])">26</ref>
</caption>
</image>
</p>
<p>

<list>
<entry level="1" type="bullet">

In learning, which is performed next, the prior biases the posterior <math> p(\theta| X_t, A_t, O_{fg})</math> towards parts of the parameter space corresponding to coherent models.  Only one mixture component is used, letting <math> \Omega = 1 </math>.  The estimation of the posterior is shown below.</entry>
</list>
</p>
<p>

<image location="none" width="150px" src="learningposterior.jpg" type="frame">
<caption>

"The learning process. (a) Appearance parameter space, showing the mean and variance distributions for each of the models?four parts for the first four descriptors. The parameter densities are colored as follows: black for the prior, green for the initial posterior density, and red for the density after 30 iterations of Bayesian One-Shot, when convergence is reached. (b) X component of the shape term for each of the model parts. (c) Y component of shape. Note that, in both (b) and (c), only the variance terms along the diagonal are visualized裯ot the covariance terms."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2227%22])">27</ref>
</caption>
</image>
</p>
<p>

<list>
<entry level="1" type="bullet">

Finally, the figures below show the learned motorbike model with shape and appearance of parts, and the corresponding features.</entry>
</list>

<image location="none" width="150px" src="motormodel.jpg" type="frame">
<caption>

"The mean posterior model. (a) The shape component of the model. The four +s and ellipses indicate the mean and variance in position of each part. The interpart covariance terms are not shown. (b) The mean appearance distributions for the first three PCA dimensions. Each color indicates one of the four parts. The background density is shown in black. (c) The detected feature patches in the training image closest to the mean of the appearance densities for each of the four parts."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2228%22])">28</ref>
</caption>
</image>
</p>
<p>

<list>
<entry level="1" type="bullet">

For recognition tests, the model above is applied to 50 images which contain motorbikes and 50 which do not.  The image below shows an ROC curve, measuring the probability of detection over the probability of false detection, as well as some recognized examples.</entry>
</list>
</p>
<p>

<image location="none" width="150px" src="motorresults.jpg" type="frame">
<caption>

 In the first image, "some examples of foreground test images for the model, with a mix of correct and incorrect classifications. The pink dots are features found on each image and the colored circles indicate the best hypothesis in the image. The size of the circles indicates the score of the hypothesis (the bigger the better)."  In the second image, "the model running on some background query images. In the final image, "the <link xlink:type="simple" xlink:href="../505/922505.xml">
ROC curve</link> for the model on the test set. The equal error rate is around 18 percent."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2229%22])">29</ref>
</caption>
</image>
</p>

</ss1>
<ss1>
<st>
Comparison with maximum likelihood and MAP methods</st>
<p>

<image location="right" width="150px" src="performancecomp.jpg" type="frame">
</image>
 
As shown in the figure to the right, the Bayesian One-Shot Learning algorithm significantly outperforms a maximum likelihood procedure on a small number of training images. </p>
<p>

However, the authors believe that more dramatic improvement could be achieved with more than three initial training categories or a stronger model.  Such a model might include 6 or 7 parts, several mixture components, representations for curve contours, or ability to handle occlusions.  They determined, however, that a large strength of the model lies in the choice of prior.  In all, the algorithm performs with accuracy from 70-95 percent.  In addition, a large advantage of this algorithm is that the categories used to set the priors (here, spotted cats, faces, and airplanes) do not need to be similar to the categories to be learned from few training examples, as demonstrated by their success on learning categories from the Caltech101 dataset.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2230%22])">30</ref></p>

</ss1>
</sec>
<sec>
<st>
Learning from one example through shared densities on transforms</st>
<p>

An alternative to the Bayesian One-Shot Learning algorithm, the algorithm presented by Eric Miller, Nicholas Matasakis, and Paul Viola at ICCV 2000 uses knowledge transfer by model parameters to learn a new object category which is similar in appearance to previously learnt categories.  In their paper, an image is represented as either a <it>texture</it> and <it>shape</it>, or as a <it>latent image</it> which has been transformed, denoted by  <math> I = T(I_L) </math>. </p>

<ss1>
<st>
Congealing</st>
<p>

Whereas the term <it>vectorization</it> denotes the process of bring one image into correspondence with another, the authors of this paper have coined the term <it>congealing</it> to be "the simultaneous vectorization of each of a set of images to each other."  For a set of training images of a certain category, congealing iteratively transforms each image to minimize the images' joint pixelwise entropies E, where </p>
<p>

<indent level="1">

 <math> E = \sum_{p=1}^{P}H(\nu(p)), </math>
</indent>

"where <math>\nu(p)</math> is the binary random variable defined by the values of a particular pixel p across all of the images, <math>H( )</math> is the discrete entropy function of that variable, and <math> 1\leq p \leq P </math> is the set of pixel indices for the image."</p>
<p>

<image width="150px" src="millerFig2.jpg" type="frame">
</image>

The congealing algorithm begins with a set of images <math> I_i</math> and a corresponding transform matrix <math> U_i </math>, which at the end of the algorithm will represent the transformation of <math> I_i</math> into its latent image <math> I_{L_i} </math>.  These latent images <math> I_{L_i} </math> minimize the joint pixel-wise entropies.  Thus the task of the congealing algorithm is to estimate the transformations <math>U_i</math>.  </p>
<p>

Sketch of algorithm:</p>
<p>

<list>
<entry level="1" type="bullet">

 Initialize <math>U_I</math>'s to the identity.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Compute the joint pixelwise entropies of the current set of images.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 For each image <math>I_i</math>, iterate through all possible affine transformations <math>A</math> (rotation, x-translation, y-translation, x-scale, y-scale, x-shear, y-shear) and test if <math>AU_i</math> decreases the joint pixelwise entropies.  If so, set <math>U_i = AU_i</math>.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Repeat previous step until convergence.</entry>
</list>
</p>
<p>

At the end of the algorithm, <math>U_i(I) = I_{L_i}</math>, and <math>T = U_i^{-1}</math> transforms the latent image back into the originally observed image.  Congealing applied to a set of 0's and a set of 2's is shown on the right.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2231%22])">31</ref></p>

</ss1>
<ss1>
<st>
Classification</st>
<p>

To use this model for classification, we must estimate the model with the maximum posterior probability given an observed image <math>I</math>.  An application of Bayes' rule to <math>P(c_j|I)</math> and parametrization by the transformation <math>T</math> gives a difficult integral which the authors approximate, and then seek the best transform <math>T</math>.  That is, the transformation which maps the test image to its latent image.  Once this transformation is found, the test image can be transformed into its latent image, and a <link xlink:type="simple" xlink:href="../926/41926.xml">
nearest neighbor classifier</link> based on <link xlink:type="simple" xlink:href="../296/429296.xml">
Hausdorff distance</link> between images is used to classify the latent image (and thus the test image) as belonging to a particular class <math>c_j</math>.</p>
<p>

To find this optimal <math>T</math>, the authors propose to insert the test image I into the training ensemble for the congealing process.  Since we assume that the test image is drawn from one of the classes <math>c_j</math>, congealing will provide a corresponding <math>T_{\text{test}} = U_{\text{test}}^{-1}</math> which maps I to its latent image.  The latent image can now be classified. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2232%22])">32</ref></p>

</ss1>
<ss1>
<st>
Single-example classification</st>
<p>

Given a set of transformations <math>B_i</math> obtained from congealing many images of a certain category, the authors extend their classifier to the case where only one training <math>I_t</math> example of a new category <math>c</math> is allowed.  Applying all the transformations <math>B_i</math> sequentially to <math>I_t</math>, we create an artificial data training set for <math>c</math>.  This artificial data set can be made larger by borrowing transformations from not only one, but many already known categories.  Once this data set is obtained, <math>I</math>, a test instance of <math>c</math>, can be classified as in the normal classification procedure.  The key assumption here is that categories are similar enough that the transforms from one can be applied to another.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2233%22])">33</ref></p>

</ss1>
</sec>
<sec>
<st>
Citations</st>

<p>

<reflist>
<entry id="1">
 
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-idFeiFei2002%22])">
F.F. Li et al., 2002 </link></entry>
<entry id="2">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-thorpe1996%22])">
S. Thorpe et al., 1996</link> </entry>
<entry id="3">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-biederman%22])">
Biederman et al., 1987.</link> </entry>
<entry id="4">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei Fei et al., 2006, Section 1</link> </entry>
<entry id="5">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-idFeiFeiICDL2006%22])">
L. Fei-Fei, <it>Knowledge transfer</it>, 2006</link>, Section 1</entry>
<entry id="6">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 2</link> </entry>
<entry id="7">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-fink%22])">
M. Fink, 2004</link></entry>
<entry id="8">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-bart%22])">
Bart and Ullman, 2005</link></entry>
<entry id="9">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-murphy%22])">
K. Murphy et al., 2004</link></entry>
<entry id="10">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-hoeim%22])">
D. Hoeim et al., 2005</link></entry>
<entry id="11">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeiknow%22])">
Knowledge Transfer, Section 2</link></entry>
<entry id="12">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-burl%22])">
Burl et al., 1996.</link></entry>
<entry id="13">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-attias%22])">
 Attias, 1999.</link></entry>
<entry id="14">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006</link></entry>
<entry id="15">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3.1</link> </entry>
<entry id="17">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-weber2000%22])">
M. Weber et al., 2000</link> </entry>
<entry id="16">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-burl1996%22])">
Burl et al., 1996</link> </entry>
<entry id="19">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-kadir2001%22])">
 T. Kadir and M. Brady, 2001</link> </entry>
<entry id="18">
 <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-fergus2005%22])">
R. Fergus et al., 2005</link></entry>
<entry id="21">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3.2.1</link> </entry>
<entry id="20">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3.2</link> </entry>
<entry id="23">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3.4.3</link> </entry>
<entry id="22">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3.2.1</link> </entry>
<entry id="25">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 4, Section 5.2</link> </entry>
<entry id="24">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 5.1</link> </entry>
<entry id="27">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
Fei-Fei et al., 2006, Section 6</link></entry>
<entry id="26">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
Fei-Fei et al., 2006, Section 6</link></entry>
<entry id="29">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 6</link></entry>
<entry id="28">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 6</link></entry>
<entry id="31">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-miller2000%22])">
Miller et al., 2000, Section 3</link></entry>
<entry id="30">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-feifeipami2006%22])">
L. Fei-Fei et al., 2006, Section 3, Section 6</link></entry>
<entry id="32">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-miller2000%22])">
Miller et al., 2000, Section 4</link></entry>
<entry id="33">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Reference-miller2000%22])">
Miller et al., 2000, Section 7</link></entry>
</reflist>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="Reference-idFeiFeiICDL2006">L. Fei-Fei, "Knowledge transfer in learning to recognize visual object classes." <it>International Conference on Development and Learning (ICDL).</it> 2006. <weblink xlink:type="simple" xlink:href="http://vision.cs.princeton.edu/documents/Fei-Fei_ICDL2006.pdf">
PDF</weblink></cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-feifeipami2006">L. Fei-Fei, R. Fergus and P. Perona, "One-Shot learning of object categories". <it>IEEE Trans. Pattern Analysis and Machine Intelligence</it>, Vol28(4), 594 - 611, 2006.<weblink xlink:type="simple" xlink:href="http://vision.cs.princeton.edu/documents/Fei-FeiFergusPerona2006.pdf">
PDF</weblink></cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-miller2000">Miller, Matsakis, and Viola, "Learning from One Example through Shared Densities on Transforms". <it>Proc. Computer Vision and Pattern Recognition</it>, 2000.<weblink xlink:type="simple" xlink:href="http://www.cs.umass.edu/~elm/papers/cvpr2000.pdf">
PDF</weblink></cite>}}</entry>
<entry level="1" type="bullet">

 <cite id="Reference-idFeiFei2002">F.F. Li, R. VanRullen, C.Coch, and P. Perona, "Rapid natural scene categorization in the near absence of attention". <it>PNAS</it>, 99(14):9596-9601, 2002.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-thorpe1996">S. Thorpe, D. Fize, and C. Marlot, "Speed of processing in the human visual system". <it>Nature</it>, 381:520-522, 1996.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-biederman">I. Biederman. "Recognition-by-Components: a theory of human understanding". <it>Psychological Review</it>, 94:115-147, 1987.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-fink">M. Fink, "Object classification from a single example utilizing class relevance pseudo-metrics". <it>NIPS</it>, 2004.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-bart">Bart and Ullman "Cross-generalization: learning novel classes from a single example by feature replacement". <it>CVPR</it>, 2005.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-murphy">K. Murphy, A. Torralba, W.T. Freeman, "Using the forest to see the trees: a graphical model relating features, objects, and scenes". <it>NIPS</it>, 2004.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-hoeim">D. Hoeim, A.A. Efros, and M. Herbert, "Cgeometric contet from a single image". <it>ICCV</it>, 2005.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-attias">H. Attias, "Inferring Parameters and Structure of Latent Variable Models by Variational Bayes". <it>Proc. of the 15th Conf. in Uncertainty in Artificial Intelligence</it>, pp. 21-30, 1999.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-burl1996">M. Burl, M. Weber, and P. Perona, "A Probabilistic Approach to Object Recognition Using Local Photometry and Global Geometry". <it>Proc. European Conf. Computer Vision</it>, pp. 628-641, 1996.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-fegus2005">R. Fergus, P. Perona, and A. Zisserman, "Object Class Recognition by Unsupervised Scale-Invariant Learning". <it>Proc. Computer Vision and Pattern Recognition</it>, pp. 264-271, 2003.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-weber2000">M. Weber, M. Welling, and P. Perona, "Unsupervised Learning of Models for Recognition". <it>Proc. European Conf. Computer Vision</it>, pp. 101-108, 2000.</cite></entry>
<entry level="1" type="bullet">

 <cite id="Reference-kadir2001">T. Kadir and M. Brady, "Scale, Saliency, and Image Description". <it>Int'l J. of Computer Vision</it>, vol. 45, no. 2, pp. 83-105, 2001.</cite></entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../480/1208480.xml">
Variational Bayesian methods</link></entry>
<entry level="1" type="bullet">

<system wordnetid="108435388" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<network wordnetid="108434259" confidence="0.8">
<link xlink:type="simple" xlink:href="../612/2461612.xml">
Variational message passing</link></network>
</group>
</system>
</entry>
<entry level="1" type="bullet">

<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<numerical_quantity wordnetid="105856066" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<value wordnetid="105856388" confidence="0.8">
<quantity wordnetid="105855125" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../752/470752.xml">
Expectation-maximization algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</quantity>
</value>
</rule>
</event>
</numerical_quantity>
</concept>
</idea>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../571/49571.xml">
Bayesian inference</link></entry>
<entry level="1" type="bullet">

<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../905/14784905.xml">
Feature detection</link></concept>
</idea>
</entry>
</list>
</p>

</sec>
</bdy>
</article>
