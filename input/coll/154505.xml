<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:21:30[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<instrument  confidence="0.9511911446218017" wordnetid="103574816">
<processor  confidence="0.9511911446218017" wordnetid="108065937">
<header>
<title>Digital signal processor</title>
<id>154505</id>
<revision>
<id>242468857</id>
<timestamp>2008-10-02T10:51:55Z</timestamp>
<contributor>
<username>Rilak</username>
<id>5089509</id>
</contributor>
</revision>
<categories>
<category>Integrated circuits</category>
<category>Texas Instruments</category>
<category>Digital signal processing</category>
<category>Digital signal processors</category>
</categories>
</header>
<bdy>
<p>

A <b>digital signal processor</b> (<b>DSP</b> or <b>DSP micro</b>) is a specialized <link xlink:type="simple" xlink:href="../553/19553.xml">
microprocessor</link> designed specifically for <link xlink:type="simple" xlink:href="../TN$$/HT$C$_T$yT$N$.xml">
digital signal processing</link>, generally in <link xlink:type="simple" xlink:href="../767/25767.xml">
real-time computing</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

<sec>
<st>
Typical characteristics</st>

<p>

Digital signal processing <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s typically require a large number of mathematical operations to be performed quickly on a set of data.  Signals are converted from analog to digital, manipulated digitally, and then converted again to analog form, as diagrammed below.  Many DSP applications have constraints on <link xlink:type="simple" xlink:href="../933/17933.xml">
latency</link>; that is, for the system to work, the DSP operation must be completed within some time constraint.</p>
<p>

<image location="center" width="500px" src="DSP_block_diagram.svg" type="thumb">
<caption>

A simple digital processing system
</caption>
</image>
</p>
<p>

Most general-purpose microprocessors and operating systems can execute DSP algorithms successfully. But these microprocessors are not suitable for application of mobile telephone and pocket PDA systems etc. because of power supply and space limit. A specialized digital signal processor, however, will tend to provide a lower-cost solution, with better performance and lower latency.</p>
<p>

The architecture of a digital signal processor is optimized specifically for digital signal processing work.  Some useful features for optimizing DSP algorithms are outlined below.</p>

<ss1>
<st>
Architecture</st>

<p>

<list>
<entry level="1" type="bullet">

Hardware modulo addressing, allowing <link xlink:type="simple" xlink:href="../734/11891734.xml">
circular buffer</link>s to be implemented without having to constantly test for wrapping.</entry>
<entry level="1" type="bullet">

A memory architecture designed for streaming data, using <link xlink:type="simple" xlink:href="../496/8496.xml">
DMA</link> extensively.</entry>
<entry level="1" type="bullet">

Separate program and data memories (<link xlink:type="simple" xlink:href="../019/58019.xml">
Harvard architecture</link>)</entry>
<entry level="1" type="bullet">

Special <link xlink:type="simple" xlink:href="../359/55359.xml">
SIMD</link> (single instruction, multiple data) operations</entry>
<entry level="1" type="bullet">

Special arithmetic operations, such as fast <link xlink:type="simple" xlink:href="../028/405028.xml">
multiply-accumulate</link>s (MACs).  Many fundamental DSP algorithms, such as <link xlink:type="simple" xlink:href="../101/443101.xml">
FIR filters</link> or the <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../512/11512.xml">
Fast Fourier transform</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 (FFT) depend heavily on multiply-accumulate performance.</entry>
<entry level="1" type="bullet">

Bit-reversed addressing, a special <link xlink:type="simple" xlink:href="../142/838142.xml">
addressing mode</link> useful only for calculating FFTs</entry>
<entry level="1" type="bullet">

Deliberate exclusion of a <link xlink:type="simple" xlink:href="../112/177112.xml">
memory management unit</link>.  DSPs frequently use multi-tasking operating systems, but have no support for <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> or memory protection.  Operating systems that use virtual memory require more time for <link xlink:type="simple" xlink:href="../904/6904.xml">
context switching</link> among <link xlink:type="simple" xlink:href="../178/45178.xml">
processes</link>, which increases latency.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Program flow</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../376/11376.xml">
Floating-point</link> unit integrated directly into the <link xlink:type="simple" xlink:href="../889/8232889.xml">
datapath</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../187/1236187.xml">
Pipelined</link> architecture</entry>
<entry level="1" type="bullet">

Highly parallel <link xlink:type="simple" xlink:href="../028/405028.xml">
multiplierâ€“accumulators</link> (MAC units)</entry>
<entry level="1" type="bullet">

Hardware-controlled <link>
looping</link>, to reduce or eliminate the overhead required for looping operations</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Memory architecture</st>

<p>

<list>
<entry level="1" type="bullet">

DSPs often use special memory architectures that are able to fetch multiple data and/or instructions at the same time:</entry>
<entry level="2" type="bullet">

<link xlink:type="simple" xlink:href="../019/58019.xml">
Harvard architecture</link></entry>
<entry level="2" type="bullet">

Modified <link xlink:type="simple" xlink:href="../091/478091.xml">
von Neumann architecture</link></entry>
<entry level="1" type="bullet">

Use of <link xlink:type="simple" xlink:href="../717/57717.xml">
direct memory access</link></entry>
<entry level="1" type="bullet">

Memory-address calculation unit</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Data operations</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../167/1830167.xml">
Saturation arithmetic</link>, in which operations that produce overflows will accumulate at the maximum (or minimum) values that the register can hold rather than wrapping around (maximum+1 doesn't overflow to minimum as in many general-purpose CPUs, instead it stays at maximum). Sometimes various <link xlink:type="simple" xlink:href="../104/1871104.xml">
sticky bit</link>s operation modes are available.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../245/11245.xml">
Fixed-point</link> arithmetic is often used to speed up arithmetic processing</entry>
<entry level="1" type="bullet">

Single-cycle operations to increase the benefits of <link xlink:type="simple" xlink:href="../187/1236187.xml">
pipelining</link></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Instruction sets</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../028/405028.xml">
Multiply-accumulate</link> (MAC, aka fused multiply-add, FMA) operations, which are used extensively in all kinds of <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> operations, such as <link xlink:type="simple" xlink:href="../519/7519.xml">
convolution</link> for filtering, <link xlink:type="simple" xlink:href="../093/157093.xml">
dot product</link>, or even polynomial evaluation (see <link xlink:type="simple" xlink:href="../263/14263.xml">
Horner scheme</link>)</entry>
<entry level="1" type="bullet">

Instructions to increase parallelism: <link xlink:type="simple" xlink:href="../359/55359.xml">
SIMD</link>, <link xlink:type="simple" xlink:href="../706/51706.xml">
VLIW</link>, <link xlink:type="simple" xlink:href="../702/51702.xml">
superscalar architecture</link> </entry>
<entry level="1" type="bullet">

Specialized instructions for <link xlink:type="simple" xlink:href="../087/20087.xml">
modulo</link> addressing in <link xlink:type="simple" xlink:href="../734/11891734.xml">
ring buffers</link> and bit-reversed addressing mode for <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../512/11512.xml">
FFT</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 cross-referencing</entry>
<entry level="1" type="bullet">

Digital signal processors sometimes use <link>
time-stationary encoding</link> to simplify hardware and increase coding efficiency.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
History</st>

<p>

In <link xlink:type="simple" xlink:href="../753/34753.xml">
1978</link>, Intel released the 2920 as an "analog signal processor". It had an on-chip ADC/DAC with an internal signal processor, but it didn't have a hardware multiplier and was not successful in the market. In <link xlink:type="simple" xlink:href="../754/34754.xml">
1979</link>, AMI released the <link>
S2811</link>. It was designed as a microprocessor peripheral, and it had to be initialized by the host. The S2811 was likewise not successful in the market.</p>
<p>

In <link xlink:type="simple" xlink:href="../754/34754.xml">
1979</link>, <link xlink:type="simple" xlink:href="../712/3712.xml">
Bell Labs</link> introduced the first single chip DSP, the Mac 4 Microprocessor. Then, in <link xlink:type="simple" xlink:href="../640/34640.xml">
1980</link> the first stand-alone, complete DSPs â€“ the <link xlink:type="simple" xlink:href="../687/383687.xml">
NEC</link> <link>
ÂµPD7720</link> and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../269/17555269.xml">
AT&amp;T</link></company>
 <enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../764/14357764.xml">
DSP1</link></business>
</processor>
</enterprise>
 â€“ were presented at the <link xlink:type="simple" xlink:href="../938/56938.xml">
IEEE</link> International <link xlink:type="simple" xlink:href="../002/3656002.xml">
Solid-State Circuits</link> Conference '80. Both processors were inspired by the research in <link xlink:type="simple" xlink:href="../436/468436.xml">
PSTN</link> <link xlink:type="simple" xlink:href="../322/30322.xml">
telecommunication</link>s.</p>
<p>

The Altamira DX-1 was another early DSP, utilizing quad integer pipelines with delayed branches and branch prediction.</p>
<p>

The first DSP produced by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../768/47768.xml">
Texas Instruments</link></company>
 (TI), the <enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../355/2542355.xml">
TMS32010</link></business>
</processor>
</enterprise>
 presented in <link xlink:type="simple" xlink:href="../755/34755.xml">
1983</link>, proved to be an even bigger success. It was based on the Harvard architecture, and so had separate instruction and data memory. It already had a special instruction set, with instructions like load-and-accumulate or multiply-and-accumulate. It could work on 16-bit numbers and needed 390ns for a multiply-add operation. TI is now the market leader in general-purpose DSPs. Another successful design was the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/20319.xml">
Motorola</link></company>
 <artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../974/89974.xml">
56000</link></business>
</processor>
</enterprise>
</commodity>
</merchandise>
</artifact>
.</p>
<p>

About five years later, the second generation of DSPs began to spread. They had 3 memories for storing two operands simultaneously and included hardware to accelerate <link xlink:type="simple" xlink:href="../273/45273.xml">
tight loop</link>s, they also had an addressing unit capable of <link>
loop-addressing</link>. Some of them operated on 24-bit variables and a typical model only required about 21ns for a MAC (multiply-accumulate). Members of this generation were for example the AT&amp;T DSP16A or the Motorola DSP56001.</p>
<p>

The main improvement in the third generation was the appearance of application-specific units and instructions in the data path, or sometimes as coprocessors. These units allowed direct hardware acceleration of very specific but complex mathematical problems, like the Fourier-transform or matrix operations. Some chips, like the Motorola MC68356, even included more than one processor core to work in parallel. Other DSPs from 1995 are the TI TMS320C541 or the TMS 320C80. </p>
<p>

The fourth generation is best characterized by the changes in the instruction set and the instruction encoding/decoding. SIMD and MMX extensions were added, VLIW and the superscalar architecture appeared. As always, the clock-speeds have increased, a 3ns MAC now became possible.</p>

</sec>
<sec>
<st>
Modern DSPs</st>

<p>

Modern signal processors yield much greater performance. This is due in part to both technological and architectural advancements like lower design rules, fast-access two-level cache, (E)<link xlink:type="simple" xlink:href="../717/57717.xml">
DMA</link> circuit and a wider bus system. Of course, not all DSPs provide the same speed and many kinds of signal processors exist, each one of them being better suited for a specific task, ranging in price from about US$1.50 to US$300. A Texas Instruments <link xlink:type="simple" xlink:href="../355/2542355.xml">
C6000</link> series DSP clocks at 1.2 GHz and implements separate instruction and data caches as well as an 8 MiB 2nd level cache, and its I/O speed is rapid thanks to its 64 EDMA channels. The top models are capable of as many as 8000 MIPS (million <link xlink:type="simple" xlink:href="../684/20684.xml">
instructions per second</link>), use VLIW (<link xlink:type="simple" xlink:href="../706/51706.xml">
very long instruction word</link>) encoding, perform eight operations per clock-cycle and are compatible with a broad range of external peripherals and various buses (PCI/serial/etc).</p>
<p>

Another player at the high-end signal processor manufacturer today is <link xlink:type="simple" xlink:href="../512/486512.xml">
Freescale</link>. The company provides a multi-core DSPs family MSC81xx. The MSC81xx is based on StarCoreâ„¢ Architecture processors. The latest MSC8144 DSP combines four programmable SC3400 StarCoreâ„¢ DSP cores. Each SC3400 StarCoreâ„¢ DSP core runs at 1GHz. The SC3400 performed higher than any other programmable DSP at 1 GHz on BDTIsimMark2000â„¢  results published by Berkeley Design Technology, Inc. (BDTI).</p>
<p>

Another major signal processor manufacturer today is <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../341/644341.xml">
Analog Devices</link></company>
. The company provides a broad range of DSPs, but its main portfolio is multimedia processors, such as codecs, filters and digital-analog converters. Its <enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../845/1082845.xml">
SHARC</link></business>
</processor>
</enterprise>
-based processors range in performance from 66 MHz/198 <link xlink:type="simple" xlink:href="../930/82930.xml">
MFLOPS</link> (million floating-point operations per second) to 400 MHz/2400MFLOPS. Some models even support multiple <link xlink:type="simple" xlink:href="../723/193723.xml">
multiplier</link>s and <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<electrical_device wordnetid="103269401" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<circuit wordnetid="103033362" confidence="0.8">
<link xlink:type="simple" xlink:href="../504/199504.xml">
ALU</link></circuit>
</device>
</electrical_device>
</instrumentality>
</artifact>
s, <link xlink:type="simple" xlink:href="../359/55359.xml">
SIMD</link> instructions and audio processing-specific components and peripherals. Another product of the company is the <enterprise wordnetid="108056231" confidence="0.8">
<processor wordnetid="108065937" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<link xlink:type="simple" xlink:href="../678/1085678.xml">
Blackfin</link></business>
</processor>
</enterprise>
 family of embedded digital signal processors, with models like the ADSP-BF531 to ADSP-BF536. These processors combine the features of a DSP with those of a general use processor. As a result, these processors can run simple <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s like <link>
Î¼CLinux</link>, <link>
velOSity</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../339/903339.xml">
Nucleus RTOS</link></O>
 while operating relatively efficiently on real-time data.</p>
<p>

Most DSPs use <link xlink:type="simple" xlink:href="../736/449736.xml">
fixed-point arithmetic</link>, because in real world signal processing, the additional range provided by floating point is not needed, and there is a large speed benefit and cost benefit due to reduced hardware complexity. Floating point DSPs may be invaluable in applications where a wide dynamic range is required. Product developers might also use floating point DSPs to reduce the cost and complexity of software development in exchange for more expensive hardware, since it is generally easier to implement algorithms in floating point.</p>
<p>

Generally, DSPs are dedicated integrated circuits, however DSP functionality can also be realized using <link xlink:type="simple" xlink:href="../814/592814.xml">
Field Programmable Gate Array</link> chips.</p>
<p>

Embedded general-purpose RISC processors are becoming increasingly DSP in functionality. For example, ARM Cortex-A8 has a 128-bit wide SIMD unit that can have impressive 16- and 8-bit performance for industry standard benchmarks.</p>

</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../085/12060085.xml">
Digital Signal Controller</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal" class="book">A. John Anderson&#32;(1994). <weblink xlink:type="simple" xlink:href="http://books.google.com/books?id=6PUH68h45BsC&amp;pg=PA361&amp;dq=%22real+time%22+%22digital+signal+processor%22&amp;lr=&amp;as_brr=3&amp;ei=ALYlSNGNC4KKswOczZC8DQ&amp;sig=Wt0P3ZANNvw8E5W1GzNGY5PoXfM#PPA361,M1">
Foundations of Computer Technology</weblink>.&#32;CRC Press.</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://edu.cs.tut.fi/kuulusa296.pdf">
DSP Processor - Core-Based Wireless System Design</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://Microcontroller.com">
Microcontroller.com</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dspengineering.com">
DSP Engineering Magazine</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.bores.com/courses/intro/chips/index.htm">
Introduction to DSP - Processor tutorial</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.improvsys.com">
Improv Systems Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.asiaing.com/dsp-designing-for-optimal-results.html">
DSP: Designing for Optimal Results</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.analog.com/processors/">
Analog Devices Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dsprelated.com">
DSP Discussion Groups</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dspguide.com">
DSP Online Book</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.vliw.org">
DSPs and VLIW</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.bdti.com/pocket/pocket.htm">
Pocket Guide to Processors for DSP - Berkeley Design Technology, INC</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://dsp.newscitech.com/">
DSP Online eBooks</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ti.com">
Texas Instruments Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ceva-dsp.com">
CEVA, Inc. Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.freescale.com/dsp">
Freescale Semiconductor Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.bdti.com/index.html">
 BDTi</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.bdti.com/bdtimark/BDTImark2000.htm#scores">
BDTI DSP Kernel Benchmarksâ„¢ Results</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.edn.com/article/CA6541396.html">
The 2008 EDN DSP directory</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dsp-fpga.com/">
DSP-FPGA.com Magazine</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../218/5218.xml">
CPU technologies</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../772/47772.xml">
Architecture</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../772/47772.xml">
ISA</link> : <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../622/7622.xml">
CISC</link></group>
</collection>
</class>
 &nbsp;Â·  <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../622/7622.xml#xpointer(//*[./st=%22CISC_and_RISC_processors%22])">
CISC-RISC (x86)</link></group>
</collection>
</class>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../151/685151.xml">
EPIC</link>&nbsp;Â·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../713/151713.xml">
OISC</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
&nbsp;Â· <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../201/26201.xml">
RISC</link></group>
</collection>
</class>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../706/51706.xml">
VLIW</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../509/1940509.xml">
ZISC</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../019/58019.xml">
Harvard architecture</link>&nbsp;Â·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../091/478091.xml">
Von Neumann architecture</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../733/80733.xml">
32 bit</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../285/148285.xml">
64 bit</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../724/1800724.xml">
128 bit</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../162/145162.xml">
Parallelism</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Pipeline</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../314/220314.xml">
Instruction pipelining</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../307/1002307.xml">
In-Order &amp; Out-of-Order execution</link>&nbsp;Â·  <register wordnetid="106507041" confidence="0.8">
<record wordnetid="106647206" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../852/435852.xml">
Register renaming</link></written_record>
</evidence>
</indication>
</record>
</register>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../504/319504.xml">
Speculative execution</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Level</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../148/14229148.xml">
Bit</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../960/245960.xml">
Instruction</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../702/51702.xml">
Superscalar</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../420/9467420.xml">
Data</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../070/9468070.xml">
Task</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Threads</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../679/10520679.xml">
Multithreading</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../021/315021.xml">
Simultaneous multithreading</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../443/151443.xml">
Hyperthreading</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../877/313877.xml">
Superthreading</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../505/154505.xml">
Digital signal processor</link>&nbsp;Â·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../017/21017.xml">
Microcontroller</link></instrumentality>
</artifact>
</system>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../205/58205.xml">
Vector processor</link>&nbsp;Â·  PLDs: (<arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../969/10969.xml">
FPGA</link></array>
</group>
</arrangement>
&nbsp;Â·  <arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../845/147845.xml">
ASIC</link></array>
</group>
</arrangement>
&nbsp;Â·  <arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../209/12751209.xml">
ASIP</link></array>
</group>
</arrangement>
)</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<electrical_device wordnetid="103269401" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<circuit wordnetid="103033362" confidence="0.8">
<link xlink:type="simple" xlink:href="../504/199504.xml">
Arithmetic logic unit (ALU)</link></circuit>
</device>
</electrical_device>
</instrumentality>
</artifact>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../see/Linden=2C_T$ennessee.xml">
Floating point unit (FPU)</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../045/339045.xml">
Backside Bus</link>&nbsp;Â·  <register wordnetid="106507041" confidence="0.8">
<record wordnetid="106647206" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../432/486432.xml">
Registers</link></written_record>
</evidence>
</indication>
</record>
</register>
 &nbsp;Â·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit (MMU)</link> &nbsp;Â·  <link xlink:type="simple" xlink:href="../352/528352.xml">
Translation lookaside buffer (TLB)</link> &nbsp;Â·  <link xlink:type="simple" xlink:href="../181/849181.xml">
Cache</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Programming</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../349/222349.xml">
Flynn's taxonomy</link></group>
</collection>
</class>
 (<link xlink:type="simple" xlink:href="../630/1103630.xml">
SISD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../359/55359.xml">
SIMD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../666/991666.xml">
MISD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../139/157139.xml">
MIMD</link>)</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../703/273703.xml">
Power management</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../130/3130.xml">
APM</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../697/2432697.xml">
ACPI</link> <link xlink:type="simple" xlink:href="../697/2432697.xml#xpointer(//*[./st=%22States%22])">
(states)</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../512/13891512.xml">
Dynamic frequency scaling</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../711/13933711.xml">
Dynamic voltage scaling</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../754/2817754.xml">
Clock gating</link></col>
</row>
</table>
</col>
</row>
</table>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../553/19553.xml">
Computer Processing units</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../218/5218.xml">
Central</link> Â· <substance wordnetid="100019613" confidence="0.8">
<paper wordnetid="114974264" confidence="0.8">
<card wordnetid="102962545" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<material wordnetid="114580897" confidence="0.8">
<link xlink:type="simple" xlink:href="../214/390214.xml">
Graphics</link></material>
</part>
</card>
</paper>
</substance>
 Â· <link xlink:type="simple" xlink:href="../714/2422714.xml">
Network</link> Â· <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/28184.xml">
Audio</link></generic>
 Â· <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../947/1585947.xml">
Physics</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 Â· <link xlink:type="simple" xlink:href="../505/154505.xml">
Digital signal</link> Â· <link xlink:type="simple" xlink:href="../193/378193.xml">
Coprocessors</link></col>
</row>
</table>
</col>
</row>
</table>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://stinet.dtic.mil/oai/oai?verb=getRecord&amp;metadataPrefix=html&amp;identifier=ADA305733">
AR Parameter Estimation using TMS320C30</weblink></entry>
</list>
</p>


</sec>
</bdy>
</processor>
</instrument>
</article>
