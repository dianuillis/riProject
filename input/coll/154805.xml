<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:21:55[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<shell  confidence="0.8" wordnetid="104190464">
<artifact  confidence="0.8" wordnetid="100021939">
<instrumentality  confidence="0.8" wordnetid="103575240">
<ammunition  confidence="0.8" wordnetid="102703275">
<weaponry  confidence="0.8" wordnetid="104566257">
<header>
<title>Conversational Monitor System</title>
<id>154805</id>
<revision>
<id>224425881</id>
<timestamp>2008-07-08T20:06:45Z</timestamp>
<contributor>
<username>Gwern</username>
<id>2164608</id>
</contributor>
</revision>
<categories>
<category>Command shells</category>
<category>IBM Mainframe computer operating systems</category>
</categories>
</header>
<bdy>

<indent level="1">

<it>Main articles: <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM (operating system)</link></O>
,&#32;<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
,&#32;and&#32;<link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link></it>
</indent>

The <b>Conversational Monitor System</b> (<b>CMS</b>; originally: "Cambridge Monitor System") is a relatively simple <link xlink:type="simple" xlink:href="../251/1623251.xml">
interactive computing</link> single-user <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>.
<list>
<entry level="1" type="bullet">

 CMS is part of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM family</link></O>
, which runs on <link xlink:type="simple" xlink:href="../872/14872.xml">
IBM mainframe</link> computers. VM was first announced in 1972, and is still in use today (<it>cf.</it> <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>).</entry>
<entry level="1" type="bullet">

 CMS was originally developed as part of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 operating system, which went into production use in 1967.</entry>
</list>
<p>

CMS runs as a "guest" operating system in a private <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> created by the VM <it>control program</it>. The control program plus CMS together create a multi-user time-sharing operating system. </p>

<sec>
<st>
History</st>
<p>

CMS was originally developed as part of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 operating system. At the time, the acronym meant "Cambridge Monitor System" (but also: "Console Monitor System"). 
<list>
<entry level="1" type="bullet">

 CMS first ran under <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>, a one-off research system using custom hardware at IBM's <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
. Production use at CSC began in January 1967. The CMS user interface drew heavily on experience with the influential first-generation time-sharing system <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
, some of whose developers worked on <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
. (CTSS was used as an early <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 development platform.)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Later in 1967, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 became generally available on the <link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link>, where, although the new control program <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> was a substantial re-implementation of <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>, CMS remained essentially the same. IBM provided <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 "as is" &ndash; without any support, in source code form, as part of the <link xlink:type="simple" xlink:href="../204/7218204.xml">
IBM Type-III Library</link>. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was thus an <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> system. Despite this lack of support from IBM, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 achieved great success as a time-sharing platform; by 1972, there were some 44 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 systems in use, including commercial sites that resold access to <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
.</entry>
</list>
</p>
<p>

In 1972, IBM released its <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link></O>
 operating system, a re-implementation of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 for the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>, in an announcement that also added <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> hardware to the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> series. Unlike <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
, VM/370 <it>was</it> supported by IBM. VM went through a series of versions, and is still in use today as <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>.</p>
<p>

Through all its distinct versions and releases, the CMS platform remained still quite recognizable as a close descendant of the original CMS version running under <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>. Many key user interface decisions familiar to today's users had already been made in 1965, as part of the <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> effort. See <link>
CMS under CP-40</link> for examples.</p>
<p>

Both <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 had checkered histories at IBM. VM was not one of IBM's "strategic" operating systems, which were primarily the <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS</link> and <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS</link> families, and it suffered from IBM political infighting over <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> versus <link xlink:type="simple" xlink:href="../285/37285.xml">
batch processing</link> goals. This conflict is why <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was originally released as an unsupported system, and why VM often had limited development and support resources within IBM. An exceptionally strong user community, first established in the self-support days of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 but remaining active after the launch of VM, made substantial contributions to the operating system, and mitigated the difficulties of running IBM's "other operating system".</p>

</sec>
<sec>
<st>
Architecture</st>
<p>

CMS is an intrinsic part of the VM/CMS architecture, established with <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
. Each CMS user has control over a private <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> &ndash; a simulated copy of the underlying physical computer &ndash; in which CMS runs as a stand-alone operating system. This approach has remained consistent through the years, and is based on:
<list>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../596/8273596.xml">
Full virtualization</link></machine>
</device>
</instrumentality>
</artifact>
, used to create multiple independent virtual machines that each completely simulate the underlying hardware</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../546/1441546.xml">
Paravirtualization</link>, used to provide a <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link> interface that CMS uses to access VM services; this is implemented by the non-virtualized DIAG (diagnose) instruction</entry>
</list>
</p>
<p>

More details on how CMS interacts with the virtual machine environment can be found in the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 articles.</p>
<p>

CMS was originally built as a stand-alone operating system, capable of running on a bare machine (though of course nobody would choose to do so). However, CMS can no longer run outside the VM environment, which provides the <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link> interface needed for various critical functions.</p>

</sec>
<sec>
<st>
Features</st>
<p>

CMS provides users an environment for running <link xlink:type="simple" xlink:href="../746/454746.xml">
applications</link> or <link xlink:type="simple" xlink:href="../285/37285.xml">
batch jobs</link>, managing <link xlink:type="simple" xlink:href="../077/7077.xml">
data files</link>, creating and <link xlink:type="simple" xlink:href="../395/323395.xml">
debug</link>ging applications, doing <link xlink:type="simple" xlink:href="../193/81193.xml">
cross-platform</link> development, and communicating with other systems or users.</p>
<p>

CMS is still in development and wide use today.</p>

<ss1>
<st>
Basic environment</st>
<p>

Users log in to VM, providing a userid and password, and then boot their own virtual machine. This can be done by issuing the command "IPL CMS" ("IPL" = <it>initial program load</it>, traditional IBM jargon for <link xlink:type="simple" xlink:href="../909/40909.xml">
booting</link> a machine); though this is normally done automatically for the user. Personal customization is done by a standard shell script file named "PROFILE EXEC", which sets up user-specified environmental defaults, such as which disks and libraries are accessed.</p>

</ss1>
<ss1>
<st>
Terminal support</st>
<p>

CMS started in the era of teletype-style paper terminals, and the later "glass teletype" <link>
dumb terminals</link>. By the late 1970s, however, most VM users were connecting via full-screen terminals &ndash; particularly the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<terminal wordnetid="104412901" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<station wordnetid="104306080" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/15154.xml">
IBM 3270</link></rule>
</direction>
</station>
</facility>
</terminal>
</artifact>
</protocol>
</message>
, the ubiquitous transaction processing terminal on IBM mainframes. The 3270 played a strategic role in IBM's product line, making its selection a natural choice for large data centers of the day. Many other manufacturers eventually offered bisync terminals that emulated the 3270 protocol.</p>
<p>

3270s had local buffer storage, some processing capabilities, and generally dealt with an entire screen of data at a time. They handled editing tasks locally, and then transmitted a set of fields (or the entire page) at once when the ENTER key or a <link xlink:type="simple" xlink:href="../379/347379.xml">
program function key</link> (PFK) was pressed.</p>
<p>

The 3270 family incorporated "smart" control units, concentrators, and other network processing elements, communicating with the mainframe over dedicated circuits at relatively high speeds, via a <link xlink:type="simple" xlink:href="../883/3659883.xml">
bisync</link> synchronous <link xlink:type="simple" xlink:href="../235/83235.xml">
data transmission protocol</link>. (These mainframe-oriented communication technologies provided some of the capabilities taken for granted in modern communication networks, such as device addressing, routing, error correction, and support for a variety of configurations such as <link xlink:type="simple" xlink:href="../990/11788990.xml">
multipoint</link> and <link xlink:type="simple" xlink:href="../633/3078633.xml">
multidrop</link> topologies.)</p>
<p>

<b>Historical note:</b> The 3270 approach differed from lower-cost <link>
dumb terminal</link>s of the period, which were <link xlink:type="simple" xlink:href="../040/3988040.xml">
point-to-point</link> and <link xlink:type="simple" xlink:href="../168/42168.xml">
asynchronous</link>. Commercial <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> users, an important segment of early <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 and VM sites, relied on such devices because they could connect via 300- or 1200 bit/s modems over normal voice-grade telephone circuits. Installing a dedicated circuit for a 3270 was often not practical, economical, or timely.
The 3270's <link xlink:type="simple" xlink:href="../159/3608159.xml">
block-oriented</link> approach was more consistent with IBM's batch- and punchcard-oriented view of computing, and was particularly important for IBM mainframes of the day. Unlike contemporary minicomputers, most IBM mainframes were not equipped for character-at-a-time interrupts. Dumb terminal support relied on terminal control units such as the IBM 270x (see <link>
IBM 3705</link>) or Memorex 1270. These <link xlink:type="simple" xlink:href="../168/42168.xml">
asynchronous</link> <link xlink:type="simple" xlink:href="../318/7044318.xml">
terminal controller</link>s assembled a line of characters, up to a fixed maximum length, until the RETURN key was pressed. Typing too many characters would result in an error, a familiar situation to users of the day. (Most data centers did not include this equipment, except as needed for dial-up access. The 3270 approach was preferred.)
Block-oriented terminals like the 3270 made it practical to implement <link xlink:type="simple" xlink:href="../310/30310.xml">
screen-oriented editors</link> on mainframes &ndash; as opposed to <link xlink:type="simple" xlink:href="../693/152693.xml">
line-oriented editors</link>, the previous norm. This had been an important advantage of contemporary minicomputers and other character-oriented systems, and its availability via the 3270 was warmly welcomed.
A gulf developed between the 3270 world, focused on page-oriented mainframe transaction processing (especially via <link xlink:type="simple" xlink:href="../505/391505.xml">
CICS</link>), and the asynch terminal world, focused on character-oriented minicomputers and dial-up timesharing. Asynchronous terminal vendors gradually improved their products with a range of <link xlink:type="simple" xlink:href="../508/6086508.xml">
smart terminal</link> features, usually accessed via <link xlink:type="simple" xlink:href="../114/60114.xml">
escape sequences</link>. However, these devices rarely competed for 3270 users; IBM maintained its dominance over mainframe data center hardware purchase decisions.
Viewed in retrospect, there was a major philosophical divergence between block-oriented and character-oriented computing. Asynchronous terminal controllers and 3270s both provided the mainframe with block-oriented interactions &ndash; essentially, they made the terminal input look like a card reader. This approach, preferred by IBM, led to the development of entirely different user interface paradigms and programming strategies. Character-oriented systems evolved differently. The difference is apparent when comparing the <link xlink:type="simple" xlink:href="../074/4695074.xml">
atomic transaction</link> approach of dominant <link xlink:type="simple" xlink:href="../505/391505.xml">
CICS</link> with the interactive, stream-oriented style of <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>. VM/CMS evolved somewhere between these extremes. CMS has a command-driven, <link xlink:type="simple" xlink:href="../512/285512.xml">
stateful</link>, interactive environment, rather than adopting the CICS approach of a <link xlink:type="simple" xlink:href="../753/479753.xml">
stateless</link> <link xlink:type="simple" xlink:href="../409/212409.xml">
transaction-oriented</link> interface. Yet CMS responds to page- or line-at-a-time interaction, instead of character interrupts.</p>

</ss1>
<ss1>
<st>
Performance</st>
<p>

CMS earned a very good reputation for being efficient, and for having good human factors for ease of use, relative to the standards of the time (and of course prior to widespread use of <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link> environments such as are commonly used today). It was not uncommon to have hundreds (later: thousands) of concurrent CMS interactive users on the same VM mainframe, with sub-second response times for common, 'trivial' functions. VM/CMS consistently outperformed MVS and other IBM operating systems in terms of support for simultaneous interactive users.</p>

</ss1>
<ss1>
<st>
Programming and major applications</st>
<p>

Many CMS users programmed in such languages as <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>, <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../708/23708.xml">
PL/I</link></programming_language>
, <link xlink:type="simple" xlink:href="../021/6021.xml">
C/370</link>, <link xlink:type="simple" xlink:href="../451/1451.xml">
APL</link>, and the scripting language <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../858/25858.xml">
REXX</link></programming_language>
. VM/CMS was often used as a development platform for production systems that ran under IBM's other operating systems, such as <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link>.</p>
<p>

Other CMS users worked with commercial software packages such as <link xlink:type="simple" xlink:href="../853/867853.xml">
FOCUS</link>, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../250/2491250.xml">
NOMAD</link></instrumentality>
</artifact>
</system>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../088/179088.xml">
SPSS</link></software>
, and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../677/990677.xml">
SAS</link></software>
.</p>
<p>

At one time, CMS was also a major environment for e-mail and office productivity; an important product was IBM's PROFS (later renamed <link xlink:type="simple" xlink:href="../539/1892539.xml">
OfficeVision</link>).</p>
<p>

Two commonly-used CMS tools are the editor <skilled_worker wordnetid="110605985" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<editor wordnetid="110044879" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../880/1063880.xml">
XEDIT</link></causal_agent>
</worker>
</editor>
</person>
</physical_entity>
</skilled_worker>
 and the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../858/25858.xml">
REXX</link></programming_language>
 programming language. Both of these products have been ported to other platforms, and are now widely used outside the mainframe environment.</p>

</ss1>
</sec>
<sec>
<st>
References</st>
<p>

See <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM (operating system)</link></O>
 for VM-related sources and source citations.</p>
<p>

<b>Primary CP/CMS sources</b></p>
<p>

<list>
<entry level="1" type="bullet">

 R. J. Creasy, "<weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/rd/255/ibmrd2505M.pdf">
 The origin of the VM/370 time-sharing system</weblink>", <it>IBM Journal of Research &amp; Development</it>, Vol. 25, No. 5 (September 1981), <it>pp.</it> 483–90, <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>― perspective on <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 and <link xlink:type="simple" xlink:href="../579/188579.xml">
VM</link> history by the <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> project lead, also a <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
 author</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 E.W. Pugh, L.R. Johnson, and John H. Palmer, <it>IBM's 360 and early 370 systems,</it> MIT Press, Cambridge MA and London, ISBN 0-262-16123-0― extensive (819&nbsp;<it>pp.</it>) treatment of IBM's offerings during this period; the limited coverage of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 in such a definitive work is telling</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Melinda Varian, <it><weblink xlink:type="simple" xlink:href="http://www.princeton.edu/~melinda/25paper.pdf">
 VM and the VM community, past present, and future</weblink>,</it> SHARE 89 Sessions 9059–61, 1997; <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>― and outstanding source for <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 and <link xlink:type="simple" xlink:href="../579/188579.xml">
VM</link> history</entry>
</list>
</p>
<p>

<b>Additional CP/CMS sources</b></p>

<p>

<list>
<entry level="1" type="bullet">

 R. J. Adair, R. U. Bayles, L. W. Comeau, and R. J. Creasy, <it>A Virtual Machine System for the 360/40,</it> IBM Corporation, Cambridge Scientific Center Report No. 320‐2007 (May 1966)― a seminal paper describing implementation of the virtual machine concept, with descriptions of the customized CSC S/360-40 and the <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> design</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 International Business Machines Corporation, <it>CP-67/CMS</it>, Program 360D-05.2.005, IBM Program Information Department (June 1969)― IBM's reference manual</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 R. A. Meyer and L. H. Seawright, "A virtual machine time-sharing system," <it>IBM Systems Journal,</it> Vol. 9, No. 3, pp. 199–218 (September 1970)― describes the CP-67/CMS system, outlining features and applications</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 R. P. Parmelee, T. I. Peterson, C. C. Tillman, and D. J. Hatfield, "Virtual storage and virtual machine concepts," <it>IBM Systems Journal,</it> Vol. 11, No. 2 (June 1972)</entry>
</list>
</p>

<p>

<b>Background CP/CMS sources</b></p>

<p>

<list>
<entry level="1" type="bullet">

 F. J. Corbató, et al., <it>The Compatible Time-Sharing System, A Programmer’s Guide,</it> M.I.T. Press, 1963</entry>
<entry level="1" type="bullet">

 F. J. Corbató, M. Merwin-Daggett, and R. C. Daley, "An Experimental Time-sharing System," <it>Proc. Spring Joint Computer Conference (AFIPS) 21, pp.</it> 335–44 (1962) — description of CTSS</entry>
<entry level="1" type="bullet">

 F. J. Corbató and V. A. Vyssotsky, "Introduction and Overview of the MULTICS System", <it>Proc. Fall Joint Computer Conference (AFIPS) 27, pp.</it> 185–96 (1965)</entry>
<entry level="1" type="bullet">

 P. J. Denning, "Virtual Memory", <it>Computing Surveys</it> Vol. 2, <it>pp. </it> 153–89 (1970)</entry>
<entry level="1" type="bullet">

 J. B. Dennis, "Segmentation and the Design of Multi-Programmed Computer Systems," <it>JACM</it> Vol. 12, <it>pp.</it> 589–602 (1965)― virtual memory requirements for Project MAC, destined for <link xlink:type="simple" xlink:href="../659/58659.xml">
GE 645</link></entry>
<entry level="1" type="bullet">

 C. A. R. Hoare and R. H. Perrott, Eds., <it>Operating Systems Techniques</it>, Academic Press, Inc., New York (1972)</entry>
<entry level="1" type="bullet">

 T. Kilburn, D. B. G. Edwards, M. J. Lanigan, and F. H. Sumner, "One-Level Storage System", <it>IRE Trans. Electron. Computers EC-11, pp.</it> 223–35 (1962)― Manchester/Ferranti <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../548/19278548.xml">
Atlas</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
</entry>
<entry level="1" type="bullet">

 R. A. Nelson, "Mapping Devices and the M44 Data Processing System," <it>Research Report RC 1303</it>, IBM <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../125/1400125.xml">
Thomas J. Watson Research Center</link></facility>
</artifact>
</structure>
 (1964)― about the <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link></entry>
<entry level="1" type="bullet">

 R. P. Parmelee, T. I. Peterson, C. C. Tillman, and D. J. Hatfield, "Virtual Storage and Virtual Machine Concepts", <it>IBM Systems Journal</it>, Vol. 11, <it>pp.</it> 99–130 (1972)</entry>
</list>
</p>
<p>

<b>Additional on-line CP/CMS resources</b></p>
<p>

<list>
<entry level="1" type="bullet">

 febcm.club.fr — <it><weblink xlink:type="simple" xlink:href="http://febcm.club.fr/english/information_technology/information_technology_3.htm">
 Information Technology Timeline</weblink>, 1964–74''</it></entry>
<entry level="1" type="bullet">

 www.multicians.org — Tom Van Vleek's short essay <it><weblink xlink:type="simple" xlink:href="http://www.multicians.org/thvv/360-67.html">
 The IBM 360/67 and CP/CMS</weblink>''</it></entry>
<entry level="1" type="bullet">

  www.cap-lore.com — Norman Hardy's <it><weblink xlink:type="simple" xlink:href="http://cap-lore.com/Software/CP.html">
 Short history of IBM's virtual machines</weblink>''</it></entry>
<entry level="1" type="bullet">

  www.cap-lore.com — Norman Hardy's <weblink xlink:type="simple" xlink:href="http://www.cap-lore.com/Hardware/Blaauw.html">
 short description of the "Blaauw Box"</weblink></entry>
</list>
</p>



</sec>
</bdy>
</weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
</article>
