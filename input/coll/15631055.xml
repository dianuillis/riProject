<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 03:16:40[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<theory  confidence="0.9511911446218017" wordnetid="105989479">
<header>
<title>Undecidable problem</title>
<id>15631055</id>
<revision>
<id>242601760</id>
<timestamp>2008-10-02T22:16:07Z</timestamp>
<contributor>
<username>Stevenrasnick</username>
<id>6026325</id>
</contributor>
</revision>
<categories>
<category>Formal theories of arithmetic</category>
<category>Articles to be merged since February 2008</category>
<category>Model theory</category>
<category>Logic in computer science</category>
<category>All articles to be merged</category>
<category>Proof theory</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Merge-arrow.svg">
<caption>

Merge arrow
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that this article or section be  into . ()</col>
</row>
</table>

<p>

In <link xlink:type="simple" xlink:href="../084/3244084.xml">
computability theory</link> and <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>, an <b>undecidable problem</b> is a <link xlink:type="simple" xlink:href="../336/8336.xml">
decision problem</link> for which it is impossible to construct an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> that leads to a yes-or-no answer - the problem is not <link xlink:type="simple" xlink:href="../118/913118.xml">
decidable</link>.</p>
<p>

A <it>decision problem</it> is any arbitrary yes-or-no question on an infinite set of inputs.  Because of this, it is traditional to define the decision problem equivalently as: the set of inputs for which the problem returns <it>yes</it>.</p>
<p>

These inputs can be natural numbers, but also other values of some other kind, such as <link xlink:type="simple" xlink:href="../701/27701.xml">
string</link>s of a <link xlink:type="simple" xlink:href="../939/10939.xml">
formal language</link>. Using some encoding, such as <link>
Gödel number</link>s, the strings can be encoded as natural numbers.  Thus, a decision problem informally phrased in terms of a formal language is also equivalent to a set of <link xlink:type="simple" xlink:href="../474/21474.xml">
natural numbers</link>.  To keep the formal definition simple, it is phrased in terms of subsets of the natural numbers.</p>
<p>

Formally, a <b>decision problem</b> is a subset of the natural numbers. The corresponding informal problem is that of deciding whether a given number is in the set.</p>
<p>

A decision problem <it>A</it> is called <b>decidable</b> or <b>effectively solvable</b> if <it>A</it> is a <link xlink:type="simple" xlink:href="../264/332264.xml">
recursive set</link>.  A problem is called <b>partially decidable</b>, <b>semidecidable</b>, <b>solvable</b>, or <b>provable</b> if <it>A</it> is a <link xlink:type="simple" xlink:href="../090/332090.xml">
recursively enumerable set</link>.  Partially decidable problems and any other problems that are not decidable are called <b>undecidable</b>.</p>

<sec>
<st>
The undecidable problem in computability theory</st>

<p>

In <link xlink:type="simple" xlink:href="../136/442136.xml">
computability theory</link>, the <b>halting problem</b> is a <link xlink:type="simple" xlink:href="../336/8336.xml">
decision problem</link> which can be stated as follows:</p>
<p>

<indent level="1">

<it>Given a description of a <link xlink:type="simple" xlink:href="../783/5783.xml">
program</link> and a finite input, decide whether the program finishes running or will run forever, given that input.</it>
</indent>

<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../208/1208.xml">
Alan Turing</link></scientist>
</person>
 proved in 1936 that a general <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> running on a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 that solves the halting problem for <it>all</it> possible program-input pairs necessarily cannot exist. Hence, we say that the halting problem is <it><link xlink:type="simple" xlink:href="../795/54795.xml">
undecidable</link></it> over Turing machines.</p>

</sec>
<sec>
<st>
Relationship with Gödel's incompleteness theorem</st>
<p>

The <link xlink:type="simple" xlink:href="../978/6978.xml">
concept</link>s raised by <link>
Gödel's incompleteness theorem</link>s are very similar to those raised by the halting problem, and the proofs are quite similar.  In fact, a weaker form of the First Incompleteness Theorem is an easy consequence of the undecidability of the halting problem. This weaker form differs from the standard statement of the incompleteness theorem by asserting that a complete, <link xlink:type="simple" xlink:href="../802/75802.xml">
consistent</link> and <link xlink:type="simple" xlink:href="../819/26819.xml">
sound</link> <link xlink:type="simple" xlink:href="../401/188401.xml">
axiomatization</link> of all statements about natural numbers is unachievable. The "sound" part is the weakening: it means that we require the axiomatic system in question to prove only <it>true</it> statements about natural numbers (it's very important to observe that the statement of the standard form of Gödel's First Incompleteness Theorem is completely unconcerned with the question of truth, but only concerns the issue of whether it can be <link xlink:type="simple" xlink:href="../285/82285.xml">
proven</link>).</p>
<p>

The weaker form of the theorem can be proved from the undecidability of the halting problem as follows. Assume that we have a consistent and complete <link xlink:type="simple" xlink:href="../401/188401.xml">
axiomatization</link> of all true <link xlink:type="simple" xlink:href="../983/10983.xml">
first-order logic</link> statements about <link xlink:type="simple" xlink:href="../474/21474.xml">
natural number</link>s. Then we can build an algorithm that enumerates all these statements. This means that there is an algorithm <it>N</it>(<it>n</it>) that, given a natural number <it>n</it>, computes a true first-order logic statement about natural numbers such that, for all the true statements, there is at least one <it>n</it> such that <it>N</it>(<it>n</it>) yields that statement. Now suppose we want to decide if the algorithm with representation <it>a</it> halts on input <it>i</it>.  We know that this statement can be expressed with a first-order logic statement, say <it>H</it>(<it>a</it>, <it>i</it>).  Since the axiomatization is complete it follows that either there is an <it>n</it> such that <it>N</it>(<it>n</it>) =  <it>H</it>(<it>a</it>, <it>i</it>) or there is an <it>n&#39;</it> such that <it>N</it>(<it>n&#39;</it>) = ¬ <it>H</it>(<it>a</it>, <it>i</it>).  So if we <link xlink:type="simple" xlink:href="../833/68833.xml">
iterate</link> over all <it>n</it> until we either find <it>H</it>(<it>a</it>, <it>i</it>) or its negation, we will always halt. This means that this gives us an algorithm to decide the halting problem. Since we know that there cannot be such an algorithm, it follows that the assumption that there is a consistent and complete axiomatization of all true first-order logic statements about natural numbers must be false.</p>

</sec>
<sec>
<st>
List of undecidable problems</st>
<p>

In <link xlink:type="simple" xlink:href="../084/3244084.xml">
computability theory</link>, an <b>undecidable problem</b> is a problem whose language is not a <link xlink:type="simple" xlink:href="../264/332264.xml">
recursive set</link>. More informally, such problems cannot be solved in general by computers; see <link xlink:type="simple" xlink:href="../118/913118.xml">
decidability</link>. This is a list of undecidable problems. Note that there are <link xlink:type="simple" xlink:href="../248/32248.xml">
uncountably</link> many undecidable problems, so this list is necessarily incomplete. Though undecidable languages are not recursive languages, they may be a <link xlink:type="simple" xlink:href="../631/27631.xml">
subset</link> of <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../208/1208.xml">
Turing</link></scientist>
</person>
 recognizable languages.</p>

<ss1>
<st>
 Problems related to <link xlink:type="simple" xlink:href="../492/60492.xml">
abstract machine</link>s </st>

<p>

<list>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link> (determining whether a specified machine halts or runs forever).</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../911/67911.xml">
busy beaver</link> problem (determining the length of the longest halting computation among machines of a specified size).</entry>
<entry level="1" type="bullet">

 <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../852/25852.xml">
Rice's theorem</link></proposition>
</theorem>
</message>
</statement>
 states that for all non-trivial properties of partial functions, it is undecidable whether a machine computes a partial function with that property.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Other problems </st>

<p>

<list>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../685/64685.xml">
Post correspondence problem</link>.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../563/33563.xml">
word problem for groups</link>.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../742/1180742.xml">
word problem</link> for certain <link xlink:type="simple" xlink:href="../939/10939.xml">
formal languages</link>.</entry>
<entry level="1" type="bullet">

 The problem of determining if a given set of <link xlink:type="simple" xlink:href="../798/65798.xml">
Wang tile</link>s can tile the plane.</entry>
<entry level="1" type="bullet">

 The problem whether a <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../891/308891.xml">
Tag system</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
 halts.</entry>
<entry level="1" type="bullet">

 The problem of determining the <link xlink:type="simple" xlink:href="../635/1635.xml">
Kolmogorov complexity</link> of a string.</entry>
<entry level="1" type="bullet">

 Determination of the solvability of a Diophantine equation, known as <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../851/101851.xml">
Hilbert's tenth problem</link></mathematical_statement>
</equation>
</message>
</statement>
</entry>
<entry level="1" type="bullet">

 Determining whether two finite <link xlink:type="simple" xlink:href="../686/252686.xml">
simplicial complex</link>es are homeomorphic</entry>
<entry level="1" type="bullet">

 Determining whether the <link xlink:type="simple" xlink:href="../004/11004.xml">
fundamental group</link> of a finite simplicial complex is trivial</entry>
<entry level="1" type="bullet">

 Determining if a <link xlink:type="simple" xlink:href="../759/6759.xml">
context-free grammar</link> generates all possible strings, or if it is ambiguous.</entry>
<entry level="1" type="bullet">

 Given two context-free grammars, determining whether they generate the same set of strings, or whether one generates a subset of the strings generated by the other, or whether there is any string at all that both generate.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
Examples of undecidable statements</st>
<p>

There are two distinct senses of the word "undecidable" in contemporary use. The first of these is the sense used in relation to Gödel's theorems, that of a statement being neither provable nor refutable in a specified <link xlink:type="simple" xlink:href="../822/15285822.xml">
deductive system</link>.  The second sense is used in relation to <link xlink:type="simple" xlink:href="../084/3244084.xml">
computability theory</link> and applies not to statements but to <link xlink:type="simple" xlink:href="../336/8336.xml">
decision problem</link>s, which are countably infinite sets of questions each requiring a yes or no answer. Such a problem is said to be undecidable if there is no <link xlink:type="simple" xlink:href="../338/1139338.xml">
computable function</link> that correctly answers every question in the problem set.  The connection between these two is that if a decision problem is undecidable (in the recursion theoretical sense) then there is no consistent, effective <link xlink:type="simple" xlink:href="../102/396102.xml">
formal system</link> which proves for every question <it>A</it> in the problem either "the answer to <it>A</it> is yes" or "the answer to <it>A</it> is no".</p>
<p>

Because of the two meanings of the word undecidable, the term <link xlink:type="simple" xlink:href="../208/1141208.xml">
independent</link> is sometimes used instead of undecidable for the "neither provable nor refutable" sense. The usage of "independent" is also ambiguous, however. Some use it to mean just "not provable", leaving open whether an independent statement might be refuted.</p>
<p>

Undecidability of a statement in a particular deductive system does not, in and of itself, address the question of whether the truth value of the statement is well-defined, or whether it can be determined by other means. Undecidability only implies that the particular deductive system being considered does not prove the truth or falsity of the statement. Whether there exist so-called "absolutely undecidable" statements, whose truth value can never be known or is ill-specified, is a controversial point among various <link xlink:type="simple" xlink:href="../439/46439.xml">
philosophical schools</link>.</p>
<p>

One of the first problems suspected to be undecidable, in the second sense of the term, was the <link xlink:type="simple" xlink:href="../563/33563.xml">
word problem for groups</link>, first posed by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../602/570602.xml">
Max Dehn</link></mathematician>
</scientist>
</causal_agent>
</intellectual>
</theorist>
</person>
</physical_entity>
 in 1911, which asks if there is a finitely presented <link xlink:type="simple" xlink:href="../447/19447.xml">
group</link> for which no algorithm exists to determine whether two words are equivalent.  This was shown to be the case in 1952.</p>
<p>

The combined work of Gödel and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../994/22994.xml">
Paul Cohen</link></scientist>
</person>
 has given two concrete examples of undecidable statements (in the first sense of the term): The <link xlink:type="simple" xlink:href="../705/5705.xml">
continuum hypothesis</link> can neither be proved nor refuted in <link xlink:type="simple" xlink:href="../214/152214.xml">
ZFC</link> (the standard axiomatization of <link xlink:type="simple" xlink:href="../553/27553.xml">
set theory</link>), and the <link xlink:type="simple" xlink:href="../840/840.xml">
axiom of choice</link> can neither be proved nor refuted in <link xlink:type="simple" xlink:href="../214/152214.xml">
ZF</link> (which is all the ZFC axioms <it>except</it> the axiom of choice).  These results do not require the incompleteness theorem.   Gödel proved in 1940 that neither of these statements could be disproved in ZF or ZFC set theory. In the 1960s, Cohen proved that neither is provable from ZF, and the continuum hypothesis cannot be proven from ZFC. </p>
<p>

In 1970, Soviet mathematician <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../712/2627712.xml">
Yuri Matiyasevich</link></scientist>
 showed that <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../851/101851.xml">
Hilbert's Tenth Problem</link></mathematical_statement>
</equation>
</message>
</statement>
, posed in 1900 as a challenge to the next century of mathematicians, cannot be solved.    Hilbert's challenge sought an algorithm which finds all solutions of a <link xlink:type="simple" xlink:href="../109/9109.xml">
Diophantine equation</link>.  A Diophantine equation is a more general case of <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../953/19021953.xml">
Fermat's Last Theorem</link></proposition>
</theorem>
</message>
</statement>
; we seek the <link xlink:type="simple" xlink:href="../563/14563.xml">
integer root</link>s of a <link xlink:type="simple" xlink:href="../000/23000.xml">
polynomial</link> in any number of variables with integer coefficients.  Since we have only one equation but <it>n</it> variables, infinitely many solutions exist (and are easy to find) in the <link xlink:type="simple" xlink:href="../628/217628.xml">
complex plane</link>; the problem becomes difficult (impossible) by constraining solutions to integer values only.  Matiyasevich showed this problem to be unsolvable by mapping a Diophantine equation to a <link xlink:type="simple" xlink:href="../090/332090.xml">
recursively enumerable set</link> and invoking Gödel's Incompleteness Theorem.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

In 1936, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../208/1208.xml">
Alan Turing</link></scientist>
</person>
 proved that the <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link>—the question of whether or not a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 halts on a given program—is undecidable, in the second sense of the term. This result was later generalized to <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../852/25852.xml">
Rice's theorem</link></proposition>
</theorem>
</message>
</statement>
.</p>
<p>

In 1973, the <process wordnetid="100029677" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<phenomenon wordnetid="100034213" confidence="0.8">
<consequence wordnetid="111410625" confidence="0.8">
<link xlink:type="simple" xlink:href="../619/212619.xml">
Whitehead problem</link></consequence>
</phenomenon>
</physical_entity>
</process>
 in <link xlink:type="simple" xlink:href="../890/41890.xml">
group theory</link> was shown to be undecidable, in the first sense of the term, in standard set theory. </p>
<p>

In 1977, Paris and Harrington proved that the <link xlink:type="simple" xlink:href="../355/3875355.xml">
Paris-Harrington principle</link>, a version of the <link xlink:type="simple" xlink:href="../898/184898.xml">
Ramsey theorem</link>, is undecidable in the axiomatization of arithmetic given by the Peano axioms but can be proven to be true in the larger system of <link xlink:type="simple" xlink:href="../454/3542454.xml">
second-order arithmetic</link>. </p>
<p>

<statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../300/3606300.xml">
Kruskal's tree theorem</link></proposition>
</theorem>
</message>
</statement>
, which has applications in computer science, is also undecidable from the Peano axioms but provable in set theory. In fact Kruskal's tree theorem (or its finite form) is undecidable in a much stronger system codifying the principles acceptable on basis of a philosophy of mathematics called predicativism.</p>
<p>

<statement wordnetid="106722453" confidence="0.8">
<process wordnetid="100029677" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<phenomenon wordnetid="100034213" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<consequence wordnetid="111410625" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/150062.xml">
Goodstein's theorem</link></consequence>
</proposition>
</theorem>
</message>
</phenomenon>
</physical_entity>
</process>
</statement>
 is a statement about the <link xlink:type="simple" xlink:href="../175/157175.xml">
Ramsey theory</link> of the natural numbers that Kirby and Paris showed is undecidable in Peano arithmetic.</p>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../308/12308.xml">
Gregory Chaitin</link></person>
 produced undecidable statements in <link xlink:type="simple" xlink:href="../647/2829647.xml">
algorithmic information theory</link> and proved another incompleteness theorem in that setting. Chaitin's theorem states that for any theory that can represent enough arithmetic, there is an upper bound <it>c</it> such that no specific number can be proven in that theory to have <link xlink:type="simple" xlink:href="../635/1635.xml">
Kolmogorov complexity</link> greater than <it>c</it>. While Gödel's theorem is related to the <link xlink:type="simple" xlink:href="../967/17967.xml">
liar paradox</link>, Chaitin's result is related to <link xlink:type="simple" xlink:href="../036/5036.xml">
Berry's paradox</link>.</p>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<writer wordnetid="110794014" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../758/8758.xml">
Douglas Hofstadter</link></writer>
</professor>
</person>
 gives a notable alternative proof of incompleteness, inspired by Gödel, in his book <link>
Gödel, Escher, Bach</link>.</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
Enumerable sets are Diophantine,  <cite style="font-style:normal" class="book">Yuri Matiyasevich&#32;(1970). Doklady Akademii Nauk SSSR,&#32;279-82.</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
</bdy>
</theory>
</article>
