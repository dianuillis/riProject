<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:41:54[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<know-how  confidence="0.8" wordnetid="105616786">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<method  confidence="0.8" wordnetid="105660268">
<header>
<title>Extensible Authentication Protocol</title>
<id>1583409</id>
<revision>
<id>237641226</id>
<timestamp>2008-09-11T03:36:45Z</timestamp>
<contributor>
<username>E dog95</username>
<id>1544984</id>
</contributor>
</revision>
<categories>
<category>Wireless networking</category>
<category>Authentication methods</category>
<category>Secure communication</category>
<category>Articles to be merged&amp;#32;since August 2008</category>
<category>All articles to be merged</category>
<category>Cryptographic protocols</category>
</categories>
</header>
<bdy>

<b>Extensible Authentication Protocol</b>, or <b>EAP</b>, is a universal <link xlink:type="simple" xlink:href="../967/47967.xml">
authentication</link> framework frequently used in <link xlink:type="simple" xlink:href="../143/33143.xml">
wireless networks</link> and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../511/23511.xml">
Point-to-Point connections</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
.  It is defined in RFC 3748, which has been updated by RFC 5247. Although the EAP protocol is not limited to wireless LANs and can be used for wired LAN authentication, it is most often used in wireless LANs.  Recently, the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../017/422017.xml">
WPA</link></rule>
</direction>
</protocol>
</message>
 and <link xlink:type="simple" xlink:href="../017/422017.xml">
WPA2</link> standard has officially adopted five EAP types as its official authentication mechanisms.  <p>

EAP is an authentication framework, not a specific authentication mechanism. The EAP provides some common functions and a negotiation of the desired authentication mechanism. Such mechanisms are called EAP methods and there are currently about 40 different methods. Methods defined in <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> RFCs include <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-MD5%22])">
EAP-MD5</link>, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-OTP%22])">
EAP-OTP</link>, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-GTC%22])">
EAP-GTC</link>, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-TLS%22])">
EAP-TLS</link>, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-IKEv2%22])">
EAP-IKEv2</link>, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-SIM%22])">
EAP-SIM</link>, and <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22EAP-AKA%22])">
EAP-AKA</link>, and in addition a number of vendor specific methods and new proposals exist. Commonly used modern methods capable of operating in wireless networks include EAP-TLS, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../379/1785379.xml">
EAP-SIM</link></rule>
</direction>
</protocol>
</message>
, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/2694999.xml">
EAP-AKA</link></rule>
</direction>
</protocol>
</message>
, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../404/1582404.xml">
PEAP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/893433.xml">
LEAP</link></rule>
</direction>
</protocol>
</message>
 and EAP-TTLS.  Requirements for EAP methods used in wireless LAN authentication are described in RFC 4017. </p>
<p>

When EAP is invoked by an <link xlink:type="simple" xlink:href="../883/346883.xml">
802.1X</link> enabled <link xlink:type="simple" xlink:href="../075/1173075.xml">
NAS</link> (Network Access Server) device such as an <link xlink:type="simple" xlink:href="../739/14739.xml">
802.11</link> a/b/g Wireless Access Point, modern EAP methods can provide a secure authentication mechanism and negotiate a secure PMK (Pair-wise Master Key) between the client and NAS.  The PMK can then be used for the wireless encryption session which uses <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../136/969136.xml">
TKIP</link></rule>
</direction>
</protocol>
</message>
 or <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../846/972846.xml">
CCMP</link></rule>
</direction>
</protocol>
</message>
 (based on <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../260/1260.xml">
AES</link></cipher>
) encryption. </p>
<p>

EAP is not a wire protocol; instead it only defines message formats. Each protocol that uses EAP defines a way to <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../641/4269641.xml">
encapsulate</link></rule>
</direction>
</protocol>
</message>
 EAP messages within that protocol's messages. In the case of 802.1X, this encapsulation is called <b>EAPOL</b>, "EAP over LANs".</p>

<sec>
<st>
 LEAP </st>
<p>

The <b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/893433.xml">
Lightweight Extensible Authentication Protocol</link></rule>
</direction>
</protocol>
</message>
 (LEAP)</b> is a <link xlink:type="simple" xlink:href="../886/18934886.xml">
proprietary</link> EAP method developed by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../746/51746.xml">
Cisco Systems</link></company>
 prior to the <link xlink:type="simple" xlink:href="../938/56938.xml">
IEEE</link> ratification of the <link xlink:type="simple" xlink:href="../135/783135.xml">
802.11i</link> security standard.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  Cisco distributed the protocol through the CCX (Cisco Certified Extensions) as part of getting 802.1X and dynamic <link xlink:type="simple" xlink:href="../055/145055.xml">
WEP</link> adoption into the industry in the absence of a standard.  There is no native support for LEAP in any <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows operating system</link>, but it is widely supported by third party client software most commonly included with WLAN (wireless LAN) devices.  Due to the wide adoption of LEAP in the networking industry, many other WLAN vendors claim support for LEAP. </p>
<p>

LEAP uses a modified version of <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/2356452.xml">
MS-CHAP</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
, an <link xlink:type="simple" xlink:href="../967/47967.xml">
authentication</link> protocol in which user credentials are not strongly protected and are thus easily compromised. Along these lines, an exploit tool called ASLEAP was released in early 2004 by Joshua Wright .<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>  Cisco recommends that customers that absolutely must use LEAP do so only with sufficiently complex passwords, though complex passwords are difficult to administer and enforce.  Cisco's current general recommendation is to use newer and stronger EAP protocols such as <link xlink:type="simple" xlink:href="../409/1583409.xml">
EAP-FAST</link>, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../404/1582404.xml">
PEAP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
, or <link xlink:type="simple" xlink:href="../409/1583409.xml">
EAP-TLS</link>.</p>

</sec>
<sec>
<st>
 EAP-TLS </st>
<p>

<b>EAP-Transport Layer Security</b> or <b>EAP-TLS</b>, defined in RFC 5216, is an <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> <link xlink:type="simple" xlink:href="../018/227018.xml">
open standard</link>, and is well-supported among wireless vendors.  The security of the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 (formerly officially and still often unofficially called Secure Sockets Layer) protocol is strong, as long as the user understands potential warnings about false credentials.  It uses <link xlink:type="simple" xlink:href="../112/194112.xml">
PKI</link> to secure communication to the <link xlink:type="simple" xlink:href="../866/191866.xml">
RADIUS</link> authentication server or another type of authentication server. So even though EAP-TLS provides excellent security, the overhead of client-side certificates may be its <parlance wordnetid="107081177" confidence="0.8">
<formulation wordnetid="107069948" confidence="0.8">
<expressive_style wordnetid="107066659" confidence="0.8">
<link xlink:type="simple" xlink:href="../175/380175.xml">
Achilles' heel</link></expressive_style>
</formulation>
</parlance>
.</p>
<p>

EAP-TLS is the original standard wireless LAN EAP authentication protocol.  Although it is rarely deployed, it is still considered one of the most secure EAP standards available and is universally supported by all manufacturers of wireless LAN hardware and software including <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.  The requirement for a client-side certificate, however unpopular it may be, is what gives EAP-TLS its authentication strength and illustrates the classic convenience vs. security trade-off.  A compromised password is not enough to break into EAP-TLS enabled systems because the hacker still needs to have the client-side private key.  The highest security available is when the client-side keys are housed in <link xlink:type="simple" xlink:href="../957/59957.xml">
smartcard</link>s. This is because there is no way to steal a certificate's corresponding private key from a smartcard without stealing the smartcard itself. It is significantly more likely that the physical theft of a smartcard would be noticed (and the smartcard immediately revoked) than a (typical) password theft would be noticed. Up until April 2005, EAP-TLS was the only EAP type vendors needed to certify for a WPA or WPA2 logo.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>  There are client and server implementations of it in Microsoft, Cisco, Apple, and open source operating systems.  EAP-TLS is natively supported in Mac OS X 10.3 and above, Windows 2000 SP4, Windows XP, Windows Vista, Windows Server 2003, Windows Mobile 2003 and above, and Windows CE 4.2.</p>

</sec>
<sec>
<st>
 EAP-MD5 </st>
<p>

<b>EAP-MD5</b>, defined in RFC 3748, is the only IETF Standards Track based EAP method. It offers minimal security; the <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 <link xlink:type="simple" xlink:href="../790/13790.xml">
hash function</link> is vulnerable to <link xlink:type="simple" xlink:href="../785/53785.xml">
dictionary attack</link>s, and does not support key generation, which makes it unsuitable for use with dynamic WEP, or WPA/WPA2 enterprise. EAP-MD5 differs from other EAP methods in that it only provides authentication of the EAP peer to the EAP server but not mutual authentication. By not providing EAP server authentication, this EAP method is vulnerable to man-in-the-middle attacks.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>

</sec>
<sec>
<st>
 EAP-PSK </st>
<p>

<b>EAP-PSK</b>, defined in RFC 4764, is an EAP method for mutual authentication and session key derivation using a Pre-Shared Key (PSK).  It provides a protected communication channel when mutual authentication is successful for both parties to communicate over and is designed for authentication over insecure networks such as IEEE 802.11.</p>
<p>

EAP-PSK is documented in an experimental RFC that provides a lightweight and extensible EAP method that does not require any public-key cryptography. The EAP method protocol exchange is done in a minimum of four messages.</p>

</sec>
<sec>
<st>
 EAP-TTLS </st>
<p>

<b>EAP-Tunneled Transport Layer Security</b>, or <b>EAP-TTLS</b> is an EAP protocol that extends <b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</b>. It was co-developed by <link>
Funk Software</link> and <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../539/746539.xml">
Certicom</link></institution>
</company>
. It is widely supported across platforms, although there is no native OS support for this EAP protocol in <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, it requires the installation of small extra programs such as SecureW2.</p>
<p>

EAP-TTLS offers very good security. The client does not need be authenticated via a <link xlink:type="simple" xlink:href="../370/296370.xml">
CA</link>-signed <link xlink:type="simple" xlink:href="../112/194112.xml">
PKI</link> certificate to the server, but only the server to the client. This greatly simplifies the setup procedure as a certificate does not need to be installed on every client.</p>
<p>

After the server is securely authenticated to the client via its CA certificate, the server can then use the established secure connection ("tunnel") to authenticate the client. It can use an existing and widely deployed authentication protocol and infrastructure, incorporating legacy password mechanisms and authentication databases, while the secure tunnel provides protection from <link xlink:type="simple" xlink:href="../656/372656.xml">
eavesdropping</link> and <link xlink:type="simple" xlink:href="../676/144676.xml">
man-in-the-middle attack</link>. Note that the user's name is never transmitted in unencrypted cleartext, thus improving privacy.</p>

<p>

EAP TTLS is described in RFC 5281.</p>

</sec>
<sec>
<st>
 EAP-IKEv2 </st>

<p>

<b>EAP-IKEv2</b> is an EAP method based on the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/5163131.xml">
Internet Key Exchange Protocol version 2 (IKEv2)</link></rule>
</direction>
</protocol>
</message>
. It provides mutual authentication and session key establishment between an EAP peer and an EAP server. It supports authentication techniques that are based on the following types of credentials:</p>
<p>

<list>
<entry level="1" type="bullet">

 <it>Asymmetric key pairs</it> - public/private key pairs where the public key is embedded into a <link xlink:type="simple" xlink:href="../796/223796.xml">
digital certificate</link>, and the corresponding <link xlink:type="simple" xlink:href="../222/24222.xml">
private key</link> is known only to a single party.</entry>
<entry level="1" type="bullet">

 <it>Passwords</it> - low-<link xlink:type="simple" xlink:href="../445/15445.xml">
entropy</link> bit strings that are known to both the server and the peer.</entry>
<entry level="1" type="bullet">

 <it>Symmetric keys</it> - high-entropy bit strings that are known to both the server and the peer.</entry>
</list>
</p>
<p>

It is possible to use a different authentication <link xlink:type="simple" xlink:href="../184/2158184.xml">
credential</link> (and thereby technique) in each direction. For example, the EAP server authenticates itself using public/private key pair and the EAP peer using symmetric key. In particular, the following combinations are expected to be used in practice:</p>
<p>

<table align="center" class="wikitable" border="1">
<header>
EAP server</header>
<header>
EAP peer</header>
<row>
<col>
Asymmetric key pair</col>
<col>
Asymmetric key pair</col>
</row>
<row>
<col>
Asymmetric key pair</col>
<col>
Symmetric key</col>
</row>
<row>
<col>
Asymmetric key pair</col>
<col>
Password</col>
</row>
<row>
<col>
Symmetric key</col>
<col>
Symmetric key</col>
</row>
</table>
</p>
<p>

EAP-IKEv2 is described in RFC 5106. A prototype implementation can be found at http://eap-ikev2.sourceforge.net.</p>

</sec>
<sec>
<st>
 PEAP </st>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Mergefrom.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that  be  into this article or section. ()</col>
</row>
</table>

</p>
<p>

<b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../404/1582404.xml">
PEAP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</b> is a joint proposal by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../746/51746.xml">
Cisco Systems</link></company>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../240/301240.xml">
RSA Security</link></company>
 as an open standard.  It is already widely available in products, and provides very good security.  It is similar in design to EAP-TTLS, requiring only a server-side PKI certificate to create a secure TLS tunnel to protect user authentication.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

The PEAP standard was created by Microsoft, Cisco, and RSA after EAP-TTLS had already come on the market.  Even with its late start, Microsoft’s and Cisco’s size allowed them to quickly overtake EAP-TTLS in the market. PEAP is so successful in the market place that even Funk Software, the inventor and backer of EAP-TTLS, had no choice but to support PEAP in their server and client software for wireless networks.</p>
<p>

As of May 2005, there were two PEAP sub-types certified for the updated WPA and WPA2 standard.  They are:
<list>
<entry level="1" type="bullet">

PEAPv0/EAP-MSCHAPv2</entry>
<entry level="1" type="bullet">

PEAPv1/EAP-GTC</entry>
</list>
</p>
<p>

The terms PEAPv0 and PEAPv1 refer to the outer authentication method, the mechanism that creates the secure TLS tunnel to protect subsequent authentication transactions. EAP-MSCHAPv2, EAP-GTC, and EAP-SIM refer to the inner authentication method which facilitates user or device authentication.</p>

<ss1>
<st>
 PEAPv0/EAP-MSCHAPv2 </st>
<p>
 
<b>PEAPv0/EAP-MSCHAPv2</b> is the technical term for what people most commonly refer to as "PEAP".  Whenever the word PEAP is used, it almost always refers to this form of PEAP since most people have no idea there are so many flavors of PEAP.  Behind EAP-TLS, PEAPv0/EAP-MSCHAPv2 is the second most widely supported EAP standard in the world.</p>
<p>

There are client and server implementations of it in Microsoft, Cisco, Apple, Linux, and open source.  PEAPv0/EAP-MSCHAPv2 is natively supported in <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> 10.3 and above, Windows 2000 SP4, Windows XP, Windows Server 2003 and above, and Windows CE 4.2.  The server side implementation of PEAPv0/EAP-MSCHAPv2, called IAS (<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/2945139.xml">
Internet Authentication Service</link></method>
</know-how>
), is also included in Windows 2003 server.  PEAPv0/EAP-MSCHAPv2 enjoys universal support and is known as the PEAP standard.</p>
<p>

This version of PEAP was defined in Internet Draft <weblink xlink:type="simple" xlink:href="http://tools.ietf.org/id/draft-kamath-pppext-peapv0-00.txt">
"draft-kamath-pppext-peapv0"</weblink>.</p>
<p>

The support for inner EAP methods in PEAPv0 varies by vendor: while Cisco's implementation of PEAPv0 supports inner EAP methods EAP-MSCHAPv2 and EAP-SIM, Microsoft only supports the PEAPv0/EAP-MSCHAPv2 mode but not the PEAPv0/EAP-SIM mode. Microsoft also only supports PEAPv0 and doesn’t support PEAPv1, so they simply call PEAPv0 PEAP without the v0 or v1 designator.</p>
<p>

Microsoft supports another form of PEAPv0 which they call PEAP-EAP-TLS, one that Cisco and other third-party server and client software don’t support.  PEAP-EAP-TLS does require a client-side digital certificate located on the client’s hard drive or a more secure smartcard.  PEAP-EAP-TLS is very similar in operation to the original EAP-TLS but provides slightly more protection due to the fact that portions of the client certificate that are unencrypted in EAP-TLS are encrypted in PEAP-EAP-TLS.  Since few third-party clients and servers support PEAP-EAP-TLS, users should probably avoid it unless they only intend to use Microsoft desktop clients and servers.</p>

</ss1>
<ss1>
<st>
 PEAPv1/EAP-GTC </st>
<p>
 
<b>PEAPv1/EAP-GTC</b> was created by Cisco as an alternative to PEAPv0/EAP-MSCHAPv2.  It allows the use of an inner authentication protocol other than Microsoft's MSCHAPv2. EAP-GTC (Generic Token Card) is defined in RFC 3748. It carries a text challenge from the authentication server, and a reply which is assumed to be generated by a <link xlink:type="simple" xlink:href="../826/1209826.xml">
security token</link>. EAP-GTC does not protect the authentication data in any way. </p>
<p>

Even though Microsoft (along with RSA and Cisco) co-invented the PEAP standard, Microsoft never added support for PEAPv1 in general, which means PEAPv1/EAP-GTC has no native Windows OS support.  Since Cisco has always favored the use of its own less secure proprietary LEAP and EAP-FAST protocols over PEAP and markets them as simpler certificate-less solutions, standardized PEAP is rarely promoted by Cisco.</p>
<p>

With no interest from Microsoft to support PEAPv1 and little interest from Cisco to promote PEAP in general, PEAPv1 authentication is rarely used.  There is no native OS support for this EAP protocol.</p>
<p>

Although there is no in-built support for PEAP-GTC in MS Windows, it is supported by the Cisco CCX extensions program.  CCX compatibility is enabled by default on many vendor-provided 802.11A/B/G clients.</p>
<p>

This version of PEAP is defined through the IETF internet draft <weblink xlink:type="simple" xlink:href="http://tools.ietf.org/id/draft-josefsson-pppext-eap-tls-eap-10.txt">
"draft-josefsson-pppext-eap-tls-eap-10"</weblink>. Note that this is an individual submission and not standardized in the IETF.</p>
<p>

Note that Cisco's implementation of PEAPv1 also supports EAP-SIM as the inner EAP method, other than EAP-GTC.</p>

</ss1>
</sec>
<sec>
<st>
 EAP-FAST </st>
<p>

<b>EAP-FAST (Flexible Authentication via Secure Tunneling)</b> is a protocol proposal by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../746/51746.xml">
Cisco Systems</link></company>
 as a replacement for <link xlink:type="simple" xlink:href="../082/922082.xml">
LEAP</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>  The protocol was designed to address the weaknesses of LEAP while preserving the "lightweight" implementation.  Use of server certificates is optional in EAP-FAST.  EAP-FAST uses a Protected Access Credential (PAC) to establish a TLS tunnel in which client credentials are verified.  EAP-FAST has three phases.  Phase 0 is an optional phase in which the PAC can be provisioned manually or dynamically, but is outside the scope of EAP-FAST as defined in RFC4851. PAC provisioning is still officially Work-in-progress, even though there are many implementations. PAC provisioning typically only needs to be done once for a RADIUS server, client pair.  In Phase 1, the client and the AAA server uses the PAC to establish TLS tunnel. In Phase 2, the client credentials are exchanged inside the encrypted tunnel.</p>
<p>

When automatic PAC provisioning is enabled, EAP-FAST has a slight vulnerability that an attacker can intercept the PAC and subsequently use that to compromise user credentials.  This vulnerability is mitigated by manual PAC provisioning or by using server certificates for the PAC provisioning phase. </p>
<p>

There is also a vulnerability where a hacker's AP can use the same SSID, reject the users PAC and supply a new one. Most supplicants can be set to prompt the user to accept it, and if he does, then he will send his credentials using the inner method to the hacker, who will then get either a cleartext password (EAP-FAST w/ GTC) or a vulnerable to dictionary attack MSCHAPv2 hash.</p>
<p>

It is worth noting that the PAC file is issued on a per-user basis. This is a requirement in RFC 4851 sec 7.4.4 so if a new user logs on the network from a device, he needs a new PAC file provisioned first. This is one reason why it is difficult not to run EAP-FAST in insecure anonymous provisioning mode. The alternative is to use device passwords instead, but then it is not the user that is validated on the network.</p>
<p>

EAP-FAST can be used without PAC files, falling back to normal TLS.</p>
<p>

EAP-FAST is natively supported in Apple OS X 10.4.8 and newer.</p>
<p>

EAP-FAST is defined in RFC 4851.</p>

</sec>
<sec>
<st>
 EAP-SIM</st>
<p>

<b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../379/1785379.xml">
EAP for GSM Subscriber Identity</link></rule>
</direction>
</protocol>
</message>
</b> is used for authentication and session key distribution using the <link xlink:type="simple" xlink:href="../808/12808.xml">
Global System for Mobile Communications</link> (GSM) <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../489/197489.xml">
Subscriber Identity Module</link></system_of_measurement>
</standard>
 (SIM). EAP-SIM is defined in RFC 4186.</p>

</sec>
<sec>
<st>
 EAP-AKA</st>
<p>

<b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/2694999.xml">
EAP for UMTS Authentication and Key Agreement</link></rule>
</direction>
</protocol>
</message>
</b> is used for authentication and session key distribution using the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../237/32237.xml">
Universal Mobile Telecommunications System</link></system_of_measurement>
</standard>
 (UMTS) <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../489/197489.xml">
Universal Subscriber Identity Module</link></system_of_measurement>
</standard>
 (USIM). EAP AKA is defined in RFC 4187.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../551/1105551.xml">
Diameter</link></system_of_measurement>
</method>
</rule>
</direction>
</know-how>
</standard>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../011/12517011.xml">
Handover Keying</link></entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../511/23511.xml">
PPP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../866/191866.xml">
RADIUS</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://articles.techrepublic.com.com/5100-1035-6148551.html">
Ultimate wireless security guide: An introduction to LEAP authentication</weblink>".&#32;  techrepublic.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://www.unstrung.com/document.asp?doc_id=41185">
Look Before You LEAP</weblink>".&#32;  unstrung.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
<entry id="3">
"<weblink xlink:type="simple" xlink:href="http://blogs.techrepublic.com.com/Ou/?p=67">
Understanding the updated WPA and WPA2 standards</weblink>".&#32;  techrepublic.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://arstechnica.com/articles/paedia/security.ars/4">
Alternative Encryption Schemes: Targeting the weaknesses in static WEP</weblink>".&#32;  arstechnica.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
<entry id="5">
"<weblink xlink:type="simple" xlink:href="http://articles.techrepublic.com.com/5100-1035-6148543.html">
Ultimate wireless security guide: An introduction to PEAP authentication</weblink>".&#32;  techrepublic.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://articles.techrepublic.com.com/5100-1035-6148557.html">
Ultimate wireless security guide: A primer on Cisco EAP-FAST authentication</weblink>".&#32;  techrepublic.com.&#32;Retrieved on <link>
2008-02-17</link>.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 RFC 3748: Extensible Authentication Protocol (EAP) (June 2004)</entry>
<entry level="1" type="bullet">

 RFC 5247: Extensible Authentication Protocol (EAP) Key Management Framework (August 2008)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://articles.techrepublic.com.com/5100-1035-6148579.html">
Configure RADIUS for secure 802.1x wireless LAN</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://articles.techrepublic.com.com/5100-1035-6148560.html">
How to self-sign a RADIUS server for secure PEAP or EAP-TTLS authentication</weblink></entry>
<entry level="1" type="bullet">

 Wifiradis <weblink xlink:type="simple" xlink:href="http://www.wifiradis.net">
a free online RADIUS server for secure PEAP mschap-v2 authentication</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/technet/prodtechnol/winxppro/evaluate/eap.mspx">
EAP in Windows XP and Windows Server 2003</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/technet/technetmag/issues/2007/05/CableGuy/default.aspx">
EAPHost in Windows Vista and Windows Server 2008</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://wire.cs.nthu.edu.tw/wire1x/">
WIRE1x</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ietf.org/html.charters/emu-charter.html">
"IETF EAP Method Update (emu) Working Group"</weblink></entry>
</list>
</p>


</sec>
</bdy>
</method>
</rule>
</direction>
</know-how>
</protocol>
</message>
</article>
