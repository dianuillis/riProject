<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:42:47[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Semantic gap</title>
<id>1594796</id>
<revision>
<id>219477336</id>
<timestamp>2008-06-15T12:25:15Z</timestamp>
<contributor>
<username>WuBot</username>
<id>7192839</id>
</contributor>
</revision>
<categories>
<category>Abstraction</category>
</categories>
</header>
<bdy>

The <b>semantic gap</b> characterizes the difference between two descriptions of an object by different linguistic representations, for instance languages or symbols. In computer science, the concept is relevant whenever ordinary human activities, observations, and tasks are transferred into a computational representation <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.<p>

More precisely the gap means the difference between ambiguous formulation of contextual knowledge in a powerful language (e.g. <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link>) and its sound, reproducible and computational representation in a <link xlink:type="simple" xlink:href="../939/10939.xml">
formal language</link> (e.g. <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>). <link xlink:type="simple" xlink:href="../107/29107.xml">
Semantics</link> of an object depends on the context it is regarded within. For practical application this means any formal representation of real world tasks requires the translation of the contextual expert knowledge of an application (high-level) into the elementary and reproducible operations of a computing machine (low-level). Since natural language allows the expression of tasks which are impossible to compute in a formal language there is no mean to automatize this translation in a general way. Moreover the examination of languages within the <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../011/6011.xml">
Chomsky hierarchy</link></language>
 indicates that there is no formal and consequently automated way of translating from one language  into another above a certain level of expressional power. </p>

<sec>
<st>
Theoretical background</st>
<p>

The yet unproven but commonly accepted <link xlink:type="simple" xlink:href="../854/6854.xml">
Church-Turing thesis</link> states that a <link xlink:type="simple" xlink:href="../403/30403.xml">
turing machine</link> and all equivalent formal languages such as the <link xlink:type="simple" xlink:href="../203/18203.xml">
lambda calculus</link> perform and represent all formal operations respectively as applied by a computing human. However the selection of adequate operations for the correct computation itself is not formally deducible, moreover it depends on the computability of the underlying problem. Tasks, such as the <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link>, may be formulated comprehensively in natural language, but the computational representation will not terminate or does not provide a usable result, which is proven by <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../852/25852.xml">
Rice's theorem</link></proposition>
</theorem>
</message>
</statement>
. The general expression of limitations for rule based deduction by GÃ¶del's <link xlink:type="simple" xlink:href="../863/58863.xml">
incompleteness theorem</link> indicates that the semantic gap is never to be fully closed. These are general statements, considering the generalized limits of computation on the highest level of abstraction where the <b>semantic gap</b> manifests itself. There are however lots of subsets of problems which may be translated automatically, especially in the higher numbered levels of the <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../011/6011.xml">
Chomsky hierarchy</link></language>
.</p>

</sec>
<sec>
<st>
Formal languages</st>
<p>

Real world tasks are formalized by programming languages, which are executed on computers based on the <link xlink:type="simple" xlink:href="../091/478091.xml">
von Neumann architecture</link>. Since programming languages are only comfortable representations of the Turing machine any program on a von Neumann computer has the same properties and limitations as the Turing machine or its equivalent representation. Consequently every programming language such as CPU level machine code, assembler, or any high level programming language has the same expressional power as the underlying Turing machine is able to compute. There is no <b>semantic gap</b> between them since a program is transferred from the high level language to the machine code by a program, e.g. a <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link> which itself runs on a Turing machine without any user interaction. The semantic gap actually opens between the selection of the rules and the representation of the task.</p>

</sec>
<sec>
<st>
Practical Consequences</st>
<p>

Selection of rules for formal representations of real world applications, corresponds to writing a program. Writing programs is independent from the actual programming language and basically requires the translation of the domain specific knowledge of the user into the formal rules operating a turing machine. It is this transfer from contextual knowledge into formal representation which cannot be automatized with respect to the theoretical limitations of computation. Consequently any mapping from real world applications into computer applications requires a certain amount of technical background knowledge by the user, where the <b>semantic gap</b> manifests itself. </p>
<p>

It is a fundamental task of <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link> to close the gap between application specific knowledge and technically doable formalization. For this purpose domain specific (high-level) knowledge must be transferred into an algorithm and its parameters (low-level). This requires the dialogue between user and developer. Aim is always a software which allows the user to represent his knowledge as parameters of an algorithm without knowing the details of the implementation, and to interpret the outcome of the algorithm without the aid of the developer. For this purpose <link xlink:type="simple" xlink:href="../249/45249.xml">
user interface</link>s play the key role in software design, while developers are supported by <link xlink:type="simple" xlink:href="../145/1173145.xml">
framework</link>s which help organizing the integration of contextual information.</p>

</sec>
<sec>
<st>
Examples</st>

<ss1>
<st>
Document Retrieval</st>
<p>

A simple example can be formulated as a series of increasingly difficult <link xlink:type="simple" xlink:href="../652/21652.xml">
natural language</link> queries to locate a <it>target document</it> that may or may not exist locally on a known computer system. </p>
<p>

<b>Example queries</b>:
<list>
<entry level="1" type="bullet">

 1) Locate any file in the known directory "/usr/local/funny".</entry>
<entry level="1" type="bullet">

 2) Locate any file where the word "funny" appears in the filename. </entry>
<entry level="1" type="bullet">

 3) Locate any <link xlink:type="simple" xlink:href="../356/208356.xml">
text file</link> where the word "funny" or the substring "humor" appears in the text.</entry>
<entry level="1" type="bullet">

 4) Locate any <link xlink:type="simple" xlink:href="../673/19673.xml">
mp3</link> file where either "funny", "comic" or "humor" appears in the metadata.</entry>
<entry level="1" type="bullet">

 5) Locate any file of any type related to humor.</entry>
<entry level="1" type="bullet">

 6) Locate any image that is likely to make my grandmother laugh.</entry>
</list>
</p>
<p>

The progressive difficulty of these queries is represented by the increasing degree of abstraction from the types and semantics defined the system architecture (directories and files on a known computer) to the types and semantics that occupy the realm of ordinary human discourse (subjects such as "humor" and entities such as "my grandmother"). Moreover, this disparity of realms is further complicated by <link xlink:type="simple" xlink:href="../945/6533945.xml">
leaky abstraction</link>s, such as is common in the case of query 4), where the <it>target document</it> may exist, but may not encapsulate the "metadata" in a manner expected by the user, nor the designer of the query processing system. </p>

</ss1>
<ss1>
<st>
Image Analysis</st>
<p>

Image analysis is a typical domain for which a high degree of abstraction from low-level Methods is required, and where the <b>semantic gap</b> immediately affects the user. If image content is to be identified to understand the meaning of an image, the only available independent information is the low-level pixel data. Textual annotations always depend on the knowledge, capability of expression and specific language of the annotator and therefore is unreliable. To recognize the displayed scenes from the raw data of an image the algorithms for selection and manipulation of pixels must be combined and parameterized in an adequate manner and finally linked with the natural description. Even the simple linguistic representation of shape or color such as round or yellow requires entirely different mathematical formalization methods, which are neither intuitive nor unique and sound.</p>

</ss1>
<ss1>
<st>
Layered Systems</st>
<p>

In many <link xlink:type="simple" xlink:href="../311/41311.xml">
layered system</link>s, some conflicts when concepts at a high level of abstraction need to be translated into lower, more concrete <link>
artifact</link>s. This mismatch is often called <b>semantic gap</b>.</p>

</ss1>
<ss1>
<st>
Databases</st>
<p>

<link xlink:type="simple" xlink:href="../826/22826.xml">
OODBMS</link>s (object-oriented database management system) advocates sometimes claim that these databases help to reduce the semantic gap between the application domain (<link>
miniworld</link>) and the traditional RDBMS systems. <weblink xlink:type="simple" xlink:href="http://www.findarticles.com/p/articles/mi_m0ISJ/is_n2_v33/ai_15519487/pg_4">
http://www.findarticles.com/p/articles/mi_m0ISJ/is_n2_v33/ai_15519487/pg_4</weblink>. However Relational proponents would posit the exact opposite, because by definition object databases fix the data being recorded into a single binding abstraction.</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <invertebrate wordnetid="101905661" confidence="0.8">
<arthropod wordnetid="101767661" confidence="0.8">
<bug wordnetid="102236355" confidence="0.8">
<insect wordnetid="102159955" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../945/6533945.xml">
Leaky abstraction</link></animal>
</insect>
</bug>
</arthropod>
</invertebrate>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../588/7794588.xml">
Text simplification</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../004/2208004.xml">
Semantic differential</link></entry>
</list>
</p>
<p>

<it>This article was originally based on material from the <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<wordbook wordnetid="106418693" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<dictionary wordnetid="106418901" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/11324.xml">
Free On-line Dictionary of Computing</link></publication>
</reference_book>
</dictionary>
</book>
</wordbook>
</artifact>
</creation>
</product>
</work>
, which is  under the <link xlink:type="simple" xlink:href="../782/18938782.xml">
GFDL</link>.</it></p>


</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
 Smeulders AWM, Worring M, Santini S, Gupta A, Jain R. Content-Based Image Retrieval at the End of the Early Years. IEEE Trans  Pattern Anal Mach Intell 2000;22(12):1349-80. </entry>
<entry id="2">
 Dorai C, Venkatesh S. Bridging the Semantic Gap with Computational Media Aesthetics. IEEE MultiMedia 2003;10(2):15-17.</entry>
</reflist>
</p>

</sec>
</bdy>
</article>
