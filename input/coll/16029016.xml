<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 03:33:57[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Keyword Services Platform</title>
<id>16029016</id>
<revision>
<id>242703209</id>
<timestamp>2008-10-03T08:31:45Z</timestamp>
<contributor>
<username>Dancter</username>
<id>1296713</id>
</contributor>
</revision>
<categories>
<category>Internet marketing</category>
<category>All orphaned articles</category>
<category>Orphaned articles from June 2008</category>
</categories>
</header>
<bdy>
<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Wiki_letter_w.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article is  as few or no other articles <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Special:Whatlinkshere&amp;target=Keyword_Services_Platform&amp;namespace=0">
link to it</weblink>.</b>
Please help  in articles on <weblink xlink:type="simple" xlink:href="http://www.google.com/search?hl=en&amp;as_qdr=all&amp;q=+site%3Aen.wikipedia.org+%22Keyword+Services+Platform%22">
related topics</weblink>. <it>(June 2008)''</it></col>
</row>
</table>
</p>

<p>

The <b>Keyword Services Platform (KSP)</b> is a <link xlink:type="simple" xlink:href="../121/10448121.xml">
keyword research</link> tool available through <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../207/3708207.xml">
Microsoft adCenter</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
, which contains a set of algorithms for providing information about <link xlink:type="simple" xlink:href="../394/460394.xml">
keywords</link> used in <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link> queries.</p>
<p>

The KSP was originally conceived by ZhaoHui Tang, Dylan Huang, and Wayne Guan at Microsoft adCenter Labs in May 2006. The platform aims to provide a core set of data and technology to empower <link xlink:type="simple" xlink:href="../074/2111074.xml">
search engine marketing</link> and keyword research efforts. The KSP uniquely delivers a standardized set of keyword technologies through a <link xlink:type="simple" xlink:href="../483/93483.xml">
Web services</link> model, accessible via an <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
application programming interface</link> (API) and a <software wordnetid="106566077" confidence="0.9508927676800064">
<format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../268/20268.xml">
Microsoft Excel</link></format>
</software>
 <link xlink:type="simple" xlink:href="../659/23659.xml">
add-in</link>.</p>
<p>

KSP API <link>
beta</link> access is available for researchers and developers upon request from the [https://ksp.microsoft.com/Explorer/Login.aspx Keyword Services Platform] feedback link.</p>

<sec>
<st>
Architecture</st>
<p>

The following components comprise the Keyword Service Platform architecture:
<list>
<entry level="1" type="bullet">

 <b>Keyword API</b>. Set of standard <link xlink:type="simple" xlink:href="../483/93483.xml">
Web services</link> for various keyword tasks. These services are based on the <link xlink:type="simple" xlink:href="../012/2429012.xml">
Windows Communications Foundation</link> and can be consumed by client applications (e.g., Microsoft Excel add-in) or <link xlink:type="simple" xlink:href="../331/15345331.xml">
mashups</link>.</entry>
<entry level="1" type="bullet">

 <b>Provider Plug-in Framework</b>. System that allows researchers to incorporate new algorithms or <link xlink:type="simple" xlink:href="../253/42253.xml">
data mining</link> models within the Service Container. Each provider brings a specific keyword technology to the KSP architectureâ€”for instance, keyword association, keyword extraction, or keyword classification. </entry>
<entry level="1" type="bullet">

 <b>Security</b>. Component that handles permissions that pertain to provider procedures (methods) and Stored Procedure implementation.</entry>
<entry level="1" type="bullet">

 <b>Server Object Model</b>. Data model that allows developers to leverage different services.</entry>
<entry level="1" type="bullet">

 <b>Service Container</b>. Set of providers that support various keyword technologies. Host to all service providers and Stored Procedures, which allows parallel execution.</entry>
<entry level="1" type="bullet">

 <b>Shared Services</b>. Core components, consisting of a <link xlink:type="simple" xlink:href="../782/348782.xml">
crawler</link>, in-memory data structures, <link xlink:type="simple" xlink:href="../964/475964.xml">
word stemming</link> algorithms, etc. These services are used by different providers and executed by <link xlink:type="simple" xlink:href="../251/277251.xml">
stored procedures</link>.</entry>
<entry level="1" type="bullet">

 <b>Stored Procedures</b>. Procedures for consolidating and centralizing the logic behind applications. Selected sets of these procedures are made available to users.</entry>
</list>
</p>
<p>

Developers may use <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../402/60402.xml">
.NET</link></implement>
</horizontal_surface>
</tool>
</instrumentality>
</surface>
</artifact>
</platform>
 programming languages to create procedures that combine the use of different providers, or implement additional business logic processing based on the output from a provider.</p>

</sec>
<sec>
<st>
Keyword API</st>
<p>

The Keyword Service Platform has defined a set of APIs for each class of keyword services. These interfaces for Web services include keyword extraction (ITermExtraction), keyword categorization (ITermCategorization), keyword suggestion (ITermSuggestion), keyword forecast (ITermForecast), keyword monetization (ITermMonetization), and several others. The APIs define the signatures of each Web service.</p>

<ss1>
<st>
Keyword suggestion</st>
<p>

Keyword suggestions are handled via the ITermSuggestion interface. To find the five most closely related keywords to "BMW", the following method call may be used: GetTermSuggestion("BMW",5). The query result is shown in the following table, and by default, sorted by <link xlink:type="simple" xlink:href="../911/280911.xml">
confidence</link>:</p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
OriginalTerm</header>
<header style="background:#ddd">
Term</header>
</row>
<row>
<col>
BMW</col>
<col>
Auto</col>
</row>
<row>
<col>
BMW</col>
<col>
Car</col>
</row>
<row>
<col>
BMW</col>
<col>
Lexus</col>
</row>
<row>
<col>
BMW</col>
<col>
BMW cars</col>
</row>
<row>
<col>
BMW</col>
<col>
BMW Z4</col>
</row>
</table>
</p>
<p>

To view the five suggested five terms with the corresponding confidence score, a third parameter can be used to indicate that statistics should be returned: GetTermSuggestion("BMW",5,true). The query result is shown in the following table along with columns for score and support. The results are similar to those available through the <link xlink:type="simple" xlink:href="../096/3634096.xml">
Data Mining Extensions</link> (DMX) in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/29004.xml">
SQL</link></programming_language>
. <it>Score</it> represents the confidence or probability; <it>support</it> represents the number of cases supporting the rule in the training dataset.  </p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
OriginalTerm</header>
<header style="background:#ddd">
Term</header>
<header style="background:#ddd">
Score</header>
<header style="background:#ddd">
Support</header>
</row>
<row>
<col>
BMW</col>
<col>
Auto</col>
<col>
0.96</col>
<col>
10000</col>
</row>
<row>
<col>
BMW</col>
<col>
Car</col>
<col>
0.89</col>
<col>
9000</col>
</row>
<row>
<col>
BMW</col>
<col>
Lexus</col>
<col>
0.89</col>
<col>
11000</col>
</row>
<row>
<col>
BMW</col>
<col>
BMW cars</col>
<col>
0.83</col>
<col>
12000</col>
</row>
<row>
<col>
BMW</col>
<col>
BMW Z4</col>
<col>
0.78</col>
<col>
12800</col>
</row>
</table>
</p>
<p>

To return only those terms with a high confidence score, a filter can be used on the Score column with the following method call: GetTermSuggestion("BMW",5,true,"Score&amp;gt;0.8"). The query result is shown in the following table. In this case, only four rows are returned, as these are the only terms that meet the criterion of the filter.</p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
OriginalTerm</header>
<header style="background:#ddd">
Term</header>
<header style="background:#ddd">
Score</header>
<header style="background:#ddd">
Support</header>
</row>
<row>
<col>
BMW</col>
<col>
Auto</col>
<col>
0.96</col>
<col>
10000</col>
</row>
<row>
<col>
BMW</col>
<col>
Car</col>
<col>
0.89</col>
<col>
9000</col>
</row>
<row>
<col>
BMW</col>
<col>
Lexus</col>
<col>
0.89</col>
<col>
11000</col>
</row>
<row>
<col>
BMW</col>
<col>
BMW cars</col>
<col>
0.83</col>
<col>
12000</col>
</row>
</table>
</p>
<p>

When the table of terms possibly includes thousands of keywords, batch query syntax can be used. For example, suppose that the keywords are stored in myInputTermTable, and only the two most relevant terms for each keyword should be returned: GetTermSuggestion(myInputTermTable,2). The query result is shown in the following table.</p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
OriginalTerm</header>
<header style="background:#ddd">
Term</header>
</row>
<row>
<col>
BMW</col>
<col>
Auto</col>
</row>
<row>
<col>
BMW</col>
<col>
Car</col>
</row>
<row>
<col>
Honda</col>
<col>
Lexus</col>
</row>
<row>
<col>
Honda</col>
<col>
Sedan</col>
</row>
<row>
<col>
Ford</col>
<col>
Pickup</col>
</row>
<row>
<col>
Ford</col>
<col>
Truck</col>
</row>
</table>
</p>

</ss1>
<ss1>
<st>
Keyword demographics</st>
<p>

Keyword demographics are handled via the ITermDemographics interface. To obtain the demographic distribution for the keyword "Minivan", the following method call could be used: GetTermDemographics("minivan"). The query result is shown in the following table.</p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
Term</header>
<header style="background:#ddd">
Male</header>
<header style="background:#ddd">
Female</header>
<header style="background:#ddd">
0-13</header>
<header style="background:#ddd">
13-18</header>
<header style="background:#ddd">
18-25</header>
<header style="background:#ddd">
25-35</header>
<header style="background:#ddd">
35-50</header>
<header style="background:#ddd">
50-65</header>
<header style="background:#ddd">
65+</header>
</row>
<row>
<col>
Minivan</col>
<col>
0.40</col>
<col>
0.60</col>
<col>
0</col>
<col>
0</col>
<col>
0.1</col>
<col>
0.2</col>
<col>
0.4</col>
<col>
0.2</col>
<col>
0.1</col>
</row>
</table>
</p>

</ss1>
<ss1>
<st>
Keyword monetization</st>
<p>

Keyword monetization values specific to paid search are handled via the ITermMonetization interface. The following method call returns the KPIs for the keyword "Online bank" based on the previous week's paid search data, in the third position of sponsored listings: GetTermKPIs("online bank",TimeInterval.LastWeek,3). The result of the query is shown below, containing the input keyword, the number of clicks in the sponsored link for "Online bank", overall <link xlink:type="simple" xlink:href="../905/4512905.xml">
impressions</link> for the keyword, position, average <link xlink:type="simple" xlink:href="../584/2064584.xml">
click-through</link> rate (CTR), and average <link xlink:type="simple" xlink:href="../004/1545004.xml">
cost per click</link> (CPC).</p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
Term</header>
<header style="background:#ddd">
Clicks</header>
<header style="background:#ddd">
Impressions</header>
<header style="background:#ddd">
Position</header>
<header style="background:#ddd">
CTR</header>
<header style="background:#ddd">
CPC</header>
</row>
<row>
<col>
Online bank</col>
<col>
42</col>
<col>
2915</col>
<col>
3</col>
<col>
0.014</col>
<col>
1.325</col>
</row>
</table>
</p>

</ss1>
<ss1>
<st>
Keyword extraction</st>
<p>

Keyword extraction is handled via the ITermExtraction interface. The following method call extracts the eight most relevant keywords from the webpage "autos.msn.com", and provides the corresponding statistics: GetTermExtraction("autos.msn.com",8,true). The result of the query is shown below, where the Score column represents the relevance of the extracted keyword to the page content, while the Support column represents the number of occurrences of a keyword on the page. </p>
<p>

<table style="margin:1em" cellpadding="4" border="1" cellspacing="0">
<row>
<header style="background:#ddd">
URL</header>
<header style="background:#ddd">
Term</header>
<header style="background:#ddd">
Score</header>
<header style="background:#ddd">
Support</header>
</row>
<row>
<col>
autos.msn.com</col>
<col>
auto reviews</col>
<col>
0.62</col>
<col>
3</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
MSN autos</col>
<col>
0.54</col>
<col>
2</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
cars</col>
<col>
0.48</col>
<col>
5</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
sport cars</col>
<col>
0.39</col>
<col>
2</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
used cars</col>
<col>
0.38</col>
<col>
1</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
compare car</col>
<col>
0.34</col>
<col>
1</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
new cars</col>
<col>
0.32</col>
<col>
1</col>
</row>
<row>
<col>
autos.msn.com</col>
<col>
luxury cars</col>
<col>
0.30</col>
<col>
1</col>
</row>
</table>
</p>

</ss1>
<ss1>
<st>
Sample code</st>
<p>

The following code fragment connects to the Keyword Services Platform server and uses the keyword term forecast Web service.</p>

<p>

using (KeywordServer server = new KeywordServer("https://ksp.microsoft.com")) {
server.UserName = "username"; 
server.Password = "********"; 
ITermForecast provider = null; </p>
<p>

try {
server.Open(); 
// Context can be set if needed. It will remain during the following calls. 
provider = server.GetProviderByImplementation("Microsoft.adCenterLabs.Providers.KeywordForecastProvider"); 
if (provider != null) {
// Single mode API 
DataTable result = provider.GetTermForecast(term, -5, 3); 
DisplayResults(result); </p>
<p>

// Batch mode API 
result = provider.GetTermForecast(terms, -5, 3); 
DisplayResults(result); 
} 
} 
catch (FaultException) {
// Handle fault returned from calling the proxy method 
} 
catch (CommunicationException) { 
// Handle lost network connection error 
} 
catch (TimeoutException) { 
// Handle time-out error 
} 
finally { 
if (provider != null) 
server.ReleaseService(provider); 
} 
}</p>


</ss1>
</sec>
<sec>
<st>
Providers</st>
<p>

Each Keyword Services Platform <it>provider</it> supplies a specific type of keyword technology by implementing one class of a specific keyword interface (e.g., ITermSuggestion, ITermForecast, ITermExtraction). The API defines the signature of each Web service and the format of the returned data. The KSP provider is a server-side object encapsulating a particular implementation of a keyword technology. This provider exposes its functionality through service contracts in the <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../012/2429012.xml">
Windows Communication Foundation</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
 (WCF). The WCF is Microsoft's unified programming model for building <link xlink:type="simple" xlink:href="../034/4953034.xml">
service-oriented</link> applications, which enables developers to build secure, reliable, transacted solutions that integrate across platforms and interoperate with existing investments. To enable seamless integration of a provider into the KSP, and correspondingly seamless integration with third-party tools and applications, the providers must meet several conditions:
<list>
<entry level="1" type="bullet">

custom configuration settings stored in configuration files, rather than the source code;</entry>
<entry level="1" type="bullet">

standard .NET tracing and message logging to enable service monitoring and diagnostics;</entry>
<entry level="1" type="bullet">

standard Windows Management Interface performance counters for performance monitoring; and</entry>
<entry level="1" type="bullet">

document service contracts included using a service description language for better understanding and testing of the Keyword Service Provider.</entry>
</list>
</p>
<p>

These conditions help to simplify the task of developing well-integrated management applications, thus allowing business partners to produce best-of-breed, enterprise-scalable management solutions.</p>

</sec>
<sec>
<st>
Stored procedures</st>
<p>

Developers can write <link xlink:type="simple" xlink:href="../251/277251.xml">
stored procedures</link> (sprocs) using any <link xlink:type="simple" xlink:href="../164/3582164.xml">
.NET</link> programming language. These procedures are executed on the Keyword Services Platform server, which hosts the <link xlink:type="simple" xlink:href="../003/46003.xml">
Common Language Runtime</link> (CLR). Similar to a database sprocs, a KSP sproc is designed to enable developers to implement several types of business logic on the server side after retrieving result data from providers. KSP sprocs do not require configuration management or setup requirements.   </p>
<p>

Two types of stored procedures are supported: Managed Assembly Stored Procedure (MASP) and Common Language Runtime Stored Procedure (CLRSP). A MASP consists of a compiled .NET assembly containing a public interface exposed through the KSP as well as any dependent files. Once the MASP is uploaded to the KSP through its management interface, it becomes callable by KSP client programs. A CLRSP consists of a source file written in one of the supported CLR programming languages (<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../196/2356196.xml">
C#</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../996/208996.xml">
Visual Basic .NET</link></programming_language>
, <link xlink:type="simple" xlink:href="../859/1833859.xml">
Managed Extensions for C++</link>, and others). The functionalities of the CLRSPs are exposed through a public interface defined in the source file. Once the CLRSP is deployed to KSP through its management interface, it is compiled on-demand by KSP and becomes callable by KSP client programs.  Compared to database sprocs, KSP sprocs are object-oriented. A sproc may contain a set of related functions, or even identically named functions with different signatures.  </p>

</sec>
<sec>
<st>
Server Object Model and Shared Services</st>
<p>

Keyword Services Platform Server Object Models and Shared Services enable KSP Service Providers and stored procedure developers to access server-side objects and functionalities easily and consistently.   The object model consists of the following three collections:</p>
<p>

<list>
<entry level="1" type="number">

Service providers: This collection enables callers to access server-side Service Provider objects by name, implementation interface, and/or class name. Once callers obtain the Service Provider object, all of the functionalities of the service provider are accessible through its public interface.</entry>
<entry level="1" type="number">

Stored procedures: This collection enables callers to access server-side Stored Procedure objects by name, implementation interface, and/or class name. Once callers obtain the Stored Procedure object, all of the functionalities of the stored procedure are accessible through its public interface.</entry>
<entry level="1" type="number">

Services: This collection enables callers to access server-side shared services by name, by  implementation interface, and/or class name. Once callers obtain the shared service object, all of the functionalities of the shared service provider are accessible through its public interface.</entry>
</list>
</p>

</sec>
<sec>
<st>
Cloud server model</st>
<p>

The <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../207/3708207.xml">
Microsoft adCenter</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 Keyword Services Platform <link xlink:type="simple" xlink:href="../929/264929.xml">
server farm</link> provides a scalable platform for keyword technologies. Each server in the farm can have different configuration to suit a variety of service providers and stored procedures. A dynamic service <link xlink:type="simple" xlink:href="../380/4213380.xml">
load balance</link> server, a <link xlink:type="simple" xlink:href="../494/19541494.xml">
cloud server</link>, is the hub of the KSP server farm. When a KSP server is added to the server farm via the cloud server, all available keyword service providers and stored procedures are dynamically discovered and registered with the server. Any changes in the availability of the KSP server, as well as all its running service providers and stored procedures, are discovered and registered automatically with the server.</p>
<p>

The cloud server distributes accesses to services running on a KSP server farm through its load balancer provider. The default implementation of the load balancer provider uses a <link xlink:type="simple" xlink:href="../074/233074.xml">
round-robin scheduling</link> approach. Over time, the server accumulates usage patterns and statistics of various service providers and stored procedures running on each KSP server in the farm. This information is used by the server to determine how to automatically deploy additional service providers and stored procedures. For example, if the Keyword Forecast provider is being used heavily in the server farm and the providers running on machine "A" are used lightly, the server will automatically deploy the Keyword Forecast provider to machine "A" and route requests to that machine to balance the load for the Keyword Forecast provider.</p>
<p>

When a client application calls a service provider or stored procedure through the server, a KSP server with a matching service provider or stored procedure is selected by the load balancer provider, and the request is routed to the appropriate KSP server. If a server, service provider, or stored procedure in the KSP server farm is unavailable, it will be taken out of rotation by the load balancer automatically.</p>

</sec>
<sec>
<st>
Data mart</st>
<p>

A <link xlink:type="simple" xlink:href="../703/303703.xml">
data mart</link> is a subset of an organizational data store, usually oriented to a specific purpose or major data subject, that may be distributed to support business needs. Many Keyword Services Platform providers require real-time database access. The database may contain a list of reference keywords, their corresponding traffic, most recent click-through data, and data mining model contents. This data is updated on a regular basis based on the provider's requirements.   </p>

</sec>
<sec>
<st>
Technology transfer</st>
<p>

Keyword Services Platform's architecture permits agile development and rapid technology transfer by providing a platform for researchers to ship their research results to a live system quickly. The API defines the standard contract between the research models and developers. Researchers simply need to implement providers and deploy the providers into the selected set of KSP cloud server machines. The scope is limited, and thus very easy to use for live testing. Once the provider is live-tested and proven, KSP can switch to the default provider without any changes on the application side. This infrastructure enables researchers at <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 and other academic settings to speed up innovation in keyword technology and deploy the latest research results to KSP consumers. </p>

</sec>
<sec>
<st>
KSP data access with Microsoft Excel 2007</st>
<p>

Microsoft adCenter released an <link xlink:type="simple" xlink:href="../659/23659.xml">
add-in</link> for <software wordnetid="106566077" confidence="0.9508927676800064">
<format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../268/20268.xml">
Microsoft Excel</link></format>
</software>
 2007 that allows users to consume the Keyword Services Platform data directly via Excel rather than through the API. The add-in makes much of the keyword technology available directly through Excel. Essentially it is an example of the type of <link xlink:type="simple" xlink:href="../331/15345331.xml">
mashup</link> and creative use of data that can be associated with the KSP. The add-in delivers features such as keyword extraction, suggestion, forecasting, monetization, etc.</p>

</sec>
<sec>
<st>
Applications of the KSP</st>
<p>

The Keyword Services Platform incorporates keyword technologies from <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../207/3708207.xml">
Microsoft adCenter</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 Labs and other <physical_entity wordnetid="100001930" confidence="0.8">
<military_unit wordnetid="108198398" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<division wordnetid="108213205" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<army_unit wordnetid="108190754" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../522/2163522.xml">
Microsoft Research</link></research_worker>
</army_unit>
</scientist>
</causal_agent>
</division>
</person>
</military_unit>
</physical_entity>
 groups. Keyword APIs can be consumed by third-party business applications from <link xlink:type="simple" xlink:href="../328/2963328.xml">
paid search</link>, content advertisements, <link xlink:type="simple" xlink:href="../552/8923552.xml">
behavioral targeting</link>, presale business intelligence apps, and so on.</p>
<p>

The KSP can be used in advertising campaign creation and management:
<list>
<entry level="1" type="bullet">

The Keyword Association provider can help advertisers generate a set of the most relevant keywords for a campaign, leading to more efficient planning and improved <link xlink:type="simple" xlink:href="../560/298560.xml">
return on investment</link>.</entry>
<entry level="1" type="bullet">

The Keyword Forecasting provider can help advertisers to understand traffic history and trends, and eventually help to manage an integrated campaign budget that makes seasonal allowances.</entry>
<entry level="1" type="bullet">

The Keyword Extraction provider can extract the important keywords on a publisher's webpage, helping to identify what advertisements should be served for that page, thus facilitating <link xlink:type="simple" xlink:href="../866/2789866.xml">
landing page</link> analysis.</entry>
</list>
</p>
<p>

The KSP can also be used in behavioral targeting and <link xlink:type="simple" xlink:href="../645/646645.xml">
display advertising</link>:
<list>
<entry level="1" type="bullet">

The Keyword Demographic and Geographic Distribution providers can help advertisers understand various customer segments and their keyword usage patterns, leading to more effectively targeted advertising and a decreased overall spend.</entry>
<entry level="1" type="bullet">

Keyword Association providers can help to expand existing customer segments to include other customers with similar interests based on language patterns.  </entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>



<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.toprankblog.com/2007/12/sis-session-microsoft-new-keyword-services-platform/">
Microsoft Announces New Keyword Platform at SIS</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.azakers.com/microsoft-adcenter-add-in-beta-released.php">
adCenter Add-in Released</weblink> Review of keyword technologies from the KSP</entry>
</list>
</p>

</sec>
<sec>
<st>
Further reading</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://scottyih.org/">
Wen-tau Yih</weblink>, <weblink xlink:type="simple" xlink:href="http://research.microsoft.com/~joshuago/">
Joshua Goodman</weblink>, <weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~vitor/">
Vitor R. Carvalho</weblink>: <weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/%7Evitor/papers/www06.pdf">
Finding advertising keywords on web pages</weblink>. WWW 2006: 213-222</entry>
<entry level="1" type="bullet">

Ning Liu, Shuzhen Nong, Jun Yan, Benyu Zhang, Zheng Chen, Ying Li: Similarity of Temporal Query Logs Based on ARIMA Model. ICDM 2006: 975-979</entry>
<entry level="1" type="bullet">

Honghua (Kathy) Dai, Lingzhi Zhao, Zaiqing Nie, Ji-Rong Wen, Lee Wang, Ying Li: Detecting online commercial intention (OCI). WWW 2006: 829-837</entry>
<entry level="1" type="bullet">

Lee Wang, Chuang Wang, Xing Xie, Josh Forman, Yansheng Lu, Wei-Ying Ma, Ying Li: Detecting dominant locations from search queries. SIGIR 2005: 424-431</entry>
<entry level="1" type="bullet">

ZhaoHui Tang, Jamie Maclennan, Pyungchul (Peter) Kim: Building data mining solutions with OLE DB for DM and XML for analysis. SIGMOD Record 34(2): 80-85 (2005) </entry>
<entry level="1" type="bullet">

ZhaoHui Tang, Jamie Maclennan: Data Mining with SQL Server 2008, Wiley, 2008.</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>
 
<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://ksp.microsoft.com">
Keyword Services Platform</weblink></entry>
<entry level="1" type="bullet">

[https://ksp.microsoft.com/Explorer/Login.aspx Keyword Services Platform]</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://advertising.microsoft.com/advertising/adcenter_addin/">
adCenter Add-in for Excel Version 1.0</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://forums.microsoft.com/AdCenter/ShowForum.aspx?ForumID=2017&amp;SiteID=44">
adCenter Add-in Forum</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://adlab.microsoft.com/">
Microsoft adCenter Labs</weblink></entry>
<entry level="1" type="bullet">

[https://adcenter.microsoft.com/ Microsoft adCenter]</entry>
</list>
</p>

</sec>
</bdy>
</article>
