<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:44:59[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Nth root algorithm</title>
<id>1620000</id>
<revision>
<id>219677850</id>
<timestamp>2008-06-16T11:12:13Z</timestamp>
<contributor>
<username>Silly rabbit</username>
<id>555135</id>
</contributor>
</revision>
<categories>
<category>Root-finding algorithms</category>
</categories>
</header>
<bdy>

The principal <link xlink:type="simple" xlink:href="../029/235029.xml">
<it>n</it>th root</link> <math>\sqrt[n]{A}</math> of a <link xlink:type="simple" xlink:href="../616/154616.xml">
positive</link> <link xlink:type="simple" xlink:href="../491/19725491.xml">
real number</link> <it>A</it>, is the positive real solution of the equation<p>

<indent level="1">

<math>x^n = A</math>
</indent>

(for integer <it>n</it> there are <it>n</it> distinct <link xlink:type="simple" xlink:href="../826/5826.xml">
complex</link> solutions to this equation if <math>A &amp;gt; 0</math>, but only one is positive and real).</p>
<p>

There is a very fast-<link xlink:type="simple" xlink:href="../779/349779.xml">
converging</link> <b> <it>n</it></b><b>th root algorithm</b> for finding <math>\sqrt[n]{A}</math>:
<list>
<entry level="1" type="number">

Make an initial guess <math>x_0</math></entry>
<entry level="1" type="number">

Set <math>x_{k+1} = \frac{1}{n} \left[{(n-1)x_k +\frac{A}{x_k^{n-1}}}\right]</math></entry>
<entry level="1" type="number">

Repeat step 2 until the desired precision is reached.</entry>
</list>
</p>
<p>

A special case is the familiar <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link>
square-root algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. By setting <it>n</it> = 2, the <it>iteration rule</it> in step 2 becomes the square root iteration rule:
<indent level="1">

<math>x_{k+1} = \frac{1}{2}\left(x_k + \frac{A}{x_k}\right)</math>
</indent>

In the case of <it>n</it> = 1/2 the rule also simplifies and becomes:
<indent level="1">

<math>x_{k+1} = \frac{2 x_k} {1 + A x^2_k}</math>
</indent>

Several different derivations of this algorithm are possible. One derivation shows it is a special case of <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 (also called the Newton-Raphson method) for finding zeros of a function <math>f(x)</math> beginning with an initial guess. Although Newton's method is iterative, meaning it approaches the solution through a series of increasingly-accurate guesses, it converges very quickly. The rate of convergence is quadratic, meaning roughly that the number of bits of accuracy doubles on each iteration (so improving a guess from 1 bit to 64 bits of precision requires only 6 iterations). For this reason, this algorithm is often used in computers as a very fast method to calculate square roots.</p>
<p>

For large <it>n</it>, the <it>n</it>th root algorithm is somewhat less efficient since it requires the computation of <math>x_k^{n-1}</math> at each step, but can be efficiently implemented with a good <link xlink:type="simple" xlink:href="../491/99491.xml">
exponentiation</link> algorithm.</p>

<sec>
<st>
 Derivation from Newton's method </st>

<p>

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 is a method for finding a zero of a function <it>f(x)</it>. The general iteration scheme is:</p>
<p>

<list>
<entry level="1" type="number">

Make an initial guess <math>x_0</math></entry>
<entry level="1" type="number">

Set <math>x_{k+1} = x_k - \frac{f(x_k)}{f'(x_k)}</math></entry>
<entry level="1" type="number">

Repeat step 2 until the desired precision is reached.</entry>
</list>
</p>
<p>

The <it>n</it>th root problem can be viewed as searching for a zero of the function</p>
<p>

<indent level="1">

<math>f(x) = x^n - A</math>
</indent>

So the derivative is</p>
<p>

<indent level="1">

<math>f^\prime(x) = n x^{n-1}</math>
</indent>

and the iteration rule is</p>
<p>

<indent level="1">

<math>x_{k+1} = x_k - \frac{f(x_k)}{f'(x_k)}</math>
</indent>
:<math> = x_k - \frac{x_k^n - A}{n x_k^{n-1}}</math>
<indent level="1">

<math> = x_k - \frac{x_k}{n}+\frac{A}{n x_k^{n-1}}</math>
</indent>
:<math> = \frac{1}{n} \left[{(n-1)x_k +\frac{A}{x_k^{n-1}}}\right]</math></p>
<p>

leading to the general <it>n</it>th root algorithm.</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFAtkinson1989" style="font-style:normal">Atkinson, Kendall E.&#32;(1989),&#32;<it>An introduction to numerical analysis</it>, Wiley</cite>&nbsp;.</entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
