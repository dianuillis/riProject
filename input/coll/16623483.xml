<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 03:48:08[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<header>
<title>Routing in delay tolerant networking</title>
<id>16623483</id>
<revision>
<id>238823483</id>
<timestamp>2008-09-16T15:37:47Z</timestamp>
<contributor>
<username>Elwynd</username>
<id>7863119</id>
</contributor>
</revision>
<categories>
<category>Network protocols</category>
</categories>
</header>
<bdy>

<b>Routing in Delay Tolerant Networking</b> concerns itself with the
ability to <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/146145.xml">
transport</link></rule>
</direction>
</protocol>
</message>
, or route, data from a source to a
destination is a fundamental ability all communication networks must
have. <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../684/2710684.xml">
Delay and disruption-tolerant networks
(DTNs)</link></rule>
</direction>
</protocol>
</message>
, are
characterized by their lack of <link xlink:type="simple" xlink:href="../001/346001.xml">
connectivity</link>, resulting in a lack of
instantaneous end-to-end paths.  In these challenging environments,
popular ad hoc routing protocols such as <link xlink:type="simple" xlink:href="../665/1016665.xml">
AODV</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> and <link xlink:type="simple" xlink:href="../534/1806534.xml">
DSR</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> fail to establish routes.  This is due to these protocols trying to first establish a complete route and then, after the route has been established, forward the actual data.  However, when instantaneous end-to-end paths are difficult or impossible to establish, routing
protocols must take to a "store and forward" approach, where data is
incrementally moved and stored throughout the network in hopes that it will eventually reach its destination<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>.  A common technique used to
maximize the probability of a message is successfully transferred is to
replicate many copies of the message in hopes that one will succeed in
reaching its destination<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>.
<sec>
<st>
 Routing considerations </st>

<p>

There are many characteristics DTN protocols, including <link xlink:type="simple" xlink:href="../750/25750.xml">
routing</link>, must
take into consideration.  A first consideration is if information
about future contacts is readily available.  For example, in
<link xlink:type="simple" xlink:href="../825/1391825.xml">
interplanetary communications</link>, many times a planet or moon
is the
cause of contact disruption, and large distance is the cause of
communication delay.  However, due to the <link xlink:type="simple" xlink:href="../498/22498.xml">
laws of physics</link>, it is
possible to predict the future in terms of the times contacts will be
available, and how long they will last.  These types of contacts are
known as <it>scheduled</it> or <it>predictable contacts</it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>.  On the contrary, in
disaster recovery networks the future location of communicating
entities, such as <link xlink:type="simple" xlink:href="../330/146330.xml">
emergency responders</link>, may not be known.  These types
of contacts are known as <it>intermittent</it> or <it>opportunistic contacts</it>.</p>
<p>

A second consideration is if <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../187/657187.xml">
mobility</link></group>
</collection>
</class>
 can be exploited and, if so,
which nodes are mobile.  There are three major cases, classifying the
level of mobility in the network.  First, it is possible that there
are no mobile entities.  In this case, contacts appear and disappear
based solely on the quality of the communication channel between them.
For instance, in <link xlink:type="simple" xlink:href="../825/1391825.xml">
interplanetary networks</link>, large objects in space, such
as planets, can block communicating nodes for a set period of time.
Second, it is possible that some, but not all, nodes in the network
are mobile.  These nodes, sometimes referred to as data <it>MULES</it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>,
are exploited for their mobility.  Since they are the primary
source of transitive communication between two non-neighboring nodes
in the network, an important routing question is how to properly
distribute data among these nodes. Third,
it is possible that the vast majority, if not all, nodes in the
network are mobile.  In this case, a routing protocol will most
likely have more options available during contact opportunities, and
may not have to utilize each one<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>Aruna Balasubramanian, Brian Neil
Levine, and Arun Venkataramani.  DTN routing as a resource
allocation problem. In Proc. ACM SIGCOMM, August 2007.Thrasyvoulos Spyropoulos, Konstantinos Psounis,
and Cauligi S. Raghavendra. Spray and wait: An efficient routing scheme
for intermittently connected mobile networks. In WDTN â€™05: Proceeding of
the 2005 ACM SIGCOMM workshop on Delaytolerant networking, 2005.Thrasyvoulos Spyropoulos, Konstantinos Psounis,
and Cauligi S. Raghavendra. Spray and focus: Efficient mobility-assisted
routing for heterogeneous and correlated mobility. In Fifth Annual
IEEE International Conference on Pervasive Computing and Communications
Workshops, 2007..  An example of this
type of network is a disaster recovery network where all nodes
(generally people and <link xlink:type="simple" xlink:href="../730/6206730.xml">
vehicles</link>) are mobile<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>.  A second example is a
vehicular network where mobile cars, trucks, and buses act as
communicating entities<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>.</p>
<p>

A third consideration is the availability of network resources.  Many
nodes, such as mobile phones, are limited in terms of storage space,
transmission rate, and battery life.  Others, such as buses on the
road, may not be as limited.  Routing protocols can utilize this
information to best determine how messages should be transmitted and
stored to not over-burden limited resources. As of <link xlink:type="simple" xlink:href="../300/13292300.xml">
April 2008</link>, only recently has the
scientific community started taking resource management into
consideration, and this is still an active area of research.</p>

</sec>
<sec>
<st>
 Routing protocol classifications </st>

<p>

While there are many characteristics of <link xlink:type="simple" xlink:href="../059/10123059.xml">
routing protocol</link>s, one of the
most immediate ways to create a taxonomy is based on whether or not
the protocol creates replicas of messages.  Routing protocols that
never replicate a message are considered <link xlink:type="simple" xlink:href="../520/1073520.xml">
forwarding</link>-based, whereas
protocols that do replicate messages are considered
replication-based.  This simple, yet popular, taxonomy was recently
used by Balasubramanian et al. to classify a large number of DTN
routing protocols.</p>
<p>

There are both advantages and disadvantages to each approach, and the
appropriate approach to use is probably dependent on the scenario at
hand.  Forwarding-based approaches are generally much less wasteful of
network resources, as only a single copy of a message exists in
storage in the network at any given time<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>.  Furthermore, when
the destination receives the message, no other node can have a copy.
This eliminates the need for the destination to provide feedback to
the network (except for, perhaps, an acknowledgments sent to the
sender), to indicate outstanding copies can be deleted.
Unfortunately, forwarding-based approaches do not allow for sufficient
message delivery rates in many DTNs.
Replication-based
protocols, on the other hand, allow for greater message delivery
rates<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>, since multiple copies exist in the
network, and only one (or in
some cases, as with erasure coding, a few) must reach the destination.
However, the tradeoff here is that these protocols can waste valuable
network resources.  Furthermore, many
flooding-based protocols are
inherently not scalable.  Some protocols, such as Spray and Wait,
attempt to compromise by limiting the number of possible replicas of a
given message.</p>
<p>

It is important to note that the vast majority of DTN routing
protocols are <link xlink:type="simple" xlink:href="../452/63452.xml">
heuristic</link>-based, and non-<link xlink:type="simple" xlink:href="../402/22402.xml">
optimal</link>.  This is due to
optimality being, in the general DTN case, <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
.  More
specifically "<link xlink:type="simple" xlink:href="../716/22716.xml">
online algorithms</link> without complete future knowledge and
with unlimited computational power, or computationally limited
algorithms with complete future knowledge, can be arbitrarily far from
optimal".</p>

</sec>
<sec>
<st>
 Replication-based routing </st>

<p>

<link xlink:type="simple" xlink:href="../905/2722905.xml">
Replication</link>-based protocols have recently obtained much attention in
the scientific community, as they can allow for substantially better
message delivery ratios than in forwarding-based protocols.  These
types of routing protocols allow for a message to be replicated; each
of the replicas, as well as the original message itself, are generally
referred to as message copies or message replicas.  Possible issues with
replication-based routing include:
<list>
<entry level="1" type="number">

 <link xlink:type="simple" xlink:href="../522/430522.xml">
network congestion</link> in clustered areas,</entry>
<entry level="1" type="number">

 being wasteful with network resources (including bandwidth, storage, and energy), and</entry>
<entry level="1" type="number">

 network scalability.</entry>
</list>
</p>
<p>

Since network resources may quickly become constrained, deciding which
messages to transmit first and which messages to drop first play
critical roles in many routing protocols.</p>

<ss1>
<st>
 Epidemic routing </st>

<p>

Epidemic routing<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> is flooding-based in nature,
as nodes continuously replicate and transmit messages to newly
discovered contacts that do not already possess a copy of the
message.  In the most simple case, epidemic routing is flooding;
however, more sophisticated techniques can be used to limit the
number of message transfers.  Epidemic routing has its roots in
ensuring distributed databases remain synchronized, and many of
these techniques, such as rumor mongering, can be directly applied
to routing.</p>

</ss1>
<ss1>
<st>
 PRoPHET routing protocol </st>

<p>

<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Epidemic+routing%22])">
Epidemic routing</link> is particularly resource hungry
because it deliberately makes no attempt to eliminate replications
that would be unlikely to improve the delivery probability of messages.
This strategy is effective if the opportunistic encounters between nodes
are purely random, but in realistic situations, encounters are rarely 
totally random.  Data Mules (mostly associated with a human) move in a 
society and
accordingly tend to have greater probabilities of meeting certain Mules 
than others.  
The <b>Probabilistic Routing Protocol using History of Encounters and Transitivity (PRoPHET)</b> protocol uses an algorithm that attempts to exploit
the non-randomness of real-world encounters by maintaining a set of 
probabilities
for successful delivery to known destinations in the DTN 
(<it>delivery predictabilities</it>) and replicating messages during opportunistic 
encounters only if the Mule that does not have the message
appears to have a better chance of delivering it.  This strategy was 
first documented in a paper from 2003 <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref>.</p>
<p>

An adaptive algorithm is used to determine the delivery predictabilities 
in each Mule.  The Mule <it>M</it> stores delivery predictabilities 
<it>P</it>(<it>M</it>,<it>D</it>) for each known destination <it>D</it>.  If the Mule has 
not stored a predictability value for a destination <it>P</it>(<it>M</it>,<it>D</it>) 
is assumed to be zero. The delivery predictabilities used by each Mule 
are recalculated at each opportunistic encounter according to three rules:
<list>
<entry level="1" type="number">

 When the Mule <it>M</it> encounters another Mule <it>E</it>, the predictability for  <it>E</it> is increased: <it>P</it>(<it>M</it>,<it>E</it>)<it>new</it> = <it>P</it>(<it>M</it>,<it>E</it>)<it>old</it> + (1 - <it>P</it>(<it>M</it>,<it>E</it>)<it>old</it>) * <it>Lencounter</it> where <it>Lencounter</it> is an initialisation constant.</entry>
<entry level="1" type="number">

 The predictabilities for all destinations <it>D</it> other than <it>E</it> are 'aged': <it>P</it>(<it>M</it>,<it>D</it>)<it>new</it> = <it>P</it>(<it>M</it>,<it>D</it>)<it>old</it> * <it>&amp;gamma;K</it> where <it>&amp;gamma;</it> is  the aging constant and <it>K</it> is the number of time units that has elapsed since the last aging.</entry>
<entry level="1" type="number">

 Predictabilities are exchanged between <it>M</it> and <it>E</it> and the 'transitive' property of predictability is used to update the predictability of destinations <it>D</it> for which <it>E</it> has a <it>P</it>(<it>E</it>,<it>D</it>) value on the assumption that <it>M</it> is likely to meet <it>E</it> again: <it>P</it>(<it>M</it>,<it>D</it>)<it>new</it> = <it>P</it>(<it>M</it>,<it>D</it>)<it>old</it> + (1 - <it>P</it>(<it>M</it>,<it>D</it>)<it>old</it>) * <it>P</it>(<it>M</it>,<it>E</it>) * <it>P</it>(<it>E</it>,<it>D</it>) * <it>&amp;beta;</it> where <it>&amp;beta;</it> is a scaling constant.</entry>
</list>
</p>
<p>

The protocol has been incorporated into the reference implementation maintained 
by the <weblink xlink:type="simple" xlink:href="http://www.dtnrg.org/">
IRTF DTN Research Group</weblink> and the current version is 
documented in an 
<weblink xlink:type="simple" xlink:href="http://www.watersprings.org/pub/id/draft-irtf-dtnrg-prophet-00.txt">
Internet Draft</weblink><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref> (now expired).  The protocol has been trialled in real world situations 
during the <weblink xlink:type="simple" xlink:href="http://www.snc.sapmi.net/">
S&amp;aacute;mi Network Connectivity (SNC)</weblink> project 
and is being further developed during the EU Framework Programme 7 project 
<weblink xlink:type="simple" xlink:href="http://www.n4c.eu">
Networking for Communications Challenged Communities (N4C)</weblink>.</p>

</ss1>
<ss1>
<st>
 MaxProp </st>

<p>

MaxProp<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> was developed at the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../437/248437.xml">
University of
Massachusetts, Amherst</link></university>
 and
was, in part, funded by <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../957/8957.xml">
DARPA</link></agency>
 and the <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../427/157427.xml">
National Science Foundation</link></agency>
.
The original paper is found in the <link xlink:type="simple" xlink:href="../938/56938.xml">
IEEE</link> INFOCOM 2006 conference.
MaxProp is <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../596/3858596.xml">
flooding</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
-based in nature, in that if a contact is
discovered, all messages not held by the contact will attempt to be
replicated and transferred.  The intelligence of MaxProp comes in
determining which messages should be transmitted first and which
messages should be dropped first.  In essence, MaxProp maintains
an <link xlink:type="simple" xlink:href="../265/25265.xml">
ordered-queue</link> based on the destination of each message, ordered
by the estimated likelihood of a future transitive path to that
destination.</p>

<ss2>
<st>
 MaxProp core </st>

<p>

To obtain these estimated path likelihoods, each node maintains a
vector of size <math>n-1</math> (where <math>n</math> is the number of nodes in the network)
consisting of the likelihood the node has of
encountering each of the other nodes in the network.  Each of
the <math>n-1</math> elements in the vector is initially set to <math>\frac{1}{|n|-1}</math>,
meaning the node is equally likely to meet any other node next.
When the node meets another node, <math>j</math>, the <math>j^\text{th}</math> element of its
vector is incremented by 1, and then the entire vector is
<link xlink:type="simple" xlink:href="../189/398189.xml">
normalized</link> such that the sum of all entries add to 1.  Note that
this phase is completely local and does not require transmitting
routing information between nodes.</p>
<p>

When two nodes meet, they first exchange their estimated
node-meeting likelihood vectors.  Ideally, every node will have
an up-to-date vector from every other node.  With these n
vectors at hand, the node can then compute a shortest path via a
depth-first search where path weights indicate the probability
that the link does not occur (note that this is 1 minus the
value found in the appropriate vector).  These path weights are
summed to determine the total path cost, and are computed over
all possible paths to the destinations desired (destinations for
all messages currently being held).  The path with the least
total weight is chosen as the cost for that particular
destination.  The messages are then ordered by destination
costs, and transmitted and dropped in that order.</p>

</ss2>
<ss2>
<st>
 MaxProp additions </st>

<p>

In conjunction with the core routing described above, MaxProp
allows for many complementary mechanisms, each helping the message
delivery ratio in general.  First, <link xlink:type="simple" xlink:href="../601/3327601.xml">
acknowledgements</link> are
injected into the network by nodes that successfully receive a
message (and are the final destination of that message).  These
acknowledgements are <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../526/439526.xml">
128-bit hashes</link></primitive>
</causal_agent>
</person>
</physical_entity>
 of the message that are
flooded into the network, and instruct nodes to delete extra
copies of the message from their buffers.  This helps free space
so outstanding messages are not dropped as often.  Second,
packets with low hop-counts are given higher priority.  This
helps promote initial rapid message replication to give new
messages a "head start".  Without this head start, newer
messages can be quickly starved by older messages, since there
are generally less copies of new messages in the network.
Third, each message maintains a "hop list" indicating nodes it
has previously visited to ensure that it does not revisit a node.</p>

</ss2>
</ss1>
<ss1>
<st>
 RAPID </st>

<p>

RAPID, which is an acronym for <it>Resource
Allocation Protocol for Intentional DTN</it> routing, was developed at the University of
Massachusetts, Amherst.  It was first introduced in the <link xlink:type="simple" xlink:href="../124/337124.xml">
SIGCOMM</link>
<link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link> publication, DTN Routing as a <link xlink:type="simple" xlink:href="../428/267428.xml">
Resource Allocation Problem</link>.
The authors of RAPID argue as a base premise that prior DTN routing
algorithms incidentally effect performance metrics, such as average
delay and message delivery ratio.  The goal of RAPID is to
intentionally effect a signal routing
metric.  At the time of publication, RAPID has been instrumented to
intentionally minimize one of three metrics: average delay, missed
deadlines, and maximum delay.</p>

<ss2>
<st>
 RAPID protocol </st>

<p>

The core of the RAPID protocol is based around the concept of a
utility function.  A <link xlink:type="simple" xlink:href="../479/45479.xml">
utility function</link> assigns a utility value,
<math>U_i</math>, to every packet <math>i</math>, which is based on the metric being
optimized. <math>U_i</math> is defined as the expected contribution of
packet <math>i</math> to this metric.  RAPID replicates packets first that
locally result in the highest increase in utility.  For example,
assume the metric to optimize is average delay.  The utility
function defined for average delay is <math>U_i = -D(i)</math>,
basically the
negative of the average delay.  Hence, the protocol replicates
the packet that results in the greatest decrease in delay.
RAPID, like MaxProp, is flooding-based, and will therefore
attempt to replicate all packets if network resources allow.</p>
<p>

The overall protocol is composed of four step:
<list>
<entry level="1" type="bullet">

 Initialization: <link xlink:type="simple" xlink:href="../632/18933632.xml">
Metadata</link> is exchanged to help estimate packet utilities.</entry>
<entry level="1" type="bullet">

 Direct Delivery: Packets destined for immediate neighbors are transmitted.</entry>
<entry level="1" type="bullet">

 Replication: Packets are replicated based on marginal utility (the change is utility over the size of the packet).</entry>
<entry level="1" type="bullet">

 Termination: The protocol ends when contacts break or all packets have been replicated.</entry>
</list>
</p>

</ss2>
</ss1>
<ss1>
<st>
 Spray and Wait </st>

<p>

Spray and Wait is a routing protocol that attempts to gain the
delivery ratio benefits of replication-based routing as well as the
low resource utilization benefits of forwarding-based routing.
Spray and Wait was developed by researchers at the <university wordnetid="108286163" confidence="0.9508927676800064">
<ranking wordnetid="114429484" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../005/32005.xml">
University of Southern California</link></ranking>
</university>
.  It was first presented at the 2005 ACM
SIGCOMM conference, under the publication "Spray and Wait: An
Efficient Routing Scheme for Intermittently Connected Mobile
Networks".  Spray and Wait achieves resource efficiency by setting
a strict upper bound on the number of copies per message allowed in
the network.</p>

<ss2>
<st>
 Spray and Wait protocol overview </st>

<p>

The Spray and Wait protocol is composed of two phases: the spray
phase and the wait phase.  When a new message is created in the
system, a number <math>L</math> is attached to that message indicating the
maximum allowable copies of the message in the network.  During
the spray phase, the source of the message is responsible for
"spraying", or delivery, one copy to <math>L</math> distinct "relays".  When
a relay receives the copy, they enter the wait phase, where the
relay simply holds that particular message until the destination
is encountered directly.</p>

</ss2>
<ss2>
<st>
 Spray and Wait versions </st>

<p>

There are two main versions of Spray and Wait: vanilla and
<link xlink:type="simple" xlink:href="../104/502104.xml">
binary</link>.  The two versions are identical except for how the <math>L</math>
copies reach <math>L</math> distinct nodes during the spray phase.  The
simplest way to achieve this, known as the vanilla version, is
for the source to transmit a single copy of the message to the
first <math>L</math> distinct nodes it encounters after the message is
created.</p>
<p>

A second version, referred to as Binary Spray and Wait.  Here,
the source starts, as before, with <math>L</math> copies.  It then
transfers
<math>\text{floor}(L/2)</math> of its copies to the first node it encounters.
Each
of these nodes then transfers half of the total number of copies
they have to future nodes they meet that have no copies of the
message.  When a node eventually gives away all of its copies,
except for one, it switches into the wait phase where it waits
for a direct transmission opportunity with the destination.  The
benefit of Binary Spray and Wait is that messages are
disseminated faster than the vanilla version.  In fact, the
authors prove that Binary Spray and Wait is optimal in terms of
minimum expected delay among all Spray and Wait schemes,
assuming node movement is <link xlink:type="simple" xlink:href="../067/453067.xml">
IID</link>.</p>

</ss2>
</ss1>
</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
C. E. Perkins and
E. M. Royer. Ad-hoc on-demand distance vector routing. In The Second
IEEE Workshop on Mobile Computing Systems and Applications, February
1999.</entry>
<entry id="2">
D. B. Johnson and D. A. Maltz. Mobile Computing,
chapter Dynamic source routing in ad hoc wireless networks, pages
153â€“181. Kluwer Academic Publishers, February 1996.</entry>
<entry id="3">
John Burgess,
Brian Gallagher, David Jensen, and Brian Neil Levine. MaxProp: Routing for vehicle-based disruption-tolerant networks. In Proc. IEEE INFOCOM, April
2006.</entry>
<entry id="4">
Philo Juang, Hidekazu Oki, Yong Wang, Margaret Martonosi,
Li Shiuan Peh, and Daniel Rubenstein. Energy-efficient computing
for wildlife tracking: design tradeoffs and early experiences with
zebranet. SIGOPS Oper. Syst. Rev., 36(5):96â€“107, 2002.</entry>
<entry id="5">
Augustin
Chaintreau, Pan Hui, Jon Crowcroft, Christophe Diot, Richard Gass,
and James Scott. Impact of human mobility on opportunistic forwarding
algorithms. IEEE Transactions on Mobile Computing, 6(6):606â€“620,
2007.</entry>
<entry id="6">
Amin Vahdat and
David Becker. Epidemic routing for partially connected ad hoc
networks. Technical Report CS-2000-06, Department of Computer Science,
Duke University, April 2000.</entry>
<entry id="7">
Sushant
Jain, Kevin Fall, and Rabin Patra. Routing in a delay tolerant network. In
Proc. ACM SIGCOMM, 2004.</entry>
<entry id="8">
Jea D.,
Somasundara A. A, and Srivastava M. B. Multiple Controlled Mobile Elements
(Data Mules) for Data Collection in Sensor Networks.  In Proc. IEEE/ACM
International Conference on Distributed Computing in Sensor Systems
(DCOSS), June 2005.</entry>
<entry id="9">
Rahul C. Shah, Sumit Roy, Sushant Jain,
and Waylon Brunette.  Data MULEs: Modeling a Three-tier Architecture for
Sparse Sensor Networks.  In Proc. IEEE SNPA Workshop, May 2003.</entry>
<entry id="10">
Samuel C. Nelson,
Albert F. Harris, and Robin Kravets. Event-driven, role-based mobility
in disaster recovery networks. In CHANTS 07: Proceedings of the second
workshop on Challenged Networks, 2007.</entry>
<entry id="11">
Dan
Henriksson, Tarek F. Abdelzaher, and Raghu K. Ganti. A caching-based
approach to routing in delay-tolerant networks. In Proceedings of
16th International Conference on Computer Communications and Networks,
2007. ICCCN 2007, 2007.</entry>
<entry id="12">
A. 
Lindgren, A. Doria, and O. Scheln. Probabilistic routing in 
intermittently connected networks. In Proceedings of the Fourth ACM 
International Symposium on Mobile Ad Hoc Networking and Computing 
(MobiHoc 2003), 2003.</entry>
<entry id="13">
A. Lindgren and A. Doria, Probabilistic Routing Protocol for 
Intermittently Connected Networks, Internet Draft - draft-irtf-dtnrg-prophet-00.txt, 
February 2008</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dtnrg.org">
IRTF DTN Research Group website</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ietf.org/rfc/rfc4838.txt">
Bundle Protocol Specification</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.isi.edu/nsnam/ns/">
Network simulator (ns2)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.netlab.tkk.fi/tutkimus/dtn/theone/">
Opportunistic network environment ONE</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ir.bbn.com/projects/spindle/elevatornet/">
BBN's ElevatorNet (from SPINDLE project)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.snc.sapmi.net/">
S&amp;aacute;mi Network Connectivity (SNC) project website</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.n4c.eu">
Networking for Communications Challenged Communities (N4C) project website</weblink></entry>
</list>
</p>

</sec>
</bdy>
</rule>
</direction>
</protocol>
</message>
</article>
