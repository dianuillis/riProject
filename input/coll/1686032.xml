<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:49:09[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Beam search</title>
<id>1686032</id>
<revision>
<id>243754444</id>
<timestamp>2008-10-07T22:24:25Z</timestamp>
<contributor>
<username>TheEternalVortex</username>
<id>8751</id>
</contributor>
</revision>
<categories>
<category>Search algorithms</category>
</categories>
</header>
<bdy>

<b>Beam search</b> is a <link xlink:type="simple" xlink:href="../509/846509.xml">
heuristic</link> <link xlink:type="simple" xlink:href="../249/28249.xml">
search algorithm</link> that is an optimization of <link xlink:type="simple" xlink:href="../271/148271.xml">
best-first search</link> that reduces its memory requirement. Best-first search is a graph search which orders all partial solutions (states) according to some heuristic which attempts to predict how close a partial solution is to a complete solution (goal state).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> In beam search, only a predetermined number of best partial solutions are kept as candidates.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> <p>

Beam search uses breadth-first search to build its <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../584/597584.xml">
search tree</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. At each level of the tree, it generates all successors of the states at the current level, sorts them in order of increasing heuristic values.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> However, it only stores a predetermined number of states at each level (called the beam width). The smaller the beam width, the more states are pruned. Therefore, with an infinite beam width, no states are pruned and beam search is identical to breadth-first search. The beam width bounds the memory required to perform the search, at the expense of risking completeness (possibility that it will not terminate) and optimality (possibility that it will not find the best solution). The reason for this risk is that the goal state could potentially be pruned. </p>

<sec>
<st>
 Uses </st>
<p>

A beam search is most often used to maintain tractability in large systems with insufficient amount of memory to store the entire search tree.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> For example, it is used in many <link xlink:type="simple" xlink:href="../980/19980.xml">
machine translation</link> systems.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> To select the best translation, each part is processed, and many different ways of translating the words appear. The top best translations according to their sentence structures are kept and the rest are discarded. The translator then evaluates the translations according to a given criteria, choosing the translation which best keeps the goals.</p>
<p>

It has also been used in an implementation of the game <link xlink:type="simple" xlink:href="../902/12902.xml">
five in a row</link>. A list of possible successors to win the game is built and categorized threats are evaluated. A criterion of this game is whether or not the computer needs to adjust its strategies depending on how many possibilities the person playing the computer has to win.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
Xu, Yuehua. Fern, Alan. "On Learning Linear Ranking Functions for Beam Search". http://www.machinelearning.org/proceedings/icml2007/papers/168.pdf</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://foldoc.org/index.cgi?query=beam+search&amp;action=Search">
beam search from FOLDOC</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://bradley.bradley.edu/~chris/searches.html">
British Museum Search</weblink></entry>
<entry id="4">
Furcy, David. Koenig, Sven. "Limited Discrepancy Beam Search". http://www.ijcai.org/papers/0596.pdf</entry>
<entry id="5">
Tillmann, Christoph. Ney, Hermann. "Word Reordering and a Dynamic Programming Beam Search Algorithm for Statistical Machine Translation". http://acl.ldc.upenn.edu/J/J03/J03-1005.pdf</entry>
<entry id="6">
Chen, Jiun-Hung. Wang, Adrienne X. "Five-In-Row with Local Evaluation and Beam Search"</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../817/3210817.xml">
Beam stack search</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
