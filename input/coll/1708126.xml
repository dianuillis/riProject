<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:51:50[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Pitch detection algorithm</title>
<id>1708126</id>
<revision>
<id>183954448</id>
<timestamp>2008-01-13T01:38:44Z</timestamp>
<contributor>
<username>VoABot II</username>
<id>1879647</id>
</contributor>
</revision>
<categories>
<category>Audio engineering</category>
<category>Digital signal processing</category>
</categories>
</header>
<bdy>

A <b>pitch detection algorithm (PDA)</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> designed to estimate the <link xlink:type="simple" xlink:href="../933/77933.xml">
pitch</link> or <link xlink:type="simple" xlink:href="../490/11490.xml">
fundamental frequency</link> of a <link xlink:type="simple" xlink:href="../905/2657905.xml">
quasiperiodic</link> or virtually <link xlink:type="simple" xlink:href="../848/76848.xml">
periodic</link> signal, usually a <link xlink:type="simple" xlink:href="../951/673951.xml">
digital recording</link> of <link xlink:type="simple" xlink:href="../448/28448.xml">
speech</link> or a musical note or tone. This can be done in the <link xlink:type="simple" xlink:href="../419/173419.xml">
time domain</link> or the <link xlink:type="simple" xlink:href="../346/370346.xml">
frequency domain</link>.<p>

PDAs are used in various contexts (e.g. <link xlink:type="simple" xlink:href="../194/23194.xml">
phonetics</link>, <link xlink:type="simple" xlink:href="../193/261193.xml">
music information retrieval</link>, <link xlink:type="simple" xlink:href="../618/28618.xml">
speech coding</link>, <link xlink:type="simple" xlink:href="../510/9510.xml">
musical performance system</link>s) and so there may be different demands placed upon the algorithm. There is as yet no single perfect PDA, so a variety of algorithms exist, most falling broadly into the classes given below<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.</p>

<sec>
<st>
Time-domain approaches</st>

<p>

In the time domain, a PDA typically estimates the period of the quasiperiodic signal, then inverts that value to give the frequency.</p>
<p>

One simple approach would be to measure the distance between <link xlink:type="simple" xlink:href="../723/567723.xml">
zero crossing</link> points of the signal (i.e. the <link xlink:type="simple" xlink:href="../746/4119746.xml">
Zero Crossing Rate</link>). However, this does not work well with complex <link xlink:type="simple" xlink:href="../592/47592.xml">
waveform</link>s which are composed of multiple sine waves with differing periods. Nevertheless, there are cases in which zero-crossing can be a useful measure, for example in some speech applications where a single source is assumed. The algorithm's simplicity makes it "cheap" to implement.</p>
<p>

More sophisticated approaches compare segments of the signal with other segments offset by a trial period to find a match. AMDF (<link>
average magnitude difference function</link>), ASDF (Average Squared Difference Function), or the similar <link xlink:type="simple" xlink:href="../724/2724.xml">
autocorrelation</link> work this way. These algorithms can give quite accurate results for highly periodic signals. However, they have false detection problems (often "<it>octave errors</it>"), can sometimes cope badly with noisy signals (depending on the implementation) and - in their basic implementations - do not deal with <link xlink:type="simple" xlink:href="../144/24144.xml">
polyphonic</link> sounds (which involve multiple musical notes of different pitches). </p>
<p>

Current time-domain pitch detector algorithms tend to build upon the basic methods referred to above, with additional refinements to bring the performance more in line with a human assessment of pitch. For example, the YIN algorithm<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and the MPM algorithm<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> are both based upon autocorrelation.</p>

</sec>
<sec>
<st>
Frequency-domain approaches</st>

<p>

In the frequency domain, polyphonic detection is possible, usually utilizing the <link xlink:type="simple" xlink:href="../512/11512.xml">
Fast Fourier Transform</link> (FFT) to convert the signal to a <link xlink:type="simple" xlink:href="../198/51198.xml">
frequency spectrum</link>. This requires more processing power as the desired accuracy increases, although the well-known efficiency of the <link xlink:type="simple" xlink:href="../512/11512.xml">
FFT</link> algorithm makes it suitably efficient for many purposes.</p>
<p>

Popular frequency domain algorithms include: the harmonic product spectrum<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>; <link xlink:type="simple" xlink:href="../956/46956.xml">
cepstral</link> analysis and <link xlink:type="simple" xlink:href="../806/140806.xml">
maximum likelihood</link> which attempts to match the frequency domain characteristics to pre-defined frequency maps (useful for detecting pitch of fixed tuning instruments); and the detection of peaks due to harmonic series<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>.</p>
<p>

To improve on the pitch estimate derived from the discrete Fourier spectrum, techniques such as <it>spectral reassignment</it> (phase based) or <it>Grandke interpolation</it> (magnitude based) can be used to go beyond the resolution provided by the FFT analysis.</p>

</sec>
<sec>
<st>
Fundamental frequency of speech</st>
<p>

The fundamental frequency of <link xlink:type="simple" xlink:href="../649/2917649.xml">
speech</link> can vary from 40 Hz for low-pitched male voices to 600 Hz for children or high-pitched female voices <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>.</p>
<p>

Autocorrelation methods need at least two pitch periods to detect pitch. To detect a fundamental frequency of 40 Hz this means that at least 50 milliseconds (ms) of the speech signal must be analyzed. However, during 50 ms, speech with higher fundamental frequencies may not necessarily have the same fundamental frequency throughout the window<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>.</p>

</sec>
<sec>
<st>
References</st>


<p>

<reflist>
<entry id="1">
D. Gerhard. <weblink xlink:type="simple" xlink:href="http://www.cs.uregina.ca/Research/Techreports/2003-06.pdf">
Pitch Extraction and Fundamental Frequency: History and Current Techniques</weblink>, technical report, Dept. of Computer Science, University of Regina, 2003.</entry>
<entry id="2">
A. de Cheveigné and H. Kawahara. <weblink xlink:type="simple" xlink:href="http://www.ircam.fr/pcm/cheveign/pss/2002_JASA_YIN.pdf">
YIN, a fundamental frequency estimator for speech and music.</weblink> The Journal of the Acoustical Society of America, 111:1917, 2002. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1121%2F1.1458024">
10.1121/1.1458024</weblink></entry>
<entry id="3">
P. McLeod and G. Wyvill. <weblink xlink:type="simple" xlink:href="http://csweb.otago.ac.nz/tartini/papers/A_Smarter_Way_to_Find_Pitch.pdf">
A smarter way to find pitch.</weblink> In Proceedings of the International Computer Music Conference (ICMC’05), 2005.</entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://cnx.org/content/m11714/latest/">
Pitch Detection Algorithms</weblink>, online resource from <link xlink:type="simple" xlink:href="../372/4687372.xml">
Connexions</link></entry>
<entry id="5">
Mitre, Adriano; Queiroz, Marcelo; Faria, Régis. <weblink xlink:type="simple" xlink:href="http://www.ime.usp.br/~mqz/Mitre_AESBR2006.pdf">
Accurate and Efficient Fundamental Frequency Determination from Precise Partial Estimates.</weblink> Proceedings of the 4th AES Brazil Conference. 113-118, 2006.</entry>
<entry id="6">
 <cite style="font-style:normal" class="book">Huang, Xuedong;&#32;Alex Acero, Hsiao-Wuen Hon&#32;[2001]. Spoken Language Processing&#32;(in English).&#32;Prentice Hall PTR,&#32;325. ISBN 0-13-022616-5.</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../755/6871755.xml">
Frequency estimation</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../682/36682.xml">
Linear predictive coding</link></entry>
</list>
</p>

</sec>
</bdy>
</article>
