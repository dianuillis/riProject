<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:52:58[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Reliability engineering</title>
<id>1724836</id>
<revision>
<id>242857856</id>
<timestamp>2008-10-03T23:37:11Z</timestamp>
<contributor>
<username>Noclevername</username>
<id>1546209</id>
</contributor>
</revision>
<categories>
<category>Reliability engineering</category>
<category>Design for X</category>
<category>Failure</category>
<category>Engineering statistics</category>
<category>Systems engineering</category>
<category>Software quality</category>
</categories>
</header>
<bdy>

<b>Reliability engineering</b> is an <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link> field, that deals with the study of <link xlink:type="simple" xlink:href="../651/41651.xml">
reliability</link>: the ability of a <link xlink:type="simple" xlink:href="../675/8286675.xml">
system</link> or component to perform its required functions under stated conditions for a specified period of time.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> It is often reported in terms of a <link xlink:type="simple" xlink:href="../934/22934.xml">
probability</link>.
<sec>
<st>
 Overview </st>
<p>

<image location="right" width="240px" src="Reliability_block_diagram.png" type="thumb">
<caption>

A Reliability Block Diagram
</caption>
</image>

<b>Reliability</b> may be defined in several ways:
<list>
<entry level="1" type="bullet">

 The idea that something is fit for purpose with respect to time;</entry>
<entry level="1" type="bullet">

 The capacity of a device or system to perform as designed;</entry>
<entry level="1" type="bullet">

 The resistance to failure of a device or system;</entry>
<entry level="1" type="bullet">

 The ability of a device or system to perform a required function under stated conditions for a specified period of <link xlink:type="simple" xlink:href="../012/30012.xml">
time</link>;</entry>
<entry level="1" type="bullet">

 The probability that a <link xlink:type="simple" xlink:href="../828/9828.xml">
functional unit</link> will perform its required function for a specified interval under stated conditions. </entry>
<entry level="1" type="bullet">

 The ability of something to "<link xlink:type="simple" xlink:href="../982/6493982.xml">
fail well</link>" (fail without catastrophic consequences)</entry>
</list>
</p>
<p>

Reliability engineers rely heavily on <link xlink:type="simple" xlink:href="../685/26685.xml">
statistics</link>, <link xlink:type="simple" xlink:href="../542/23542.xml">
probability theory</link>, and <link xlink:type="simple" xlink:href="../909/442909.xml">
reliability theory</link>. Many engineering techniques are used in reliability engineering, such as reliability prediction, <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../948/206948.xml">
Weibull</link></distribution>
</arrangement>
</structure>
 analysis, thermal management, reliability testing and accelerated life testing. Because of the large number of reliability techniques, their expense, and the varying degrees of reliability required for different situations, most projects develop a <link>
reliability program plan</link> to specify the reliability tasks that will be performed for that specific system. </p>
<p>

The function of reliability engineering is to develop the reliability requirements for the product, establish an adequate reliability program, and perform appropriate analyses and tasks to ensure the product will meet its requirements. These tasks are managed by a reliability engineer, who usually holds an <link xlink:type="simple" xlink:href="../700/621700.xml">
accredited</link> engineering degree and has additional reliability-specific education and training. Reliability engineering is closely associated with maintainability engineering and <link xlink:type="simple" xlink:href="../164/186164.xml">
logistics engineering</link>. Many problems from other fields, such as <link xlink:type="simple" xlink:href="../730/28730.xml">
security engineering</link>, can also be approached using reliability engineering techniques. This article provides an overview of some of the most common reliability engineering tasks. Please see the references for a more comprehensive treatment.</p>
<p>

Many types of <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link> employ reliability engineers and use the tools and methodology of reliability engineering.  For example:
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../764/27764.xml">
System engineer</link>s design complex systems having a specified reliability</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../528/19528.xml">
Mechanical engineer</link>s may have to design a machine or system with a specified reliability</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../882/351882.xml">
Automotive engineer</link>s have reliability requirements for the automobiles (and components) which they design</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../247/219247.xml">
Electronics engineer</link>s must design and test their products for reliability requirements.</entry>
<entry level="1" type="bullet">

 In <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link> and <link xlink:type="simple" xlink:href="../764/27764.xml">
systems engineering</link> the <b>reliability engineering</b> is the subdiscipline of ensuring that a <link xlink:type="simple" xlink:href="../675/8286675.xml">
system</link> (or a device in general) will perform its intended function(s) when operated in a specified manner for a specified length of time. Reliability <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link> is performed throughout the entire <link xlink:type="simple" xlink:href="../192/216192.xml">
life cycle</link> of a system, including development, test, production and operation.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Reliability theory </st>
<p>

<it>Main articles: <link xlink:type="simple" xlink:href="../909/442909.xml">
reliability theory</link>, <link xlink:type="simple" xlink:href="../960/1336960.xml">
failure rate</link>.</it></p>
<p>

Reliability theory is the foundation of reliability engineering. For engineering purposes, reliability is defined as:
<indent level="3">

<b>the <link xlink:type="simple" xlink:href="../934/22934.xml">
probability</link> that a device will perform its intended function during a specified period of time under stated conditions.</b>
</indent>

Mathematically, this may be expressed as,</p>
<p>

<indent level="2">

<math>R(t)=\int_{0}^{t} f(x)\, dx \ \!</math>,
</indent>

<indent level="2">

where <math>f(x) \!</math> is the failure <link xlink:type="simple" xlink:href="../487/43487.xml">
probability density function</link> and <math>t</math> is the length of the period (which is assumed to start from time zero).
</indent>

Reliability engineering is concerned with four key elements of this definition:</p>
<p>

<list>
<entry level="2" type="bullet">

First, reliability is a probability. This means that failure is regarded as a <link xlink:type="simple" xlink:href="../523/19196523.xml">
random</link> phenomenon: it is a recurring event, and we do not express any information on individual failures, the causes of failures, or relationships between failures, except that the likelihood for failures to occur varies over time according to the given probability function.  Reliability engineering is concerned with meeting the specified probability of success, at a specified statistical <link xlink:type="simple" xlink:href="../911/280911.xml">
confidence level</link>.</entry>
<entry level="2" type="bullet">

Second, reliability is predicated on "intended function:" Generally, this is taken to mean operation without <link xlink:type="simple" xlink:href="../769/19005769.xml">
failure</link>. However, even if no individual part of the system fails, but the system as a whole does not do what was intended, then it is still charged against the system reliability. The system requirements specification is the criterion against which reliability is measured. </entry>
<entry level="2" type="bullet">

Third, reliability applies to a specified period of time. In practical terms, this means that a system has a specified chance that it will operate without failure before time <math>t \!</math>. Reliability engineering ensures that components and materials will meet the requirements during the specified time.  Units other than time may sometimes be used. The automotive industry might specify reliability in terms of miles, the military might specify reliability of a gun for a certain number of rounds fired.  A piece of mechanical equipment may have a reliability rating value in terms of cycles of use.</entry>
<entry level="2" type="bullet">

Fourth, reliability is restricted to operation under stated conditions. This constraint is necessary because it is impossible to design a system for unlimited conditions. A <link xlink:type="simple" xlink:href="../366/421366.xml">
Mars Rover</link> will have different specified conditions than the family car. The operating environment must be addressed during design and testing.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Reliability program plan </st>
<p>

Many tasks, methods, and tools can be used to achieve reliability. Every system requires a different level of reliability. A commercial <link xlink:type="simple" xlink:href="../215/51215.xml">
airliner</link> must operate under a wide range of conditions. The consequences of failure are grave, but there is a correspondingly higher budget. A pencil sharpener may be more reliable than an airliner, but has a much different set of operational conditions, insignificant consequences of failure, and a much lower budget.</p>
<p>

A reliability program plan is used to document exactly what tasks, methods, tools, analyses, and tests are required for a particular system. For complex systems, the reliability program plan is a separate <link xlink:type="simple" xlink:href="../228/161228.xml">
document</link>. For simple systems, it may be combined with the <link xlink:type="simple" xlink:href="../764/27764.xml">
systems engineering</link> management plan. The reliability program plan is essential for a successful reliability program and is developed early during system development. It specifies not only what the reliability engineer does, but also the tasks performed by others. The reliability program plan is approved by top program management.</p>

</sec>
<sec>
<st>
 Reliability requirements </st>
<p>

For any system, one of the first tasks of reliability engineering is to adequately specify the reliability requirements. Reliability requirements address the system itself, test and assessment requirements, and associated tasks and documentation. Reliability requirements are included in the appropriate system/subsystem requirements specifications, test plans, and contract statements.</p>

<ss1>
<st>
 System reliability parameters </st>
<p>

Requirements are specified using reliability <link xlink:type="simple" xlink:href="../065/25065.xml">
parameter</link>s. The most common reliability parameter is the <link xlink:type="simple" xlink:href="../960/1336960.xml">
mean-time-between-failure</link> (MTBF), which can also be specified as the <link xlink:type="simple" xlink:href="../960/1336960.xml">
failure rate</link> or the number of failures during a given period. These parameters are very useful for systems that are operated on a regular basis, such as most <link xlink:type="simple" xlink:href="../410/32410.xml">
vehicle</link>s, machinery, and <link xlink:type="simple" xlink:href="../663/9663.xml">
electronic</link> equipment. Reliability increases as the MTBF increases. The MTBF is usually specified in hours, but can also be used with other units of measurement such as miles or cycles.</p>
<p>

In other cases, reliability is specified as the probability of mission success. For example, reliability of a scheduled aircraft flight can be specified as a dimensionless probability or a percentage. </p>
<p>

A special case of mission success is the single-shot device or system. These are devices or systems that remain relatively dormant and only operate once. Examples include automobile <link xlink:type="simple" xlink:href="../023/60023.xml">
airbags</link>, thermal <link xlink:type="simple" xlink:href="../720/19174720.xml">
batteries</link> and <link xlink:type="simple" xlink:href="../594/19594.xml">
missiles</link>. Single-shot reliability is specified as a probability of success, or is subsumed into a related parameter. Single-shot missile reliability may be incorporated into a requirement for the probability of hit.</p>
<p>

For such systems, <link xlink:type="simple" xlink:href="../577/2952577.xml">
the probability of failure on demand (PFD)</link> is the reliability <link xlink:type="simple" xlink:href="../868/19868.xml">
measure</link>. This PFD is derived from failure rate and mission time for non-repairable systems. For repairable systems, it is obtained from failure rate and MTTR and test interval. This measure may not be unique for a given system as this measure depends on the kind of demand. 
In addition to system level requirements, reliability requirements may be specified for critical subsystems. In all cases, reliability parameters are specified with appropriate statistical <link xlink:type="simple" xlink:href="../911/280911.xml">
confidence interval</link>s.</p>

</ss1>
<ss1>
<st>
Reliability modelling</st>
<p>

Reliability modelling is the process of predicting or understanding the <link xlink:type="simple" xlink:href="../651/41651.xml">
reliability</link> of a component or system. Two separate fields of investigation are common: 
The <link>
physics of failure</link> approach uses an understanding of the failure mechanisms involved, such as <link xlink:type="simple" xlink:href="../211/843211.xml">
crack propagation</link> or chemical <link xlink:type="simple" xlink:href="../443/155443.xml">
corrosion</link>; 
The <link xlink:type="simple" xlink:href="../552/1161552.xml">
parts stress modelling</link> approach is an empirical method for prediction based on counting the number and type of components of the system, and the stress they undergo during operation.</p>
<p>

For systems with a clearly defined failure time (which is sometimes not given for systems with a drifting parameter), the <link xlink:type="simple" xlink:href="../455/2690455.xml">
empirical distribution function</link> of these failure times can be determined. This is done in general in an accelerated experiment with increased stress. These experiments can be divided into two main categories: </p>
<p>

Early failure rate studies determine the distribution with a decreasing failure rate over the first part of the <link xlink:type="simple" xlink:href="../580/1124580.xml">
bathtub curve</link>. Here in general only moderate stress is necessary. The stress is applied for a limited period of time in what is called a censored test. Therefore, only the part of the distribution with early failures can be determined.</p>
<p>

In so-called zero defect experiments, only limited information about the failure distribution is acquired. Here the stress, stress time, or the sample size is so low that not a single failure occurs. Due to the insufficient sample size, only an upper limit of the early failure rate can be determined. At any rate, it looks good for the customer if there are no failures. </p>
<p>

In a study of the intrinsic failure distribution, which is often a material property, higher stresses are necessary to get failure in a reasonable period of time. Several degrees of stress have to be applied to determine an acceleration model. The empirical failure distribution is often parametrised with a <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../948/206948.xml">
Weibull</link></distribution>
</arrangement>
</structure>
 or a <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../476/102476.xml">
log-normal</link></distribution>
</arrangement>
</structure>
 model.</p>
<p>

It is a general <link xlink:type="simple" xlink:href="../605/446605.xml">
praxis</link> to model the early failure rate with an exponential distribution. This less complex model for the failure distribution has only one parameter: the constant failure rate. In such cases, the <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../424/113424.xml">
Chi-square distribution</link></distribution>
</arrangement>
</structure>
 can be used to find the <link xlink:type="simple" xlink:href="../821/2474821.xml">
goodness of fit</link> for the estimated failure rate. Compared to a model with a decreasing failure rate, this is quite pessimistic. Combined with a zero-defect experiment this becomes even more pessimistic. The effort is greatly reduced in this case: one does not have to determine a second model parameter (e.g. the shape parameter of a <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../948/206948.xml">
Weibull distribution</link></distribution>
</arrangement>
</structure>
, or its confidence interval (e.g by an MLE / <link xlink:type="simple" xlink:href="../806/140806.xml">
Maximum likelihood</link> approach) - and the sample size is much smaller.</p>

</ss1>
<ss1>
<st>
 Reliability test requirements </st>
<p>

Because reliability is a probability, even highly reliable systems have some chance of failure. However, testing reliability requirements is problematic for several reasons. A single test is insufficient to generate enough statistical data. Multiple tests or long-duration tests are usually very expensive. Some tests are simply impractical. Reliability engineering is used to design a realistic and affordable test program that provides enough evidence that the system meets its requirement. Statistical <link xlink:type="simple" xlink:href="../911/280911.xml">
confidence levels</link> are used to address some of these concerns. A certain parameter is expressed along with a corresponding confidence level: for example, an MTBF of 1000 hours at 90% confidence level. From this specification, the reliability engineer can design a test with explicit criteria for the number of hours and number of failures until the requirement is met or failed. </p>
<p>

The combination of reliability parameter value and confidence level greatly affects the development cost and the risk to both the customer and producer. Care is needed to select the best combination of requirements. Reliability testing may be performed at various levels, such as , <link xlink:type="simple" xlink:href="../675/8286675.xml">
subsystem</link>, and <link xlink:type="simple" xlink:href="../675/8286675.xml">
system</link>. Also, many factors must be addressed during testing, such as extreme temperature and humidity, shock, vibration, and heat. Reliability engineering determines an effective test strategy so that all parts are exercised in relevant environments. For systems that must last many years, reliability engineering may be used to design an accelerated life test.</p>

</ss1>
<ss1>
<st>
 Requirements for reliability tasks </st>
<p>

Reliability engineering must also address requirements for various reliability tasks and documentation during system development, test, production, and operation. These requirements are generally specified in the contract statement of work and depend on how much leeway the customer wishes to provide to the contractor. Reliability tasks include various analyses, planning, and failure reporting. Task selection depends on the criticality of the system as well as cost. A critical system may require a formal failure reporting and review process throughout development, whereas a non-critical system may rely on final test reports. The most common reliability program tasks are documented in reliability program standards, such as MIL-STD-785 and IEEE 1332.
Failure reporting analysis and corrective action system (FavoWeb) is a common approach for product/process reliability monitoring.[http://www.aldservice.com/en/reliability-products/fracas.html FRACAS Software)</p>

</ss1>
</sec>
<sec>
<st>
 Design for reliability </st>
<p>

Design For Reliability (DFR), is an emerging discipline that refers to the process of designing reliability into products.  This process encompasses several tools and practices and describes the order of their deployment that an organization needs to have in place in order to drive reliability into their products.  Typically, the first step in the DFR process is to set the system’s reliability requirements.  Reliability must be "designed in" to the system. During system <link xlink:type="simple" xlink:href="../560/8560.xml">
design</link>, the top-level reliability requirements are then allocated to subsystems by design engineers and reliability engineers working together.</p>
<p>

Reliability design begins with the development of a <link xlink:type="simple" xlink:href="../590/20590.xml">
model</link>. Reliability models use <b>block diagrams</b> and <b>fault trees</b> to provide a graphical means of evaluating the relationships between different parts of the system. These models incorporate predictions based on parts-count failure rates taken from historical data. While the predictions are often not accurate in an absolute sense, they are valuable to assess relative differences in design alternatives. </p>
<p>

<image location="left" width="300px" src="Fault_tree.png" type="thumb">
<caption>

A Fault Tree Diagram
</caption>
</image>
</p>
<p>

One of the most important design techniques is <b><link xlink:type="simple" xlink:href="../581/1953581.xml">
redundancy</link></b>. This means that if one part of the system fails, there is an alternate success path, such as a backup system. An automobile brake light might use two light bulbs. If one bulb fails, the brake light still operates using the other bulb. Redundancy significantly increases system reliability, and is often the only viable means of doing so. However, redundancy is difficult and expensive, and is therefore limited to critical parts of the system. Another design technique, <b>physics of failure</b>, relies on understanding the physical processes of stress, strength and failure at a very detailed level. Then the material or component can be re-designed to reduce the probability of failure. Another common design technique is <b>component <link xlink:type="simple" xlink:href="../452/1833452.xml">
derating</link></b>: Selecting components whose tolerance significantly exceeds the expected stress, as using a heavier gauge wire that exceeds the normal specification for the expected <link xlink:type="simple" xlink:href="../207/6207.xml">
electrical current</link>.</p>

<p>

Many tasks, techniques and analyses are specific to particular industries and applications. Commonly these include:</p>
<p>

<list>
<entry level="2" type="bullet">

 Built-in test (BIT)</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../631/981631.xml">
Failure mode and effects analysis</link> (FMEA)</entry>
<entry level="2" type="bullet">

 Reliability simulation modeling</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../833/258833.xml">
Thermal analysis</link></entry>
<entry level="2" type="bullet">

 Reliability Block Diagram analysis</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../526/70526.xml">
Fault tree analysis</link></entry>
<entry level="2" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../949/318949.xml">
Root cause analysis</link></method>
</know-how>
</entry>
<entry level="2" type="bullet">

 Sneak circuit analysis</entry>
<entry level="2" type="bullet">

 Accelerated Testing</entry>
<entry level="2" type="bullet">

 Reliability Growth analysis</entry>
<entry level="2" type="bullet">

 Weibull analysis</entry>
<entry level="2" type="bullet">

 Electromagnetic analysis</entry>
<entry level="2" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../372/10988372.xml">
Statistical interference</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</entry>
</list>
</p>
<p>

Results are presented during the system design reviews and logistics reviews. Reliability is just one requirement among many system requirements. Engineering trade studies are used to determine the <link xlink:type="simple" xlink:href="../033/52033.xml">
optimum</link> balance between reliability and other requirements and constraints.</p>

</sec>
<sec>
<st>
 Reliability testing </st>
<p>

<image location="right" width="300px" src="Reliability_sequential_test_plan.png" type="thumb">
<caption>

A Reliability Sequential Test Plan
</caption>
</image>

The purpose of reliability testing is to discover potential problems with the design as early as possible and, ultimately, provide confidence that the system meets its reliability requirements.</p>
<p>

Reliability testing may be performed at several levels. Complex systems may be tested at component, circuit board, unit, assembly, subsystem and system levels. (The test level nomenclature varies among applications.) For example, performing environmental stress screening tests at lower levels, such as piece parts or small assemblies, catches problems before they cause failures at higher levels. Testing proceeds during each level of integration through full-up system testing, developmental testing, and operational testing, thereby reducing program risk. System reliability is calculated at each test level. Reliability growth techniques and failure reporting, analysis and corrective active systems (FRACAS) are often employed to improve reliability as testing progresses. The drawbacks to such extensive testing are time and expense. <link>
Customers</link> may choose to accept more <link xlink:type="simple" xlink:href="../617/25617.xml">
risk</link> by eliminating some or all lower levels of testing. </p>
<p>

It is not always feasible to test all system requirements. Some systems are prohibitively expensive to test; some <link xlink:type="simple" xlink:href="../042/1227042.xml">
failure mode</link>s may take years to observe; some complex interactions result in a huge number of possible test cases; and some tests require the use of limited test ranges or other resources. In such cases, different approaches to testing can be used, such as accelerated life testing, <link xlink:type="simple" xlink:href="../541/9541.xml">
design of experiments</link>, and <link xlink:type="simple" xlink:href="../444/43444.xml">
simulation</link>s.</p>
<p>

The desired level of statistical confidence also plays an important role in reliability testing. Statistical confidence is increased by increasing either the test time or the number of items tested. Reliability test plans are designed to achieve the specified reliability at the specified <link xlink:type="simple" xlink:href="../911/280911.xml">
confidence level</link> with the minimum number of test units and test time. Different test plans result in different levels of risk to the producer and consumer. The desired reliability, statistical confidence, and risk levels for each side influence the ultimate test plan. Good test requirements ensure that the customer and developer agree in advance on how reliability requirements will be tested.</p>
<p>

A key aspect of reliability testing is to define "<link xlink:type="simple" xlink:href="../769/19005769.xml">
failure</link>". Although this may seem obvious, there are many situations where it is not clear whether a failure is really the fault of the system. Variations in test conditions, operator differences, <link xlink:type="simple" xlink:href="../978/33978.xml">
weather</link>, and unexpected situations create differences between the customer and the system developer. One strategy to address this issue is to use a <b>scoring conference</b> process. A scoring conference includes representatives from the customer, the developer, the test organization, the reliability organization, and sometimes independent observers. The scoring conference process is defined in the statement of work. Each test case is considered by the group and "scored" as a success or failure. This scoring is the official result used by the reliability engineer.</p>
<p>

As part of the requirements phase, the reliability engineer develops a test strategy with the customer. The test strategy makes trade-offs between the needs of the reliability organization, which wants as much data as possible, and constraints such as cost, schedule, and available resources. Test plans and procedures are developed for each reliability test, and results are documented in official reports.</p>

</sec>
<sec>
<st>
 Accelerated testing </st>
<p>

The purpose of accelerated life testing is to induce field failure in the laboratory at a much faster rate by providing a harsher, but nonetheless representative, environment. In such a test the product is expected to fail in the lab just as it would have failed in the field—but in much less time.
The main objective of an accelerated test is either of the following:
<list>
<entry level="2" type="bullet">

 To discover failure modes</entry>
<entry level="2" type="bullet">

 To predict the normal field life from the high stress lab life</entry>
</list>

<b>Accelerated testing</b> need planning and as following
<list>
<entry level="2" type="bullet">

 Define objective and scope of the test</entry>
<entry level="2" type="bullet">

 Collect required information about the product</entry>
<entry level="2" type="bullet">

 Identify the stress(es)</entry>
<entry level="2" type="bullet">

 Determine level of stress(es)</entry>
<entry level="2" type="bullet">

 Conduct the Accelerated test and analyse the accelerated data.</entry>
</list>
</p>
<p>

Common way to determine a life stress relationship are
<list>
<entry level="2" type="bullet">

 Arrhenius Model</entry>
<entry level="2" type="bullet">

 Eyring Model</entry>
<entry level="2" type="bullet">

 Inverse Power Law Model</entry>
<entry level="2" type="bullet">

 Temperature-Humidity Model</entry>
<entry level="2" type="bullet">

 Temperature Non-thermal Model</entry>
</list>
</p>

</sec>
<sec>
<st>
 Software reliability </st>
<p>

Software reliability is a special aspect of reliability engineering. System reliability, by definition, includes all parts of the system, including <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link>, <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link>, operators and procedures. Traditionally, reliability engineering focuses on critical hardware parts of the system. Since the widespread use of digital <link xlink:type="simple" xlink:href="../150/15150.xml">
integrated circuit</link> technology, software has become an increasingly critical part of most <link xlink:type="simple" xlink:href="../663/9663.xml">
electronics</link> and, hence, nearly all present day systems. There are significant differences, however, in how software and hardware behave. Most hardware unreliability is the result of a component or <link xlink:type="simple" xlink:href="../474/249474.xml">
material</link> failure that results in the system not performing its intended function. Repairing or replacing the hardware component restores the system to its original unfailed state. However, software does not fail in the same sense that hardware fails. Instead, software unreliability is the result of unanticipated results of software operations. Even relatively small software programs can have astronomically large <link xlink:type="simple" xlink:href="../308/5308.xml">
combinations</link> of inputs and states that are infeasible to exhaustively test. Restoring software to its original state only works until the same combination of inputs and states results in the same unintended result. Software reliability engineering must take this into account.</p>
<p>

Despite this difference in the source of failure between software and hardware — software doesn’t wear out — some in the software reliability engineering community believe statistical models used in hardware reliability are nevertheless useful as a measure of software reliability, describing what we experience with software: the longer you run software, the higher the probability you’ll eventually use it in an untested manner and find a latent defect that results in a failure (<link>
Shooman</link> 1987), (Musa 2005), (Denney 2005).</p>
<p>

As with hardware, software reliability depends on good requirements, design and implementation. Software reliability engineering relies heavily on a disciplined <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link> process to anticipate and design against <link xlink:type="simple" xlink:href="../517/97517.xml">
unintended consequence</link>s. There is more overlap between software <link xlink:type="simple" xlink:href="../224/305224.xml">
quality engineering</link> and software reliability engineering than between hardware quality and reliability. A good software development plan is a key aspect of the software reliability program. The software development plan describes the design and coding standards, <link xlink:type="simple" xlink:href="../855/4927855.xml">
peer reviews</link>, <link xlink:type="simple" xlink:href="../828/222828.xml">
unit test</link>s, <link xlink:type="simple" xlink:href="../948/40948.xml">
configuration management</link>, <link xlink:type="simple" xlink:href="../442/187442.xml">
software metrics</link> and software models to be used during software development.</p>
<p>

A common reliability metric is the number of software faults, usually expressed as faults per thousand lines of code. This metric, along with software execution time, is key to most software reliability models and estimates. The theory is that the software reliability increases as the number of faults (or fault density) goes down. Establishing a direct connection between fault density and mean-time-between-failure is difficult, however, because of the way software faults are distributed in the code, their severity, and the probability of the combination of inputs necessary to encounter the fault. Nevertheless, fault density serves as a useful indicator for the reliability engineer. Other software metrics, such as complexity, are also used.</p>
<p>

Testing is even more important for software than hardware. Even the best software development process results in some software faults that are nearly undetectable until tested. As with hardware, software is tested at several levels, starting with individual units, through integration and full-up system testing. Unlike hardware, it is inadvisable to skip levels of software testing. During all phases of testing, software faults are discovered, corrected, and re-tested. Reliability estimates are updated based on the fault density and other metrics. At system level, mean-time-between-failure data is collected and used to estimate reliability. Unlike hardware, performing the exact same test on the exact same software configuration does not provide increased statistical confidence. Instead, software reliability uses different metrics such as test coverage.</p>
<p>

Eventually, the software is integrated with the hardware in the top-level system, and software reliability is subsumed by system reliability. The Software Engineering Institute's <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/7492.xml">
Capability Maturity Model</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
 is a common means of assessing the overall software development process for reliability and quality purposes.</p>

</sec>
<sec>
<st>
 Reliability operational assessment </st>
<p>

After a system is produced, reliability engineering monitors, assesses, and corrects deficiencies. Monitoring includes electronic and visual surveillance of critical parameters identified during the fault tree analysis design stage. The data is constantly analyzed using statistical techniques, such as <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../948/206948.xml">
Weibull</link></distribution>
</arrangement>
</structure>
 analysis and <link xlink:type="simple" xlink:href="../903/17903.xml">
linear regression</link>, to ensure the system reliability meets requirements. Reliability data and estimates are also key inputs for system <link xlink:type="simple" xlink:href="../547/77547.xml">
logistics</link>. Data collection is highly dependent on the nature of the system. Most large organizations have <link xlink:type="simple" xlink:href="../613/41613.xml">
quality control</link> groups that collect failure data on vehicles, equipment, and machinery. Consumer product failures are often tracked by the number of returns. For systems in dormant storage or on standby, it is necessary to establish a formal surveillance program to inspect and test random samples. Any changes to the system, such as field upgrades or recall repairs, require additional reliability testing to ensure the reliability of the modification. Since it is not possible to anticipate all the failure modes of a given system, especially ones with a human element, failures will occur. The reliability program also includes a systematic <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../949/318949.xml">
root cause analysis</link></method>
</know-how>
 that identifies the causal relationships involved in the failure such that effective corrective actions may be implemented. When possible, system failures and corrective actions are reported to the reliability engineering organization.</p>

</sec>
<sec>
<st>
 Reliability organizations </st>
<p>

Systems of any significant complexity are developed by <link xlink:type="simple" xlink:href="../070/105070.xml">
organizations</link> of people, such as a commercial <link xlink:type="simple" xlink:href="../223/4918223.xml">
company</link> or a <link xlink:type="simple" xlink:href="../229/12229.xml">
government</link> agency. The reliability engineering organization must be consistent with the company's <link xlink:type="simple" xlink:href="../572/607572.xml">
organizational structure</link>. For small, non-critical systems, reliability engineering may be informal. As complexity grows, the need arises for a formal reliability function. Because reliability is important to the customer, the customer may even specify certain aspects of the reliability organization.</p>
<p>

There are several common types of reliability organizations. The <link xlink:type="simple" xlink:href="../050/239050.xml">
project manager</link> or chief <link xlink:type="simple" xlink:href="../223/38223.xml">
engineer</link> may employ one or more reliability engineers directly. In larger organizations, there is usually a product assurance or specialty engineering organization, which may include reliability, <link xlink:type="simple" xlink:href="../347/41347.xml">
maintainability</link>, <link xlink:type="simple" xlink:href="../455/12115455.xml">
quality</link>, <link xlink:type="simple" xlink:href="../712/252712.xml">
safety</link>, <link xlink:type="simple" xlink:href="../247/257247.xml">
human factors</link>, <link xlink:type="simple" xlink:href="../547/77547.xml">
logistics</link>, etc. In such case, the reliability engineer reports to the product assurance manager or specialty engineering manager.</p>
<p>

In some cases, a company may wish to establish an independent reliability organization. This is desirable to ensure that the system reliability, which is often expensive and time consuming, is not unduly slighted due to budget and schedule pressures. In such cases, the reliability engineer works for the project on a day-to-day basis, but is actually employed and paid by a separate organization within the company.</p>
<p>

Because reliability engineering is critical to early system design, it has become common for reliability engineers, however the organization is structured, to work as part of an integrated product team.</p>

</sec>
<sec>
<st>
Certification</st>
<p>

The <link xlink:type="simple" xlink:href="../965/899965.xml">
American Society for Quality</link> has a program to become a Certified Reliability Engineer, CRE. Certification is based on education, experience, and a certification test: periodic recertification is required.   The body of knowledge for the test includes: reliability management, design evaluation, product safety, statistical tools, design and development, modeling, reliability testing, collecting and using data, etc.</p>

</sec>
<sec>
<st>
 Reliability engineering education </st>
<p>

Some Universities offer graduate degrees in Reliability Engineering (e.g., see <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../315/239315.xml">
University of Maryland, College Park</link></university>
). Other reliability engineers typically have an engineering degree, which can be in any field of engineering, from an <link xlink:type="simple" xlink:href="../700/621700.xml">
accredited</link> <link xlink:type="simple" xlink:href="../260/19725260.xml">
university</link> or <link xlink:type="simple" xlink:href="../689/5689.xml">
college</link> program. Many engineering programs offer reliability courses, and some universities have entire reliability engineering programs. A reliability engineer may be registered as a <link xlink:type="simple" xlink:href="../251/291251.xml">
Professional Engineer</link> by the state, but this is not required by most employers. There are many professional conferences and industry training programs available for reliability engineers. Several professional organizations exist for reliability engineers, including the IEEE Reliability Society, the <weblink xlink:type="simple" xlink:href="http://www.asq.org">
American Society for Quality (ASQ)</weblink>, and the <weblink xlink:type="simple" xlink:href="http://www.sre.org">
Society of Reliability Engineers (SRE)</weblink>.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
 Definition by <link xlink:type="simple" xlink:href="../938/56938.xml">
IEEE</link></entry>
</reflist>
</p>

<ss1>
<st>
 <b>Texts</b> </st>

<p>

<list>
<entry level="1" type="bullet">

 Blanchard, Benjamin S. (1992), <it>Logistics Engineering and Management</it> (Fourth Ed.), Prentice-Hall, Inc., Englewood Cliffs, New Jersey.</entry>
<entry level="1" type="bullet">

 Ebeling, Charles E., (1997), <it>An Introduction to Reliability and Maintainability Engineering</it>, McGraw-Hill Companies, Inc., Boston.</entry>
<entry level="1" type="bullet">

 Denney, Richard (2005) Succeeding with Use Cases: Working Smart to Deliver Quality. Addison-Wesley Professional Publishing. ISBN . Discusses the use of software reliability engineering in <link xlink:type="simple" xlink:href="../006/300006.xml">
use case</link> driven software development.</entry>
<entry level="1" type="bullet">

 Gano, Dean L. (2007), "Apollo Root Cause Analysis" (Third Edition), Apollonian Publications, LLC., Richland, Washington</entry>
<entry level="1" type="bullet">

 Kapur, K.C., and Lamberson, L.R., (1977), <it>Reliability in Engineering Design</it>, John Wiley &amp; Sons, New York.</entry>
<entry level="1" type="bullet">

 Kececioglu, Dimitri, (1991) "Reliability Engineering Handbook", Prentice-Hall, Englewood Cliffs, New Jersey</entry>
<entry level="1" type="bullet">

 Leemis, Lawrence, (1995) <it>Reliability: Probabilistic Models and Statistical Methods</it>, 1995, Prentice-Hall. ISBN 0-13-720517-1</entry>
<entry level="1" type="bullet">

 MacDiarmid, Preston; Morris, Seymour; et al., (1995), <it>Reliability Toolkit: Commercial Practices Edition</it>, Reliability Analysis Center and Rome Laboratory, Rome, New York.</entry>
<entry level="1" type="bullet">

 Modarres, Mohammad; Kaminskiy, Mark; Krivtsov, Vasiliy (1999), "Reliability Engineering and Risk Analysis: A Practical Guide, CRC Press, ISBN 0-8247-2000-8.</entry>
<entry level="1" type="bullet">

 Musa, John (2005) Software Reliability Engineering: More Reliable Software Faster and Cheaper, 2nd. Edition, AuthorHouse. ISBN </entry>
<entry level="1" type="bullet">

 Neubeck, Ken (2004) "Practical Reliability Analysis", Prentice Hall, New Jersey</entry>
<entry level="1" type="bullet">

 Neufelder, Ann Marie, (1993), <it>Ensuring Software Reliability</it>, Marcel Dekker, Inc., New York.</entry>
<entry level="1" type="bullet">

 O'Connor, Patrick D. T. (2002), <it>Practical Reliability Engineering</it> (Fourth Ed.), John Wiley &amp; Sons, New York.</entry>
<entry level="1" type="bullet">

 Shooman, Martin, (1987), <it>Software Engineering: Design, Reliability, and Management</it>, McGraw-Hill, New York.</entry>
<entry level="1" type="bullet">

 Tobias, Trindade, (1995), <it>Applied Reliability</it>, Chapman &amp; Hall/CRC, ISBN 0-442-00469-9</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.springer.com/series/6917">
Springer Series in Reliability Engineering</weblink></entry>
<entry level="1" type="bullet">

 Nelson, Wayne B., (2004), <it>Accelerated Testing - Statistical Models, Test Plans, and Data Analysis</it>, John Wiley &amp; Sons, New York, ISBN 0-471-69736-2</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 <b>US standards</b> </st>

<p>

<list>
<entry level="1" type="bullet">

 MIL-STD-785, <it>Reliability Program for Systems and Equipment Development and Production</it>, U.S. Department of Defense.</entry>
<entry level="1" type="bullet">

 MIL-HDBK-217, <it>Reliability Prediction of Electronic Equipment</it>, U.S. Department of Defense.</entry>
<entry level="1" type="bullet">

 MIL-STD-2173, <it>Reliability Centered Maintenance Requirements</it>, U.S. Department of Defense.</entry>
<entry level="1" type="bullet">

 MIL-HDBK-338B, <it>Electronic Reliability Design Handbook</it>, U.S. Department of Defense.</entry>
<entry level="1" type="bullet">

 MIL-STD-1629A,  <it>PROCEDURES FOR PERFORMING A FAILURE MODE, EFFECTS AND CRlTlCALlTY ANALYSIS''</it></entry>
<entry level="1" type="bullet">

 MIL-HDBK-781A,  <it>Reliability Test Methods, Plans, and Environments for Engineering Development, Qualification, and Production</it>, U.S. Department of Defense.</entry>
<entry level="1" type="bullet">

 IEEE 1332, <it>IEEE Standard Reliability Program for the Development and Production of Electronic Systems and Equipment</it>, Institute of Electrical and Electronics Engineers.</entry>
<entry level="1" type="bullet">

 <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<glossary wordnetid="106420781" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<wordbook wordnetid="106418693" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../310/37310.xml">
Federal Standard 1037C</link></publication>
</reference_book>
</book>
</wordbook>
</artifact>
</glossary>
</creation>
</product>
</work>
 in support of <link xlink:type="simple" xlink:href="../882/41882.xml">
MIL-STD-188</link></entry>
</list>
</p>

</ss1>
<ss1>
<st>
<b>UK standards</b> </st>

<p>

In the UK, there are more up to date standards maintained under the sponsorship of UK MOD as Defence Standards.</p>
<p>

The relevant Standards include:</p>
<p>

DEF STAN 00-40   Reliability and Maintainability (R&amp;M) 
<list>
<entry level="1" type="bullet">

PART 1: Issue 5: Management Responsibilities and Requirements for Programmes and Plans</entry>
<entry level="1" type="bullet">

PART 4: (ARMP-4)Issue 2: Guidance for Writing NATO R&amp;M Requirements Documents</entry>
<entry level="1" type="bullet">

PART 6: Issue 1: IN-SERVICE R &amp; M</entry>
<entry level="1" type="bullet">

PART 7 (ARMP-7) Issue 1: NATO R&amp;M Terminology Applicable to ARMP’s</entry>
</list>

DEF STAN 00-41 : Issue 3: RELIABILITY AND MAINTAINABILITY MOD GUIDE TO PRACTICES AND PROCEDURES</p>
<p>

DEF STAN 00-42  RELIABILITY AND MAINTAINABILITY ASSURANCE GUIDES
<list>
<entry level="1" type="bullet">

PART 1: Issue 1: ONE-SHOT DEVICES/SYSTEMS</entry>
<entry level="1" type="bullet">

PART 2: Issue 1: SOFTWARE</entry>
<entry level="1" type="bullet">

PART 3: Issue 2: R&amp;M CASE</entry>
<entry level="1" type="bullet">

PART 4: Issue 1: Testability</entry>
<entry level="1" type="bullet">

PART 5: Issue 1: IN-SERVICE RELIABILITY DEMONSTRATIONS</entry>
</list>

DEF STAN 00-43 RELIABILITY AND MAINTAINABILITY ASSURANCE ACTIVITY
<list>
<entry level="1" type="bullet">

PART 2: Issue 1: IN-SERVICE MAINTAINABILITY DEMONSTRATIONS</entry>
</list>

DEF STAN 00-44  RELIABILITY AND MAINTAINABILITY DATA COLLECTION AND CLASSIFICATION
<list>
<entry level="1" type="bullet">

PART 1: Issue 2: MAINTENANCE DATA &amp; DEFECT REPORTING IN THE ROYAL NAVY, THE ARMY AND THE ROYAL AIR FORCE</entry>
<entry level="1" type="bullet">

PART 2: Issue 1: DATA CLASSIFICATION AND INCIDENT SENTENCING - GENERAL</entry>
<entry level="1" type="bullet">

PART 3: Issue 1: INCIDENT SENTENCING - SEA</entry>
<entry level="1" type="bullet">

PART 4: Issue 1: INCIDENT SENTENCING - LAND</entry>
</list>

DEF STAN 00-45 Issue 1: RELIABILITY CENTERED MAINTENANCE</p>
<p>

DEF STAN 00-49 Issue 1: RELIABILITY AND MAINTAINABILITY MOD GUIDE TO TERMINOLOGY DEFINITIONS</p>
<p>

These can be obtained from <weblink xlink:type="simple" xlink:href="http://www.dstan.mod.uk">
DSTAN</weblink></p>
<p>

There are also many commercial standards, produced by many organistions including the SAE, MSG, ARP, and IEE.</p>

</ss1>
</sec>
<sec>
<st>
 See also </st>

<p>

<table style="background:#f9f9f9; font-size:85%; line-height:110%; ">
<row>
<col>
 <image width="32x28px" src="Portal.svg">
</image>
</col>
<col style="padding:0 0.2em;">
 <b><it>
Engineering&#32;portal</it></b></col>
</row>
</table>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../571/49571.xml">
Bayesian inference</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../745/1306745.xml">
Burn in</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../982/6493982.xml">
Failing badly</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../960/1336960.xml">
Failure rate</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../415/1724415.xml">
Human reliability</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../002/19334002.xml">
Highly accelerated stress test</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../376/14679376.xml">
Highly Accelerated Life Test</link></entry>
<entry level="1" type="bullet">

 <knowledge_domain wordnetid="105999266" confidence="0.8">
<discipline wordnetid="105996646" confidence="0.8">
<link xlink:type="simple" xlink:href="../164/186164.xml">
Logistic engineering</link></discipline>
</knowledge_domain>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../610/6615610.xml">
Performance engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../251/291251.xml">
Professional engineer</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../783/3692783.xml">
Product qualification</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../224/305224.xml">
Quality engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../651/41651.xml">
Reliability</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../836/1724836.xml">
Reliable system design</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../836/1724836.xml">
Reliability modelling</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../909/442909.xml">
Reliability theory</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../321/4152321.xml">
Reliability theory of aging and longevity</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../595/1953595.xml">
Redundancy (total quality management)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../730/28730.xml">
Security engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../010/27010.xml">
Software engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../764/27764.xml">
Systems engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../278/29278.xml">
Safety engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../685/26685.xml">
Statistics</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.asq.org/">
American Society for Quality</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sei.cmu.edu/">
Carnegie Mellon Software Engineering Institute</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ieee.org/portal/index.jsp?pageID=relsoc_home">
IEEE Reliability Society</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://satc.gsfc.nasa.gov/support/OSMASAS_SEP01/Application_and_Improvement_of_SW_Reliability_Models.html">
NASA Hardware and Software Reliability report</weblink></entry>
<entry level="1" type="bullet">

 NIST/SEMATECH, "Engineering Statistics Handbook", <weblink xlink:type="simple" xlink:href="http://www.itl.nist.gov/div898/handbook/index.htm">
http://www.itl.nist.gov/div898/handbook/index.htm</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://quanterion.com/RIAC/Index.asp">
Reliability Information Analysis Center</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sars.org.uk/">
Safety and Reliability Society</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sre.org/">
Society of Reliability Engineers</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.enre.umd.edu/">
University of Maryland Reliability Engineering Program</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.uncertainty-in-engineering.net/">
Models and methods regarding reliability analysis</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.dstan.mod.uk/">
UK Defence Standardization Organisation's Home on the Web</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.crr.umd.edu/">
Center for Risk and Reliability at University of Maryland, College Park</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.weibull.com/">
On-line Reliability Engineering Resources for the Reliability Professional</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.reliabilityeducation.com/">
Reliability Basics (various analysis overviews)</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.pixelbeat.org/docs/reliability_calculator/">
Online Reliability calculator</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://src.alionscience.com/src/toolbox.do">
Reliability Engineer's Toolbox</weblink> - Automated tools and electronic information for reliability engineering activities.</entry>
</list>
</p>


</sec>
</bdy>
</article>
