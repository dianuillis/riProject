<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:25:56[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<standard  confidence="0.8" wordnetid="107260623">
<system_of_measurement  confidence="0.8" wordnetid="113577171">
<header>
<title>Differentiated services</title>
<id>173512</id>
<revision>
<id>235069132</id>
<timestamp>2008-08-29T21:38:09Z</timestamp>
<contributor>
<username>Kvng</username>
<id>910180</id>
</contributor>
</revision>
<categories>
<category>Internet standards</category>
<category>Internet architecture</category>
</categories>
</header>
<bdy>

<it>This article is on differentiated services within communication networks. For a related concept used as a design pattern for business applications (including smart services and context-aware services) see <link xlink:type="simple" xlink:href="../065/7514065.xml">
Differentiated service (design pattern)</link>.</it><p>

<b>Differentiated Services</b> or <b>DiffServ</b> is a <link xlink:type="simple" xlink:href="../652/5652.xml">
computer networking</link> architecture that specifies a simple, scalable and coarse-grained mechanism for classifying, managing network traffic and providing <link xlink:type="simple" xlink:href="../315/25315.xml">
Quality of Service</link> (<b>QoS</b>) guarantees on modern <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/15323.xml">
IP</link></rule>
</direction>
</protocol>
</message>
 networks. DiffServ can, for example, be used to provide <link xlink:type="simple" xlink:href="../503/909503.xml">
low-latency</link>, guaranteed service (<b>GS</b>) to critical network traffic such as <link xlink:type="simple" xlink:href="../028/75028.xml">
voice</link> or <link xlink:type="simple" xlink:href="../441/32441.xml">
video</link> while providing simple <link xlink:type="simple" xlink:href="../141/2311141.xml">
best-effort</link> traffic guarantees to non-critical services such as <link xlink:type="simple" xlink:href="../483/93483.xml">
web traffic</link> or <link xlink:type="simple" xlink:href="../709/7018709.xml">
file transfer</link>s.</p>

<sec>
<st>
Background</st>
<p>

Since modern data networks carry many different types of services, including voice, video, streaming music, web pages and <link xlink:type="simple" xlink:href="../738/9738.xml">
email</link>, many of the proposed QoS mechanisms that allowed these services to co-exist were both complex and failed to scale to meet the demands of the public Internet. In 1998, the <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> published RFC 2475 (An Architecture for Differentiated Services). Today, DiffServ has largely supplanted other Layer 3 QoS mechanisms (such as <link>
IntServ</link>) as the primary protocol routers use to provide different levels of service.</p>

</sec>
<sec>
<st>
Traffic Management Mechanisms</st>
<p>

DiffServ is a <it>coarse-grained</it>, <b>class-based</b> mechanism for traffic management. In contrast, <link>
IntServ</link> is a <it>fine-grained</it>, <b>flow-based</b> mechanism.</p>
<p>

DiffServ operates on the principle of <it>traffic classification</it>, where each data packet is placed into a limited number of traffic classes, rather than differentiating network traffic based on the requirements of an individual flow. Each <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link> on the network is configured to differentiate traffic based on its class. Each traffic class can be managed differently, ensuring preferential treatment for higher-priority traffic on the network. </p>
<p>

The DiffServ model does not make judgement on what types of traffic should be given priority treatment since that is left up to the network operator. DiffServ simply provides a framework to allow classification and differentiated treatment. DiffServ does recommend a standardized set of traffic classes (discussed below) to make interoperability between different networks and different vendors' equipment simpler.</p>
<p>

DiffServ relies on a mechanism to <it>classify</it> and <it>mark</it> packets as belonging to a specific class.  DiffServ-aware routers implement <it>Per-Hop Behaviors</it> (PHBs), which define the packet forwarding properties associated with a class of traffic.  Different PHBs may be defined to offer, for example, low-loss, low-latency forwarding properties or best-effort forwarding properties.  All the traffic flowing through a router that belongs to the same class is referred to as a <it>Behavior Aggregate</it> (BA).</p>

</sec>
<sec>
<st>
DiffServ Domain</st>
<p>

A group of routers that implement common, administratively defined DiffServ policies are referred to as a <it>DiffServ Domain</it>.</p>

</sec>
<sec>
<st>
Classification and Marking</st>

<p>

Network traffic entering a DiffServ domain is subjected to classification and conditioning.  Traffic may be classified by many different parameters, such as source address, destination address or traffic type and assigned to a specific traffic class.  Traffic classifiers may honor any DiffServ markings in received packets or may elect to ignore or override those markings.  Because network operators want tight control over volumes and type of traffic in a given class, it is very rare that the network honors markings at the ingress to the DiffServ domain. Traffic in each class may be further conditioned by subjecting the traffic to rate limiters, traffic policers or shapers.</p>

</sec>
<sec>
<st>
Per-Hop Behavior</st>
<p>

The Per-Hop Behavior (PHB) is indicated by encoding a 6-bit value—called the Differentiated Services Code Point (<link xlink:type="simple" xlink:href="../221/3396221.xml">
DSCP</link>)—into the 8-bit Differentiated Services (DS) field of the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../317/15317.xml#xpointer(//*[./st=%22Packet+structure%22])">
IP packet header</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
. The DS field is the same as the <link xlink:type="simple" xlink:href="../521/1984521.xml">
TOS</link> field, and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../470/309470.xml">
ECN</link></rule>
</direction>
</protocol>
</message>
 occupies the upper 2 bits.</p>
<p>

In theory, a network could have up to 64 (i.e. <math>2^6</math>) different traffic classes using different markings in the DSCP. The DiffServ RFCs recommend, but do not require, certain encodings. This gives a network operator great flexibility in defining traffic classes. In practice, however, most networks use the following commonly-defined Per-Hop Behaviors: 
<list>
<entry level="1" type="bullet">

Default PHB—which is typically best-effort traffic</entry>
<entry level="1" type="bullet">

<it>Expedited Forwarding</it> (EF) PHB—for low-loss, low-latency traffic</entry>
<entry level="1" type="bullet">

<it>Assured Forwarding</it> (AF)—behavior group</entry>
<entry level="1" type="bullet">

<it>Class Selector</it> PHBs—which are defined to maintain backward compatibility with the IP Precedence field.</entry>
</list>
</p>

<ss1>
<st>
Default PHB</st>

<p>

A default PHB is the only required behavior.  Essentially, any traffic that does not meet the requirements of any of the other defined classes is placed in the default PHB.  Typically, the default PHB has best-effort forwarding characteristics.  The recommended DSCP for the default PHB is '000000'.</p>

</ss1>
<ss1>
<st>
Expedited Forwarding (EF) PHB</st>

<p>

The IETF defines Expedited Forwarding in RFC 3246. The EF PHB has the characteristics of low delay, low loss and low jitter.  These characteristics are suitable for voice, video and other realtime services.  EF traffic is often given <link xlink:type="simple" xlink:href="../485/24485.xml">
strict priority queuing</link> above all other traffic classes.  Because an overload of EF traffic will cause queuing delays and affect the jitter and delay tolerances within the class, EF traffic is often strictly controlled through admission control, policing and other mechanisms.  Typical networks will limit EF traffic to no more than 30%—and often much less—of the capacity of a link.</p>

</ss1>
<ss1>
<st>
Assured Forwarding (AF) PHB Behavior Group</st>

<p>

The IETF defines the Assured Forwarding behavior group in RFC 2597.  Assured forwarding allows the operator to provide assurance of delivery as long as the traffic does not exceed some subscribed rate.  Traffic that exceeds the subscription rate faces a higher probability of being dropped if congestion occurs.</p>
<p>

The AF behavior group defines four separate AF classes.  Within each class, packets are given a drop precedence (high, medium or low). The combination of classes and drop precedence yields twelve separate DSCP encodings from AF11 through AF43 (see table) </p>
<p>

<table style="margin-left:auto; margin-right:auto" class="wikitable">
<caption>
Assured Forwarding (AF) Behavior Group</caption>

<header>
Class 1</header>
<header>
Class 2</header>
<header>
Class 3</header>
<header>
Class 4</header>
<row>
<header>
Low Drop</header>
<col>
AF11</col>
<col>
AF21</col>
<col>
AF31</col>
<col>
AF41</col>
</row>
<row>
<header>
Med Drop</header>
<col>
AF12</col>
<col>
AF22</col>
<col>
AF32</col>
<col>
AF42</col>
</row>
<row>
<header>
High Drop</header>
<col>
AF13</col>
<col>
AF23</col>
<col>
AF33</col>
<col>
AF43</col>
</row>
</table>
</p>
<p>

Some measure of priority and proportional fairness is defined between traffic in different classes.  Should congestion occur <it>between</it> classes, the traffic in the higher class is given priority.  Rather than using strict priority queueing, more balanced queue servicing algorithms such as <link xlink:type="simple" xlink:href="../648/4024648.xml">
fair queueing</link> or <link xlink:type="simple" xlink:href="../579/7460579.xml">
weighted fair queuing</link> are likely to be used. If congestion occurs <it>within</it> a class, the packets with the higher drop precedence are discarded first.  To prevent issues associated with <link xlink:type="simple" xlink:href="../278/9070278.xml">
tail drop</link>, the <link xlink:type="simple" xlink:href="../827/1112827.xml">
random early detection</link> (RED) or <link xlink:type="simple" xlink:href="../114/3396114.xml">
weighted random early detection</link> (WRED) algorithms are often used to drop packets.</p>
<p>

Usually, traffic policing is required to encode drop precedence.  Typically, all traffic assigned to a class is initially given a low drop precedence.  As the traffic rate exceeds subscription thresholds, the policer will increase the drop precedence of packets that exceed the threshold.</p>

</ss1>
<ss1>
<st>
Class Selector PHB</st>

<p>

Prior to DiffServ, IP networks could use the <it>Precedence</it> field in the <link xlink:type="simple" xlink:href="../521/1984521.xml">
Type of Service</link> (TOS) byte of the IP header to mark priority traffic.  The TOS byte and IP precedence was not widely used.  The IETF agreed to reuse the TOS byte as the DS field for DiffServ networks.  In order to maintain backward compatibility with network devices that still use the Precedence field, DiffServ defines the Class Selector PHB.</p>
<p>

The Class Selector codepoints are of the form 'xxx000'.  The first three bits are the IP precedence bits. Each IP precedence value can be mapped into a DiffServ class.  If a packet is received from a non-DiffServ aware router that used IP precedence markings, the DiffServ router can still understand the encoding as a Class Selector codepoint.</p>

</ss1>
</sec>
<sec>
<st>
Advantages of DiffServ</st>

<p>

One advantage of DiffServ is that all the policing and classifying is done at the boundaries between DiffServ clouds. This means that in the core of the Internet, routers can get on with doing the job of routing, and not care about the complexities of collecting payment or enforcing agreements.That is, DiffServ requires no advance setup, no reservation, and no time-consuming end-to-end negotiation for each flow, as with integrated services. This leads DS relatively easy to implement.</p>

</sec>
<sec>
<st>
Disadvantages of DiffServ</st>

<ss1>
<st>
End-to-end and peering problems</st>

<p>

One disadvantage is that the details of how individual routers deal with the type of service field is somewhat arbitrary, and it is difficult to predict end-to-end behaviour.  This is complicated further if a packet crosses two or more DiffServ clouds before reaching its destination.</p>
<p>

From a commercial viewpoint, this is a major flaw, as it means that it is impossible to sell different classes of end-to-end connectivity to end users, as one provider's Gold packet may be another's Bronze. Internet operators could fix this, by enforcing standardised policies across networks, but are not keen on adding new levels of complexity to their already complex <link xlink:type="simple" xlink:href="../012/47012.xml">
peering agreement</link>s. One of the reasons for this is set out below.</p>
<p>

Diffserv operation only works if the boundary hosts honour the policy agreed upon. However, this assumption is naive as human beings rarely agree. A host can always tag its own traffic with a higher precedence, even though the traffic doesn't qualify to be handled with that importance. This in fact has already been exploited: Microsoft Windows 2000 always tags its traffic with IP precedence 5, making the traffic classing useless. On the other hand, the network is usually quite within its rights to traffic shape and otherwise ration the amount of network traffic ingress with any particular precedence, and so where this is enforced, overall network traffic flow provided to a host would be reduced by such a tactic.</p>

</ss1>
<ss1>
<st>
DiffServ vs. more capacity</st>

<p>

The greatest disadvantage of DiffServ is that at the very highest level, some regard it as a technical solution for a technical problem which does not exist if the capacity of Internet links is properly engineered.</p>
<p>

Since DiffServ is simply a mechanism for deciding which packets to delay or drop at the expense of others in a situation where there is not enough network capacity, consider that when DiffServ is working by dropping packets selectively, traffic on the link in question must already be very close to saturation.  Any further increase in traffic will result in Bronze services being taken out altogether. Since Internet traffic is highly bursty, this is almost certain to happen on a regular basis if traffic on a link is near the limit at which DiffServ becomes needed. (However, the network can be provisioned to provide a minimum Bronze bandwidth, by limiting the maximum amount of higher priority traffic.)</p>
<p>

For this reason, many people think that DiffServ will always be inferior to adding sufficient network capacity to avoid packet loss on all classes of traffic.</p>
<p>

<link xlink:type="simple" xlink:href="../210/184210.xml">
As of 2003</link>, there is a glut of fibre capacity in most parts of the telecoms market, with it being far easier and cheaper to add more capacity than to employ elaborate DiffServ policies as a way of increasing customer satisfaction. In fact, this is what is generally done in the core of the Internet, which is generally fast and dumb with "<link xlink:type="simple" xlink:href="../483/402483.xml">
fat pipes</link>" connecting its routers.</p>
<p>

However with wireless links, such as <link xlink:type="simple" xlink:href="../984/949984.xml">
EV-DO</link>, where the air-interface bandwidth is several orders of magnitude less than the backhaul, QoS is being used to efficiently deliver <link xlink:type="simple" xlink:href="../028/75028.xml">
VoIP</link> packets where not otherwise achievable.</p>

</ss1>
<ss1>
<st>
Effects of dropped packets</st>

<p>

Dropping packets wastes the resources that have already been expended in carrying these packets so far through the network. In many cases, this traffic will be re-transmitted, causing further bandwidth consumption at the congestion point and elsewhere in the network. To minimize this waste, packets must be discarded as close to the edge of the network as possible, while Diffserv is often implemented throughout a network (edge and core).</p>
<p>

Thus, dropping packets amounts to betting that congestion will have resolved by the time the packets are re-sent, or that (if the dropped packets are TCP datagrams) TCP will throttle back transmission rates at the sources to reduce congestion in the network. The TCP congestion avoidance algorithms are subject to a phenomenon called <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../054/2072054.xml">
TCP global synchronization</link></system_of_measurement>
</standard>
 unless special approaches (such as <link xlink:type="simple" xlink:href="../827/1112827.xml">
Random early detection</link>) are taken when dropping TCP packets. In Global Synchronization, all TCP streams tend to build up their transmission rates together, reach the peak throughput of the network, and all crash together to a lower rate as packets are dropped, only to repeat the process.</p>
<p>

Delays caused by re-scheduling packets due to Diffserv can cause packets to drop by the IPsec anti-replay mechanism.</p>

</ss1>
<ss1>
<st>
DiffServ as rationing</st>

<p>

Hence, DiffServ is for most ISPs mainly a way of <link xlink:type="simple" xlink:href="../130/250130.xml">
ration</link>ing customer network utilisation to allow greater <link xlink:type="simple" xlink:href="../313/861313.xml">
overbooking</link> of their capacity. A good example of this is the use of DiffServ tools to suppress or control <link xlink:type="simple" xlink:href="../107/24107.xml">
peer-to-peer</link> traffic, because of its ability to saturate customer links indefinitely, disrupting the ISP's <link xlink:type="simple" xlink:href="../533/65533.xml">
business model</link> which relies on 1%-10% link utilization for most online customers.</p>

</ss1>
</sec>
<sec>
<st>
Bandwidth Broker</st>

<p>

RFC 2638 from <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> defines the entity of the <link xlink:type="simple" xlink:href="../840/2783840.xml">
Bandwidth Broker</link> in the framework of DiffServ. According to RFC 2638, a Bandwidth Broker is an agent that has some knowledge of an organization's priorities and policies and allocates bandwidth with respect to those policies. In order to achieve an end-to-end allocation of resources across separate domains, the Bandwidth Broker managing a domain will have to communicate with its adjacent peers, which allows end-to-end services to be constructed out of purely bilateral agreements. Bandwidth Brokers can be configured with organizational policies, keep track of the current allocation of marked traffic, and interpret new requests to mark traffic in light of the policies and current allocation. Bandwidth Brokers only need to establish relationships of limited trust with their peers in adjacent domains, unlike schemes that require the setting of flow specifications in <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link>s throughout an end-to-end path. In practical technical terms, the Bandwidth Broker architecture makes it possible to keep state on an administrative domain basis, rather than at every router and the DiffServ architecture makes it possible to confine per flow state to just the leaf routers.</p>

</sec>
<sec>
<st>
DiffServ RFC's</st>

<p>

<list>
<entry level="1" type="bullet">

RFC 2474—Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers</entry>
<entry level="1" type="bullet">

RFC 2475—An Architecture for Differentiated Services</entry>
<entry level="1" type="bullet">

RFC 2597—Assured Forwarding PHB Group</entry>
<entry level="1" type="bullet">

RFC 3140—Per Hop Behavior Identification Codes (Obsoletes RFC 2836)</entry>
<entry level="1" type="bullet">

RFC 3246—An Expedited Forwarding PHB (Obsoletes RFC 2598)</entry>
<entry level="1" type="bullet">

RFC 4594—Configuration Guidelines for DiffServ Service Classes</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 "Deploying IP and MPLS QoS for Multiservice Networks: Theory and Practice" by John Evans, Clarence Filsfils (Morgan Kaufmann, 2007, ISBN 0-12-370549-5)</entry>
<entry level="1" type="bullet">

 "Differentiated Services for the Internet", by Kalevi Kilkki, Macmillan Technical Publishing, Indianapolis, IN, USA, June 1999, is available in pdf-format at <weblink xlink:type="simple" xlink:href="http://kilkki.net/3">
http://kilkki.net/3</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../521/1984521.xml">
Type of Service</link> (TOS)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../852/1363852.xml">
Class of Service</link> (COS)</entry>
<entry level="1" type="bullet">

<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../205/175205.xml">
IntServ</link></system_of_measurement>
</standard>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../840/2783840.xml">
Bandwidth Broker</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../315/25315.xml">
quality of service</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../669/242669.xml">
traffic shaping</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../216/1536216.xml">
traffic engineering</link></entry>
</list>
</p>


</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

IETF <weblink xlink:type="simple" xlink:href="http://www.ietf.org/html.charters/OLD/diffserv-charter.html">
DiffServ Working Group</weblink> page</entry>
<entry level="1" type="bullet">

Cisco Whitepaper—<weblink xlink:type="simple" xlink:href="http://www.cisco.com/en/US/products/ps6610/products_white_paper09186a00800a3e2f.shtml">
DiffServ-The Scalable End-to-End Quality of Service Model</weblink></entry>
</list>
</p>


</sec>
</bdy>
</system_of_measurement>
</standard>
</article>
