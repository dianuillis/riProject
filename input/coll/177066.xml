<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:24:47[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<symbol  confidence="0.8" wordnetid="106806469">
<signal  confidence="0.8" wordnetid="106791372">
<identifier  confidence="0.8" wordnetid="107270601">
<header>
<title>Globally Unique Identifier</title>
<id>177066</id>
<revision>
<id>241084362</id>
<timestamp>2008-09-26T08:18:30Z</timestamp>
<contributor>
<username>IZAK</username>
<id>6549</id>
</contributor>
</revision>
<categories>
<category>Universal identifiers</category>
<category>Identifiers</category>
<category>Windows administration</category>
</categories>
</header>
<bdy>

A <b>Globally Unique Identifier</b> or <b>GUID</b> (pronounced  or /ˈgwɪd/) is a special type of identifier used in <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link> applications in order to provide a reference number which is unique in any context (hence, "Globally"), for example, in defining the internal reference for a type of access point in a software application, or for creating unique keys in a database.  While each generated GUID is not guaranteed to be unique, the total number of unique keys (2128 or 3.4×1038) is so large that the probability of the same number being generated twice is very small.  For example, consider the <link xlink:type="simple" xlink:href="../399/251399.xml">
observable universe</link>, which contains about 5×1022 <link xlink:type="simple" xlink:href="../808/26808.xml">
star</link>s; every star could then have 6.8×1015 universally unique GUIDs.<p>

The term GUID usually refers to <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
's implementation of the <symbol wordnetid="106806469" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<identifier wordnetid="107270601" confidence="0.8">
<link xlink:type="simple" xlink:href="../937/189937.xml">
Universally Unique Identifier</link></identifier>
</signal>
</symbol>
 (UUID) standard. Many systems use the term GUID, however, including <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../725/323725.xml">
Oracle Database</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../545/19545.xml">
MySQL</link></instrumentality>
</artifact>
</system>
, <link xlink:type="simple" xlink:href="../537/209537.xml">
dBase</link>, <link xlink:type="simple" xlink:href="../141/6326141.xml">
OpenView Operations</link>, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../631/16455631.xml">
ISIS Papyrus</link></instrumentality>
</artifact>
</system>
, and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../364/2581364.xml">
Novell eDirectory</link></software>
.  The GUID is also the basis of the <link xlink:type="simple" xlink:href="../892/2543892.xml">
GUID Partition Table</link>, <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link>'s replacement for <link xlink:type="simple" xlink:href="../389/55389.xml">
Master Boot Records</link> under <link xlink:type="simple" xlink:href="../065/866065.xml">
EFI</link>.</p>

<sec>
<st>
Basic structure</st>
<p>

The GUID is a 16-<link xlink:type="simple" xlink:href="../365/3365.xml">
byte</link> (128-bit) number.  The most commonly used structure of the data type is:
<table class="wikitable">
<header>
Bits</header>
<header>
Bytes</header>
<header>
Description</header>
<row>
<col>
32</col>
<col>
4</col>
<col>
Data1</col>
</row>
<row>
<col>
16</col>
<col>
2</col>
<col>
Data2</col>
</row>
<row>
<col>
16</col>
<col>
2</col>
<col>
Data3</col>
</row>
<row>
<col>
64</col>
<col>
8</col>
<col>
Data4</col>
</row>
</table>

Except for Data4, the most significant byte in every field is stored last; Data4 stores all bytes consecutively.</p>
<p>

One to three of the most significant bits of the second byte in Data 4 define the type variant of the GUID:
<table class="wikitable">
<header>
Pattern</header>
<header>
Description</header>
<row>
<col>
000</col>
<col>
<link xlink:type="simple" xlink:href="../354/5638354.xml">
Network Computing System</link>backward compatibility</col>
</row>
<row>
<col>
100</col>
<col>
Standard</col>
</row>
<row>
<col>
110</col>
<col>
Microsoft <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../007/17058007.xml">
Component Object Model</link></part>
</causal_agent>
</worker>
</component>
</assistant>
</concept>
</idea>
</model>
</person>
</physical_entity>
 backward compatibility; this includes the GUID's for important interfaces like <link xlink:type="simple" xlink:href="../965/759965.xml">
IUnknown</link> and <link xlink:type="simple" xlink:href="../549/1918549.xml">
IDispatch</link>.</col>
</row>
<row>
<col>
111</col>
<col>
Reserved for future use.</col>
</row>
</table>

The most significant four bits of Data3 define the version number, and the algorithm used.</p>

</sec>
<sec>
<st>
Text encoding</st>

<p>

Guids are most commonly written in text as a sequence of <link xlink:type="simple" xlink:href="../263/13263.xml">
hexadecimal</link> digits such as:
<indent level="1">

3F2504E0-4F89-11D3-9A0C-0305E82C3301
</indent>

This text notation contains the following fields, separated by hyphens:
<table class="wikitable">
<header>
Hex digits</header>
<header>
Description</header>
<row>
<col>
8</col>
<col>
Data1</col>
</row>
<row>
<col>
4</col>
<col>
Data2</col>
</row>
<row>
<col>
4</col>
<col>
Data3</col>
</row>
<row>
<col>
4</col>
<col>
Initial two bytes from Data4</col>
</row>
<row>
<col>
12</col>
<col>
Remaining six bytes from Data4</col>
</row>
</table>

For the first three fields, the most significant digit is on the left. The last two fields are treated as eight separate bytes, each having their most significant digit on the left, and they follow each other from left to right. Note that the digit order of the fourth field may be unexpected, since it's treated differently than in the structure.</p>
<p>

Often braces are added to enclose the above format, as such:
<indent level="1">

{3F2504E0-4F89-11D3-9A0C-0305E82C3301}
</indent>

When printing fewer characters is desired, GUIDs are sometimes encoded into a <link xlink:type="simple" xlink:href="../241/215241.xml">
base64</link> or <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../179/1562179.xml">
Ascii85</link></instrumentality>
</artifact>
</system>
 string. <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../241/215241.xml">
Base64</link></system_of_measurement>
</format>
</standard>
</information>
</message>
-encoded GUID consists of 22 to 24 characters (depending on padding),  for instance:</p>
<p>

<indent level="1">

7QDBkvCA1+B9K/U0vrQx1A
</indent>
:7QDBkvCA1+B9K/U0vrQx1A==</p>
<p>

and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../179/1562179.xml">
Ascii85</link></instrumentality>
</artifact>
</system>
 encoding gives only 20 characters, e. g.:</p>
<p>

<indent level="1">

5:$Hj:Pf\4RLB9%kU\Lj
</indent>

</p>
</sec>
<sec>
<st>
Algorithm</st>
<p>

The <foundation wordnetid="113790712" confidence="0.8">
<link xlink:type="simple" xlink:href="../219/190219.xml">
OSF</link></foundation>
-specified <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for generating new GUIDs has been widely criticized. In these (V1) GUIDs, the user's <link xlink:type="simple" xlink:href="../613/243613.xml">
network card</link> <symbol wordnetid="106806469" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<identifier wordnetid="107270601" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/20668.xml">
MAC address</link></identifier>
</signal>
</symbol>
 is used as a base for the last group of GUID digits, which means, for example, that a document can be tracked back to the computer that created it. This <link xlink:type="simple" xlink:href="../009/25009.xml">
privacy</link> hole was used when locating the creator of the <link xlink:type="simple" xlink:href="../605/175605.xml">
Melissa worm</link>. Most of the other digits are based on the time while generating the GUID.</p>
<p>

V1 GUIDs which contain a MAC address and time can be identified by the digit "1" in the first position of the third group of digits, for example {2f1e4fc0-81fd-<b><it>1</it></b>1da-9156-00036a0f876a}. </p>
<p>

V4 GUIDs use the later algorithm, which is a <link xlink:type="simple" xlink:href="../524/45524.xml">
pseudo-random</link> number. These have a "4" in the same position, for example {38a52be4-9352-<b><it>4</it></b>53e-af97-5c3b448652f0}. More specifically, the 'data3' bit pattern would be 0001xxxxxxxxxxxx in the first case, and 0100xxxxxxxxxxxx in the second. <link xlink:type="simple" xlink:href="../715/5715.xml">
Cryptanalysis</link> of  <link xlink:type="simple" xlink:href="../601/81601.xml">
WinAPI</link> GUID generator shows that, since the sequence of V4 GUIDs is pseudo-random, given the initial state one can predict up to next 250 000 GUIDs returned by the function <it>UuidCreate</it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. This is why GUIDs should not be used in cryptography, e. g., as random <link xlink:type="simple" xlink:href="../039/53039.xml">
keys</link>.</p>

</sec>
<sec>
<st>
Uses</st>
<p>

Depending on the context, groups of GUIDs may be used to represent similar but not quite identical things.  For example, in the <link xlink:type="simple" xlink:href="../933/1164933.xml">
Windows registry</link>, in the key sequence "My Computer\HKEY_Classes_Root\CLSID", the <link xlink:type="simple" xlink:href="../568/1913568.xml">
DAO</link> database management system identifies the particular version and type of accessing module of DAO to be used by a group of about a dozen GUIDs which begin with 5 zeros, a three-digit identifier for that particular version and type, and the remainder of the guid, which ends with the same value for every case, 0000-0010-8000-00AA006D2EA4, so that the set of GUIDs used by this database system runs from {00000010-0000-0010-8000-00AA006D2EA4} through {00000109-0000-0010-8000-00AA006D2EA4} although not all GUIDs in that range are used.</p>
<p>

In the Microsoft <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../007/17058007.xml">
Component Object Model</link></part>
</causal_agent>
</worker>
</component>
</assistant>
</concept>
</idea>
</model>
</person>
</physical_entity>
 (COM), GUIDs are used to uniquely distinguish different <link xlink:type="simple" xlink:href="../674/2816674.xml">
software component</link> interfaces. This means that two (possibly incompatible) versions of a component can have exactly the same name but still be distinguishable by their GUIDs.</p>
<p>

The use of GUIDs permits certain types of object orientation to be used in a consistent manner.  For example, in the creation of components for Microsoft Windows using COM, all components must implement the <link xlink:type="simple" xlink:href="../965/759965.xml">
IUnknown</link> interface in order to allow client code to find all other <link xlink:type="simple" xlink:href="../746/620746.xml">
interfaces</link> and features of that component, and they do this by creating a GUID which may be called upon to provide an entry point.  The IUnknown interface is defined as a GUID with the value of {00000000-0000-0000-C000-000000000046}, and rather than having a named entry point called "IUnknown", the preceding GUID is used, thus every component that provides an IUnknown entry point gives the same GUID, and every program that looks for an IUnknown interface in a component always uses that GUID to find the entry point, knowing that an application using that particular GUID must always consistently implement IUnknown in the same manner and the same way.</p>
<p>

GUIDs are also inserted into documents from <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../288/20288.xml">
Microsoft Office</link></software>
 programs, as these are regarded as objects as well. Even audio or video streams in the <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../563/290563.xml">
Advanced Systems Format</link></format>
 (ASF) are identified by their GUIDs.</p>
<p>

GUIDs representation can be <link xlink:type="simple" xlink:href="../026/43026.xml">
little endian</link> or <link xlink:type="simple" xlink:href="../026/43026.xml">
big endian</link>, so all APIs need to ensure that the correct data structure is used.</p>

</sec>
<sec>
<st>
Subtypes</st>
<p>

There are several flavors of GUIDs used in COM:
<list>
<entry level="1" type="bullet">

 IID – interface identifier; (The ones that are registered on a system are stored in the Windows Registry at the key HKEY_CLASSES_ROOT\Interface)</entry>
<entry level="2" type="bullet">

REFIID – a reference to an IID</entry>
<entry level="1" type="bullet">

 CLSID – class identifier; (Stored in the registry at HKEY_CLASSES_ROOT\CLSID)</entry>
<entry level="1" type="bullet">

 LIBID – type library identifier; </entry>
<entry level="1" type="bullet">

 CATID – category identifier; (its presence on a class identifies it as belonging to certain class categories)</entry>
</list>
</p>
<p>

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/93492.xml">
DCOM</link></part>
</causal_agent>
</worker>
</component>
</assistant>
</concept>
</idea>
</model>
</person>
</physical_entity>
 introduces many additional GUID subtypes:
<list>
<entry level="1" type="bullet">

 AppID – application identifier;</entry>
<entry level="1" type="bullet">

 MID – machine identifier;</entry>
<entry level="1" type="bullet">

 IPID – interface pointer identifier; (applicable to an interface engaged in RPC)</entry>
<entry level="1" type="bullet">

 CID – causality identifier; (applicable to a RPC session)</entry>
<entry level="1" type="bullet">

 OID – object identifier; (applicable to an object instance)</entry>
<entry level="1" type="bullet">

 OXID – object exporter identifier; (applicable to an instance of the system object that performs RPC)</entry>
<entry level="1" type="bullet">

 SETID – ping set identifier; (applicable to a group of objects)</entry>
</list>
</p>
<p>

These GUID subspaces may overlap, as the context of GUID usage defines its subtype. For example, there might be a class using same GUID for its CLSID as another class is using for its IID – all without a problem. On the other hand, two classes using same CLSID couldn't co-exist.</p>

</sec>
<sec>
<st>
XML syndication formats</st>
<p>

There is also a guid element in some versions of the <link xlink:type="simple" xlink:href="../489/93489.xml">
RSS</link> specification, and mandatory id element in <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../078/509078.xml">
Atom</link></format>
, which should contain a unique identifier for each individual article or weblog post. In RSS the contents of the guid can be any text, and in practice is typically a copy of the article <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>. Atom's IDs need to be valid <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../146/32146.xml">
URI</link></system_of_measurement>
</standard>
s (usually <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>s pointing to the entry, or <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../697/333697.xml">
URN</link></system_of_measurement>
</standard>
s containing any other unique identifier).</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<symbol wordnetid="106806469" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<identifier wordnetid="107270601" confidence="0.8">
<link xlink:type="simple" xlink:href="../397/5253397.xml">
Security Identifier</link></identifier>
</signal>
</symbol>
 (SID)</entry>
<entry level="1" type="bullet">

<symbol wordnetid="106806469" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<identifier wordnetid="107270601" confidence="0.8">
<link xlink:type="simple" xlink:href="../937/189937.xml">
Universally Unique Identifier</link></identifier>
</signal>
</symbol>
 (UUID)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../013/1064013.xml">
Object identifier</link> (OID)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../473/16153473.xml">
Device fingerprint</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ietf.org/rfc/rfc4122.txt">
A Universally Unique IDentifier (UUID) URN Namespace (IETF RFC 4122)</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://msdn2.microsoft.com/en-us/library/cc246027.aspx">
Globally Unique Identifiers - Internal Structure</weblink></entry>
</list>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.rsdn.ru/?article/mag/200802/UuidCrypto.xml">
Russian Software Developer Network Magazine #2-2008</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
Online GUID Generators</st>
<p>

<list>
<entry level="1" type="bullet">

 Note: in Borland Developer Studio, new GUID can be generated by pressing Ctrl-Shift-G.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.google.com/ig/directory?q=guid&amp;hl=en&amp;root=%2Fig&amp;dpos=top&amp;url=hosting.gmodules.com/ig/gadgets/file/113392228650073491842/generateGuid-newguidNet2.xml">
iGoogle GUID Generator Widget</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.newguid.NET">
Online .NET GUID Generator at newGuid.net</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.guidgen.com">
Online GUID Generator at GuidGen.com</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.guidgenerator.com">
Online GUID Generator at guidgenerator.com</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://createguid.com">
Minimal GUID Generator at CreateGUID.com</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.guidguide.com">
Generator and index of GUIDs seen in the wild</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.famkruithof.net/uuid/uuidgen">
UUID (GUID) Generator on the Web</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.firefoxextensions.com/guid-generator">
(GUID) Generator for Firefox XPI Extensions</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.itu.int/ITU-T/asn1/uuid.html">
UUID Generator on the ITU-T website</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.nowan.hu/guidgenerator.aspx">
Online .NET GUID Generator (english and hungarian)</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://msdn.microsoft.com/en-us/library/ms691424(VS.85).aspx">
CLSID Registry Key Information</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.itu.int/ITU-T/studygroups/com17/oid.html">
International Standard "Generation and registration of Universally Unique Identifiers (UUIDs) and their use as ASN.1 Object Identifier components"</weblink> (ITU-T Rec. X.667 | ISO/IEC 9834-8, technically compatible with IETF RFC 4122)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.infonuovo.com/dma/csdocs/sketch/instidid.htm">
DmaId for InstanceId Values (DCE Universally Unique IDentifiers, UUIDs)</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.opengroup.org/onlinepubs/9629399/apdxa.htm">
Syntax and semantics of the DCE variant of Universal Unique Identifiers (UUIDs)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.google.com/search?&amp;q=perl%20guid%20generate">
Generate GUIDs via Perl</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://johannburkard.de/software/uuid/">
UUID &#8211; generate UUIDs (or GUIDs) in Java</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://wunumber.org">
World Unique Number</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.codeproject.com/netcf/PPCGuidGen.asp#The_GUID_Format">
Generating GUIDs on the Pocket PC </weblink></entry>
</list>
</p>


</sec>
</bdy>
</identifier>
</signal>
</symbol>
</article>
