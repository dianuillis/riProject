<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:00:03[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Weiler-Atherton clipping algorithm</title>
<id>1817744</id>
<revision>
<id>241542672</id>
<timestamp>2008-09-28T15:04:53Z</timestamp>
<contributor>
<username>Una Smith</username>
<id>3349439</id>
</contributor>
</revision>
<categories>
<category>Clipping (computer graphics)</category>
</categories>
</header>
<bdy>

<b>Weiler-Atherton</b> <link xlink:type="simple" xlink:href="../701/1932701.xml">
clipping</link> algorithm used in <link xlink:type="simple" xlink:href="../210/18567210.xml">
computer graphics</link>.
It allows clipping of a <it>subject polygon</it> by an arbitrarily shaped <it>clip polygon</it>. It is generally applicable only in <link xlink:type="simple" xlink:href="../248/35248.xml">
2D</link>.
<sec>
<st>
 Description </st>
<p>

The algorithm requires polygons to be clockwise and not <link xlink:type="simple" xlink:href="../851/154851.xml">
reentrant</link> (self intersecting). The algorithm can support holes (as counter-clockwise polygons wholly inside their parent polygon), but requires additional algorithms to decide which polygons are holes.  Merging of polygons can also be performed by a variant of the algorithm.</p>
<p>

Two lists are created from the coordinates of each polygons A and B.</p>
<p>

The list entries are labelled as either inside or outside the other polygon.  Various strategies can be used to improve the speed of this labelling, and to avoid needing to proceed further.</p>
<p>

All the polygon intersections are then found and are inserted into both lists, linking the lists at the intersections.  Care will be needed where the polygons share an edge.</p>
<p>

If there are no intersections then one of three situations exist:
<list>
<entry level="1" type="number">

 A is inside B - return A for clipping, B for merging.</entry>
<entry level="1" type="number">

 B is inside A - return B for clipping, A for merging.</entry>
<entry level="1" type="number">

 A and B do not overlap - return None for clipping or A &amp; B for merging.</entry>
</list>
</p>
<p>

A list of inbound intersections is then generated.  Each intersection in the list is then followed clockwise around the linked lists until the start position is found.  One or more concave polygons may produce more than one intersecting polygon.  Convex polygons will only have one intersecting polygon.</p>
<p>

The same algorithm can be used for merging two polygons by starting at the outbound intersections rather than the inbound ones.  However this can produce counter-clockwise holes.</p>
<p>

Some polygon combinations may be difficult to resolve, especially when holes are allowed.  </p>
<p>

Points on the edge of the polygon may be considered as both in and out until their status can be confirmed after the intersections have been found and verified, however this increases the complexity.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../703/11253703.xml">
Sutherland-Hodgman clipping algorithm</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cs.drexel.edu/~david/Classes/CS430/HWs/p214-weiler.pdf">
HIDDEN SURFACE REMOVAL USING POLYGON AREA SORTING - Kevin Weiler and Peter Atherton</weblink></entry>
</list>
</p>




</sec>
</bdy>
</article>
