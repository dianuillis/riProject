<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 04:34:44[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Smoothed analysis</title>
<id>18208194</id>
<revision>
<id>235219565</id>
<timestamp>2008-08-30T17:52:30Z</timestamp>
<contributor>
<username>Jitse Niesen</username>
<id>14515</id>
</contributor>
</revision>
<categories>
<category>Computational complexity theory</category>
<category>Mathematical optimization</category>
</categories>
</header>
<bdy>

<b>Smoothed analysis</b> is a way of measuring the <link xlink:type="simple" xlink:href="../543/7543.xml">
complexity of an algorithm</link>. It gives a more realistic analysis of the practical performance of the algorithm, 
such as its running time, than using worst-case or average-case scenarios.<p>

For instance the <link xlink:type="simple" xlink:href="../458/349458.xml">
simplex algorithm</link> runs in exponential-time in the worst-case and yet in practice it is a very efficient algorithm. This was one of the main motivations for developing smoothed analysis.</p>
<p>

Average-case analysis was first introduced to overcome the limitations of worst-case analysis, however the difficulty is saying what an average case is. The actual inputs and distribution of inputs may be different in practice from the assumptions made during the analysis.</p>
<p>

Smoothed analysis is a hybrid of worst-case and average-case analyses that inherits advantages of both, by measuring the expected performance of algorithms under slight random perturbations of worst-case inputs. If the smoothed complexity of an algorithm is low, then it is unlikely that the algorithm will take long time to solve practical instances whose data are subject to slight noises and imprecisions.</p>
<p>

Since its introduction in 2001, smoothed analysis has been used as a basis for considerable research, for problems ranging from <link xlink:type="simple" xlink:href="../033/52033.xml">
mathematical programming</link>, <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical analysis</link>, <link xlink:type="simple" xlink:href="../488/233488.xml">
machine learning</link>, and <link xlink:type="simple" xlink:href="../253/42253.xml">
data mining</link>. <organization wordnetid="108008335" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/30th_century.xml">
ACM</link></organization>
 and <link xlink:type="simple" xlink:href="../672/2137672.xml">
the European Association for Theoretical Computer Science</link> awarded the 2008 <link>
Gödel Prize</link> to <link>
Daniel Spielman</link> and <link xlink:type="simple" xlink:href="../765/18696765.xml">
Shanghua Teng</link> for developing smoothed analysis.</p>

<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

  <cite id="CITEREFSpielmanTeng2001" style="font-style:normal">Spielman, Daniel&#32;&amp;&#32;<link>
Teng, Shang-Hua</link>&#32;(2001),&#32;"Smoothed analysis of algorithms: why the simplex algorithm usually takes polynomial time",&#32;<it>Proceedings of the Thirty-Third Annual ACM Symposium on Theory of Computing</it>, ACM, pp. 296–305, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F380752.380813">
10.1145/380752.380813</weblink>, <link xlink:type="simple" xlink:href="../751/38751.xml">
ar&amp;Chi;iv</link>:, ISBN 978-1-58113-349-3</cite>&nbsp;.</entry>
</list>
</p>





</sec>
</bdy>
</article>
