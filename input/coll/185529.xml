<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:28:10[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Scalability</title>
<id>185529</id>
<revision>
<id>243658941</id>
<timestamp>2008-10-07T14:26:48Z</timestamp>
<contributor>
<username>Lightbot</username>
<id>7178666</id>
</contributor>
</revision>
<categories>
<category>Transaction processing</category>
<category>System administration</category>
<category>Distributed computing</category>
<category>Project management</category>
</categories>
</header>
<bdy>

<image location="none" width="50px" src="Wiktionary-logo-en.svg">
<caption>

Wiktionary
</caption>
</image>

Look up  in <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/156658.xml">
Wiktionary</link></web_site>
, the free dictionary.
<p>

In <link xlink:type="simple" xlink:href="../322/30322.xml">
telecommunication</link>s and <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link>, <b>scalability</b> is a desirable property of a system, a network, or a process, which indicates its ability to either handle growing amounts of work in a graceful manner, or to be readily enlarged.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  For example, it can refer to the capability of a system to increase total throughput under an increased load when resources (typically hardware) are added. An analogous meaning is implied when the word is used in a <link xlink:type="simple" xlink:href="../208/39208.xml">
commercial</link> context, where scalability of a company implies that the underlying <link xlink:type="simple" xlink:href="../533/65533.xml">
business model</link> offers the potential for <link xlink:type="simple" xlink:href="../415/69415.xml">
economic growth</link> within the company. </p>
<p>

Scalability, as a property of systems, is generally difficult to define <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and in any particular case it is necessary to define the specific requirements for scalability on those dimensions which are deemed important.  It is a highly significant issue in electronics systems, database, routers, and networking. A system whose performance improves after adding hardware, proportionally to the capacity added, is said to be a <b>scalable system</b>. An <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>, design, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/630770.xml">
networking protocol</link></rule>
</direction>
</protocol>
</message>
, <link xlink:type="simple" xlink:href="../783/5783.xml">
program</link>, or other system is said to <b>scale</b> if it is suitably efficient and practical when applied to large situations (e.g. a large input data set or large number of participating nodes in the case of a distributed system). If the design fails when the quantity increases then it <b>does not scale</b>.</p>

<sec>
<st>
 Dimensions </st>

<p>

Scalability can be measured in various dimensions, such as:</p>
<p>

<list>
<entry level="1" type="bullet">

 Load scalability: The ability for a <link xlink:type="simple" xlink:href="../501/8501.xml">
distributed system</link> to easily expand and contract its resource pool to accommodate heavier or lighter loads.  Alternatively, the ease with which a system or component can be modified, added, or removed, to accommodate changing load.</entry>
<entry level="1" type="bullet">

 Geographic scalability: The ability to maintain performance, usefulness, or usability regardless of expansion from concentration in a local area to a more distributed geographic pattern.</entry>
<entry level="1" type="bullet">

 Administrative scalability: The ability for an increasing number of organizations to easily share a single distributed system.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Examples </st>

<p>

A scalable <link xlink:type="simple" xlink:href="../992/2329992.xml">
online transaction processing system</link> or <link xlink:type="simple" xlink:href="../513/8513.xml">
database management system</link> is one that can be upgraded to process more transactions by adding new processors, devices and storage, and which can be upgraded easily and transparently without shutting it down.</p>
<p>

A <link xlink:type="simple" xlink:href="../059/10123059.xml">
routing protocol</link> is considered scalable with respect to network size, if the size of the necessary <link xlink:type="simple" xlink:href="../043/48043.xml">
routing table</link> on each node grows as <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(log <it>N</it>), where <it>N</it> is the number of nodes in the network.</p>
<p>

The distributed nature of the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
Domain Name System</link></rule>
</direction>
</protocol>
</message>
 allows it to work efficiently even when all <link xlink:type="simple" xlink:href="../116/42116.xml">
hosts</link> on the worldwide <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link> are served, so it is said to "scale well". </p>
<p>

Some early <link xlink:type="simple" xlink:href="../107/24107.xml">
P2P</link> implementations of <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../856/11856.xml">
Gnutella</link></rule>
</direction>
</protocol>
</message>
 had scaling issues. Each node <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../426/423426.xml">
query flooded</link></rule>
</direction>
</protocol>
</message>
 its requests to all peers.  The demand on each peer would increase in proportion to the total number of peers, quickly overrunning the peers' limited capacity.  Other P2P systems like <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/239098.xml">
BitTorrent</link></format>
</rule>
</direction>
</protocol>
</information>
</message>
 scale well because demand on each peer is independent of the total number of peers.  There is no centralized bottleneck, so the system may expand indefinitely without the addition of supporting resources (other than the peers themselves).</p>

</sec>
<sec>
<st>
 Scale vertically vs. horizontally </st>
<p>
 
Methods of adding more resources for a particular application fall into two broad categories:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

<ss1>
<st>
 Scale vertically (<it>scale up</it>)</st>
<p>

To scale vertically (or <b>scale up</b>) means to add resources to a single node in a system, typically involving the addition of CPUs or memory to a single computer. Such vertical scaling of existing systems also enables them to leverage <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> technology more effectively, as it provides more resources for the hosted set of <link>
operating system</link> and <link xlink:type="simple" xlink:href="../278/150278.xml">
application</link> modules to share.</p>
<p>

Taking advantage of such resources can also be called "scaling up", such as expanding the number of <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/2581.xml">
Apache</link></software>
 daemon processes currently running.</p>

</ss1>
<ss1>
<st>
 Scale horizontally (<it>scale out</it>)</st>
<p>

To scale horizontally (or <b>scale out</b>) means to add more nodes to a system, such as adding a new computer to a distributed software application.  An example might be scaling out from one web server system to three.</p>
<p>

As computer prices drop and performance continues to increase, low cost "commodity" systems can be used for high performance computing applications such as seismic analysis and biotechnology workloads that could in the past only be handled by <link xlink:type="simple" xlink:href="../153/37153.xml">
supercomputer</link>s. Hundreds of small computers  may be configured in a <link xlink:type="simple" xlink:href="../896/18949896.xml">
cluster</link> to obtain aggregate computing power which often exceeds that of single traditional RISC processor based scientific computers. This model has further been fueled by the availability of high performance interconnects such as <link xlink:type="simple" xlink:href="../016/20016.xml">
Myrinet</link> and <link xlink:type="simple" xlink:href="../309/143309.xml">
InfiniBand</link> technologies. It has also led to demand for features such as remote maintenance and batch processing management previously not available for "commodity" systems.</p>
<p>

The scale-out model has created an increased demand for shared data storage with very high I/O performance, especially where processing of large amounts of data is required, such as in <link xlink:type="simple" xlink:href="../557/1800557.xml">
seismic analysis</link>. This has fueled the development of new storage technologies such as <link xlink:type="simple" xlink:href="../413/3238413.xml">
object storage device</link>s.</p>

</ss1>
<ss1>
<st>
 Tradeoffs </st>
<p>

There are tradeoffs between the two models.  Larger numbers of computers means increased management complexity, as well as a more complex programming model and issues such as throughput and latency between nodes; also, some applications do not lend themselves to a distributed computing model.  In the past, the price differential between the two models has favored "scale out" computing for those applications that fit its paradigm, but recent advances in virtualization technology have blurred that advantage, since deploying a new virtual system over a hypervisor (where possible) is almost always less expensive than actually buying and installing a real one.</p>

</ss1>
</sec>
<sec>
<st>
 Database scalability </st>

<p>

A number of different approaches enable <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link>s to grow to very large size while supporting an ever-increasing rate of <link xlink:type="simple" xlink:href="../048/5208048.xml">
transactions per second</link>. Not to be discounted, of course, is the rapid pace of hardware advances in both the speed and capacity of <link xlink:type="simple" xlink:href="../719/455719.xml">
mass storage</link> devices, as well as similar advances in CPU and networking speed. Beyond that, a variety of architectures are employed in the implementation of very large-scale databases.</p>
<p>

One technique supported by most of the major <link xlink:type="simple" xlink:href="../513/8513.xml">
DBMS</link> products is the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../101/1983101.xml">
partitioning</link></instrumentality>
</artifact>
</system>
 of large tables, based on ranges of values in a key field. In this manner, the database can be <it>scaled out</it> across a cluster of separate <link xlink:type="simple" xlink:href="../760/815760.xml">
database server</link>s. Also, with the advent of 64-bit <link xlink:type="simple" xlink:href="../553/19553.xml">
microprocessor</link>s, <link xlink:type="simple" xlink:href="../207/3503207.xml">
multi-core </link>CPUs, and large <link xlink:type="simple" xlink:href="../318/50318.xml">
SMP multiprocessors</link>, DBMS vendors have been at the forefront of supporting <link xlink:type="simple" xlink:href="../303/45303.xml">
multi-threaded</link> implementations that substantially <it>scale up</it> <link xlink:type="simple" xlink:href="../409/212409.xml">
transaction processing</link> capacity.</p>
<p>

<link xlink:type="simple" xlink:href="../995/451995.xml">
Network-attached storage (NAS)</link> and <link xlink:type="simple" xlink:href="../593/266593.xml">
Storage area networks (SANs)</link> coupled with fast local area networks and <link xlink:type="simple" xlink:href="../327/143327.xml">
Fibre Channel</link> technology enable still larger, more loosely coupled configurations of databases and distributed computing power. The widely supported <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../283/2507283.xml">
X/Open XA</link></system_of_measurement>
</standard>
 standard employs a global transaction monitor to coordinate <link xlink:type="simple" xlink:href="../053/619053.xml">
distributed transaction</link>s among semi-autonomous XA-compliant database resources. <link xlink:type="simple" xlink:href="../505/3930505.xml">
Oracle RAC</link> uses a different model to achieve scalability, based on a "shared-everything" architecture that relies upon high-speed connections between servers.</p>
<p>

While DBMS vendors debate the relative merits of their favored designs, some companies and researchers question the inherent limitations of <link xlink:type="simple" xlink:href="../743/98743.xml">
relational database management system</link>s. <weblink xlink:type="simple" xlink:href="http://gigaspaces.com">
GigaSpaces</weblink>, for example, contends that an entirely different model of distributed data access and transaction processing, named <link xlink:type="simple" xlink:href="../855/11353855.xml">
Space based architecture</link>, is required to achieve the highest performance and scalability.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> On the other hand, <link xlink:type="simple" xlink:href="../617/13699617.xml">
Base One</link> makes the case for extreme scalability without departing from mainstream database technology.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> In either case, there appears to be no end in sight to the limits of database scalability.</p>

</sec>
<sec>
<st>
 Design for scalability </st>

<p>

It is often advised to focus system design on hardware scalability rather than on capacity.  It is typically cheaper to add a new node to a system in order to achieve improved performance than to partake in <link xlink:type="simple" xlink:href="../801/225801.xml">
performance tuning</link> to improve the capacity that each node can handle. But this approach can have diminishing returns (as discussed in <link xlink:type="simple" xlink:href="../610/6615610.xml">
performance engineering</link>). For example: suppose a portion of a program can be sped up by 70% if parallelized and run on four CPUs instead of one. If <math>\alpha</math> is the fraction of a calculation that is sequential, and <math>1-\alpha</math> is the fraction that can be parallelized, then the maximum <link xlink:type="simple" xlink:href="../612/1448612.xml">
speedup</link> that can be achieved by using P processors is given according to <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
Amdahl's Law</link>: <math>\frac{1}{\alpha+\frac{1-\alpha}{P}}</math>. Substituting the values for this example, we get <math>\frac{1}{0.3+\frac{1-0.3}{4}} = 2.105</math>. If we double the compute power to 8 processors we get <math>\frac{1}{0.3+\frac{1-0.3}{8}} = 2.581</math>. Doubling the processing power has only improved the speedup by roughly one-fifth. If the whole problem was parallelizable, we would, of course, expect the speed up to double also. Therefore, throwing in more hardware is not necessarily the optimal approach.</p>

</sec>
<sec>
<st>
The Black Swan</st>
<p>

Scalability is also a property of natural and economic systems as described by <link xlink:type="simple" xlink:href="../496/1093496.xml">
Nassim Taleb</link> in his book <it><book wordnetid="106410904" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../256/8561256.xml">
The Black Swan</link></book>
</it>. In that context, Taleb calls a property scalable when it is subject to extremes. One example of such a property in humans is <link xlink:type="simple" xlink:href="../981/405981.xml">
net worth</link>. An example of a nonscalable property is weight.</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
André B. Bondi, 'Characteristics of scalability and their impact on performance', <it>Proceedings of the 2nd international workshop on Software and performance, </it> Ottawa, Ontario, Canada, 2000, ISBN 1-58113-195-X, pages 195 - 203</entry>
<entry id="2">
See for instance, Mark D. Hill, 'What is scalability?' in <it>ACM SIGARCH Computer Architecture News,</it> December 1990, Volume 18 Issue 4, pages 18-21, (ISSN 0163-5964) and Leticia Duboc, David S. Rosenblum, Tony Wicks, 'Doctoral symposium: presentations: A framework for modelling and analysis of software systems scalability' in <it>Proceeding of the 28th international conference on Software engineering ICSE '06</it>, May 2006. ISBN 1-59593-375-1, pages 949 - 952</entry>
<entry id="3">
Michael, M.;&#32;J.E. Moreira, D. Shiloach, R.W. Wisniewski&#32;(March 26, 2007).&#32;"<weblink xlink:type="simple" xlink:href="http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4228359">
Scale-up x Scale-out: A Case Study using Nutch/Lucene</weblink>".&#32;<it>Parallel and Distributed Processing Symposium, 2007. IPDPS 2007.</it>.&#32;  IEEE International.&#32;Retrieved on <link>
2008-01-10</link>.</entry>
<entry id="4">
GigaSpaces. "<weblink xlink:type="simple" xlink:href="http://www.gigaspaces.com/download/GigaSpacesEOTBA.pdf">
Space-Based Architecture and The End of Tier-based Computing</weblink>", 2006. Retrieved on <link xlink:type="simple" xlink:href="../655/19655.xml">
May 23</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>.</entry>
<entry id="5">
Base One. "<weblink xlink:type="simple" xlink:href="http://www.boic.com/scalability.htm">
Database Scalability - Dispelling myths about the limits of database-centric architecture</weblink>", 2007. Retrieved on <link xlink:type="simple" xlink:href="../655/19655.xml">
May 23</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>.</entry>
</reflist>
</p>
<p>

<list>
<entry level="1" type="bullet">

 GridwiseTech. "<weblink xlink:type="simple" xlink:href="http://www.gridwisetech.com/scalability_expert">
Principles of Scalable Systems - Describing technologies/layers that are components of scalable system</weblink>", 2007. Retrieved on <link xlink:type="simple" xlink:href="../758/21758.xml">
November 6</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>.</entry>
</list>
</p>


</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<rule wordnetid="105846054" confidence="0.8">
<link xlink:type="simple" xlink:href="../ury/24th_century.xml">
Amdahl's law</link></rule>
</concept>
</idea>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../578/44578.xml">
Asymptotic complexity</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../848/7361848.xml">
Black swan theory</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../118/61118.xml">
Load balancing (computing)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../593/244593.xml">
Lock (computer science)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../162/145162.xml">
Parallelism in computing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../610/6615610.xml">
Performance Engineering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../685/1081685.xml">
List of System Quality Attributes</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../855/11353855.xml">
Space based architecture</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://highscalability.com">
highscalability.com</weblink> - A blog on the "lore, art, science, practice, and experience of building scalable websites".</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://teledict.blogspot.com/2008/01/tips-on-wireless-scability.html">
TeleDict:Tips on Wireless-Scalability</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.linfo.org/scalable.html">
Scalable Definition</weblink> - by The Linux Information Project (LINFO)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.gridwisetech.com/scalability">
Strategic approach to IT scalability</weblink> - an article available for free download, 2007. Retrieved on <link xlink:type="simple" xlink:href="../146/28146.xml">
September 18</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://natishalom.typepad.com/nati_shaloms_blog/2007/07/the-true-meanin.html">
The true meaning of linear scalability</weblink> - an article outlining outlining various definition of what linear scalability means.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://today.java.net/pub/a/today/2007/02/13/architecture-of-highly-scalable-nio-server.html">
Architecture of a Highly Scalable NIO-Based Server</weblink> - an article about writing scalable server in Java (java.net).</entry>
</list>
</p>


</sec>
</bdy>
</article>
