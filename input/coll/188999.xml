<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:27:02[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<field  confidence="0.9511911446218017" wordnetid="108569998">
<trial  confidence="0.9511911446218017" wordnetid="105799212">
<header>
<title>Miller–Rabin primality test</title>
<id>188999</id>
<revision>
<id>238021751</id>
<timestamp>2008-09-12T21:52:42Z</timestamp>
<contributor>
<username>Primessuspect</username>
<id>7837474</id>
</contributor>
</revision>
<categories>
<category>Primality tests</category>
<category>Finite fields</category>
</categories>
</header>
<bdy>

The <b>Miller–Rabin primality test</b> or <b>Rabin–Miller primality test</b> is a <link xlink:type="simple" xlink:href="../751/183751.xml">
primality test</link>: an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>
which determines whether a given number is <link xlink:type="simple" xlink:href="../666/23666.xml">
prime</link>,
similar to the <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../755/157755.xml">
Fermat primality test</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 and the <link>
Solovay–Strassen primality test</link>. Its original version, due to <link xlink:type="simple" xlink:href="../961/19278961.xml">
Gary L. Miller</link>, is <link xlink:type="simple" xlink:href="../951/665951.xml">
deterministic</link>, but the determinism relies on the unproven <link xlink:type="simple" xlink:href="../567/152567.xml">
generalized Riemann hypothesis</link>;<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../404/298404.xml">
Michael O. Rabin</link></scientist>
</person>
 modified it to obtain an unconditional <link xlink:type="simple" xlink:href="../383/495383.xml">
probabilistic algorithm</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>
<sec>
<st>
Concepts</st>
<p>

Just like with the Fermat and Solovay–Strassen tests, with the Miller–Rabin test, we will rely on an equality or set of equalities that hold true for prime values, then see whether or not they hold for a number that we want to test for primality.</p>
<p>

First, a <link xlink:type="simple" xlink:href="../634/18634.xml">
lemma</link> about square roots of unity in the <link xlink:type="simple" xlink:href="../615/11615.xml">
finite field</link> <math>\mathbb{Z}/p\mathbb{Z}</math>, where <it>p</it> is prime and <it>p</it> &amp;gt; 2. Certainly 1 and −1 always yield 1 when squared mod <it>p</it>; call these <it>trivial</it> square roots of 1. There are no <it>nontrivial</it> square roots of 1 mod <it>p</it> (a special case of the result that, in a field, a polynomial has no more zeroes than its degree). To show this, suppose that <it>x</it> is a nontrivial square root of 1 mod <it>p</it>. Then:
<indent level="1">

<math>
x^{2} \equiv 1\pmod{p}
</math>
</indent>
:<math>
\left (x - 1 \right ) \left ( x + 1 \right ) \equiv 0\pmod{p}
</math>
Since <it>x</it> is neither 1 nor −1 mod <it>p</it>, both <it>x</it> − 1 and <it>x</it> + 1 are co-prime to <it>p</it>. Hence, neither <it>x</it> − 1 nor <it>x</it> + 1 is divisible by <it>p</it>. But if a prime divides neither of two integers, it cannot divide their product.</p>
<p>

Now, let <it>n</it> be an odd prime. Then we can write <it>n</it> &amp;minus; 1 as 2<it>s</it>·<it>d</it>, where <it>s</it> is a positive integer and <it>d</it> is odd.  For each <math>a\in \left(\mathbb{Z}/n\mathbb{Z}\right)^*</math>, either
<indent level="1">

<math>
a^{d} \equiv 1\pmod{n}
</math>
</indent>
or
<indent level="1">

<math>
a^{2^r\cdot d} \equiv -1\pmod{n}</math> for some <math>0 \le r \le s-1
</math>
</indent>

To show that one of these must be true, recall <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../453/53453.xml">
Fermat's little theorem</link></proposition>
</theorem>
</message>
</statement>
 (which only applies for prime moduli):
<indent level="1">

<math>
a^{n-1} \equiv 1\pmod{n}
</math>
</indent>

By the lemma above, if we keep taking square roots of <it>an</it> &amp;minus; 1, we will get either 1 or &amp;minus;1.  If we get &amp;minus;1 then the second equality holds and we are done.  </p>
<p>

In the case when we've taken out every power of 2 and the second equality never held, we are left with the first equality which also must be equal to 1 or &amp;minus;1, as it too is a square root.  However, if the second equality never held, then it couldn't have held for <it>r</it> = 0, meaning that
<indent level="1">

<math>
a^{2^0 \cdot d} = a^d \not\equiv -1\pmod{n}
</math>
</indent>

Thus in the case the second equality doesn't hold, the first equality must.</p>
<p>

The Miller–Rabin primality test is based on the <link xlink:type="simple" xlink:href="../497/8556497.xml">
contrapositive</link> of the above claim. That is, if we can find an <it>a</it> such that
<indent level="1">

<math>
a^{d} \not\equiv 1\pmod{n}
</math>
</indent>
and
<indent level="1">

<math>
a^{2^rd} \not\equiv -1\pmod{n}</math> for all <math>0 \le r \le s-1
</math>
</indent>

then <it>a</it> is a witness for the compositeness of <it>n</it> (sometimes misleadingly called a <it>strong witness</it>, although it is a certain proof of this fact). Otherwise <it>a</it> is called a <it>strong liar</it>, and <it>n</it> is a <link xlink:type="simple" xlink:href="../560/160560.xml">
strong probable prime</link> to base <it>a</it>. The term "strong liar" refers to the case where <it>n</it> is composite but nevertheless the equations hold as they would for a prime.</p>
<p>

For every odd composite <it>n</it>, there are many witnesses <it>a</it>. However, no simple way of generating such an <it>a</it> is known. The solution is to make the test <link xlink:type="simple" xlink:href="../751/183751.xml#xpointer(//*[./st=%22probabilistic+tests%22])">
probabilistic</link>: we choose <math>a \in \left(\mathbb{Z}/n\mathbb{Z}\right)</math> randomly, and check whether or not it is a witness for the compositeness of <it>n</it>. If <it>n</it> is composite, most of the <it>a</it>s will be witnesses, and the test will detect <it>n</it> as composite with high probability. There is, nevertheless, a small chance that we are unlucky and hit an <it>a</it> which is a strong liar for <it>n</it>. We may reduce the probability of such error by repeating the test for several independently chosen <it>a</it>.</p>

</sec>
<sec>
<st>
Example</st>

<p>

Suppose we wish to determine if <it>n</it>&nbsp;=&nbsp;221 is prime. We write <it>n</it>&nbsp;&amp;minus;&nbsp;1 = 220 as 2<it>2</it>&middot;<it>55</it>, so that we have <it>s</it>&nbsp;=&nbsp;2 and <it>d</it>&nbsp;=&nbsp;55. We randomly select an <it>a</it>&nbsp;&nbsp;<it>n</it> of 174. We proceed to compute:</p>
<p>

<list>
<entry level="1" type="bullet">

 <it>ad</it> mod <it>n</it> = 17455 mod 221 = 47 &amp;ne; 1</entry>
<entry level="1" type="bullet">

 <it>a</it>20&middot;<it>d</it> mod <it>n</it> = 17455 mod 221 = 47 &amp;ne; <it>n</it> &amp;minus; 1</entry>
<entry level="1" type="bullet">

 <it>a</it>21&middot;<it>d</it> mod <it>n</it> = 174110 mod 221 = 220 = <it>n</it> &amp;minus; 1.</entry>
</list>
</p>
<p>

Since 220 &amp;equiv; -1 mod <it>n</it>, either 221 is prime, or 174 is a strong liar for 221. We try another random <it>a</it>, this time choosing <it>a</it>=137:</p>
<p>

<list>
<entry level="1" type="bullet">

 <it>ad</it> mod <it>n</it> = 13755 mod 221 = 188 &amp;ne; 1</entry>
<entry level="1" type="bullet">

 <it>a</it>20&middot;<it>d</it> mod <it>n</it> = 13755 mod 221 = 188 &amp;ne; <it>n</it> &amp;minus; 1</entry>
<entry level="1" type="bullet">

 <it>a</it>21&middot;<it>d</it> mod <it>n</it> = 137110 mod 221 = 205 &amp;ne; <it>n</it> &amp;minus; 1.</entry>
</list>
</p>
<p>

Hence 137 is a witness for the compositeness of 221, and 174 was in fact a strong liar. Note that this tells us nothing about the factors of 221, which are 13 and 17.</p>

</sec>
<sec>
<st>
Algorithm and running time</st>
<p>

The algorithm can be written as follows:
<indent level="1">

<b>Inputs</b>: <it>n</it> &amp;gt; 1: an odd integer to test for primality; <it>k</it>: a parameter that determines the accuracy of the test
</indent>
:<b>Output</b>: <it>composite</it> if <it>n</it> is composite, otherwise <it>probably prime</it>
<indent level="1">

write <it>n</it> − 1 as 2<it>s</it>·<it>d</it> by factoring powers of 2 from <it>n</it> − 1
</indent>
:repeat <it>k</it> times:
<indent level="2">

pick <it>a</it> randomly in the range [1, ''n'' − 1]
</indent>
::if <math>a^d \not\equiv 1\ \bmod\ n </math> and <math>a^{{2^r}d}\not\equiv -1\ \bmod\ n</math> for all <it>r</it> in the range [0, ''s'' − 1] then return <it>composite</it>
<indent level="1">

return <it>probably prime</it>
</indent>

Using <link xlink:type="simple" xlink:href="../032/903032.xml">
modular exponentiation</link> by repeated squaring, the running time of
this algorithm is <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(<it>k</it> &amp;times; log3&nbsp;<it>n</it>), where <it>k</it>
is the number of different values of <it>a</it> we test; thus this is an efficient, polynomial-time algorithm. <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../512/11512.xml">
FFT</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
-based multiplication can push the running time down to O(<it>k</it> &amp;times; log2&nbsp;<it>n</it> log log <it>n</it> log log log <it>n</it>) = <link xlink:type="simple" xlink:href="../578/44578.xml">
Õ</link>(<it>k</it>
&amp;times; log2&nbsp;<it>n</it>).</p>

</sec>
<sec>
<st>
Accuracy of the test</st>
<p>

The more bases <it>a</it> we test, the better the accuracy of the test.  It can be shown that for any odd composite <it>n</it>, at least 3/4 of the bases <it>a</it> are witnesses for the compositeness of <it>n</it>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> The Miller–Rabin test is strictly stronger than the Solovay–Strassen primality test in the sense that for every composite <it>n</it>, the set of strong liars for <it>n</it> is a subset of the set of Euler liars for <it>n</it>, and for many <it>n</it>, the subset is proper. If <it>n</it> is composite then the Miller–Rabin primality test declares <it>n</it> probably prime with a probability at most <math>4^{-k}</math>. On the other hand, the Solovay–Strassen primality test declares <it>n</it> probably prime with a probability at most <math>2^{-k}</math>.  </p>
<p>

On average the probability that a composite number is declared <it>probably prime</it> is significantly smaller than <math>4^{-k}</math>. <link>
Damgård</link>, Landrock and <link xlink:type="simple" xlink:href="../159/2134159.xml">
Pomerance</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> compute some explicit bounds. Such bounds can, for example, be used to <it>generate</it> primes; however, they should not be used to <it>verify</it> primes with unknown origin, since in <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptographic</link> applications an adversary might try to send you a pseudoprime in a place where a prime number is required. In such cases, only the error bound of <math>4^{-k}</math> can be relied upon.</p>

</sec>
<sec>
<st>
Deterministic variants of the test</st>
<p>

The Miller–Rabin algorithm can be made deterministic by trying all possible <it>a</it> below a certain limit. The problem in general is to set the limit so that the test is still reliable.</p>
<p>

If the tested number <it>n</it> is composite, the strong liars <it>a</it> coprime to <it>n</it> are contained in a proper <link xlink:type="simple" xlink:href="../011/28011.xml">
subgroup</link> of the group <math>\left(\mathbb{Z}/n\mathbb{Z}\right)^*</math>, which means that if we test all <it>a</it> from a set which <link xlink:type="simple" xlink:href="../945/99945.xml">
generates</link> <math>\left(\mathbb{Z}/n\mathbb{Z}\right)^*</math>, one of them must be a witness for the compositeness of <it>n</it>. Assuming the truth of the <link xlink:type="simple" xlink:href="../567/152567.xml">
generalized Riemann hypothesis</link> (GRH), it is known that the group is generated by its elements smaller than O((log&nbsp;<it>n</it>)2), which was already noted by Miller.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> The constant involved in the <link xlink:type="simple" xlink:href="../578/44578.xml">
Big O notation</link> was reduced to 2 by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../234/9369234.xml">
Eric Bach</link></scientist>
</causal_agent>
</person>
</physical_entity>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> This leads to the following conditional primality testing algorithm:
<indent level="1">

<b>Input</b>: <it>n</it> &amp;gt; 1: an odd integer to test for primality
</indent>
:<b>Output</b>: <it>composite</it> if <it>n</it> is composite, otherwise <it>prime</it>
<indent level="1">

write <it>n</it> &amp;minus; 1 as <math>2^s \cdot d</math> by factoring powers of 2 from <it>n</it> &amp;minus; 1
</indent>
:repeat for all <it>a</it> in the range <math>[2,\min(n-1,\lfloor2(\ln n)^2\rfloor)]</math>:
<indent level="2">

if <it>ad</it> mod <it>n</it> ≠ 1 and <math>a^{d \cdot 2^r}</math> mod <it>n</it> ≠ &amp;minus;1 for all <it>r</it> in the range [0, ''s'' &amp;minus; 1] then return <it>composite</it>
</indent>
:return <it>prime</it>
The running time of the algorithm is Õ((log&nbsp;<it>n</it>)4). The full power of the generalized Riemann hypothesis is not needed to ensure the correctness of the test: as we deal with subgroups of even <link xlink:type="simple" xlink:href="../759/98759.xml">
index</link>, it suffices to assume the validity of <link xlink:type="simple" xlink:href="../567/152567.xml">
GRH</link> for <link xlink:type="simple" xlink:href="../567/18567.xml">
quadratic</link> <link xlink:type="simple" xlink:href="../515/174515.xml">
Dirichlet character</link>s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

This algorithm is not used in practice, as it is much slower than the randomized version of the Miller-Rabin test. For theoretical purposes, it was superseded by the <process wordnetid="105701363" confidence="0.8">
<institute wordnetid="108407330" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<association wordnetid="108049401" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../847/405847.xml">
AKS primality test</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</association>
</thinking>
</inquiry>
</institute>
</process>
, which does not rely on unproven assumptions.</p>
<p>

When the number <it>n</it> we want to test is small, trying all <it>a</it>  2(ln&nbsp;<it>n</it>)2 is not necessary, as much smaller sets of potential witnesses are known to suffice. For example, Jaeschke<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> has verified that
<list>
<entry level="1" type="bullet">

if <it>n</it>  9,080,191, it is enough to test <it>a</it> = 31 and 73.</entry>
<entry level="1" type="bullet">

if <it>n</it>  4,759,123,141, it is enough to test <it>a</it> = 2, 7, and 61.</entry>
<entry level="1" type="bullet">

if <it>n</it>  2,152,302,898,747, it is enough to test <it>a</it> = 2, 3, 5, 7, and 11.</entry>
<entry level="1" type="bullet">

if <it>n</it>  3,474,749,660,383, it is enough to test <it>a</it> = 2, 3, 5, 7, 11, and 13.</entry>
<entry level="1" type="bullet">

if <it>n</it>  341,550,071,728,321, it is enough to test <it>a</it> = 2, 3, 5, 7, 11, 13, and 17.</entry>
</list>

(Only bases <it>a</it>  <it>n</it> should be tested.) See <weblink xlink:type="simple" xlink:href="http://primes.utm.edu/prove/prove2_3.html">
http://primes.utm.edu/prove/prove2_3.html</weblink> for other criteria of this sort. These results give very fast deterministic primality tests for numbers in the appropriate range, without any assumptions.</p>
<p>

Because BPP is contained in <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/2052415.xml">
P/poly</link></group>
</collection>
</class>
, there is such a small list of potential witnesses for every possible input size (at most <it>n</it> values for <it>n</it>-bit numbers). However, no finite set of bases is sufficient for all composite numbers.
Alford, Granville, and Pomerance<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> have shown that there exist infinitely many composite numbers <it>n</it> whose smallest compositeness witness is at least <math>(\ln n)^{1/(3\ln\ln\ln n)}\;</math>. They also argue heuristically that the smallest number <it>w</it> such that every composite number below <it>n</it> has a compositeness witness less than <it>w</it> should be of order <math>\Theta(\log n\,\log\log n)</math>.</p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
Gary L. Miller, <it>Riemann's Hypothesis and Tests for Primality</it>, Journal of Computer and System Sciences 13 (1976), no. 3, pp. 300–317.</entry>
<entry id="2">
Michael O. Rabin, <it>Probabilistic algorithm for testing primality</it>, Journal of Number Theory 12 (1980), no. 1, pp. 128–138. <weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016/0022-314X(80)90084-0"></weblink> </entry>
<entry id="3">
René Schoof, <it>Four primality testing algorithms</it>, to appear in: Surveys in algorithmic number theory, Cambridge University Press.<weblink xlink:type="simple" xlink:href="http://www.mat.uniroma2.it/~schoof/millerrabinpom.pdf">
PDF</weblink> ISBN 0521808545</entry>
<entry id="4">
I. Damgård, P. Landrock, and C. Pomerance (1993), <it>Average case error estimates for the strong probable prime test</it>, Math. Comp. 61 (203) p. 177–194.</entry>
<entry id="5">
Eric Bach, <it>Explicit bounds for primality testing and related problems</it>, Mathematics of Computation 55 (1990), no. 191, pp. 355–380.</entry>
<entry id="6">
Gerhard Jaeschke, <it>On strong pseudoprimes to several bases</it>, Mathematics of Computation 61 (1993), no. 204, pp. 915–926.</entry>
<entry id="7">
W. R. Alford, A. Granville, and C. Pomerance, <it>On the difficulty of finding reliable witnesses</it>, in: Algorithmic Number Theory, First International Symposium, Proceedings (L. M. Adleman, M.-D. Huang, eds.), LNCS 877, Springer-Verlag, 1994, pp. 1–16.</entry>
</reflist>

<list>
<entry level="1" type="bullet">

 Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Pages 890–896 of section 31.8, Primality testing.</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/Rabin-MillerStrongPseudoprimeTest.html">
MathWorld – Rabin-Miller Strong Pseudoprime Test</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://primes.utm.edu/prove/prove2_3.html">
The Prime Pages</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.informationsuebertragung.ch/indexAlgorithmenRabinMiller.html">
Applet (german)</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible uncollapsed " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../527/21527.xml">
Number-theoretic</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../751/183751.xml">
Primality test</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<b><process wordnetid="105701363" confidence="0.8">
<institute wordnetid="108407330" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<association wordnetid="108049401" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../847/405847.xml">
AKS</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</association>
</thinking>
</inquiry>
</institute>
</process>
</b> · <b><link>
APR</link></b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/3609890.xml">
Ballie-PSW</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><process wordnetid="105701363" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../015/4049015.xml">
ECPP</link></higher_cognitive_process>
</trial>
</shape>
</line>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</curve>
</process>
</b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../755/157755.xml">
Fermat</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><link>
Lucas–Lehmer</link></b> · <b><it><link>
Lucas–Lehmer (Mersenne numbers)</link></it></b> · <b><it><process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../861/15371861.xml">
Lucas–Lehmer–Riesel</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</it></b> · <b><it><statement wordnetid="106722453" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../985/3225985.xml">
Proth's theorem</link></higher_cognitive_process>
</trial>
</proposition>
</experiment>
</problem_solving>
</theorem>
</thinking>
</inquiry>
</message>
</process>
</statement>
</it></b> · <b><it><link>
Pépin's</link></it></b> · <link>
Solovay–Strassen</link> · <link>
Miller–Rabin</link> · <b><problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
</b></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Sieving algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../920/2150920.xml">
Sieve of Atkin</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/73415.xml">
Sieve of Eratosthenes</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../330/14517330.xml">
Sieve of Sundaram</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/4621216.xml">
Wheel factorization</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<premise wordnetid="106753800" confidence="0.8">
<postulate wordnetid="106753299" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/15491.xml">
Integer factorization</link></proposition>
</postulate>
</premise>
</message>
</statement>
algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../392/1335392.xml">
CFRAC</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../877/1033877.xml">
Dixon's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../212/154212.xml">
ECM</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</geographical_area>
</rule>
</event>
</tract>
</location>
</field>
</region>
 · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../069/15822069.xml">
Euler's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/580668.xml">
Pollard's rho</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../753/578753.xml">
P − 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../573/1916573.xml">
P + 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <link xlink:type="simple" xlink:href="../340/582340.xml">
QS</link> · <link xlink:type="simple" xlink:href="../734/152734.xml">
GNFS</link> · <it><link xlink:type="simple" xlink:href="../132/589132.xml">
SNFS</link></it> · <link xlink:type="simple" xlink:href="../510/2608510.xml">
rational sieve</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/2132433.xml">
Fermat's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../328/3387328.xml">
Shanks' square forms</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../674/42674.xml">
Shor's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Other algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/3975814.xml">
Ancient Egyptian multiplication</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../197/4039197.xml">
Aryabhata</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../410/985410.xml">
Binary GCD</link> · <link xlink:type="simple" xlink:href="../658/4050658.xml">
Chakravala</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../377/10377.xml">
Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/99438.xml">
Extended Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../054/13644054.xml">
integer relation algorithm</link> · <link xlink:type="simple" xlink:href="../655/981655.xml">
integer square root</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/903032.xml">
Modular exponentiation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../375/3667375.xml">
Shanks-Tonelli</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<it>Italics</it> indicate that algorithm is for numbers of special forms; <b>bold</b> indicates <link xlink:type="simple" xlink:href="../951/665951.xml">
deterministic algorithm</link>for primality tests.</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</trial>
</field>
</article>
