<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 17.04.2009 05:06:46[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<O  confidence="0.9508927676800064" wordnetid="106832680">
<header>
<title>AmigaOS</title>
<id>18933304</id>
<revision>
<id>243742454</id>
<timestamp>2008-10-07T21:27:31Z</timestamp>
<contributor>
<username>Ghettoblaster</username>
<id>6603820</id>
</contributor>
</revision>
<categories>
<category>CBM software</category>
<category>AmigaOS</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox OS</name>
<parameters>
<ui>
<link xlink:type="simple" xlink:href="../699/7494699.xml">
<it>Workbench''</it></link></ui>
<screenshot>
<image width="250px" src="AmigaOS4.png">
</image>
</screenshot>
<website>
<weblink xlink:type="simple" xlink:href="http://www.amiga.com/">
amiga.com</weblink></website>
<latest_release_version>
4.1</latest_release_version>
<caption>
A screenshot of <link>
AmigaOS 4.0</link></caption>
<latest_release_date>
<link xlink:type="simple" xlink:href="../529/27529.xml">
September</link> <link xlink:type="simple" xlink:href="../825/35825.xml">
2008</link></latest_release_date>
<kernel_type>
Atypical <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link></kernel_type>
<working_state>
Current</working_state>
<family>
Amiga OS</family>
<developer>
<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../580/7580.xml">
Commodore International</link></company>
 (1.0-3.1)<link>
Haage &amp; Partner</link> (3.5-3.9)<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../072/713072.xml">
Hyperion Entertainment</link></company>
 (4.0)</developer>
<name>
AmigaOS</name>
<source_model>
<link xlink:type="simple" xlink:href="../886/18934886.xml">
Closed source</link></source_model>
<license>
<link xlink:type="simple" xlink:href="../886/18934886.xml">
Proprietary</link></license>
</parameters>
</template>


<b>AmigaOS</b> is the default native <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> of the <link xlink:type="simple" xlink:href="../980/1980.xml">
Amiga</link> personal computer. It was developed first by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../580/7580.xml">
Commodore International</link></company>
, and initially introduced in <link xlink:type="simple" xlink:href="../846/34846.xml">
1985</link> with the <link xlink:type="simple" xlink:href="../104/3104.xml">
Amiga 1000</link>. It ran on the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/20319.xml">
Motorola</link></company>
 <link xlink:type="simple" xlink:href="../826/64826.xml">
68k</link> series of <link xlink:type="simple" xlink:href="../535/64535.xml">
16-bit</link> and <link xlink:type="simple" xlink:href="../733/80733.xml">
32-bit</link> <link xlink:type="simple" xlink:href="../553/19553.xml">
microprocessor</link>s, except for AmigaOS 4 which runs on <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link> microprocessors.<p>

On top of a <link xlink:type="simple" xlink:href="../566/2204566.xml">
preemptive multitasking</link> <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> called <link xlink:type="simple" xlink:href="../611/16906611.xml">
 Exec</link>, it includes an abstraction of the Amiga's unique hardware, a disk operating system called <it>AmigaDOS</it>, a windowing system  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
 <it>API''</it></link> called <link xlink:type="simple" xlink:href="../139/7495139.xml">
<it>Intuition''</it></link> and a <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link> called <link xlink:type="simple" xlink:href="../699/7494699.xml">
<it>Workbench''</it></link>. A <link xlink:type="simple" xlink:href="../707/6707.xml">
command line interface</link> called <link>
AmigaShell</link> is also available and integrated into the system. The GUI and the CLI complete each other and share the same privileges.</p>
<p>

The current holder of the Amiga intellectual properties is <link xlink:type="simple" xlink:href="../877/3193877.xml">
Amiga Inc</link>. They oversaw the development of AmigaOS 4 but did not develop it themselves, contracting it instead to Hyperion Entertainment. As of December 26th 2006, Amiga Inc terminated Hyperion's license to continue development of AmigaOS 4. Ownership of AmigaOS (particularly 4.0) remains controversial and is currently the subject of litigation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

<sec>
<st>
 Components </st>
<p>

AmigaOS can be divided into two parts: the <it>Kickstart</it> (<link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link>) and <it>Workbench</it> disks. Versions of Kickstart and Workbench used to be released together, for use with each other. But since Workbench 3.5, the first release after <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../580/7580.xml">
Commodore International</link></company>
 stopped development, AmigaOS became software-only, standardising on Kickstart version 3.1 in ROM.</p>

<ss1>
<st>
 Kickstart </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../071/16994071.xml">
Kickstart (Amiga)</link></it>
</indent>
<image location="right" width="150px" src="Amiga_kick34.5_askforwb1.3.png" type="frame">
<caption>

The image shown by <b>Amiga OS 1.x</b> on start-up, asking the user to insert the Workbench <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link>.
</caption>
</image>
 
<b>Kickstart</b> is the <link xlink:type="simple" xlink:href="../909/40909.xml">
bootstrap</link> ROM. The Kickstart contains the code needed to boot standard Amiga hardware and many of the core components of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
. The function of Kickstart is comparable to the <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 plus the main <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> kernel in <link xlink:type="simple" xlink:href="../803/49803.xml">
IBM PC compatible</link>s. However, Kickstart provides more functionality available at boot time than would be typically expected on PC, for example, the full windowing environment.</p>
<p>

The Kickstart contained many stock parts of the Amiga's operating system, such as <it><link xlink:type="simple" xlink:href="../611/16906611.xml">
 Exec</link></it>, <it><link xlink:type="simple" xlink:href="../139/7495139.xml">
Intuition</link></it>, the core of <it>AmigaDOS</it> and functionality to use <link xlink:type="simple" xlink:href="../036/783036.xml">
Autoconfig</link> expansion hardware. This meant that a powered-on Amiga already had a lot of the essential parts of the operating system available. Later versions of the Kickstart contained drivers for <link xlink:type="simple" xlink:href="../778/2778.xml">
IDE</link> and <link xlink:type="simple" xlink:href="../313/28313.xml">
SCSI</link> controllers, <link xlink:type="simple" xlink:href="../692/61692.xml">
PC card</link> ports and various other hardware that came built into Amigas.</p>
<p>

Upon start-up or reset the Kickstart performs a number of diagnostic and system checks and then initializes the Amiga <link xlink:type="simple" xlink:href="../224/302224.xml">
chipset</link> and some core OS components. It will then examine connected boot devices and attempt to boot from the one with the highest boot priority. If no boot device is present a screen will be displayed asking the user to insert a boot disk - typically a floppy disk.</p>

</ss1>
<ss1>
<st>
Workbench</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../699/7494699.xml">
Workbench (AmigaOS)</link></it>
</indent>
<b>Workbench</b> is the name given to both the core operating system software that is not stored in the Kickstart ROM (the "Workbench disk"), and also the native graphical <link xlink:type="simple" xlink:href="../397/2281397.xml">
shell</link> for the <link xlink:type="simple" xlink:href="../980/1980.xml">
Amiga</link> computer. The Workbench environment does not have to be loaded for software to run. In fact, to take over the Amiga hardware and keep all memory and resources to themselves, many games boot directly from Kickstart (using a custom <it><link xlink:type="simple" xlink:href="../381/216381.xml">
bootblock</link></it> on the <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link>).
<image width="300px" src="Amiga_Workbench_1_3_large.png" type="thumb">
</image>

As the name suggests, the <link xlink:type="simple" xlink:href="../518/20518.xml">
metaphor</link> of a <link xlink:type="simple" xlink:href="../638/231638.xml">
workbench</link> is used, rather than a desktop; directories are depicted as <it>drawers</it>, executable files are <it>tools</it>, data files are <it>projects</it> and GUI widgets are <it>gadgets</it>. In many other aspects the interface resembles <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, with the main desktop showing icons of inserted disks and hard drive partitions, and a single menu bar at the top of every screen. Unlike the Macintosh, the standard Amiga mouse has two buttons â€“ the right mouse button operates the pull-down menus, with a Macintosh-style "release to select" mechanism.</p>
<p>

A unique feature of Workbench is <it>multiple screens</it>. These are conceptually similar to <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/34147.xml">
X Window System</link></rule>
</direction>
</protocol>
</message>
 virtual desktops or workspaces, but are generated dynamically by application programs as necessary. Each screen can have a different resolution and colour depth. A gadget in the top-right corner of the screen allows screens to be cycled â€” as the OS stores all screens in memory simultaneously, redrawing is instantaneous. Screens can also be dragged up and down by their title bars. On older Amigas this functionality was provided by the custom chipsets specially designed for the platform, but since AmigaOS4 a new technique is adopted and the screens are draggable in any direction. Drag and drop between different screens is possible too.</p>
<p>

Underlying the Workbench is the <it>Intuition</it> windowing system. This controls and draws screens, windows and gadgets, and handles input from the keyboard and mouse, passing messages to programs.</p>

<ss2>
<st>
 Workbench 2.0 user interface improvements </st>
<p>

<image width="300px" src="Wb_20.png" type="thumb">
</image>

Until Workbench 2.0, there was no unified <link xlink:type="simple" xlink:href="../076/336076.xml">
look and feel</link> design standard â€” application developers had to write their own widgets (both buttons and menus), with Intuition providing minimal support. With Workbench 2.0 came <it>gadtools.library</it>, which provided  standard widget sets, and the <it>Amiga User Interface Style Guide</it>, which explained how applications should be laid out for consistency.</p>
<p>

Workbench 2.0 also added support for <it>public screens</it>. Instead of the Workbench screen being the only shareable screen, applications could create their own named screens to share with other applications.</p>
<p>

Workbench 2.0 introduced <it><link xlink:type="simple" xlink:href="../329/78329.xml">
AmigaGuide</link></it>, a simple <link xlink:type="simple" xlink:href="../460/13460.xml">
hypertext</link> markup scheme and browser, for providing online help inside applications. It also introduced <it>Installer</it>, a standard software installation program, driven by a <link xlink:type="simple" xlink:href="../016/18016.xml">
LISP</link>-like scripting language.</p>
<p>

Finally, Workbench 2.0 rectified the problem of developers <link xlink:type="simple" xlink:href="../077/2953077.xml">
hooking</link> directly into the input-events stream to capture keyboard and mouse movements, often locking up the whole system. Workbench 2.0 provided <it>Commodities</it>, a standard interface for modifying or scanning input events. This included a standard method for specifying global "hotkey" key-sequences, and a <it>Commodities Exchange</it> registry for the user to see what commodities were running.</p>

</ss2>
<ss2>
<st>
 Workbench 2.1 user interface improvements </st>
<p>

Workbench 2.1 introduced <link>
ASL.library</link>. ASL or also "Amiga Standard Library" provides standard requesters panels for loading and saving and input form windows for any Amiga software.</p>

</ss2>
</ss1>
<ss1>
<st>
 AmigaDOS </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../823/88823.xml">
AmigaDOS</link></it>
</indent>
<b>AmigaDOS</b> provides the <link xlink:type="simple" xlink:href="../773/147773.xml">
disk operating system</link> portion of the AmigaOS. This includes <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>s, file and directory manipulation, the <link xlink:type="simple" xlink:href="../707/6707.xml">
command-line interface</link>, file redirection, console windows, and so on.</p>
<p>

In AmigaOS 1.x, the AmigaDOS portion was based on a <link xlink:type="simple" xlink:href="../418/82418.xml">
TRIPOS</link> port by <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/82392.xml">
MetaComCo</link></institution>
</company>
, written in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../052/4052.xml">
BCPL</link></programming_language>
. Considerable amounts of functionality was only available by interfacing with libraries written in BCPL, which proved a difficult and error-prone task from C and other languages because of BCPL's idiosyncratic pointer mechanism.  The original amigados <link xlink:type="simple" xlink:href="../915/71915.xml">
CLI</link> utilities written in BCPL also had the disadvantage of occupying a relatively large memory footprint, and ran slower than equivalent C. </p>
<p>

The third-party <it>AmigaDOS Resource Project</it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> (ARP, formerly the <it>AmigaDOS Replacement Project</it><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>), a project begun by Amiga developer Charlie Heath, replaced many of the BCPL utilities with smaller and often more sophisticated equivalents written in C and assembler, and provided a  wrapper library, arp.library, which eliminated the interfacing problems in applications by automatically performing conversions from native pointers (such as those used by C or assembler) to BCPL equivalents and vice versa for all AmigaDOS functions. ARP also provided one of the first standardized <link xlink:type="simple" xlink:href="../544/849544.xml">
file requester</link>s for the Amiga, and introduced the use of more friendly UNIX-style wildcard (<link xlink:type="simple" xlink:href="../117/484117.xml">
globbing</link>) functions in command line parameters.  Other innovations were an improvement in the range of date formats accepted by commands and the facility to make a command resident, so that it only needs to be loaded into memory once and remains in memory to reduce the cost of loading in subsequent uses.</p>
<p>

From AmigaOS 2.x onwards, AmigaDOS was rewritten in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 and <link xlink:type="simple" xlink:href="../368/1368.xml">
Assembler</link>, retaining full 1.x BCPL program compatibility, and incorporated most of ARP into the OS.</p>
<p>

As from AmigaOS 4.0, the DOS abandoned completely any legacy with BCPL, and starting from AmigaOS 4.1, it has been rewritten with full 64bit support.</p>
<p>

AmigaDOS has all main features of other DOS in other systems. It allows <link xlink:type="simple" xlink:href="../829/607829.xml">
command redirection</link>, <link xlink:type="simple" xlink:href="../117/1236117.xml">
piping</link>, scripting (<link xlink:type="simple" xlink:href="../030/15264030.xml">
batch programming</link>) and has also all sets of commands like <b>Echo</b>, <b>If</b>, <b>Then</b>, <b>EndIf</b>, <b>Val</b>, <b>Skip</b>, etcetera, to deal with structured script programming. Scripts can be marked with "<b>S</b>" (Script) bit flag, and then executed automatically. ADOS commands featured a simple template help invoking question mark "<b>?</b>" since 1985 (when command help template was a very rare feature amongst other operating systems). Users can pause the output of a command, and resume it. There is command break function, and Amiga fetured its system of protection bits and wildcard characters to indicate with a single command entire groups of data files. Commands could be nested in a single line, and Amiga has  command "<b>run</b>", that if invoked before any other DOS command or productivity program, then runs these executables as separate processes and keeps always free the shell text based console windows for future input. AmigaOS is case insensitive and features a complete system of Global and local <link xlink:type="simple" xlink:href="../818/32818.xml">
variables</link>.</p>
<p>

For more informations about Scripting, command output and redirection, etcetera, refer to main article <link xlink:type="simple" xlink:href="../823/88823.xml">
AmigaDOS</link>.</p>

<ss2>
<st>
 Syntax of AmigaDOS commands </st>
<p>

This is an example of typical AmigaDOS command syntax:</p>
<p>

<indent level="2">

|style="background:transparent"
</indent>
|rowspan=1 valign=top| AmigaShellPrompt&amp;gt; <b>DIR</b> Df0:
|-
|
<indent level="1">

This shows the content of a directory of a floppy disk and elencates directories but without entering the directory tree.
</indent>
|-
|rowspan=1 valign=top|  AmigaShellPrompt&amp;gt; <b>DIR</b> SYS: OPT A
|-
|
|-
|rowspan=1 valign=top|  AmigaShellPrompt&amp;gt; <b>DIR</b> SYS: ALL
|-
|
<indent level="1">

The argument word "<b>OPT A</b>" or also the argument word "<b>ALL</b>" show the entire content of a volume or device, entering and expanding all directory tree. "<b>Sys:</b>" is the obliged name that indicates the boot device, whatever it could be, floppy, hard disk or CD. Note that Amiga uses always the slash character ("<b>/</b>") in command arguments or also directory paths.
</indent>
|}</p>

</ss2>
<ss2>
<st>
 Conventions of names of devices </st>
<p>

Partitions and physical drives are typically referred to as <b>DF0:</b> (floppy drive 0), <b>DH0:</b> (Device hard disk 0 or <b>HD0:</b> hard drive 0), etc.  However, unlike many operating systems, outside of built-in physical hardware devices like <b>DF0:</b> or <b>HD0:</b> the name of the single floppy disks, or the volumes or partition own names are totally arbitrary; for example a hard disk partition could be named <b>HARDDISK</b> or <b>A</b>, or <b>MyDisk</b> or any other name when it was partitioned. Volume names then will be recognized as have the same format as device names, so a disk partition on device <b>DH0:</b> called <b>Workbench</b> could be accessed either with the name <b>DH0:</b> or <b>Workbench:</b> (Note that once the name of the volume was set up, then the system adds automatically semicolon character to the name of the partition to indicate it is considered as a device as for example when showing a list of active devices. On the desktop, the name of the device appears right under device icon and without the semicolon. Users must indicate to the system that "<it>Workbench</it>" is a device "<b>Workbench:</b>" by always typing the semicolons "<b>:</b>" when they are entering informations in a requester form or into AmigaShell command based interface windows. This is mandatory.). If the partition is the same that started the boot sequence, it could also be accessed as <b>Sys:</b>. So there could various ways to indicate and access the partition that made the boot. In addition, virtual volume names could be set with the "assign" command to any directory or device; for example programs often assigned a virtual volume name to their installation directory; an example might be a fictionary worprocessor called <b>FooBarWriter</b> assigning <b>FooBar:</b> to <b>DH0:Productivity/FooBarWriter</b>.  This allows for easy relocation of installed programs.</p>

</ss2>
<ss2>
<st>
 Conventions of names and typical behaviour of virtual devices </st>
<p>

The physical device <b>DF0:</b> share the same floppy drive mechanics with <b>PC0:</b> that is the CrossDOS virtual device capable to read PC formatted floppy disks. When any PC formatted floppy disk is inserted into the floppy drive, then the Df0: floppy Amiga icon will change to indicate that the disk is unknown for normal Amiga device, and it will show four question marks <b>'????</b>' as standard "unknown" volume name, while the <b>PC0:</b> icon will appear revealing the name of the PC formatted disk. Any disk change with Amiga formatted disks will invert this behaviour.</p>

</ss2>
<ss2>
<st>
 Filesystems </st>
<p>

AmigaOS supports various filesystems and variants.</p>
<p>

First filesystem was simply called <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../938/844938.xml">
Amiga FileSystem</link></instrumentality>
</artifact>
</system>
, and was suitable mainly for floppy disks, because it did not support automatic booting from hard disks (on floppy, booting was done using code from the bootblock). It was soon replaced by <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../935/844935.xml">
FastFileSystem</link></instrumentality>
</artifact>
</system>
, and hence the original filesystem was de facto recognized with the name of "Old" FileSystem. It also was more efficient on space and quite measurably faster, hence the name.</p>
<p>

With AmigaOS 2, FastFileSystem became an official part of the OS and was soon expanded to recognise cached partitions, international partitions allowing accented characters in file and partition names, and finally (with MorphOS and AmigaOS 4) long filenames, up to 108 characters.</p>
<p>

Both AmigaOS 4 and MorphOS featured a new version of FastFileSystem called FastFileSystem 2. FFS2 incorporated all of the features of the original FFS including, as its author put it, "some minor changes". In order to preserve backwards compatibility, there were no major structural changes. (However, FF2 on AmigaOS 4.1 differs in that it can expand its features and capabilities with the aid of <link xlink:type="simple" xlink:href="../659/23659.xml">
plug-ins</link>). </p>
<p>

As with FFS2, the AmigaOS 4 version of Smart FileSystem is a fork of original SFS also adopted by MorphOS, and is not 100% compatible with it.</p>
<p>

Other filesystems like <link xlink:type="simple" xlink:href="../045/53045.xml">
FAT16</link>, <link>
FAT32</link> from Windows or <link xlink:type="simple" xlink:href="../194/39194.xml">
ext2</link> from Linux are available through system libraries or third party modules or even into <link xlink:type="simple" xlink:href="../951/1834951.xml">
Aminet</link> freeware software repository.</p>
<p>

AmigaOS 4.1 adopted a new filesystem called <link>
JXFS</link> capable to support partitions over a Terabyte of size.</p>
<p>

Amiga also supports two filesystems from third party manufacturers called <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../979/844979.xml">
Professional FileSystem</link></instrumentality>
</artifact>
</system>
 that is a filesystem with an easy structure, based on <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link>, allowing high internal coherence, capable to defrag itself on the fly, and do not requires to be unmounted before being mounted again; and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../421/1010421.xml">
Smart FileSystem</link></instrumentality>
</artifact>
</system>
 that is a very interesting <link xlink:type="simple" xlink:href="../266/439266.xml">
journaling</link> filesystem which performs journaled activities during system inactivities, and has been chosen by <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../521/263521.xml">
MorphOS</link></O>
 as standard filesystem.</p>

<ss3>
<st>
 Official variants of Amiga filesystems </st>
<p>

<b>Old File System</b> /<b>Fast File System</b></p>
<p>

<list>
<entry level="1" type="bullet">

OFS (DOS0)</entry>
<entry level="1" type="bullet">

FFS (DOS1)</entry>
<entry level="1" type="bullet">

OFS International (DOS2)</entry>
<entry level="1" type="bullet">

FFS International (DOS3)</entry>
<entry level="1" type="bullet">

OFS Directory Caching (DOS4)</entry>
<entry level="1" type="bullet">

FFS Directory Caching (DOS5)</entry>
</list>
</p>
<p>

<b>Fast File System 2 (AmigaOS4.x/MorphOS)</b></p>
<p>

<list>
<entry level="1" type="bullet">

OFS Long filenames (DOS6)</entry>
<entry level="1" type="bullet">

FFS Long filenames (DOS7)</entry>
</list>
</p>
<p>

(Both DOS6 and DOS7 feature International filenames featured in DOS2 and DO3, but not Directory Caching, which was abandoned due to bugs in the original implementation. DOS4 and DOS5 are not recommended for use for this reason.)</p>
<p>

Dostypes are backwards compatible with each other, but not forward compatible. A DOS7 formatted disk cannot be read on original Amiga FFS, and a DOS3 disk cannot be read on a KS1.3 Amiga. However, any disk formatted with DOS0 using FFS or FFS2 can be read by any version of the Amiga operating system. For this reason, DOS0 tended to be the format of choice of software developers distributing on floppy, except where a custom filesystem and bootblock was used - a common practice in Amiga games. Where software needed AmigaOS 2 anyway, DOS3 was generally used.</p>

</ss3>
<ss3>
<st>
 FastFileSystem2 Plug-ins </st>
<p>

With first update of AmigaOS 4.0 in <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>, it has been released the first two plugins for FFS2:</p>
<p>

<list>
<entry level="1" type="bullet">

<b>fs_plugin_cache</b>: increments performances of FFS2 by introducing a new method of data buffering.</entry>
<entry level="1" type="bullet">

<b>fs_plugin_encrypt</b>: data encryption plugin for partitions using <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../940/3940.xml">
Blowfish</link></cipher>
 algorythm.</entry>
</list>
</p>

</ss3>
</ss2>
<ss2>
<st>
 Filename Extensions </st>
<p>

Amiga has only one obliged filename extension for filenames and is "<b>.info</b>" that is appended as suffix to filenames of icons. If it exists a filename called <b>myprog</b>, then <b>myprog.info</b> is the file containing icons, its position on the desktop (AmigaOS is capable to "snapshot" icons in places defined by the user), program metadata such as options and keywords, and other informations about the file.</p>
<p>

There is no mandatory issue in Amiga to indicate programs and projects (datafiles) with extensions. Any user can rename files with any suffix if he likes to, or if there is the need to rename files for a matter of precision. Amiga will recognize executable by using the first sequence of bytes in the binary header of file (magic cookie number), and it will recognize the datafiles by the icons, or by its informations again contained in headers. A list of files like "data1", "data2", "data3", etc, will be considered the same even if it has been renamed "data1.lbm, "data2.jpg", "data3.lbm". Amiga will open the correct software for any kind of these data file depending from the info contained in its icon, or by using <link xlink:type="simple" xlink:href="../817/93817.xml">
Datatypes</link> Amiga automatic system for recognizing datafiles based on file headers.</p>

</ss2>
</ss1>
<ss1>
<st>
 Graphics </st>
<p>

Up to version 3, AmigaOS only supported the <link xlink:type="simple" xlink:href="../784/22784.xml">
native Amiga graphics chipset</link>, via <it>graphics.library</it>. This led developers to avoid OS functionality for drawing, and go straight for the underlying hardware. Third-party graphics cards were only supported via unofficial solutions. The ideal situation, where the AmigaOS could directly support any graphics system, was termed <it>retargetable graphics</it> (RTG) <weblink xlink:type="simple" xlink:href="http://www.amigau.com/aig/amigartg.html">
http://www.amigau.com/aig/amigartg.html</weblink>. Release 3.1 included some support for third party graphics cards, such as the Picasso. With AmigaOS 3.5, some RTG systems were bundled with the OS, allowing the use of common hardware cards other than the native Amiga chipsets. The main RTG systems are <link xlink:type="simple" xlink:href="../085/2051085.xml">
CyberGraphX</link>, <link>
Picasso 96</link> and <link xlink:type="simple" xlink:href="../077/278077.xml">
EGS</link>.</p>
<p>

The Amiga did not have any official <link xlink:type="simple" xlink:href="../073/10175073.xml">
3D graphics</link> capability, so it had no standard 3D graphics interface. Graphics card manufacturers provided their own standards, which include <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../024/1261024.xml">
MiniGL</link></room>
</library>
</area>
</artifact>
</structure>
, <link>
Warp3D</link>, Storm<link xlink:type="simple" xlink:href="../086/1498086.xml">
Mesa</link> (<it>agl.library</it>) and <link>
CyberGL</link>. </p>
<p>

The Amiga was born at a time when there was almost no concept of 3D graphics libraries to enhance desktop GUIs and computer rendering capabilities but, thanks to its graphic capabilities, the Amiga was one of the first widespread 3D development platforms. <link>
VideoScape 3D</link> was one of the earliest 3D rendering &amp; animation systems, as well as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../192/533192.xml">
TrueSpace</link></software>
 3D. Then Amiga lead the 3D software market for years with software like <link xlink:type="simple" xlink:href="../485/8826485.xml">
Imagine</link> and NewTek's <link xlink:type="simple" xlink:href="../652/474652.xml">
Lightwave</link> (used to render television shows like Babylon 5).</p>
<p>

Likewise, while the Amiga is well known for its ability to easily <link xlink:type="simple" xlink:href="../005/163005.xml">
genlock</link> with video, it has no built-in <link xlink:type="simple" xlink:href="../078/6773078.xml">
video capture</link> interface. In its golden age, the Amiga supported a vast market of third-party interfaces for video capture from American and European manufacturers. There were internal and external hardware solutions, called frame grabbers, for capturing individual or sequences of video frames, including: <link>
Newtronic</link> Videon, <link xlink:type="simple" xlink:href="../593/151593.xml">
Newtek</link> DigiView <weblink xlink:type="simple" xlink:href="http://www.newtek.com/newtek/milestones.php">
http://www.newtek.com/newtek/milestones.php</weblink>, Graffiti external 24bit <link xlink:type="simple" xlink:href="../963/149963.xml">
framebuffer</link>, the <link>
Digilab</link>, the <link>
Videocruncher</link>, <link>
Firecracker 24</link>, Vidi Amiga 12, Vidi Amiga 24bit and 24RT (Real Time), Newtek <link xlink:type="simple" xlink:href="../588/151588.xml">
Video Toaster</link>, <link xlink:type="simple" xlink:href="../852/2699852.xml">
GVP</link> <link>
Impact Vision IV24</link>, Macrosystem <link>
VLab Motion</link> and <link>
VLab PAR</link>, DPS <link>
PAR</link> (Personal Animation Recorder), <link>
VHI (Video Hardware Interface)</link> by IOSPIRIT GmbH, <link>
DVE-10</link>, etc. Some solutions were hardware plug-ins for Amiga graphic cards like the <link>
Merlin XCalibur</link> module, or the DV module built for the Amiga clone <link xlink:type="simple" xlink:href="../347/507347.xml">
Draco</link> from the German firm Macrosystem. Modern <link xlink:type="simple" xlink:href="../075/24075.xml">
PCI</link> bus TV expansion cards and their capture interfaces are supported through <it>tv.library</it> by Elbox Computer and <it>tvcard.library</it> by Guido Mersmann.</p>
<p>

Amiga graphic engines and graphic widget libraries are <link xlink:type="simple" xlink:href="../695/13823695.xml">
ReAction GUI</link>, used in AmigaOS 3.9 and 4.0, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../597/1490597.xml">
MUI</link></software>
 (Magical User Interface) used in all Amiga systems and natively in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../521/263521.xml">
MorphOS</link></O>
 as standard graphic engine, and <link>
Cygnix</link> that provides Amiga with a full Unix/Linux <link xlink:type="simple" xlink:href="../147/34147.xml">
X11</link> compatible graphic environment. Some vector graphic libraries, like <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../161/1062161.xml">
Cairo</link></room>
</library>
</area>
</artifact>
</structure>
 and <link xlink:type="simple" xlink:href="../708/8197708.xml">
Anti-Grain Geometry</link> are also available.</p>
<p>

All modern Amiga systems have made large use of cross-platform <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../199/29199.xml">
SDL</link></room>
</library>
</area>
</artifact>
</structure>
 (simple DirectMedia Layer) engine for games and other multimedia programs.</p>

<ss2>
<st>
 3D Accelerated GUIs </st>
<p>

Following modern trends in evolution of graphical interfaces AmigaOS 4.1 uses <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../161/1062161.xml">
Cairo</link></room>
</library>
</area>
</artifact>
</structure>
 2D vector based interface integrated with 3D hardware accelerated <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../049/2049.xml">
Porter-Duff</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 image composition engine, while its counterpart and competitor MorphOS 2.0 features a new 3D<work wordnetid="100575741" confidence="0.8">
<environment wordnetid="113934596" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<situation wordnetid="113927383" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../540/1438540.xml">
Ambient</link></activity>
</psychological_feature>
</situation>
</act>
</undertaking>
</state>
</event>
</environment>
</work>
 a complete 3D GUI based on a subset of <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../497/22497.xml">
OpenGL</link></software>
.</p>

</ss2>
</ss1>
<ss1>
<st>
Audio</st>
<p>

Up to version 3.1, AmigaOS only supported the original Amiga chipset's sound capabilities, via <it>audio.device</it>. Support for third-party audio cards was vendor-dependent, until the creation and adoption of <link xlink:type="simple" xlink:href="../674/17051674.xml">
AHI</link> <weblink xlink:type="simple" xlink:href="http://www.lysator.liu.se/ahi/">
http://www.lysator.liu.se/ahi/</weblink> as a de facto standard. AmigaOS itself did not support <link xlink:type="simple" xlink:href="../461/1692461.xml">
MIDI</link> until 3.1 when Roger Dannenberg's <link xlink:type="simple" xlink:href="../431/17073431.xml">
camd.library</link> was adapted as the standard MIDI API. Commodore's version of camd.library also included a built in driver for the serial port. The later open source version of camd.library by Kjetil Matheussen did not provide a built in driver for the serial port, but provided an external driver instead.</p>

<ss2>
<st>
Speech synthesis</st>
<p>

The original Amiga was launched with <link xlink:type="simple" xlink:href="../799/42799.xml">
speech synthesis</link> software, developed by Softvoice, Inc. <weblink xlink:type="simple" xlink:href="http://www.text2speech.com/#aboutsv">
http://www.text2speech.com/#aboutsv</weblink> This could be broken into three main components: <it>narrator.device</it>, which could play and modulate all <link xlink:type="simple" xlink:href="../980/22980.xml">
phoneme</link>s used in <speech wordnetid="107109196" confidence="0.8">
<dialect wordnetid="107155661" confidence="0.8">
<auditory_communication wordnetid="107109019" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<non-standard_speech wordnetid="107155081" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/1890.xml">
American English</link></non-standard_speech>
</language>
</auditory_communication>
</dialect>
</speech>
, <it>translator.library</it>, which could translate English text to American English phonemes, and the <it>SPEAK:</it> handler, which command-line users could redirect output to, to have it spoken.</p>
<p>

In the original 1.x releases, a <it>Say</it> program in Utilities and a basic demo was also included with <link xlink:type="simple" xlink:href="../001/1451001.xml">
AmigaBASIC</link> programming examples.</p>
<p>

The speech synthesiser was occasionally used in third-party programs, often educational software. The word processors Prowrite and Excellence! could read out documents using the synthesiser.</p>
<p>

Despite the limitation on the <it>narrator.device</it>'s phonemes, Francesco Devitt wrote a new version of <it>translator.library</it> which could translate any language to phonemes, given a set of rules for that language, and thus provided multilingual speech synthesis. <weblink xlink:type="simple" xlink:href="http://uk.aminet.net/util/libs/translator42.readme">
http://uk.aminet.net/util/libs/translator42.readme</weblink></p>

</ss2>
</ss1>
<ss1>
<st>
ARexx</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../505/1858505.xml">
ARexx</link></it>
</indent>
The Amiga OS has support for the <link xlink:type="simple" xlink:href="../858/25858.xml">
Rexx</link> language, called ARexx (short for "Amiga Rexx"), and is a script language which allows for full OS scripting, similar to <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/88392.xml">
AppleScript</link></language>
, intra-application scripting, similar to <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../778/32778.xml">
VBA</link></programming_language>
 in <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../288/20288.xml">
Microsoft Office</link></software>
, as well as inter-program communication.  Having a single scripting language for any application on the operating system is beneficial to users, instead of having to learn a new language for each application.</p>
<p>

Programs can listen on an "ARexx port" for string messages. These messages can then be interpreted by the program in a similar fashion to a user pushing buttons. For example, an ARexx script run in an e-mail program could save the currently displayed email, invoke an external program which could extract and process information, and then invoke a viewer program. This allows applications to control other applications by sending data back and forth directly with memory handles instead of saving files to disk and then reloading.</p>

</ss1>
<ss1>
<st>
RAM disk</st>
<p>

The Amiga OS has a dynamically-sized RAM disk, which resizes itself automatically to its contents.  Starting with AmigaOS 2.x, operating System configuration files were loaded into the RAM disk on boot, greatly speeding operating system usage.  Other files could be copied to the RAM disk like any standard device for quick modification and retrieval.  Also beginning in AmigaOS 2.x, the RAM disk supported file-change notification, which was mostly used to monitor prefs files for changes.</p>
<p>

The Amiga OS also has support for a fixed-capacity recoverable RAM disk, which functions as a standard RAM disk, but can maintain its contents on restart. It is commonly called the RAD disk, and it can be used as a boot disk (with boot sector).</p>

</ss1>
</sec>
<sec>
<st>
Technical overview</st>
<p>

<celebrity wordnetid="109903153" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../152/256152.xml">
John C. Dvorak</link></celebrity>
 stated in 1996:
The AmigaOS "remains one of the great operating systems of the past 20 years, incorporating a small kernel and tremendous <link xlink:type="simple" xlink:href="../126/20126.xml">
multitasking</link> capabilities the likes of which have only recently been developed in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
 and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
. The biggest difference is that the AmigaOS could operate fully and multitask in as little as 250 K of address space. Even today, the OS is only about 1MB in size. And to this day, there is very little a memory-hogging CD-ROM-loading OS can do the Amiga can't. Tight code â€” there's nothing like it.
I've had an Amiga for maybe a decade. It's the single most reliable piece of equipment I've ever owned. It's amazing! You can easily understand why so many fanatics are out there wondering why they are alone in their love of the thing. The Amiga continues to inspire a vibrant â€” albeit cultlike â€” community, not unlike that which you have with Linux, the Unix clone."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>



<ss1>
<st>
Libraries and devices</st>
<p>

The main <link xlink:type="simple" xlink:href="../133/939133.xml">
modularisation</link> technique in AmigaOS is based on <link xlink:type="simple" xlink:href="../421/106421.xml">
dynamically-loaded shared libraries</link>, either stored as a file on disk with a ".library" filename extension, or stored in the <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Kickstart%22])">
Kickstart</link> ROM. All libraries functions are accessed via an indirect <link xlink:type="simple" xlink:href="../800/6894800.xml">
jump table</link>, which is a negative offset to the library base pointer. That way, every library function can be <link xlink:type="simple" xlink:href="../153/475153.xml">
patched</link> or <link xlink:type="simple" xlink:href="../077/2953077.xml">
hooked</link> at run-time, even if the library is stored in ROM.</p>
<p>

The most important library in AmigaOS is <it>exec.library</it> (<link xlink:type="simple" xlink:href="../611/16906611.xml">
Exec</link>), which can be considered a <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link>, as well as a library. It acts as a <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduler</link> for tasks running on the system, providing <link xlink:type="simple" xlink:href="../566/2204566.xml">
pre-emptive multitasking</link> with prioritised <link xlink:type="simple" xlink:href="../074/233074.xml">
round-robin scheduling</link>. Exec also provides access to other libraries and high-level <link xlink:type="simple" xlink:href="../106/152106.xml">
inter-process communication</link> via <link xlink:type="simple" xlink:href="../867/1324867.xml">
message passing</link>. (Other microkernels have had performance problems because of the need to copy messages between address spaces. Since the Amiga has only one address space, Exec message passing is quite efficient.) The only fixed memory address in the Amiga software (address 4) is a pointer to <it>exec.library</it>, which can then be used to access other libraries.  Exec was designed and implemented by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../096/295096.xml">
Carl Sassenrath</link></scientist>
</person>
.</p>
<p>

Unlike traditional operating systems, the exec kernel does not run "privileged". Contemporary operating systems for the 68000 such as <link xlink:type="simple" xlink:href="../077/12098077.xml">
Atari TOS</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../071/29071.xml">
SunOS</link></O>
 used <link xlink:type="simple" xlink:href="../231/59231.xml">
trap</link> instructions for invoking kernel functions. This made the kernel functions run in the 68000's <it>supervisor mode</it>, while user software ran in the unprivileged <it>user mode</it>. By contrast, exec function calls are made with the library jump table, and the kernel code normally executes in user mode. Whenever supervisor mode is needed, either by the kernel or user programs, the library functions Supervisor() or SuperState() are used.</p>
<p>

<link xlink:type="simple" xlink:href="../101/9101.xml">
Device driver</link>s are also libraries, but they implement a standardised interface. Applications do not usually call devices directly as libraries, but use the <it>exec.library</it> I/O functions to indirectly access them. Like libraries, devices are either files on disk (with the ".device" extension), or stored in the Kickstart ROM.</p>

</ss1>
<ss1>
<st>
Handlers, AmigaDOS and filesystems</st>
<p>

The higher-level part of device and resource management is controlled by <it>handlers</it>, which are not libraries, but <link xlink:type="simple" xlink:href="../191/1655191.xml">
tasks</link>, and communicate by passing messages.</p>
<p>

One important type of handler is a <link xlink:type="simple" xlink:href="../280/1010280.xml">
filesystem</link> handler. The AmigaOS can make use of any filesystem for which a handler has been written, a possibility that has been exploited by programs like <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../544/2899544.xml">
CrossDOS</link></instrumentality>
</artifact>
</system>
 and by a few "alternative" file systems to the standard <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../938/844938.xml">
OFS</link></instrumentality>
</artifact>
</system>
 and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../935/844935.xml">
FFS</link></instrumentality>
</artifact>
</system>
. These file systems allow one to add new features like <link xlink:type="simple" xlink:href="../073/48073.xml">
journaling</link> or <link xlink:type="simple" xlink:href="../955/1347955.xml">
file privilege</link>s, which aren't found in the standard operating system.</p>
<p>

Handlers typically expose a <it>device name</it> to the <link xlink:type="simple" xlink:href="../773/147773.xml">
DOS</link>, which can be used to access the peripheral (if any) associated with the handler.</p>
<p>

As an example of these concepts, the <it>SPEAK: handler</it> can have text sent to it. The handler makes use of <it>translator.library</it>, which converts text into <link xlink:type="simple" xlink:href="../980/22980.xml">
phoneme</link>s, then it writes the phonemes to <it>narrator.device</it>, which translates the phonemes into intoned speech samples and itself uses <it>audio.device</it> to play them through the Amiga's audio hardware.</p>
<p>

Device names are <link xlink:type="simple" xlink:href="../063/46063.xml">
case insensitive</link> (uppercase by convention) strings followed by a <link xlink:type="simple" xlink:href="../131/59131.xml">
colon</link>. After the colon a <it>specifier</it> can be added, which gives the handler additional information about <it>what</it> is being accessed and <it>how</it>. In the case of filesystem, the specifier usually consists of a <link xlink:type="simple" xlink:href="../357/403357.xml">
path</link> to a file in the filesystem; for other handlers, specifiers usually set characteristics of the desired input/output channel (for the <it>SER:</it> serial port driver, for example, the specifier will contain <link xlink:type="simple" xlink:href="../290/272290.xml">
bit rate</link>, <link xlink:type="simple" xlink:href="../992/200992.xml">
start and stop bits</link>, etc).</p>
<p>

Filesystems expose <it>drive names</it> as their device names. For example, <it>DF0:</it> by default refers to the first floppy drive in the system. On many systems <it>DH0:</it> is  used to refer to the first hard drive.</p>
<p>

Filesystems also expose <it>volume names</it>, following the same syntax as device names: these identify the specific medium in the file system-managed drive. If <it>DF0:</it> contains a disk named "Workbench", then <it>Workbench:</it> will be a volume name that can be used to access files in <it>DF0:</it>.</p>
<p>

If one wanted to access a file named "Amp" located in directory "Win" of the disk with name "Work" in drive <it>DF0:</it>, one could write
DF0:Win/Amp
or
Work:Win/Amp
However, these are not completely equivalent, since when the latter form is used, the system knows that the wanted volume <b>is</b> "Work" and not just any volume in <it>DF0:</it>. Therefore, whenever a requested file on "Work" is being accessed without volume "Work" being present in any drive, it will say something to the effect of:
Please insert volume Work in any drive</p>
<p>

<link xlink:type="simple" xlink:href="../783/5783.xml">
Programs</link> often need to access files without knowing their physical location (either the drive or the volume): they only know the "logical path" of the file, i.e. whether the file is a library, a documentation file, a translation of the program's messages, etc.</p>
<p>

This is solved in AmigaOS by the use of <it>assigns</it>. An assign follows, again, the same syntax as a device name; however, it already points to a directory inside the filesystem. The place an assign points to can be changed at any time by the user. Standard assigns that are generally present in an AmigaOS system include
<list>
<entry level="1" type="bullet">

 <it>SYS:</it>, which points to the boot drive's root directory.</entry>
<entry level="1" type="bullet">

 <it>C:</it>, which points to a directory containing shell commands. At boot time, this is SYS:C, if it exists, otherwise SYS:. The <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../357/403357.xml#xpointer(//*[./st=%22PATH_variable%22])">
command path</link></instrumentality>
</artifact>
</system>
 defaults to C: and the current working directory, so putting executables in C: allows them to be executed simply by typing their name.</entry>
<entry level="1" type="bullet">

 <it>DEVS:</it>, which points to a directory containing the system's devices. At boot time, this is SYS:Devs if that directory exists, otherwise SYS:.</entry>
<entry level="1" type="bullet">

 <it>L:</it>, which points to a directory containing AmigaDOS handlers and filesystems. At boot time, this is SYS:L if it exists, otherwise L: is not automatically created.</entry>
<entry level="1" type="bullet">

 <it>LIBS:</it>, which points to a directory containing the system's libraries. At boot time, this is SYS:Libs if that directory exists, otherwise SYS:.</entry>
<entry level="1" type="bullet">

 <it>S:</it>, which points to a directory with scripts, including the startup-sequence which is executed automatically at boot time, if it exists. At boot time, this is SYS:S if it exists, otherwise S: is not automatically created.</entry>
<entry level="1" type="bullet">

 <it>PROGDIR:</it>, a special assign that always points to the directory containing the currently running executable. So, if you run "SYS:Tools/Multiview" and "SYS:System/Format", PROGDIR: points at SYS:Tools for Multiview while simultaneously pointing at SYS:System for the Format command. This feature was introduced in Workbench 2.0.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
AmigaOS influence on other operating systems</st>
<p>

<image width="150px" src="AmigaOS.svg" type="thumb">
<caption>

AmigaOS and clones
</caption>
</image>

AmigaOS has spawned at least two "clone" operating systems over time.</p>
<p>

<list>
<entry level="1" type="bullet">

 <b><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../614/11193614.xml">
AROS Research Operating System</link></O>
</b> (AROS) is an attempt to clone the AmigaOS API in a portable open-source operating system. Although not binary compatible with AmigaOS (unless running on 68k), users have reported it to be highly source code compatible.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <b><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../521/263521.xml">
MorphOS</link></O>
</b> is a PowerPC native operating system, originally created when the future of the Amiga looked uncertain. It provides binary compatibility with "OS-friendly" AmigaOS applications (that is, those applications which do not access any native, legacy Amiga hardware directly). A version which runs on Classic Amigas with PPC accelerator cards has been released.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Although not strictly Amiga related, a fork of the <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
 4.8 release, called <b><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../229/294229.xml">
DragonFly BSD</link></O>
</b>, has been created by a former FreeBSD developer and Amiga programmer <link xlink:type="simple" xlink:href="../519/428519.xml">
Matt Dillon</link>. DragonFly BSD aims to make the FreeBSD kernel more like AmigaOS architecturally, featuring message-passing in the kernel and allowing for very efficient and virtually <link xlink:type="simple" xlink:href="../827/36827.xml">
mutex</link>-free <link xlink:type="simple" xlink:href="../318/50318.xml">
SMP</link> support.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b><link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link></b> features also a centralized structure supporting Datatypes, which is a direct inheritance from the same Amiga original solution which allow the entire OS to recognize all kind of files (text, music, videos, documents, etc.) with standard file descriptors. Datatype system provides entire system and any productivity tools with standard loaders and savers for these files, without having the necessity to embed multiple file loading capabilities into any single program.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <b><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../711/168711.xml">
AtheOS</link></O>
</b> was inspired by AmigaOS, and originally intended to be a clone of AmigaOS. <link xlink:type="simple" xlink:href="../066/88066.xml">
Syllable</link> is a fork of AtheOS, and includes some AmigaOS and <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link> like qualities.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 The operating system of the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/36168.xml">
3DO Interactive Multiplayer</link></system>
 bore a very strong resemblance to AmigaOS, and was developed by <link xlink:type="simple" xlink:href="../341/2469341.xml">
RJ Mical</link>,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> the creator of the Amiga's <link xlink:type="simple" xlink:href="../139/7495139.xml">
Intuition</link> user interface.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
Easter eggs</st>
<p>

Some versions of AmigaOS included <link xlink:type="simple" xlink:href="../278/5278.xml">
copyright</link> messages as <link xlink:type="simple" xlink:href="../803/239803.xml">
Easter eggs</link> that required some trickery to access.
<list>
<entry level="1" type="bullet">

 In version 1.x, by holding down both Shift keys and both <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<key wordnetid="103613294" confidence="0.8">
<link xlink:type="simple" xlink:href="../735/692735.xml">
Alt key</link></key>
</device>
</instrumentality>
</artifact>
s and pressing the function keys F1 through F10, you could see copyright messages in the title bar. As an example, pressing F10 resulted in the message "Moral support: <link>
Joe Pillow and the Dancing Fools</link>". "Joe Pillow" was the name used to book a seat on a flight which was used to transport a prototype Amiga computer to a computer trade show <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>.</entry>
<entry level="1" type="bullet">

 In versions 2.x and 3.0, the secret message was accessed by repeatedly selecting the "About..." option from the Workbench menu, and leaving the resulting <link xlink:type="simple" xlink:href="../500/217500.xml">
dialog box</link> open. When there were enough (approximately 20) dialog boxes open at the same time, the next one had a secret message instead of the normal one. In version 3.1 the secret message was openly integrated into the "About..." dialog box.</entry>
<entry level="1" type="bullet">

 The Amiga 1000 Kickstart floppy diskette master for AmigaDOS 1.0 was not erased prior to duplication, and contains the remnants of various source code and header text files on the disk.</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
http://www.merlancia.us/amiga-hyperion/decmcewenshow_case_doc.pdf</entry>
<entry id="2">
http://uk.aminet.net/misc/antiq/ARP_13.readme</entry>
<entry id="3">
ARP is referred to as the AmigaDOS Replacement Project in ARP version 1.1's arpbase.h, available from ftp://ftp.funet.fi/pub/amiga/ancient/ex-amiga-s/archive/</entry>
<entry id="4">
From PC Magazine, <link xlink:type="simple" xlink:href="../571/22571.xml">
October 22</link>, <link xlink:type="simple" xlink:href="../636/34636.xml">
1996</link>
Inside Track
By John C. Dvorak</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.mical.org/workhistory/">
Mical Page</weblink></entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://arstechnica.com/articles/culture/a-history-of-the-amiga-part-3.ars/3">
A history of the Amiga, part 3: The first prototype: Page 3</weblink></entry>
<entry id="7">
Article about Joe Pillow on AmigaU http://www.amigau.com/aig/pillow.html</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../722/4905722.xml">
AmigaOS versions</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../614/11193614.xml">
AROS</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../531/981531.xml">
Comparison of operating systems</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://os4.hyperion-entertainment.biz/">
Official AmigaOS 4 homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://arstechnica.com/reviews/os/amiga.ars">
AmigaOS4 PreRelease Update 1 review</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.intuitionbase.com/static.php?section=en_upd4-first_impress">
AmigaOS4 PreRelease Update 4 first impressions</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://os.amigaworld.de/index.php?lang=en">
AmigaOS Support homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.gregdonner.org/workbench">
The Workbench Nostalgia Page</weblink> â€“ Very detailed information on all known versions of AmigaOS.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.amigahistory.co.uk/">
Amiga History Guide</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.amigascene.nl">
AmigaScene.nl</weblink> - Information about Workbench GUI concepts and other Amiga / AmigaOne related material (Dutch)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://gega.homelinux.net/AmigaDevDocs/">
Reference Library</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://UtilityBase.com/">
Development site dedicated to Amiga systems</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.amigaworld.net/">
Amiga user community portal</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://amiga.sourceforge.net/amigadevhelp/">
Amiga Developer Help Site</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://os4depot.net">
AmigaOS4 Free Files Archive</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.aminet.net/">
Aminet â€“ Amiga OS all versions/MorphOS Free Files Archive</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://amiga.sourceforge.net/">
Amiga.sf</weblink> Compendium of OpenSource ported software for AmigaOS</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://wandel.ca/homepage/execdis/">
Amiga Disassemblies</weblink> including a commented disassembly of the Amiga Exec multitasker </entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://wigilius.se/amiga/">
Famous Amiga Uses</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
 (
AmigaOS|category)</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../223/4918223.xml">
Companies</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../580/7580.xml">
Commodore International</link></company>
 &amp;bull; <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../072/713072.xml">
Hyperion Entertainment</link></company>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../457/7878457.xml">
Computer</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../980/1980.xml">
Amiga</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../816/29816.xml">
Technology</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../699/7494699.xml">
Workbench</link> &amp;bull; <link xlink:type="simple" xlink:href="../139/7495139.xml">
Intuition</link> &amp;bull; <link xlink:type="simple" xlink:href="../823/88823.xml">
AmigaDOS</link> &amp;bull; <link xlink:type="simple" xlink:href="../505/1858505.xml">
ARexx</link> &amp;bull; <link xlink:type="simple" xlink:href="../001/1451001.xml">
AmigaBASIC</link> &amp;bull; <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../329/78329.xml">
Amigaguide</link></format>
</information>
</message>
 &amp;bull; <link xlink:type="simple" xlink:href="../877/4334877.xml">
Software</link> &amp;bull; <link xlink:type="simple" xlink:href="../647/66647.xml">
Games</link> &amp;bull; <link xlink:type="simple" xlink:href="../155/42155.xml">
Demos</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
 (<link xlink:type="simple" xlink:href="../722/4905722.xml">
versions</link>) &amp;bull; <link xlink:type="simple" xlink:href="../614/11193614.xml">
AROS</link> &amp;bull; <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../521/263521.xml">
MorphOS</link></O>
</col>
</row>
</table>
</col>
</row>
</table>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;Â·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;Â·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;Â·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;Â·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;Â·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;Â·  <link>
Supervisor mode</link>)&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;Â·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;Â·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
moreâ€¦</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;Â·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;Â·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</O>
</article>
