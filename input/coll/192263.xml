<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:27:57[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<platform  confidence="0.8" wordnetid="103961939">
<structure  confidence="0.8" wordnetid="104341686">
<artifact  confidence="0.8" wordnetid="100021939">
<surface  confidence="0.8" wordnetid="104362025">
<area  confidence="0.8" wordnetid="102735688">
<horizontal_surface  confidence="0.8" wordnetid="103536348">
<library  confidence="0.8" wordnetid="103660909">
<room  confidence="0.8" wordnetid="104105893">
<header>
<title>Runtime</title>
<id>192263</id>
<revision>
<id>244237886</id>
<timestamp>2008-10-09T22:26:41Z</timestamp>
<contributor>
<username>Stevenrasnick</username>
<id>6026325</id>
</contributor>
</revision>
<categories>
<category>Computing platforms</category>
<category>Articles lacking in-text citations</category>
<category>Computer libraries</category>
<category>Computing terminology</category>
<category>Wikipedia articles to be split from August 2008</category>
</categories>
</header>
<bdy>

For other uses, see <link xlink:type="simple" xlink:href="../434/460434.xml">
Run time</link>.<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="150px" src="Split-arrows.svg">
<caption>

Split-arrows.svg
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 &nbsp;It has been suggested that this article be  into multiple articles.  ()</col>
</row>
</table>
</p>

<p>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, <b>runtime</b> or <b>run time</b> describes the operation of a <link xlink:type="simple" xlink:href="../783/5783.xml">
computer program</link>, the duration of its execution, from beginning to termination (compare <link xlink:type="simple" xlink:href="../766/191766.xml">
compile time</link>). The term <b>runtime</b> can also refer to a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> to manage a program written in a <link xlink:type="simple" xlink:href="../015/23015.xml">
computer language</link> while it is running. <b>Run time</b> is sometimes used to mean  <link xlink:type="simple" xlink:href="../238/473238.xml">
runtime library</link>, a library of basic code that is used by a particular <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link> but when used in this fashion, <b>runtime library</b> is more accurate.</p>
<p>

A <b>runtime environment</b> is a <link>
virtual machine state</link> which provides software services for processes or programs while a computer is running. It may pertain to the operating system itself, or the software that runs beneath it.  The primary purpose is to accomplish the objective of "platform independent" programming.</p>
<p>

Runtime activities include loading and linking of the classes needed to execute a program, optional machine code generation and dynamic optimization of the program, and actual program execution.</p>
<p>

For example, a program written in <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 would receive services from the <link xlink:type="simple" xlink:href="../389/16389.xml">
Java Runtime Environment</link> by issuing commands from which the expected result is returned by the Java software. By providing these services, the Java software is considered the runtime environment of the program. Both the program and the Java software combined request services from the operating system. The operating system kernel provides services for itself and all processes and software running under its control. The Operating System may be considered as providing a runtime environment for itself.</p>

<sec>
<st>
 Implementation details </st>
<p>

In most cases, the operating system handles loading the program with a piece of code called the <link xlink:type="simple" xlink:href="../773/483773.xml">
loader</link>, doing basic <link xlink:type="simple" xlink:href="../300/5300.xml">
memory</link> setup and linking the program with any dynamically linked libraries it references. In some cases a language or implementation will have these tasks done by the language runtime instead, though this is unusual in mainstream languages on common consumer operating systems.</p>
<p>

Some program debugging can only be performed (or are more efficient or accurate) when performed at runtime. <link xlink:type="simple" xlink:href="../775/775.xml">
Logical errors</link> and <link xlink:type="simple" xlink:href="../052/2052.xml">
array</link> bounds checking are examples. For this reason, some programming <invertebrate wordnetid="101905661" confidence="0.8">
<arthropod wordnetid="101767661" confidence="0.8">
<bug wordnetid="102236355" confidence="0.8">
<insect wordnetid="102159955" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../085/37085.xml">
bugs</link></animal>
</insect>
</bug>
</arthropod>
</invertebrate>
 are not discovered until the program is tested in a "live" environment with real data, despite sophisticated compile-time checking and pre-release testing. In this case, the end user may encounter a <it>runtime error</it> message.</p>
<p>

Early runtime libraries such as that of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
 provided such features as mathematical operations.  Other languages add more sophisticated memory <link xlink:type="simple" xlink:href="../734/6734.xml">
garbage collection</link>, often in association with support for objects.</p>
<p>

More recent languages tend to have considerably larger runtimes with considerably more functionality. Many object oriented languages also include a system known as the "dispatcher" and "<link xlink:type="simple" xlink:href="../859/7723859.xml">
classloader</link>". The <message wordnetid="106598915" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/16389.xml">
Java Virtual Machine</link></machine>
</device>
</request>
</instrumentality>
</artifact>
</message>
 (JVM) is an example of such a runtime: It also interprets or compiles the portable binary <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 programs (<link xlink:type="simple" xlink:href="../997/89997.xml">
bytecode</link>) at runtime.  The <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../402/60402.xml">
.NET framework</link></implement>
</horizontal_surface>
</tool>
</instrumentality>
</surface>
</artifact>
</platform>
 is another example of a runtime library.</p>

</sec>
<sec>
<st>
 Application errors â€” exceptions </st>
<p>

<abnormality wordnetid="114501726" confidence="0.8">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<physical_condition wordnetid="114034177" confidence="0.8">
<anomaly wordnetid="114505821" confidence="0.8">
<link xlink:type="simple" xlink:href="../231/59231.xml">
Exception handling</link></anomaly>
</physical_condition>
</state>
</condition>
</abnormality>
 is one language feature designed to handle runtime errors, providing a structured way to catch completely unexpected situations as well as predictable errors or unusual results without the amount of inline error checking required of languages without it. More recent advancements in runtime engines enable <link xlink:type="simple" xlink:href="../669/11102669.xml">
Automated Exception Handling</link> which provides 'root-cause' debug information for every exception of interest and is implemented independent of the source code, by attaching a special software product to the runtime engine.</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../906/449906.xml">
Binding (computer science)</link></method>
</know-how>
</technique>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../766/191766.xml">
Compile time</link> and <link xlink:type="simple" xlink:href="../739/5739.xml">
compiling</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../868/59868.xml">
Interpreter (computing)</link></entry>
<entry level="1" type="bullet">

 <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../840/2106840.xml">
Run-time system</link></horizontal_surface>
</surface>
</artifact>
</platform>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../913/598913.xml">
Runtime Type Information</link></entry>
</list>
</p>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="50px" src="Text_document_with_red_question_mark.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 This article or section includes a  or , but its sources remain unclear because it lacks <b>.</b>
You can  this article by introducing more precise citations . <it>(May 2008)''</it></col>
</row>
</table>

</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 Jon Byous, <weblink xlink:type="simple" xlink:href="http://java.sun.com/features/1998/05/birthday.html">
<it>Java technology: The early years''</it></weblink>. Sun Developer Network, no date [ca. 1998]. Retrieved <link xlink:type="simple" xlink:href="../710/1710.xml">
April 22</link>, <link xlink:type="simple" xlink:href="../984/35984.xml">
2005</link>.</entry>
<entry level="1" type="bullet">

 <skilled_worker wordnetid="110605985" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<inventor wordnetid="110214637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<blogger wordnetid="109860415" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../792/51792.xml">
James Gosling</link></scholar>
</causal_agent>
</alumnus>
</worker>
</computer_user>
</blogger>
</military_officer>
</creator>
</inventor>
</scientist>
</serviceman>
</engineer>
</intellectual>
</programmer>
</specialist>
</interior_designer>
</person>
</physical_entity>
</expert>
</skilled_worker>
, [https://duke.dev.java.net/green/ ''A brief history of the Green project'']. Java.net, no date [ca. Q1/1998]. Retrieved <link xlink:type="simple" xlink:href="../416/1416.xml">
April 29</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>.</entry>
<entry level="1" type="bullet">

 <skilled_worker wordnetid="110605985" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<inventor wordnetid="110214637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<blogger wordnetid="109860415" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../792/51792.xml">
James Gosling</link></scholar>
</causal_agent>
</alumnus>
</worker>
</computer_user>
</blogger>
</military_officer>
</creator>
</inventor>
</scientist>
</serviceman>
</engineer>
</intellectual>
</programmer>
</specialist>
</interior_designer>
</person>
</physical_entity>
</expert>
</skilled_worker>
, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<pioneer wordnetid="110434725" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<originator wordnetid="110383816" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../965/3965.xml">
Bill Joy</link></research_worker>
</originator>
</causal_agent>
</laureate>
</computer_user>
</creator>
</recipient>
</scientist>
</acquirer>
</engineer>
</programmer>
</pioneer>
</honoree>
</person>
</physical_entity>
, <link xlink:type="simple" xlink:href="../674/299674.xml">
Guy Steele</link>, and <link>
Gilad Bracha</link>, <it>The Java language specification</it>, third edition. Addison-Wesley, 2005. ISBN 0-321-24678-0 (see also <weblink xlink:type="simple" xlink:href="http://java.sun.com/docs/books/jls/index.html">
online edition of the specification</weblink>.</entry>
<entry level="1" type="bullet">

 Tim Lindholm and Frank Yellin. <it>The Java Virtual Machine specification</it>, second edition. Addison-Wesley, 1999. ISBN 0-201-43294-3 (see also <weblink xlink:type="simple" xlink:href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/VMSpecTOC.doc.html">
online edition of the specification</weblink>).</entry>
</list>
</p>



</sec>
</bdy>
</room>
</library>
</horizontal_surface>
</area>
</surface>
</artifact>
</structure>
</platform>
</article>
