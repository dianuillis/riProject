<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:10:55[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Tuple space</title>
<id>1966238</id>
<revision>
<id>242465567</id>
<timestamp>2008-10-02T10:25:51Z</timestamp>
<contributor>
<username>John.t.davies</username>
<id>6348468</id>
</contributor>
</revision>
<categories>
<category>Java platform</category>
<category>Tree programming languages</category>
<category>Parallel computing</category>
<category>Articles with example Java code</category>
<category>Distributed computing</category>
</categories>
</header>
<bdy>

A <b>tuple space</b> is an implementation of the <arrangement wordnetid="107938773" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<array wordnetid="107939382" confidence="0.8">
<link xlink:type="simple" xlink:href="../799/327799.xml">
 associative memory</link></array>
</group>
</arrangement>
 paradigm for parallel/distributed computing. It provides a repository of <link xlink:type="simple" xlink:href="../729/132729.xml">
tuple</link>s that can be accessed concurrently. As an illustrative example, consider that there are a group of processors that produce pieces of data and a group of processors that use the data. Producers post their data as tuples in the space, and the consumers then retrieve data from the space that match a certain pattern. This is also known as the <link xlink:type="simple" xlink:href="../398/1355398.xml">
Blackboard Metaphor</link>. Tuple space may be thought as a form of <link xlink:type="simple" xlink:href="../843/399843.xml">
distributed shared memory</link>.<p>

Tuple spaces were the theoretical underpinning of the <link xlink:type="simple" xlink:href="../598/957598.xml">
Linda</link> language developed by <indicator wordnetid="107262579" confidence="0.8">
<target wordnetid="107262108" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<reference_point wordnetid="107258332" confidence="0.8">
<link xlink:type="simple" xlink:href="../700/603700.xml">
David Gelernter</link></reference_point>
</signal>
</target>
</indicator>
 and <link>
Nicholas Carriero</link> at <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../273/34273.xml">
Yale University</link></university>
.</p>
<p>

Implementations of tuple spaces have also been developed for <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/28319.xml">
Smalltalk</link></programming_language>
, <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 (JavaSpaces), <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/23862.xml">
Python</link></programming_language>
, <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link>, <link xlink:type="simple" xlink:href="../237/30237.xml">
TCL</link>, <link xlink:type="simple" xlink:href="../150/46150.xml">
Lua</link>, <link xlink:type="simple" xlink:href="../016/18016.xml">
Lisp</link>, <link xlink:type="simple" xlink:href="../485/23485.xml">
Prolog</link> and the <link xlink:type="simple" xlink:href="../402/60402.xml">
.NET framework</link>.</p>

<sec>
<st>
Object Spaces</st>
<p>

<b>Object Spaces</b> is a <link xlink:type="simple" xlink:href="../308/175308.xml">
paradigm</link> for development of <link xlink:type="simple" xlink:href="../501/8501.xml">
distributed computing</link> applications. It is  characterized by the existence of logical entities, called <it>Object Spaces</it>. All the participants of the distributed  application share an <it>Object Space</it>. A provider of a service encapsulates the service as an <it><link>
Object</link></it>, and puts it in the <it>Object Space</it>. Clients of a service then access the <it>Object Space</it>, find out which object provides the required service, and have the request serviced by the object.</p>
<p>

<it>Object Spaces</it>, as a computing paradigm, was put forward by <indicator wordnetid="107262579" confidence="0.8">
<target wordnetid="107262108" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<reference_point wordnetid="107258332" confidence="0.8">
<link xlink:type="simple" xlink:href="../700/603700.xml">
David Gelernter</link></reference_point>
</signal>
</target>
</indicator>
 at <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../273/34273.xml">
Yale University</link></university>
. Gelernter developed a language called <link xlink:type="simple" xlink:href="../598/957598.xml">
Linda</link> to support the concept of global object coordination.</p>
<p>

<it>Object Space</it> can be thought of as a virtual repository, shared amongst providers and accessors of network services, which  are themselves abstracted as objects. Processes communicate among each other using these shared objects &mdash; by updating the state of the objects as and when needed.</p>
<p>

An object, when deposited into a space, needs to be registered with a <it>Object Directory</it> in the <it>Object Space</it>. Any  processes can then identify the object from the <it>Object Directory</it>, using properties lookup, where the property specifying  the criteria for the lookup of the object is its name or some other property which uniquely identifies it. A process may  choose to wait for an object to be placed in the <it>Object Space</it>, if the required object is not already present.</p>
<p>

Objects, when deposited in an <it>Object Space</it> are passive, i.e., their methods cannot be invoked while the objects are in the <it>Object Space</it>. Instead, the accessing process must <it>retrieve</it> it from the <it>Object Space</it> into its local memory, use the service provided by the object, update the state of the object and place it back into the <it>Object Space</it>.</p>
<p>

This paradigm inherently provides <link xlink:type="simple" xlink:href="../827/36827.xml">
mutual exclusion</link>. Because once an object is accessed, it has to be removed from the  <it>Object Space</it>, and is placed back only after it has been released. This means that no other process can access an object  while it is being used by one process, thereby ensuring mutual exclusion.</p>

</sec>
<sec>
<st>
JavaSpaces</st>
<p>

JavaSpaces is a service specification providing a distributed object exchange and coordination mechanism (which may or may not be persistent) for <link>
Java</link> objects. It is used to store the distributed system state and implement <link xlink:type="simple" xlink:href="../202/3367202.xml">
distributed algorithm</link>s. In a JavaSpace all communication partners (peers) communicate and coordinate by sharing state.</p>
<p>

JavaSpaces can be used to achieve <link xlink:type="simple" xlink:href="../529/185529.xml">
scalability</link> through parallel processing, it can also be used to provides reliable storage of objects through distributed replication, while this won't survive a total power failure like a disk it is regarded by many as reliable as long as the power is reliable. Distribution can also be to remote locations however this is rare as JavaSpaces are usually used to low-latency, high performance applications rather than reliable object caching.</p>
<p>

The most common <link>
software pattern</link> used in JavaSpaces is the Master-Worker pattern. The Master hands out units or work to the "space", these are read, processed and written back to the space by the workers. In a typical environment there are several "spaces", several masters and many workers, the workers are usually designed to be generic, i.e. they can take any unit of work from the space and process the task.</p>
<p>

JavaSpaces is part of the Java <link xlink:type="simple" xlink:href="../398/185398.xml">
Jini</link> technology, which on its own has not been a commercial success. The technology has found and kept new users over the years and some vendors are offering JavaSpaces-based products. JavaSpaces remains a niche technology mostly used in the financial services and telco industries where it continues to maintain a faithful following. The announcement of Jini/JavaSpaces created quite some hype although Sun co-founder and chief Jini architect <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<pioneer wordnetid="110434725" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<originator wordnetid="110383816" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../965/3965.xml">
Bill Joy</link></research_worker>
</originator>
</causal_agent>
</laureate>
</computer_user>
</creator>
</recipient>
</scientist>
</acquirer>
</engineer>
</programmer>
</pioneer>
</honoree>
</person>
</physical_entity>
 put it straight that this distributed systems dream will take "<it>a quantum leap in thinking</it>".<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

<ss1>
<st>
Example usage</st>
<p>

The following example shows an application made using JavaSpaces. First, an object to be shared in the <it>Object Space</it> is made. Such an object is called an <it>Entry</it> in JavaSpace terminology. Here, the <it>Entry</it> is used to encapsulate a service which returns a <it>Hello World!</it> string, and keeps track of how many times it was used. The server which provides this service will create an <it>Object Space</it>, or <it>JavaSpace</it>. The <it>Entry</it> is then <it>written</it> into the <it>JavaSpace</it>. The client <it>reads</it> the entry from the <it>JavaSpace</it> and invokes its method to access the service, updating its usage count by doing so. The updated <it>Entry</it> is written back to the <it>JavaSpace</it>.</p>

<p>

// An Entry class
public class SpaceEntry implements Entry
{
public final String message = "Hello World!";
public Integer count = 0;</p>
<p>

public String service() {
count = count + 1;
return message;
}</p>
<p>

public String toString() {
return "Count: " + count;
}
}</p>
<p>

// Hello World! server
public class Server
{
public static void main(String args) throws Exception
{
SpaceEntry entry = new SpaceEntry();            // Create the Entry object
JavaSpace space = (JavaSpace)space();           // Create an Object Space
// Register and write the Entry into the Space
space.write(entry, null, Lease.FOREVER);        
// Pause for 10 minutes and then retrieve the Entry and check its state.
Thread.sleep(10*60*1000);
SpaceEntry e = space.read(new SpaceEntry(), null, Long.MAX_VALUE);
System.out.println(e);
}
}</p>
<p>

// Client
public class Client
{
public static void main(String args) throws Exception
{
JavaSpace space = (JavaSpace) space();
SpaceEntry e = space.take(new SpaceEntry(), null, Long.MAX_VALUE);
System.out.println(e.service());
space.write(e, null, Lease.FOREVER);
}
}</p>


</ss1>
<ss1>
<st>
Implementations</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dancres.org/blitz/">
The Blitz Project</weblink> (open-source single site server)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://slackspaces.geir.tv/">
SlackSpaces</weblink> (open-source) (main site is down, but project source is downloadable)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.gigaspaces.com/">
GigaSpaces</weblink> (commercial, clustered, fault-tolerant)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-users.cs.york.ac.uk/~aw/pylinda/">
PyLinda</weblink> implementation for <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link>
Python</link></programming_language>
</entry>
<entry level="1" type="bullet">

<link>
Rinda</link> implementation for <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://linuxtuples.sourceforge.net/">
LinuxTuples</weblink> (open-source, clustered, API for <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link>
C</link></programming_language>
 and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link>
Python</link></programming_language>
)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.semispace.org/">
SemiSpace</weblink> (open-source, clustered (with <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../552/9082552.xml">
Terracotta Cluster</link></software>
)) Java implementation </entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.almaden.ibm.com/cs/TSpaces/">
TSpaces</weblink> (An implementation by IBM using Java)</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Books</st>
<p>

<list>
<entry level="1" type="bullet">

Eric Freeman, <link>
Susanne Hupfer</link>, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../289/6885289.xml">
Ken Arnold</link></causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
: <it>JavaSpaces Principles, Patterns, and Practice.</it> Addison-Wesley Professional, 1. June 1999, ISBN 0-201-30955-6</entry>
<entry level="1" type="bullet">

Phil Bishop, Nigel Warren: <it>JavaSpaces in Practice.</it> Addison Wesley, 2002, ISBN 0-321-11231-8</entry>
<entry level="1" type="bullet">

Max K. Goff: <it>Network Distributed Computing: Fitscapes and Fallacies</it>, 2004, Prentice Hall, ISBN-10: 0131001523 </entry>
<entry level="1" type="bullet">

Sing Li, et al.: <it>Professional Java Server Programming</it>, 1999, Wrox Press, ISBN-10: 1861002777 </entry>
</list>
</p>

</ss1>
<ss1>
<st>
Interviews</st>
<p>

<list>
<entry level="1" type="bullet">

 Heiss, Janice J.&#32;(2003).&#32;"<weblink xlink:type="simple" xlink:href="http://java.sun.com/developer/technicalArticles/Interviews/gelernter_qa.html">
Computer Visions: A Conversation with David Gelernter</weblink>".&#32;  Sun Developer Network (SDN).</entry>
<entry level="1" type="bullet">

 Venners, Bill&#32;(2003).&#32;"<weblink xlink:type="simple" xlink:href="http://today.java.net/pub/a/today/2003/06/10/design.html">
Designing as if Programmers are People (Interview with Ken Arnold)</weblink>".&#32;  java.net.</entry>
<entry level="1" type="bullet">

 Haines, Steven&#32;(2006).&#32;"<weblink xlink:type="simple" xlink:href="http://www.informit.com/guides/content.aspx?g=java&amp;seqNum=263">
Interview: GigaSpaces</weblink>".&#32;  <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<firm wordnetid="108059870" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<enterprise wordnetid="108056231" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<publisher wordnetid="108062623" confidence="0.8">
<link xlink:type="simple" xlink:href="../113/11590113.xml">
InformIT</link></publisher>
</room>
</business>
</enterprise>
</library>
</firm>
</area>
</artifact>
</structure>
.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Articles</st>
<p>

<list>
<entry level="1" type="bullet">

 Brogden, William&#32;(2007).&#32;"<weblink xlink:type="simple" xlink:href="http://searchwebservices.techtarget.com/tip/0,289483,sid26_gci1251765,00.html">
How Web services can use JavaSpaces</weblink>".&#32;  SearchWebServices.com.&#32;Retrieved on <link>
2007-04-18</link>.</entry>
<entry level="1" type="bullet">

 Brogden, William&#32;(2007).&#32;"<weblink xlink:type="simple" xlink:href="http://searchwebservices.techtarget.com/tip/0,289483,sid26_gci1248166,00.html">
Grid computing and Web services (Beowulf, BOINC, Javaspaces)</weblink>".&#32;  SearchWebServices.com.&#32;Retrieved on <link>
2007-03-20</link>.</entry>
<entry level="1" type="bullet">

 White, Tom&#32;(2005).&#32;"<weblink xlink:type="simple" xlink:href="http://today.java.net/pub/a/today/2005/04/21/farm.html">
How To Build a ComputeFarm</weblink>".&#32;  java.net.&#32;Retrieved on <link>
2005-05-21</link>.</entry>
<entry level="1" type="bullet">

 Ottinger, Joseph&#32;(2007).&#32;"<weblink xlink:type="simple" xlink:href="http://www.theserverside.com/tt/articles/article.tss?l=UsingJavaSpaces">
Understanding JavaSpaces</weblink>".&#32;  theserverside.&#32;Retrieved on <link>
2007-01-31</link>.</entry>
<entry level="1" type="bullet">

 Angerer, Bernhard;&#32;Erlacher, Andreas&#32;(2005).&#32;"<weblink xlink:type="simple" xlink:href="http://today.java.net/pub/a/today/2005/06/03/loose.html">
Loosely Coupled Communication and Coordination in Next-Generation Java Middleware</weblink>".&#32;  java.net.&#32;Retrieved on <link>
2006-06-03</link>.</entry>
<entry level="1" type="bullet">

 Angerer, Bernhard&#32;(2003).&#32;"<weblink xlink:type="simple" xlink:href="http://www.onjava.com/pub/a/onjava/2003/03/19/java_spaces.html">
Space-Based Programming</weblink>".&#32;  onjava.com.&#32;Retrieved on <link>
2003-03-19</link>.</entry>
<entry level="1" type="bullet">

 Sing, Li&#32;(2003).&#32;"<weblink xlink:type="simple" xlink:href="http://www-128.ibm.com/developerworks/java/library/j-cluster2/?Open&amp;ca=daw-co-news">
High-impact Web tier clustering, Part 2: Building adaptive, scalable solutions with JavaSpaces</weblink>".&#32;  IBM developerworks.</entry>
<entry level="1" type="bullet">

 Mamoud,, Qusay H.&#32;(2005).&#32;"<weblink xlink:type="simple" xlink:href="http://java.sun.com/developer/technicalArticles/tools/JavaSpaces/">
Getting Started With JavaSpaces Technology: Beyond Conventional Distributed Programming Paradigms</weblink>".&#32;  Sun Developer Network (SDN).</entry>
<entry level="1" type="bullet">

 Hupfer, Susanne&#32;(1999).&#32;"<weblink xlink:type="simple" xlink:href="http://www.javaworld.com/javaworld/jw-11-1999/jw-11-jiniology.html">
Make room for Javaspaces, Part 1 (from 5)</weblink>".&#32;  JavaWorld.</entry>
<entry level="1" type="bullet">

 Löffler, Dr. Gerald&#32;(2004).&#32;"<weblink xlink:type="simple" xlink:href="http://www.javamagazin.de/itr/online_artikel/psecom,id,489,nodeid,11.html">
JavaSpaces und ihr Platz im Enterprise Java Universum, Das Modell zum Objektaustausch: JavaSpaces vorgestellt</weblink>".&#32;  Entwickler.com.&#32;Retrieved on <link>
2004-02-01</link>.</entry>
<entry level="1" type="bullet">

 Shalom, Nati&#32;(2006).&#32;"<weblink xlink:type="simple" xlink:href="http://www.gigaspaces.com/os_papers.html#a1">
Space-Based Architecture and the End of Tier-Based Computing</weblink>".&#32;  GigaSpaces Technologies.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
Rob Guth: "<weblink xlink:type="simple" xlink:href="http://sunsite.uakom.sk/sunworldonline/swol-08-1998/swol-08-jini.html">
More than just another pretty name: Sun's Jini opens up a new world of distributed computer systems</weblink>". <it>SunWorld</it>, August 1998 [15. Januar 2006]</entry>
</reflist>
</p>


</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../855/11353855.xml">
Space-based architecture</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../598/957598.xml">
Linda (coordination language)</link></entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../289/6885289.xml">
Ken Arnold</link></causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
, lead engineer on JavaSpaces at <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../258/1815258.xml">
Rinda</link>, a JavaSpaces analog for <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Sources</st>
<p>

<list>
<entry level="1" type="bullet">

<indicator wordnetid="107262579" confidence="0.8">
<target wordnetid="107262108" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<reference_point wordnetid="107258332" confidence="0.8">
<link xlink:type="simple" xlink:href="../700/603700.xml">
Gelernter, David</link></reference_point>
</signal>
</target>
</indicator>
. <weblink xlink:type="simple" xlink:href="http://cocasoft.cs.tamu.edu/~lidu/courses/mccp02s/papers/GenerativeCommLinda-gelernter85toplas.pdf">
"Generative communication in Linda"</weblink>. <it>ACM Transactions on Programming Languages and Systems</it>, volume 7, number 1, January 1985</entry>
<entry level="1" type="bullet">

<it>Distributed Computing</it> (First Indian reprint, 2004), M. L. Liu</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://c2.com/cgi/wiki?TupleSpace">
"TupleSpace"</weblink> at <it>c2.com''</it></entry>
</list>
</p>


</sec>
</bdy>
</article>
