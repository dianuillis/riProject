<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:30:12[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<algorithm  confidence="0.9511911446218017" wordnetid="105847438">
<header>
<title>Borůvka&apos;s algorithm</title>
<id>197253</id>
<revision>
<id>243332117</id>
<timestamp>2008-10-06T02:06:36Z</timestamp>
<contributor>
<username>Lightbot</username>
<id>7178666</id>
</contributor>
</revision>
<categories>
<category>Graph algorithms</category>
<category>Spanning tree</category>
</categories>
</header>
<bdy>

<b>Borůvka's algorithm</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for finding a <link xlink:type="simple" xlink:href="../795/41795.xml">
minimum spanning tree</link> in a graph for which all edge weights are distinct.<p>

It was first published in 1926 by <link>
Otakar Borůvka</link> as a method of constructing an efficient <link xlink:type="simple" xlink:href="../253/212253.xml">
electricity network</link> for <region wordnetid="108630985" confidence="0.8">
<region wordnetid="108630039" confidence="0.8">
<administrative_district wordnetid="108491826" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<district wordnetid="108552138" confidence="0.8">
<country wordnetid="108544813" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/20216.xml">
Moravia</link></country>
</district>
</location>
</administrative_district>
</region>
</region>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> The algorithm was rediscovered by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../193/17301193.xml">
Choquet</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 in 1938;
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> again by <link>
Florek</link>,  <link>
Łukasiewicz</link>, <link>
Perkal</link>, <link xlink:type="simple" xlink:href="../735/71735.xml">
Steinhaus</link>, and <link>
Zubrzycki</link> in <link xlink:type="simple" xlink:href="../735/71735.xml#xpointer(//*[./st=%22graphs1951%22])">
1951</link>; and again by <link>
Sollin</link> some time in the early 1960s. Because <link>
Sollin</link> was the only Western computer scientist in this list, this algorithm is frequently called <b>Sollin's algorithm</b>, especially in the <link xlink:type="simple" xlink:href="../162/145162.xml">
parallel computing</link> literature.</p>
<p>

The algorithm begins by examining each vertex and adding the cheapest edge from that vertex to another in the graph, without regard to already added edges, and continues joining these groupings in a like manner until a tree spanning all vertices is completed. Designating each vertex or set of connected vertices a "component", pseudocode for Borůvka's algorithm is:</p>
<p>

<list>
<entry level="1" type="bullet">

Begin with a connected graph <it>G</it> containing edges of distinct weights, and an empty set of edges <it>T''</it></entry>
<entry level="1" type="bullet">

While the vertices of <it>G</it> connected by <it>T</it> are disjoint:</entry>
<entry level="2" type="bullet">

Begin with an empty set of edges <it>E''</it></entry>
<entry level="2" type="bullet">

For each component:</entry>
<entry level="3" type="bullet">

Begin with an empty set of edges <it>S''</it></entry>
<entry level="3" type="bullet">

For each vertex in the component:</entry>
<entry level="4" type="bullet">

Add the cheapest edge from the vertex in the component to another vertex in a disjoint component to <it>S''</it></entry>
<entry level="3" type="bullet">

Add the cheapest edge in <it>S</it> to <it>E''</it></entry>
<entry level="2" type="bullet">

Add the resulting set of edges <it>E</it> to <it>T</it>.</entry>
<entry level="1" type="bullet">

The resulting set of edges <it>T</it> is the minimum spanning tree of <it>G''</it></entry>
</list>
</p>
<p>

Borůvka's algorithm can be shown to take <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(log <it>V</it>) iterations of the outer loop until it terminates, and therefore to run in time <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(<it>E</it>log <it>V</it>), where <it>E</it> is the number of edges, and <it>V</it> is the number of vertices in <it>G</it>. In <link xlink:type="simple" xlink:href="../314/24314.xml">
planar graph</link>s, and more generally in families of graphs closed under <link xlink:type="simple" xlink:href="../042/353042.xml">
graph minor</link> operations, it can be made to run in linear time, by removing all but the cheapest edge between each pair of components after each stage of the algorithm.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

Other algorithms for this problem include <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../783/53783.xml">
Prim's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 (actually discovered by <link>
Vojtěch Jarník</link>) and <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../776/53776.xml">
Kruskal's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. Faster algorithms can be obtained by combining Prim's algorithm with Borůvka's. A faster randomized minimum spanning tree algorithm based in part on Borůvka's algorithm due to Karger, Klein, and Tarjan runs in expected <math>O(E)</math> time. The best known (deterministic) minimum spanning tree algorithm by <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../825/1051825.xml">
Bernard Chazelle</link></associate>
</research_worker>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
 is also based in part on Borůvka's and runs in O(<it>E</it> &amp;alpha;(V)) time, where &amp;alpha; is the inverse of the <mathematical_relation wordnetid="113783581" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../ury/30th_century.xml">
Ackermann function</link></function>
</mathematical_relation>
. These randomized and deterministic algorithms combine steps of Borůvka's algorithm, reducing the number of components that remain to be connected, with steps of a different type that reduce the number of edges between pairs of components.</p>

<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal"><link>
Borůvka, Otakar</link>&#32;(1926).&#32;"O jistém problému minimálním (About a certain minimal problem)"&#32;(in Czech, German summary). <it>Práce mor. přírodověd. spol. v Brně III</it>&#32;<b>3</b>: 37&ndash;58.</cite>&nbsp;</entry>
<entry id="2">
 <cite style="font-style:normal"><link>
Borůvka, Otakar</link>&#32;(1926).&#32;"Příspěvek k řešení otázky ekonomické stavby elektrovodních sítí (Contribution to the solution of a problem of economical construction of electrical networks)"&#32;(in Czech). <it>Elektronický Obzor</it>&#32;<b>15</b>: 153&ndash;154.</cite>&nbsp;</entry>
<entry id="3">
 <cite style="font-style:normal"><physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../193/17301193.xml">
Choquet, Gustave</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
&#32;(1938).&#32;"Étude de certains réseaux de routes"&#32;(in French). <it>Comptes-rendus de l’Académie des Sciences</it>&#32;<b>206</b>: 310&ndash;313.</cite>&nbsp;</entry>
<entry id="4">
 <cite id="CITEREFEppstein1999" style="font-style:normal"><link>
Eppstein, David</link>&#32;(1999),&#32;"Spanning trees and spanners", in&#32;Sack, J.-R.&#32;&amp;&#32;Urrutia, J.,&#32;<it>Handbook of Computational Geometry</it>, Elsevier, pp. 425–461</cite>&nbsp;;  <cite id="CITEREFMare.C5.A12004" style="font-style:normal">Mareš, Martin&#32;(2004),&#32;"<weblink xlink:type="simple" xlink:href="http://www.emis.de/journals/AM/04-3/am1139.pdf">
Two linear time algorithms for MST on minor closed graph classes</weblink>",&#32;<it>Archivum mathematicum</it>&#32;<b>40</b>(3):  315–320, </cite>&nbsp;.</entry>
</reflist>
</p>


</sec>
</bdy>
</algorithm>
</article>
