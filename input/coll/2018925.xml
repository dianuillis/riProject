<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:10:32[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<class  confidence="0.8" wordnetid="107997703">
<collection  confidence="0.8" wordnetid="107951464">
<group  confidence="0.8" wordnetid="100031264">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>APX</title>
<id>2018925</id>
<revision>
<id>224358295</id>
<timestamp>2008-07-08T14:31:26Z</timestamp>
<contributor>
<username>Bluemoose</username>
<id>178836</id>
</contributor>
</revision>
<categories>
<category>Approximation algorithms</category>
<category>Complexity classes</category>
</categories>
</header>
<bdy>

For other uses, see <link xlink:type="simple" xlink:href="../270/9504270.xml">
APX (disambiguation)</link>.
In <link xlink:type="simple" xlink:href="../543/7543.xml">
complexity theory</link> the class <b>APX</b> (an abbreviation of "approximable") is the set of NPO <link xlink:type="simple" xlink:href="../536/1126536.xml">
optimization problem</link>s that allow <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial-time</link> <link xlink:type="simple" xlink:href="../105/563105.xml">
approximation algorithm</link>s with approximation ratio bounded by a constant (or <b>constant-factor approximation algorithms</b> for short). In simple terms, problems in this class have efficient <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s that can find an answer within some fixed percentage of the optimal answer. For example, there is a polynomial-time algorithm which will find a solution to the <link xlink:type="simple" xlink:href="../015/287015.xml">
bin packing problem</link> that uses at most 5% more than the smallest possible number of bins.<p>

An approximation algorithm is called a <it>c</it>-approximation algorithm for some constant <it>c</it> if it can be proven that the solution that the algorithm finds is at most <it>c</it> times worse than the optimal solution. Here, <it>c</it> is called the <it>approximation ratio</it>. Depending on whether the problem is a minimization or a maximization problem, this can either denote <it>c</it> times larger or <it>c</it> times smaller, respectively. For example, the <link xlink:type="simple" xlink:href="../382/391382.xml">
vertex cover problem</link> and <link xlink:type="simple" xlink:href="../248/31248.xml">
traveling salesman problem</link> with triangle inequality each have simple 2-approximation algorithms. In contrast to that it's proven that the <link xlink:type="simple" xlink:href="../248/31248.xml">
traveling salesman problem</link> with arbitrary edge-lengths can not  be approximated with approximation ratio bounded by a constant as long as the Hamiltonian-path problem can not be solved in polynomial time.</p>
<p>

If there is a polynomial-time algorithm to solve a problem within <it>every</it> fixed percentage (one algorithm for each percentage), then the problem is said to have a <link xlink:type="simple" xlink:href="../431/666431.xml">
polynomial-time approximation scheme</link> (<b>PTAS</b>). Unless <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../115/6115.xml">
P=NP</link></group>
</collection>
</difficulty>
</problem>
</class>
</state>
</condition>
, it can be shown that there are problems that are in <b>APX</b> but not in <b>PTAS</b>; that is, problems that can be approximated within <it>some</it> constant factor, but not <it>every</it> constant factor. A problem is said to be <b>APX</b>-hard if there is a <link xlink:type="simple" xlink:href="../084/9010084.xml">
PTAS reduction</link> from every problem in <b>APX</b> to that problem, and to be <b>APX</b>-complete if the problem is <b>APX</b>-hard and also in <b>APX</b>.  As a consequence of <b>PTAS</b> &amp;ne; <b>APX</b>, no <b>APX</b>-hard problem is in <b>PTAS</b>.</p>
<p>

To say a problem is <b>APX</b>-hard is generally bad news, because it denies the existence of a <b>PTAS</b>, which are the most useful sort of approximation algorithm. One of the simplest <b>APX</b>-complete problems is the <link xlink:type="simple" xlink:href="../916/3351916.xml">
maximum satisfiability problem</link>, a variation of the <link xlink:type="simple" xlink:href="../715/4715.xml">
boolean satisfiability problem</link>. In this problem, we have a boolean formula in <link xlink:type="simple" xlink:href="../342/73342.xml">
conjunctive normal form</link>, and we wish to know the maximum number of clauses that can be simultaneously satisfied by a single assignment of true/false values to the variables. Despite lacking a PTAS, however, the correct answer can still be estimated within 30%, and some simplified variants do have a PTAS.</p>

<sec>
<st>
Examples</st>

<p>

1. The <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../536/3589536.xml">
Christofides algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 </p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://qwiki.caltech.edu/wiki/Complexity_Zoo#apx">
Complexity Zoo: APX</weblink></entry>
<entry level="1" type="bullet">

 Pierluigi Crescenzi, Viggo Kann, Magnús Halldórsson, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/2994042.xml">
Marek Karpinski</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 and Gerhard Woeginger. <weblink xlink:type="simple" xlink:href="http://www.nada.kth.se/~viggo/wwwcompendium/node225.html">
Maximum Satisfiability</weblink>. <weblink xlink:type="simple" xlink:href="http://www.nada.kth.se/%7Eviggo/wwwcompendium/">
<it>A compendium of NP optimization problems''</it></weblink>. Last updated March 20, 2000.</entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</group>
</collection>
</class>
</rule>
</event>
</article>
