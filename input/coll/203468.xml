<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:29:57[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Flooding algorithm</title>
<id>203468</id>
<revision>
<id>225294034</id>
<timestamp>2008-07-12T22:54:27Z</timestamp>
<contributor>
<username>Coolcaesar</username>
<id>95921</id>
</contributor>
</revision>
<categories>
<category>Graph algorithms</category>
</categories>
</header>
<bdy>

<image location="right" width="150px" src="Flood.gif" type="thumb">
<caption>

flooding algorithm
</caption>
</image>

<image location="right" width="150px" src="FloodAck.gif" type="thumb">
<caption>

flooding algorithm with ack messages
</caption>
</image>
<p>

A <b>flooding algorithm</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for distributing material to every part of a connected <link xlink:type="simple" xlink:href="../592/4122592.xml">
network</link>.  The name derives from the concept of inundation by a <link xlink:type="simple" xlink:href="../482/50482.xml">
flood</link>.</p>
<p>

Flooding algorithms are used in systems such as <work wordnetid="100575741" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<community wordnetid="108223802" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/18588994.xml">
Usenet</link></activity>
</psychological_feature>
</group>
</act>
</service>
</gathering>
</rule>
</event>
</social_group>
</message>
</system_of_measurement>
</community>
</direction>
</standard>
</protocol>
</work>
 and <link xlink:type="simple" xlink:href="../107/24107.xml">
peer-to-peer</link> <link>
file sharing system</link>s and as part of some <link xlink:type="simple" xlink:href="../059/10123059.xml">
routing protocol</link>s, including <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../388/43388.xml">
OSPF</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
, <link xlink:type="simple" xlink:href="../905/1009905.xml">
DVMRP</link>, and those used in <link xlink:type="simple" xlink:href="../928/6624928.xml">
ad-hoc wireless network</link>s.</p>
<p>

There are several variants of flooding algorithm: most work roughly as follows.
<list>
<entry level="1" type="number">

Each node acts as both a transmitter and a receiver. </entry>
<entry level="1" type="number">

Each node tries to forward every message to every one of its neighbors except the source node. </entry>
</list>

This results in every message eventually being delivered to all reachable parts of the network.  </p>
<p>

Real-world flooding algorithms have to be more complex than this, since precautions have to be taken to avoid wasted duplicate deliveries and infinite loops, and to allow messages to eventually expire from the system.</p>
<p>

Flooding algorithms are also useful for solving many mathematical problems, including <link xlink:type="simple" xlink:href="../161/20161.xml">
maze</link> problems and many problems in <link xlink:type="simple" xlink:href="../401/12401.xml">
graph theory</link>.</p>

<sec>
<st>
 Disadvantages of Flooding </st>
<p>

There are several disadvantages with this approach to routing. It is very wasteful in terms of the networks total bandwidth. While a message may only have one destination it has to be sent to every host. This increases the maximum load placed upon the network.</p>
<p>

Messages can also become duplicated in the network further increasing the load on the networks bandwidth as well as requiring an increase in processing complexity to disregard duplicate messages.</p>
<p>

A variant of flooding called <it>selective flooding</it> partially addresses these issues by only sending packets to routers in the same direction.</p>

</sec>
<sec>
<st>
 Advantages of Flooding </st>

<p>

The main advantage of flooding is the increased reliability provided by this routing method. Since the message will be sent at least once to every host it is almost guaranteed  to reach its destination.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../407/20407.xml">
multicast</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../635/11635.xml">
flood fill</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Examples</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://ricochet.wiki.sourceforge.net/">
Ricochet</weblink> A flooding networking app written in Java</entry>
</list>
</p>



</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
