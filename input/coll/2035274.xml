<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:13:46[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<physical_entity  confidence="0.8" wordnetid="100001930">
<person  confidence="0.8" wordnetid="100007846">
<model  confidence="0.8" wordnetid="110324560">
<assistant  confidence="0.8" wordnetid="109815790">
<worker  confidence="0.8" wordnetid="109632518">
<causal_agent  confidence="0.8" wordnetid="100007347">
<header>
<title>Clark-Wilson model</title>
<id>2035274</id>
<revision>
<id>224403282</id>
<timestamp>2008-07-08T18:21:15Z</timestamp>
<contributor>
<username>Thijs!bot</username>
<id>1392310</id>
</contributor>
</revision>
<categories>
<category>CISSP</category>
<category>Computer security models</category>
</categories>
</header>
<bdy>

The <b>Clark-Wilson</b> integrity model provides a foundation for specifying and analyzing an integrity policy for a computing system.<p>

The model is primarily concerned with formalizing the notion of information integrity. Information integrity is maintained by preventing corruption of data items in a system due to either error or malicious intent. An integrity policy describes how the data items in the system should be kept valid from one state of the system to the next and specifies the capabilities of various principals in the system. The model defines enforcement rules and certification rules.</p>

<sec>
<st>
 Model Origin </st>

<p>

The model was described in a 1987 paper (<it>A Comparison of Commercial and Military Computer Security Policies</it>) by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../395/2561395.xml">
David D. Clark</link></scientist>
</person>
 and David R. Wilson. The paper develops the model as a way to formalize the notion of information integrity, especially as compared to the requirements for <link xlink:type="simple" xlink:href="../379/1011379.xml">
multi-level security</link> (MLS) systems described in the <link xlink:type="simple" xlink:href="../389/60389.xml">
Orange Book</link>. Clark and Wilson argue that the existing integrity models such as <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link>
Bell-LaPadula</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
 (read-down/write-up) and <link>
Biba</link> (read-up, write-down) were better suited to enforcing data confidentiality rather than information integrity. The <b>Bell-LaPadula</b> and <b>Biba</b> models are more clearly useful in, for example, military classification systems to prevent the theft of information and the tainting of information at higher classification levels, respectively. In contrast, <b>Clark-Wilson</b> is more clearly applicable to business and industry processes in which the integrity of the information content is paramount at any level of classification (although the authors stress that all three models are obviously of use to both government and industry organizations).</p>

</sec>
<sec>
<st>
 Model Basics </st>

<p>

The model’s enforcement and certification rules define data items and processes that provide the basis for an integrity policy. The core of the model is based on the notion of a <link xlink:type="simple" xlink:href="../240/234240.xml">
transaction</link>.</p>
<p>

<list>
<entry level="1" type="bullet">

A <b>well-formed</b> transaction is a series of operations that transition a system from one consistent state to another consistent state.</entry>
<entry level="1" type="bullet">

In this model the integrity policy addresses the integrity of the transactions.</entry>
<entry level="1" type="bullet">

The principle of separation of duty requires that the certifier of a transaction and the implementer be different entities.</entry>
</list>
</p>
<p>

The model contains a number of basic constructs that represent both data items and processes that operate on those data items. The key data type in the Clark-Wilson model is a Constrained Data Item (CDI). An Integrity Verification Procedure (IVP) ensures that all CDIs in the system are valid at a certain state. Transactions that enforce the integrity policy are represented by Transformation Procedures (TPs). A TP takes as input a CDI or Unconstrained Data Item (UDI) and produces a CDI. A TP must transition the system from one valid state to another valid state. UDIs represent system input (such as that provided by a user or adversary). A TP must guarantee (via certification) that it transforms all possible values of a UDI to a “safe” CDI.</p>

</sec>
<sec>
<st>
 Clark-Wilson Model Rules </st>


<p>

At the heart of the model is the notion of a relationship between an authenticated principal (i.e., user) and a set of programs (i.e., TPs) that operate on a set of data items (e.g., UDIs and CDIs). The components of such a relation, taken together, are referred to as a <it>Clark-Wilson triple.</it> The model must also ensure that different entities are responsible for manipulating the relationships between principals, transactions, and data items. As a short example, a user capable of certifying or creating a relation should not be able to execute the programs specified in that relation.</p>
<p>

The model consists of two sets of rules: Certification Rules (C) and Enforcement Rules (E).  The nine rules ensure the external and internal integrity of the data items. To paraphrase these:</p>
<p>

<indent level="1">

C1—When an IVP is executed, it must ensure the CDIs are valid.
</indent>

<indent level="1">

C2—For some associated set of CDIs, a TP must transform those CDIs from one valid state to another.
</indent>

Since we must make sure that these TPs are certified to operate on a particular CDI, we must have E1 and E2.</p>
<p>

<indent level="1">

E1—System must maintain a list of certified relations and ensure only TPs certified to run on a CDI change that CDI.
</indent>

<indent level="1">

E2—System must associate a user with each TP and set of CDIs.  The TP may access the CDI on behalf of the user if it is “legal.”
</indent>

This requires keeping track of triples (user, TP, {CDIs}) called “allowed relations.”</p>
<p>

<indent level="1">

C3—Allowed relations must meet the requirements of “separation of duty.”
</indent>

We need authentication to keep track of this.</p>
<p>

<indent level="1">

E3—System must authenticate every user attempting a TP.  Note that this is per TP request, not per login.  
</indent>

For security purposes, a log should be kept.  </p>
<p>

<indent level="1">

C4—All TPs must append to a log enough information to reconstruct the operation.
</indent>

When information enters the system it need not be trusted or constrained (i.e. can be a UDI).  We must deal with this appropriately.</p>
<p>

<indent level="1">

C5—Any TP that takes a UDI as input may only perform valid transactions for all possible values of the UDI. The TP will either accept (convert to CDI) or reject the UDI.
</indent>

Finally, to prevent people from gaining access by changing qualifications of a TP:</p>
<p>

<indent level="1">

E4—Only the certifier of a TP may change the list of entities associated with that TP.
</indent>

</p>
</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../076/207076.xml">
Confused deputy problem</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://nob.cs.ucdavis.edu/book/book-intro/slides/06.pdf">
Slides about Clark-Wilson used by professor Matt Bishop to teach computer security</weblink></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

http://www.computing.dcu.ie/~davids/courses/CA548/C_I_Policies.pdf</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

http://doi.ieeecomputersociety.org/10.1109/SP.1987.10001</entry>
</list>
</p>


</sec>
</bdy>
</causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</article>
