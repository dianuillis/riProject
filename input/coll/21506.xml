<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:31:46[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Numerical analysis</title>
<id>21506</id>
<revision>
<id>238732154</id>
<timestamp>2008-09-16T03:24:10Z</timestamp>
<contributor>
<username>Marlith</username>
<id>4871029</id>
</contributor>
</revision>
<categories>
<category>Numerical analysis</category>
<category>Computational science</category>
</categories>
</header>
<bdy>

<image location="right" width="250px" src="Ybc7289-bw.jpg" type="thumb">
<caption>

Babylonian clay tablet YBC 7289(c. 1800â€“1600 BCE) <weblink xlink:type="simple" xlink:href="http://www.math.ubc.ca/~cass/Euclid/ybc/ybc.html">
http://www.math.ubc.ca/~cass/Euclid/ybc/ybc.html</weblink> with annotations. (Image by Bill Casselman)
</caption>
</image>

<b>Numerical analysis</b> is the study of <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s for the problems of <it>continuous mathematics</it> (as distinguished from <link xlink:type="simple" xlink:href="../492/8492.xml">
discrete mathematics</link>).<p>

One of the earliest mathematical writings is the Babylonian tablet YBC 7289, which gives a <link xlink:type="simple" xlink:href="../316/135316.xml">
sexagesimal</link> numerical approximation of <math>\sqrt{2}</math>, the length of the diagonal in a unit square.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
Being able to compute the sides of a triangle (and hence, being able to compute square roots) is extremely important, for instance, in carpentry and construction.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> In a rectangular wall section that is 2.40 meter by 3.75 meter, a diagonal beam has to be 4.45 meters long.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Numerical analysis continues this long tradition of practical mathematical calculations. Much like the Babylonian approximation to <math>\sqrt{2}</math>, modern numerical analysis does not seek exact answers, because exact answers are impossible to obtain in practice. Instead, much of numerical analysis is concerned with obtaining approximate solutions while maintaining reasonable bounds on errors.</p>
<p>

Numerical analysis naturally finds applications in all fields of engineering and the physical sciences, but in the 21st century, the life sciences and even the arts have adopted elements of scientific computations. <link xlink:type="simple" xlink:href="../297/8297.xml">
Ordinary differential equation</link>s appear in the movement of heavenly bodies (planets, stars and galaxies); <link xlink:type="simple" xlink:href="../033/52033.xml">
optimization</link> occurs in portfolio management; <link xlink:type="simple" xlink:href="../660/7330660.xml">
numerical linear algebra</link> is essential to quantitative psychology; <link xlink:type="simple" xlink:href="../454/1361454.xml">
stochastic differential equation</link>s and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../876/60876.xml">
Markov chain</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
s are essential in simulating living cells for medicine and biology.</p>
<p>

Before the advent of modern computers numerical methods often depended on hand <link xlink:type="simple" xlink:href="../569/14569.xml">
interpolation</link> in large printed tables. Nowadays (after mid 20th century) these tables have fallen into disuse, because computers can calculate the required functions.  The <link xlink:type="simple" xlink:href="../569/14569.xml">
interpolation</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithms</link> nevertheless may be used as part of the software for solving <link xlink:type="simple" xlink:href="../309/1424309.xml">
differential equations</link> and the like.</p>

<sec>
<st>
General introduction</st>
<p>

The overall goal of the field of numerical analysis is the design and analysis of techniques to give approximate but accurate solutions to hard problems, the variety of which is suggested by the following.</p>
<p>

<list>
<entry level="1" type="bullet">

 Advanced numerical methods are essential in making <link xlink:type="simple" xlink:href="../381/1505381.xml">
numerical weather prediction</link> feasible.</entry>
<entry level="1" type="bullet">

 Computing the trajectory of a spacecraft requires the accurate numerical solution of a system of <link xlink:type="simple" xlink:href="../297/8297.xml">
ordinary differential equation</link>s.</entry>
<entry level="1" type="bullet">

 Car companies can improve the crash safety of their vehicles by using computer simulations of car crashes. Such simulations essentially consist of solving <link xlink:type="simple" xlink:href="../564/52564.xml">
partial differential equation</link>s numerically.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../412/14412.xml">
Hedge fund</link>s (private investment funds) use tools from all fields of numerical analysis to calculate the value of stocks and derivatives more precisely than other market participants.</entry>
<entry level="1" type="bullet">

 Airlines use sophisticated optimization algorithms to decide ticket prices, airplane and crew assignments and fuel needs. This field is also called <link xlink:type="simple" xlink:href="../476/43476.xml">
operations research</link>.</entry>
<entry level="1" type="bullet">

 Insurance companies use numerical programs for <link xlink:type="simple" xlink:href="../405/43405.xml">
actuarial</link> analysis.</entry>
</list>
</p>
<p>

The rest of this section outlines several important themes of numerical analysis.</p>

<ss1>
<st>
History</st>

<p>

The field of numerical analysis predates the invention of modern computers by many centuries. <link xlink:type="simple" xlink:href="../010/160010.xml">
Linear interpolation</link> was already in use more than 2000 years ago. Many great mathematicians of the past were preoccupied by numerical analysis, as is obvious from the names of important algorithms like <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, <link xlink:type="simple" xlink:href="../523/217523.xml">
Lagrange interpolation polynomial</link>, <link xlink:type="simple" xlink:href="../035/13035.xml">
Gaussian elimination</link>, or <link xlink:type="simple" xlink:href="../098/3011098.xml">
Euler's method</link>.</p>
<p>

To facilitate computations by hand, large books were produced with formulas and tables of data such as interpolation points and function coefficients.  Using these tables, often calculated out to 16 decimal places or more for some functions, one could look up values to plug into the formulas given and achieve very good numerical estimates of some functions.  The canonical work in the field is the <link xlink:type="simple" xlink:href="../888/21888.xml">
NIST</link> publication edited by <link xlink:type="simple" xlink:href="../236/1206236.xml">
Abramowitz and Stegun</link>, a 1000-plus page book of a very large number of commonly used formulas and functions and their values at many points.  The function values are no longer very useful when a computer is available, but the large listing of formulas can still be very handy.</p>
<p>

The <link xlink:type="simple" xlink:href="../636/13636.xml">
mechanical calculator</link> was also developed as a tool for hand computation. These calculators evolved into electronic computers in the 1940s, and it was then found that these computers were also useful for administrative purposes. But the invention of the computer also influenced the field of numerical analysis, since now longer and more complicated calculations could be done.</p>

</ss1>
<ss1>
<st>
Direct and iterative methods</st>

<p>

<table style="float: right; width: 250px; margin-left: 1em;" class="wikitable">
<row>
<col>
<table align="center">
<caption>
Direct Method</caption>
<row>
<col>
&nbsp;</col>
<col>
3<it>x</it>3 + 4 = 28.</col>
</row>
<row>
<col>
<it>Subtract 4''</it></col>
<col>
3<it>x</it>3 = 24.</col>
</row>
<row>
<col>
<it>Divide by 3''</it></col>
<col>
<it>x</it>3 = 8.</col>
</row>
<row>
<col>
<it>Take cube roots''</it></col>
<col>
<it>x</it> = 2.</col>
</row>
</table>
<p>

For the iterative method, apply the <link xlink:type="simple" xlink:href="../651/646651.xml">
bisection method</link><table align="center">
<caption>
Iterative Method</caption>
<row>
<col>
<it>a''</it></col>
<col>
<it>b''</it></col>
<col>
mid</col>
<col>
<it>f</it>(mid)</col>
</row>
<row>
<col>
0</col>
<col>
3</col>
<col>
1.5</col>
<col>
14.125</col>
</row>
<row>
<col>
1.5</col>
<col>
3</col>
<col>
2.25</col>
<col>
38.17...</col>
</row>
<row>
<col>
1.5</col>
<col>
2.25</col>
<col>
1.875</col>
<col>
23.77...</col>
</row>
<row>
<col>
1.875</col>
<col>
2.25</col>
<col>
2.0625</col>
<col>
30.32...</col>
</row>
</table>
</p>
<p>

We conclude from this table that the solution is between 1.875 and 2.0625. The algorithm might return any number in that range with an error less than 0.2.</p>

<ss2>
<st>
 Discretization and numerical integration </st>

<p>

<image location="right" width="125px" src="Schumacher_(Ferrari)_in_practice_at_USGP_2005.jpg">
</image>

In a two hour race, we have measured the speed of the car at three instants and recorded them in the following table.</p>
<p>

Time  0:20 1:00 1:40
km/h  140  150  180 </p>
<p>

A <b>discretization</b> would be to say that the speed of the car was constant from 0:00 to 0:40, then from 0:40 to 1:20 and finally from 1:20 to 2:00. For instance, the total distance traveled in the first 40 minutes is approximately (2/3h x 140 km/h)=93.3 km. This would allow us to estimate the total distance traveled as 93.3 km + 100 km + 120 km = 313.3 km, which is an example of <b>numerical integration</b> (see below) using a <link xlink:type="simple" xlink:href="../478/176478.xml">
Riemann sum</link>, because displacement is the <link xlink:type="simple" xlink:href="../532/15532.xml">
integral</link>of velocity.</p>
<p>

<b>Ill posed problem</b>: Take the function <it>f</it>(<it>x</it>) = 1/(<it>x</it>&nbsp;&amp;minus;&nbsp;1). Note that <it>f</it>(1.1) = 10 and <it>f</it>(1.001) = 1000: a change in <it>x</it> of less than 0.1 turns into a change in <it>f</it>(<it>x</it>) of nearly 1000. Evaluating <it>f</it>(<it>x</it>) near <it>x</it> = 1 is an ill-conditioned problem.</p>
<p>

<b>Well-posed problem</b>: By contrast, the function <math>f(x)=\sqrt{x}</math> is continuous and so evaluating it is well-posed.</p>
</ss2>
</col>
</row>
</table>
</p>
<p>

Direct methods compute the solution to a problem in a finite number of steps. These methods would give the precise answer if they were performed in <link xlink:type="simple" xlink:href="../662/48662.xml">
infinite precision arithmetic</link>. Examples include <link xlink:type="simple" xlink:href="../035/13035.xml">
Gaussian elimination</link>, the <link xlink:type="simple" xlink:href="../189/436189.xml">
QR</link> factorization method for solving <link xlink:type="simple" xlink:href="../087/113087.xml">
systems
of linear equations</link>, and the <link xlink:type="simple" xlink:href="../458/349458.xml">
simplex method</link> of <link xlink:type="simple" xlink:href="../730/43730.xml">
linear programming</link>. In practice, <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<type wordnetid="105840188" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<link xlink:type="simple" xlink:href="../376/11376.xml">
finite precision</link></kind>
</type>
</category>
</concept>
</idea>
 is used and the result is an approximation of the true solution (assuming <link xlink:type="simple" xlink:href="../807/233807.xml">
stability</link>).</p>
<p>

In contrast to direct methods, <link xlink:type="simple" xlink:href="../237/15237.xml">
iterative method</link>s are not expected to terminate in a number of steps. Starting from an initial guess, iterative methods form successive approximations that <link xlink:type="simple" xlink:href="../779/349779.xml">
converge</link> to the exact solution only in the limit. A <link>
convergence criterion</link> is specified in order to decide when a sufficiently accurate solution has (hopefully) been found. Even in infinite precision arithmetic these methods would not reach the solution in finitely many steps (in general). Examples include <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, the <link xlink:type="simple" xlink:href="../651/646651.xml">
bisection method</link>, and <link xlink:type="simple" xlink:href="../104/4047104.xml">
Jacobi iteration</link>. In computational matrix algebra, iterative methods are generally needed for large problems.</p>
<p>

Iterative methods are more common than direct methods in numerical analysis. Some methods are direct in principle but are usually used as though they were not, e.g. <link xlink:type="simple" xlink:href="../521/4329521.xml">
GMRES</link> and the <link xlink:type="simple" xlink:href="../821/1448821.xml">
conjugate gradient method</link>. For these methods the number of steps needed to obtain the exact solution is so large that an approximation is accepted in the same manner as for an iterative method.</p>

</ss1>
<ss1>
<st>
Discretization</st>

<p>

Furthermore, continuous problems must sometimes be replaced by a discrete problem whose solution is known to approximate that of the continuous problem; this process is called <it>discretization</it>. For example, the solution of a <link xlink:type="simple" xlink:href="../309/1424309.xml">
differential equation</link> is a function. This function must be represented by a finite amount of data, for instance by its value at a finite number of points at its domain, even though this domain is a continuum.</p>

</ss1>
</sec>
<sec>
<st>
The generation and propagation of errors</st>

<p>

The study of errors forms an important part of numerical analysis. There are several ways in which error can be introduced in the solution of the problem. </p>

<ss2>
<st>
Round-off</st>

<p>

<link xlink:type="simple" xlink:href="../450/432450.xml">
Round-off error</link>s arise because it is impossible to represent all <link xlink:type="simple" xlink:href="../491/19725491.xml">
real number</link>s exactly on a <link xlink:type="simple" xlink:href="../931/10931.xml">
finite-state machine</link> (which is what all practical <link xlink:type="simple" xlink:href="../457/7878457.xml">
digital computer</link>s are).</p>

</ss2>
<ss2>
<st>
Truncation and discretization error</st>

<p>

<link xlink:type="simple" xlink:href="../056/229056.xml">
Truncation</link> errors are committed when an iterative method is terminated and the approximate solution differs from the exact solution. Similarly, discretization induces a <link xlink:type="simple" xlink:href="../070/516070.xml">
discretization error</link> because the solution of the discrete problem does not coincide with the solution of the continuous problem. For instance, in the iteration in the sidebar to compute the solution of <math>3x^3+4=28</math>, after 10 or so iterations, we conclude that the root is roughly 1.99 (for example). We therefore have a truncation error of 0.01.</p>
<p>

Once an error is generated, it will generally propagate through the calculation. For instance, we have already noted that the operation + on a calculator (or a computer) is inexact. It follows that a calculation of the type a+b+c+d+e is even more inexact.</p>

</ss2>
<ss2>
<st>
Numerical stability and well posedness</st>

<p>

This leads to the notion of <link xlink:type="simple" xlink:href="../807/233807.xml">
numerical stability</link>: an algorithm is numerically stable if an error, once it is generated, does not grow too much during the calculation. This is only possible if the problem is <link xlink:type="simple" xlink:href="../934/6934.xml">
well-conditioned</link>, meaning that the solution changes by only a small amount if the problem data are changed by a small amount. Indeed, if a problem is ill-conditioned, then any error in the data will grow a lot.</p>
<p>

However, an algorithm that solves a well-conditioned problem may or may not be numerically stable.  An art of numerical analysis is to find a stable algorithm for solving a well-posed mathematical problem. For instance, computing the square root of 2 (which is roughly 1.41421) is a well-posed problem. Many algorithms solve this problem by starting with an initial approximation <it>x</it>1 to <math>\sqrt{2}</math>, for instance <it>x</it>1=1.4, and then computing improved guesses <it>x</it>2, <it>x</it>3, etc... One such method is the famous <link>
Babylonian method</link>, which is given by <it>xk</it>+1 = <it>xk</it>/2 + 1/<it>xk</it>. Another iteration, which we will call Method X, is given by <it>xk</it> + 1 = (<it>xk</it>2&amp;minus;2)2 + <it>xk</it>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> We have calculated a few iterations of each scheme in table form below, with initial guesses <it>x</it>1 = 1.4 and <it>x</it>1 = 1.42.</p>
<p>

<table class="wikitable">
<row>
<header>
Babylonian</header>
<header>
Babylonian</header>
<header>
Method X</header>
<header>
Method X</header>
</row>
<row>
<col>
<it>x</it>1 = 1.4</col>
<col>
<it>x</it>1 = 1.42</col>
<col>
<it>x</it>1 = 1.4</col>
<col>
<it>x</it>1 = 1.42</col>
</row>
<row>
<col>
<it>x</it>2 = 1.4142857...</col>
<col>
<it>x</it>2 = 1.41422535...</col>
<col>
<it>x</it>2 = 1.4016</col>
<col>
<it>x</it>2 = 1.42026896</col>
</row>
<row>
<col>
<it>x</it>3 = 1.414213564...</col>
<col>
<it>x</it>3 = 1.41421356242...</col>
<col>
<it>x</it>3 = 1.4028614...</col>
<col>
<it>x</it>3 = 1.42056...</col>
</row>
<row>


<col>
...</col>
<col>
...</col>
</row>
<row>


<col>
<it>x</it>1000000 = 1.41421...</col>
<col>
<it>x</it>28 = 7280.2284...</col>
</row>
</table>
</p>
<p>

Observe that the Babylonian method converges fast regardless of the initial guess, whereas Method X converges extremely slowly with initial guess 1.4 and diverges for initial guess 1.42. Hence, the Babylonian method is numerically stable, while Method X is numerically unstable.</p>

</ss2>
</sec>
<sec>
<st>
Areas of study</st>

<p>

The field of numerical analysis is divided in different disciplines according to the problem that is to be solved.</p>

<ss1>
<st>
Computing values of functions</st>

<p>

<table style="float: right; width: 250px; clear: right; margin-left: 1em;" class="wikitable">
<row>
<col>
<b>Interpolation</b>: We have observed the temperature to vary from 20 degrees Celsius at 1:00 to 14 degrees at 3:00. A linear interpolation of this data would conclude that it was 17 degrees at 2:00 and 18.5 degrees at 1:30pm.<p>

<b>Extrapolation</b>: If the <link xlink:type="simple" xlink:href="../594/12594.xml">
gross domestic product</link> of a country has been growing an average of 5% per year and was 100 billion dollars last year, we might extrapolate that it will be 105 billion dollars this year.</p>
<p>

<image location="right" width="100px" src="Linear-regression.png">
<caption>

A line through 20 points?
</caption>
</image>
</p>
<p>

<b>Regression</b>: In linear regression, given <it>n</it> points, we compute a line that passes as close as possible to those <it>n</it> points.</p>
<p>

<image location="right" width="100px" src="LemonadeJuly2006.JPG">
<caption>

How much for a glass of lemonade?
</caption>
</image>
</p>
<p>

<b>Optimization</b>: Say you sell lemonade at a <link xlink:type="simple" xlink:href="../655/6216655.xml">
lemonade stand</link>, and notice that at $1, you can sell 197 glasses of lemonade per day, and that for each increase of $0.01, you will sell one less lemonade per day. If you could charge $1.485, you would maximize your profit, but due to the constraint of having to charge a whole cent amount, charging $1.49 per glass will yield the maximum income of $220.52 per day.</p>
<p>

<image location="right" width="150px" src="Wind-particle.png">
<caption>

Wind direction in blue, true trajectory in black, Euler method in red.
</caption>
</image>
</p>
<p>

<b>Differential equation</b>: If you set up 100 fans to blow air from one end of the room to the other and then you drop a feather into the wind, what happens? The feather will follow the air currents, which may be very complex. One approximation is to measure the speed at which the air is blowing near the feather every second, and advance the simulated feather as if it were moving in a straight line at that same speed for one second, before measuring the wind speed again. This is called the <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/3011098.xml">
Euler method</link></mathematical_statement>
</method>
</know-how>
</equation>
</message>
</statement>
for solving an ordinary differential equation.</p>
</col>
</row>
</table>
</p>
<p>

One of the simplest problems is the evaluation of a function at a given point. The most straightforward approach, of just plugging in the number in the formula is sometimes not very efficient. For polynomials, a better approach is using the <link xlink:type="simple" xlink:href="../263/14263.xml">
Horner scheme</link>, since it reduces the necessary number of multiplications and additions. Generally, it is important to estimate and control <link xlink:type="simple" xlink:href="../450/432450.xml">
round-off error</link>s arising from the use of <link xlink:type="simple" xlink:href="../376/11376.xml">
floating point</link> arithmetic.</p>

</ss1>
<ss1>
<st>
Interpolation, extrapolation, and regression</st>

<p>

<link xlink:type="simple" xlink:href="../569/14569.xml">
Interpolation</link> solves the following problem: given the value of some unknown function at a number of points, what value does that function have at some other point between the given points? A very simple method is to use <link xlink:type="simple" xlink:href="../010/160010.xml">
linear interpolation</link>, which assumes that the unknown function is linear between every pair of successive points. This can be generalized to <link xlink:type="simple" xlink:href="../565/203565.xml">
polynomial interpolation</link>, which is sometimes more accurate but suffers from <mathematical_relation wordnetid="113783581" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../763/202763.xml">
Runge's phenomenon</link></function>
</mathematical_relation>
. Other interpolation methods use localized functions like <link xlink:type="simple" xlink:href="../680/457680.xml">
spline</link>s or <link xlink:type="simple" xlink:href="../903/50903.xml">
wavelet</link>s.</p>
<p>

<link xlink:type="simple" xlink:href="../415/546415.xml">
Extrapolation</link> is very similar to interpolation, except that now we want to find the value of the unknown function at a point which is outside the given points.</p>
<p>

<link xlink:type="simple" xlink:href="../997/826997.xml">
Regression</link> is also similar, but it takes into account that the data is imprecise. Given some points, and a measurement of the value of some function at these points (with an error), we want to determine the unknown function. The <link xlink:type="simple" xlink:href="../359/82359.xml">
least squares</link>-method is one popular way to achieve this.</p>

</ss1>
<ss1>
<st>
Solving equations and systems of equations</st>

<p>

Another fundamental problem is computing the solution of some given equation. Two cases are commonly distinguished, depending on whether the equation is linear or not. For instance, the equation <math>2x+5=3</math> is linear while <math>2x^2+5=3</math> is not.</p>
<p>

Much effort has been put in the development of methods for solving <link xlink:type="simple" xlink:href="../087/113087.xml">
systems of linear equations</link>. Standard direct methods, i.e., methods that use some <link xlink:type="simple" xlink:href="../873/253873.xml">
matrix decomposition</link> are <link xlink:type="simple" xlink:href="../035/13035.xml">
Gaussian elimination</link>, <link xlink:type="simple" xlink:href="../993/6243993.xml">
LU decomposition</link>, <link xlink:type="simple" xlink:href="../433/134433.xml">
Cholesky decomposition</link> for <link xlink:type="simple" xlink:href="../474/126474.xml">
symmetric</link> (or <link xlink:type="simple" xlink:href="../682/189682.xml">
hermitian</link>) and <link xlink:type="simple" xlink:href="../326/40326.xml">
positive-definite matrix</link>, and <link xlink:type="simple" xlink:href="../223/305223.xml">
QR decomposition</link> for non-square matrices. <link xlink:type="simple" xlink:href="../237/15237.xml">
Iterative method</link>s such as the <link xlink:type="simple" xlink:href="../104/4047104.xml">
Jacobi method</link>, <link>
Gaussâ€“Seidel method</link>, <link xlink:type="simple" xlink:href="../447/4068447.xml">
successive over-relaxation</link> and <link xlink:type="simple" xlink:href="../821/1448821.xml">
conjugate gradient method</link> are usually preferred for large systems.</p>
<p>

<link xlink:type="simple" xlink:href="../299/153299.xml">
Root-finding algorithm</link>s are used to solve nonlinear equations (they are so named since a root of a function is an argument for which the function yields zero). If the function is <link xlink:type="simple" xlink:href="../921/7921.xml">
differentiable</link> and the derivative is known, then <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 is a popular choice. <link xlink:type="simple" xlink:href="../789/1118789.xml">
Linearization</link> is another technique for solving nonlinear equations.</p>

</ss1>
<ss1>
<st>
Solving eigenvalue or singular value problems</st>

<p>

Several important problems can be phrased in terms of <link xlink:type="simple" xlink:href="../495/123495.xml">
eigenvalue decomposition</link>s or <link xlink:type="simple" xlink:href="../207/142207.xml">
singular value decomposition</link>s. For instance, the <link>
spectral image compression</link> algorithm <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> is based on the singular value decomposition. The corresponding tool in statistics is called <link xlink:type="simple" xlink:href="../340/76340.xml">
principal component analysis</link>. One application is to automatically find the 100 top subjects of discussion on the web, and to then classify each web page according to which subject it belongs to.</p>

</ss1>
<ss1>
<st>
Optimization</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../033/52033.xml">
Optimization (mathematics)</link></it>
</indent>

Optimization problems ask for the point at which a given function is maximized (or minimized). Often, the point also has to satisfy some <link xlink:type="simple" xlink:href="../360/206360.xml">
constraint</link>s.</p>
<p>

The field of optimization is further split in several subfields, depending on the form of the objective function and the constraint. For instance, <link xlink:type="simple" xlink:href="../730/43730.xml">
linear programming</link> deals with the case that both the objective function and the constraints are linear. A famous method in linear programming is the <link xlink:type="simple" xlink:href="../458/349458.xml">
simplex method</link>.</p>
<p>

The method of <link xlink:type="simple" xlink:href="../974/159974.xml">
Lagrange multipliers</link> can be used to reduce optimization problems with constraints to unconstrained optimization problems.</p>

</ss1>
<ss1>
<st>
Evaluating integrals</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../089/170089.xml">
Numerical integration</link></it>
</indent>

Numerical integration, in some instances also known as numerical <link xlink:type="simple" xlink:href="../089/170089.xml">
quadrature</link>, asks for the value of a definite <link xlink:type="simple" xlink:href="../532/15532.xml">
integral</link>. Popular methods use one of the <link>
Newtonâ€“Cotes formulas</link> (like the midpoint rule or <link xlink:type="simple" xlink:href="../962/219962.xml">
Simpson's rule</link>) or <link xlink:type="simple" xlink:href="../579/50579.xml">
Gaussian quadrature</link>. These methods rely on a "divide and conquer" strategy, whereby an integral on a relatively large set is broken down into integrals on smaller sets. In higher dimensions, where these methods become prohibitively expensive in terms of computational effort, one may use <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/56098.xml">
Monte Carlo</link></method>
</know-how>
</technique>
 or <link xlink:type="simple" xlink:href="../599/487599.xml">
quasi-Monte Carlo method</link>s (see <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../960/1112960.xml">
Monte Carlo integration</link></method>
</know-how>
), or, in modestly large dimensions, the method of <link xlink:type="simple" xlink:href="../088/646088.xml">
sparse grid</link>s.</p>

</ss1>
<ss1>
<st>
Differential equations</st>
<p>

<indent level="1">

<it>Main articles: <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../829/272829.xml">
Numerical ordinary differential equations</link></mathematical_statement>
</equation>
</message>
</statement>
, <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../583/1634583.xml">
Numerical partial differential equations</link></mathematical_statement>
</equation>
</message>
</statement>
.</it>
</indent>

Numerical analysis is also concerned with computing (in an approximate way) the solution of <link xlink:type="simple" xlink:href="../309/1424309.xml">
differential equation</link>s, both ordinary differential equations and <link xlink:type="simple" xlink:href="../564/52564.xml">
partial differential equation</link>s.</p>
<p>

Partial differential equations are solved by first discretizing the equation, bringing it into a finite-dimensional subspace. This can be done by a <link xlink:type="simple" xlink:href="../581/18233581.xml">
finite element method</link>, a <link xlink:type="simple" xlink:href="../147/39147.xml">
finite difference</link> method, or (particularly in engineering) a <link xlink:type="simple" xlink:href="../017/345017.xml">
finite volume method</link>. The theoretical justification of these methods often involves theorems from <link xlink:type="simple" xlink:href="../180/11180.xml">
functional analysis</link>. This reduces the problem to the solution of an algebraic equation.</p>

</ss1>
</sec>
<sec>
<st>
Software</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../647/2645647.xml">
List of numerical analysis software</link></it>
</indent>

Since the late twentieth century, most algorithms are implemented in a variety of programming languages. The <link xlink:type="simple" xlink:href="../602/485602.xml">
Netlib</link> repository contains various collections of software routines for numerical problems, mostly in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
 and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
. Commercial products implementing many different numerical algorithms include the <link xlink:type="simple" xlink:href="../133/2857133.xml">
IMSL</link> and <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link>
NAG</link></institution>
</company>
 libraries; a free alternative is the <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../067/1113067.xml">
GNU Scientific Library</link></room>
</library>
</area>
</artifact>
</structure>
.</p>
<p>

There are several popular numerical computing applications such as <software wordnetid="106566077" confidence="0.9508927676800064">
<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../412/20412.xml">
MATLAB</link></programming_language>
</software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../007/3830007.xml">
S-PLUS</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../733/544733.xml">
LabVIEW</link></software>
, and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../587/512587.xml">
IDL</link></programming_language>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../563/153563.xml">
Scilab</link></software>
 as well as free and open source alternatives such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../898/4481898.xml">
FreeMat</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../707/48707.xml">
GNU Octave</link></software>
 (similar to Matlab), <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../002/8587002.xml">
IT++</link></room>
</library>
</area>
</artifact>
</structure>
 (a C++ library), <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../707/376707.xml">
R</link></programming_language>
 (similar to S-PLUS) and certain variants of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/23862.xml">
Python</link></programming_language>
. Performance varies widely: while vector and matrix operations are usually fast, scalar loops may vary in speed by more than an order of magnitude. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>
<p>

Many <link xlink:type="simple" xlink:href="../427/54427.xml">
computer algebra system</link>s such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../024/49024.xml">
Mathematica</link></software>
 also benefit from the availability of <link xlink:type="simple" xlink:href="../892/600892.xml">
arbitrary precision arithmetic</link> which can provide more accurate results. However many <link xlink:type="simple" xlink:href="../427/54427.xml">
computer algebra system</link>s have poor numerical performance.</p>
<p>

Also, any <link xlink:type="simple" xlink:href="../686/27686.xml">
spreadsheet</link> software can be used to solve simple problems relating to numerical analysis.</p>
<p>

See also <link xlink:type="simple" xlink:href="../924/8134924.xml">
Comparison of numerical analysis software</link>.</p>

</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../008/1181008.xml">
Scientific computing</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../250/444250.xml">
List of numerical analysis topics</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../361/82361.xml">
Gram-Schmidt process</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../668/13668.xml">
Halting problem</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../566/1254566.xml">
Numerical differentiation</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>
<p>

<reflist>
<entry id="1">
The approximation of the <link xlink:type="simple" xlink:href="../682/341682.xml">
square root of 2</link> is four <link xlink:type="simple" xlink:href="../316/135316.xml">
sexagesimal</link> figures, which is about six <link xlink:type="simple" xlink:href="../214/8214.xml">
decimal</link> figures. 1 + 24/60 + 51/602 + 10/603 = 1.41421296... <weblink xlink:type="simple" xlink:href="http://it.stlawu.edu/%7Edmelvill/mesomath/tablets/YBC7289.html">
Photograph, illustration, and description of the <it>root(2)</it> tablet from the Yale Babylonian Collection</weblink></entry>
<entry id="2">
The New Zealand Qualification authority specifically mentions this skill in document 13004 version 2, dated 17 October 2003 titled <weblink xlink:type="simple" xlink:href="http://www.nzqa.govt.nz/nqfdocs/units/pdf/13004.pdf">
CARPENTRY THEORY: Demonstrate knowledge of setting out a building</weblink></entry>
<entry id="3">
By the <link xlink:type="simple" xlink:href="../016/23016.xml">
Pythagorean theorem</link>, a rectangle whose sides are 2.40 meter and 3.75 meter has a diagonal of length <math>\sqrt{2.40^2+3.75^2}\approx 4.45</math> meters.</entry>
<entry id="4">
This is a <link xlink:type="simple" xlink:href="../320/7344320.xml">
fixed point iteration</link> for the equation <math>x=(x^2-2)^2+x=f(x)</math>, whose solutions include <math>\sqrt{2}</math>. The iterates always move to the right since <math>f(x)\geq x</math>. Hence <math>x_1=1.4&amp;lt;\sqrt{2}</math> converges and <math>x_1=1.42&amp;gt;\sqrt{2}</math> diverges.</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://online.redwoods.cc.ca.us/instruct/darnold/maw/single.htm">
The Singular Value Decomposition and Its Applications in Image Compression</weblink></entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://www.sciviews.org/benchmark/">
Speed comparison of various number crunching packages</weblink></entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.scientificweb.com/ncrunch/ncrunch5.pdf">
Comparison of mathematical programs for data analysis</weblink> Stefan Steinhaus, ScientificWeb.com</entry>
</reflist>
</p>

</sec>
<sec>
<st>
References</st>


<p>

<list>
<entry level="1" type="bullet">

 <cite id="Reference-Gilat-2004" style="font-style:normal" class="book">Gilat, Amos&#32;(2004). MATLAB: An Introduction with Applications, 2nd edition,&#32;John Wiley &amp; Sons. ISBN 0-471-69420-7.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite id="Reference-Hildebrand-1974" style="font-style:normal" class="book">Hildebrand, F. B.&#32;(1974). Introduction to Numerical Analysis, 2nd edition,&#32;McGraw-Hill. ISBN 0-070-28761-9.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite id="Reference-Leader-2004" style="font-style:normal" class="book">Leader, Jeffery J.&#32;(2004). Numerical Analysis and Scientific Computation.&#32;Addison Wesley. ISBN 0-201-73499-0.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 Trefethen, Lloyd N. (2006). <weblink xlink:type="simple" xlink:href="http://web.comlab.ox.ac.uk/oucl/work/nick.trefethen/NAessay.pdf">
"Numerical analysis"</weblink>, 20 pages. To appear in: Timothy Gowers and June Barrow-Green (editors), <it>Princeton Companion of Mathematics</it>, Princeton University Press.</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www-gdz.sub.uni-goettingen.de/cgi-bin/digbib.cgi?PPN362160546">
Numerische Mathematik</weblink>, volumes 1-66, Springer, 1959-1994 (searchable; pages are images). (English) (German)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.mathcom.com/corpdir/techinfo.mdir/index.html">
Scientific computing FAQ</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://dmoz.org/Science/Math/Numerical_Analysis/">
Numerical analysis DMOZ category</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://norma.mas.ecp.fr/wikimas/ScientificComputingSoftware">
Lists of free software for scientific computing and numerical analysis</weblink> (English) (French)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.indiana.edu/~statmath/bysubject/numerics.html">
Numerical Computing Resources on the Internet</weblink> - a list maintained by Indiana University Stat/Math Center</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.nr.com/">
Numerical Recipes Homepage - with free, complete downloadable books</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.apropos-logic.com/nc/">
Java Number Cruncher features free, downloadable code samples that graphically illustrate common numerical algorithms</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://math.fullerton.edu/mathews/numerical.html">
Numerical Analysis Project by John H. Mathews</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.fceia.unr.edu.ar/~fisicomp/apuntes/biblios/altnr.htm">
Alternatives to Numerical Recipes</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
Major fields of  <link xlink:type="simple" xlink:href="../831/18831.xml">
mathematics</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<link xlink:type="simple" xlink:href="../118/3118.xml">
Arithmetic</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../636/19636.xml">
Logic</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../553/27553.xml">
Set theory</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../869/5869.xml">
Category theory</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../923/18716923.xml">
Algebra</link> (<link xlink:type="simple" xlink:href="../710/9710.xml">
elementary</link> â€“ <link xlink:type="simple" xlink:href="../422/18422.xml">
linear</link> â€“ <link xlink:type="simple" xlink:href="../384/19616384.xml">
abstract</link>)&nbsp;Â· 
<link xlink:type="simple" xlink:href="../527/21527.xml">
Number theory</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../396/48396.xml">
Analysis</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../446/18973446.xml">
Geometry</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../261/18717261.xml">
Trigonometry</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../954/29954.xml">
Topology</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../632/990632.xml">
Dynamical systems</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../170/5170.xml">
Combinatorics</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../924/11924.xml">
Game theory</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../773/14773.xml">
Information theory</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../033/52033.xml">
Optimization</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../402/30402.xml">
Computation</link>&nbsp;Â· 
<link>
Probability</link>&nbsp;Â· 
<link xlink:type="simple" xlink:href="../685/26685.xml">
Statistics</link>&nbsp;Â· 
<occupation wordnetid="100582388" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../416/173416.xml">
Mathematical physics</link></activity>
</psychological_feature>
</act>
</event>
</occupation>
</p>
</col>
</row>
</table>
</col>
</row>
</table>
</p>


</sec>
</bdy>
</article>
