<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:33:18[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>Concurrency control</title>
<id>217356</id>
<revision>
<id>241244316</id>
<timestamp>2008-09-27T01:05:25Z</timestamp>
<contributor>
<username>Comps</username>
<id>1071011</id>
</contributor>
</revision>
<categories>
<category>Databases</category>
<category>Concurrency control</category>
<category>Transaction processing</category>
<category>Data management</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>,  especially in the fields of <link xlink:type="simple" xlink:href="../311/5311.xml">
computer programming</link> (see also <link xlink:type="simple" xlink:href="../605/2581605.xml">
concurrent programming</link>, <link xlink:type="simple" xlink:href="../162/145162.xml">
parallel programming</link>), <link xlink:type="simple" xlink:href="../194/22194.xml">
operating systems</link> (see also <link xlink:type="simple" xlink:href="../162/145162.xml">
parallel computing</link>) , <link xlink:type="simple" xlink:href="../020/64020.xml">
multiprocessor</link>s, and <link xlink:type="simple" xlink:href="../377/8377.xml">
databases</link>, <b>concurrency control</b> ensures that correct results for concurrent operations are generated, while getting those results as quickly as possible.
<sec>
<st>
Concurrency control in databases</st>
<p>

Concurrency control in <link xlink:type="simple" xlink:href="../513/8513.xml">
 database management systems (DBMS)</link> ensures that <link xlink:type="simple" xlink:href="../953/233953.xml">
database transaction</link>s are performed concurrently without the concurrency violating the <link xlink:type="simple" xlink:href="../995/40995.xml">
data integrity</link> of a <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link>. Executed transactions should follow the <link xlink:type="simple" xlink:href="../776/60776.xml">
ACID</link> rules, as described below. The DBMS must guarantee that only <link xlink:type="simple" xlink:href="../457/400457.xml#xpointer(//*[./st=%22Serializable%22])">
serializable</link> (unless <link xlink:type="simple" xlink:href="../801/4367801.xml">
Serializability</link> is intentionally relaxed), <link xlink:type="simple" xlink:href="../457/400457.xml#xpointer(//*[./st=%22Recoverable%22])">
recoverable</link> schedules are generated. It also guarantees that no effect of committed transactions is lost, and no effect of aborted (rolled back) transactions remains in the related database.</p>

<ss1>
<st>
 Transaction <link xlink:type="simple" xlink:href="../776/60776.xml">
ACID</link> rules </st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../560/2114560.xml">
Atomicity</link> - Either the effects of all or none of its operations remain when a transaction is completed - in other words, to the outside world the transaction appears to be indivisible, atomic.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../830/1140830.xml">
Consistency</link> - Every <link xlink:type="simple" xlink:href="../953/233953.xml">
transaction</link> must leave the database in a <link>
consistent state</link>.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../521/325521.xml">
Isolation</link> - Transactions cannot interfere with each other. Providing isolation is the main goal of concurrency control.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../944/245944.xml">
Durability</link> - Successful transactions must persist through <abnormality wordnetid="114501726" confidence="0.8">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<physical_condition wordnetid="114034177" confidence="0.8">
<anomaly wordnetid="114505821" confidence="0.8">
<link xlink:type="simple" xlink:href="../631/279631.xml">
crash</link></anomaly>
</physical_condition>
</state>
</condition>
</abnormality>
es.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Concurrency control mechanism</st>
<p>

The main categories of concurrency control mechanisms are:
<list>
<entry level="1" type="bullet">

 <b><link xlink:type="simple" xlink:href="../011/233011.xml">
Optimistic</link></b> - Delay the synchronization for a transaction until its end without blocking (read, write) operations, and then abort transactions that violate desired synchronization rules. </entry>
<entry level="1" type="bullet">

 <b>Pessimistic</b> - Block operations of transaction that would cause violation of synchronization rules.</entry>
</list>
</p>
<p>

Quite many methods for concurrency control exist. Major methods, which have each many variants, include:
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../602/244602.xml">
Two-phase locking</link></entry>
<entry level="1" type="bullet">

 Conflict (<link xlink:type="simple" xlink:href="../801/4367801.xml">
serializability</link>, <link xlink:type="simple" xlink:href="../590/9207590.xml">
precedence</link>) graph checking</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../351/217351.xml">
Timestamp ordering</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../212/4379212.xml#xpointer(//*[./st=%22A+generic+local+commitment+ordering+algorithm%22])">
Commitment ordering</link> </entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../423/218423.xml">
Multiversion concurrency control</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../598/1490598.xml">
Index concurrency control</link></entry>
</list>
</p>
<p>

Almost all implemented concurrency control mechanisms guarantee schedules that are <link xlink:type="simple" xlink:href="../457/400457.xml#xpointer(//*[./st=%22Conflict+Serializable%22])">
conflict serializable</link>, for which quite efficient algorithms exist, unless <link xlink:type="simple" xlink:href="../801/4367801.xml#xpointer(//*[./st=%22relaxing+serializability%22])">
relaxed forms</link> of <link xlink:type="simple" xlink:href="../801/4367801.xml">
serializability</link> are possible (depending on application), which allows better performance.</p>

</ss1>
</sec>
<sec>
<st>
 Concurrency control in operating systems </st>

<p>

Operating systems, especially <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link>s, need to maintain the illusion that many tasks are all running at the same time.
Such <link xlink:type="simple" xlink:href="../126/20126.xml">
multitasking</link> is fairly simple when all tasks are independent from each other.
However, when several tasks try to use the same resource, or when tasks try to share information,
it can lead to confusion and inconsistency.
The task of <link xlink:type="simple" xlink:href="../605/2581605.xml">
concurrent computing</link> is to solve that problem.
Some solutions involve "locks" similar to the locks used in databases, but they risk causing problems of their own such as <link xlink:type="simple" xlink:href="../181/105181.xml">
deadlock</link>.
Other solutions are <link xlink:type="simple" xlink:href="../864/554864.xml">
lock-free and wait-free algorithms</link>.</p>

<ss1>
<st>
 See also </st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../827/36827.xml">
Mutual exclusion</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../521/325521.xml">
Isolation (computer science)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../801/4367801.xml">
Serializability</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../457/400457.xml">
Schedule</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../423/218423.xml">
Multiversion concurrency control</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../968/12380968.xml">
Global concurrency control</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../605/2581605.xml">
Concurrent programming</link></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://c2.com/cgi/wiki?SynchronizationStrategies">
Portland Pattern Repository: Synchronization Strategies</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://c2.com/cgi/wiki?CategoryConcurrency">
Portland Pattern Repository: Category Concurrency</weblink></entry>
</list>
</p>


</sec>
</bdy>
</entity>
</article>
