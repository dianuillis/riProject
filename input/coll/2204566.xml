<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:28:56[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Preemption (computing)</title>
<id>2204566</id>
<revision>
<id>240847281</id>
<timestamp>2008-09-25T07:20:51Z</timestamp>
<contributor>
<username>BaronLarf</username>
<id>137600</id>
</contributor>
</revision>
<categories>
<category>Concurrent computing</category>
<category>Operating system technology</category>
</categories>
</header>
<bdy>

<b>Pre-emption</b> or <b>preemption</b> in <link xlink:type="simple" xlink:href="../213/5213.xml">
computing</link> is the act of temporarily interrupting a <link xlink:type="simple" xlink:href="../191/1655191.xml">
task</link> being carried out by a <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer system</link>, without requiring its cooperation, and with the intention of resuming the task at a later time.  Such a change is known as a <link xlink:type="simple" xlink:href="../904/6904.xml">
context switch</link>.  It is normally carried out by a <link xlink:type="simple" xlink:href="../185/3446185.xml">
privileged</link> task or part of the system known as a preemptive <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduler</link>, which has the power to <b>pre-empt</b>, or interrupt, and later resume, other tasks in the system.
<sec>
<st>
User mode and kernel mode</st>
<p>

In any given system design, some operations performed by the system may not be preemptible.  This usually applies to <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> functions and service <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link>s which, if not permitted to run to completion, would tend to produce <link xlink:type="simple" xlink:href="../661/98661.xml">
race condition</link>s resulting in <link xlink:type="simple" xlink:href="../181/105181.xml">
deadlock</link>.  Barring the scheduler from preempting tasks while they are processing kernel functions simplifies the kernel design at the expense of system responsiveness.  The distinction between <link xlink:type="simple" xlink:href="../467/93467.xml">
user mode</link> and <link xlink:type="simple" xlink:href="../185/3446185.xml#xpointer(//*[./st=%22Supervisor_mode%22])">
kernel mode</link>, which determines privilege level within the system, may also be used to distinguish whether a task is currently preemptible.</p>
<p>

Some  modern systems have <b>preemptive kernels</b>, designed to permit tasks to be preempted even when in kernel mode.  Examples of such systems are <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
, the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../510/18510.xml">
Linux kernel</link></software>
 2.6 and some <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> systems.</p>
<p>

Other systems improve responsiveness by a <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link> design which in some cases may substantially reduce the need for preemption of processes.</p>

</sec>
<sec>
<st>
Preemptive multitasking</st>
<p>

The term <b>preemptive multitasking</b> is used to distinguish a multitasking operating system, which permits preemption of tasks, from a <link xlink:type="simple" xlink:href="../857/6857.xml#xpointer(//*[./st=%22Cooperative_multitasking/time-sharing%22])">
cooperative multitasking</link> system wherein processes or tasks must be programmed to yield when they do not need system resources.</p>
<p>

In simple terms: Pre-emptive multitasking involves the use of an interrupt mechanism which suspends the currently executing process and invokes a scheduler to determine which process should execute next. Therefore all processes will get some amount of CPU time at any given time.</p>
<p>

In pre-emptive multitasking, the operating system <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> can also initiate a <link xlink:type="simple" xlink:href="../904/6904.xml">
context switch</link> to satisfy the scheduling policy's priority constraint, thus pre-empting the active task. In general, pre-emption means "prior seizure of". When the  high priority task at that instance seizes the currently running task, it is known as pre-emptive scheduling.</p>
<p>

The term "pre-emptive multitasking" is sometimes mistakenly used when the intended meaning is more specific, referring instead to the class of scheduling policies known as <it>time-shared scheduling</it>, or <it><link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link></it>.</p>
<p>

Preemptive multitasking allows the computer system to more reliably guarantee each process a regular "slice" of operating time. It also allows the system to rapidly deal with important external events like incoming data, which might require the immediate attention of one or another process.</p>
<p>

At any specific time, processes can be grouped into two categories: those that are waiting for input or output (called "<link xlink:type="simple" xlink:href="../513/648513.xml">
I/O bound</link>"), and those that are fully utilizing the CPU ("<link xlink:type="simple" xlink:href="../697/648697.xml">
CPU bound</link>"). In early systems, processes would often "poll", or "<link xlink:type="simple" xlink:href="../489/671489.xml">
busywait</link>" while waiting for requested input (such as disk, keyboard or network input). During this time, the process was not performing useful work, but still maintained complete control of the CPU. With the advent of interrupts and preemptive multitasking, these I/O bound processes could be "blocked", or put on hold, pending the arrival of the necessary data, allowing other processes to utilize the CPU. As the arrival of the requested data would generate an interrupt, blocked processes could be guaranteed a timely return to execution.</p>
<p>

Although multitasking techniques were originally developed to allow multiple users to share a single machine, it soon became apparent that multitasking was useful regardless of the number of users. Many operating systems, from mainframes down to single-user personal computers and no-user <link xlink:type="simple" xlink:href="../473/275473.xml">
control systems</link> (like those in <link xlink:type="simple" xlink:href="../957/58957.xml">
robotic spacecraft</link>), have recognized the usefulness of multitasking support for a variety of reasons. Multitasking makes it possible for a single user to run multiple applications at the same time, or to run "background" processes while retaining control of the computer.</p>

<ss1>
<st>
 Time slice </st>
<p>

The period of time for which a process is allowed to run in a preemptive multitasking system is generally called the "time slice". The scheduler is run once every time slice to choose the next process to run. If the time slice is too short then the scheduler will consume too much processing time.</p>
<p>

An <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link> is scheduled to allow the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> to switch between processes when their time slices expire, effectively allowing the processorâ€™s time to be shared between a number of tasks, giving the illusion that it is dealing with these tasks simultaneously, or concurrently. The operating system which controls such a design is called a multi-tasking system.</p>

</ss1>
<ss1>
<st>
Systems supporting preemptive multitasking</st>
<p>

Examples of pre-emptive operating systems include <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
, the <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 family (including <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
XP</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Vista</link></version>
), <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../807/1223807.xml">
<list>
<entry level="1" type="bullet">

BSD</entry>
</list>
</link>, <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> and Windows 95/98/ME (32-bit applications only)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.  <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 and Unix-based systems, and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
VMS</link></O>
, as well as other systems used in the academic and medium-to-large business markets, have always supported pre-emptive multitasking, but for a long time were beyond the reach of most users either because of the costs of licensing or the expensive hardware required to support them.</p>
<p>

Examples of older, non-pre-emptive (cooperative) operating systems include Windows 1.x, 2.x, 3.x, <link>
Windows for Workgroups</link>, Windows 95/98 (when running 16-bit applications), <link>
NetWare</link>, and Classic <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link> versions (system 5.0 and up).  Non-multitasking operating systems include older versions of Mac OS, MS DOS, and <link xlink:type="simple" xlink:href="../293/7293.xml">
Commodore 64</link> OS which could only execute one program at a time.</p>
<p>

<link xlink:type="simple" xlink:href="../304/18933304.xml">
Amiga OS</link>, based on the preemptive multitasking <link xlink:type="simple" xlink:href="../418/82418.xml">
TRIPOS</link> system, was the first such system widely available to home users (1985).  Running on <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/20270.xml">
Motorola 68000</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
-based Amiga systems without memory management, the system used <link xlink:type="simple" xlink:href="../591/10131591.xml">
dynamic loading</link> of relocatable code blocks ("<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../251/13853251.xml">
hunks</link></format>
</information>
</message>
" in Amiga jargon) to pre-emptively multitask all processes in the same flat address space.</p>
<p>

Early <link>
PC</link> operating systems such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../086/66086.xml">
DR-DOS</link></O>
, did not support multitasking at all.  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../188/363188.xml">
Novell NetWare</link></O>
, <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
 systems introduced cooperative multitasking to the PC, but did not support preemptive multitasking.  In the case of the PC, the slow start was partly because of the need to support a large <link xlink:type="simple" xlink:href="../019/290019.xml">
legacy code</link> base of DOS software written to run in single-user mode on a 8086-based PC, whereas the Amiga system was designed to multitask from the beginning.</p>
<p>

The earliest version of Windows to support a limited form of preemptive multitasking was <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../084/11173084.xml">
Windows 2.1x</link></version>
, which used the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../070/15070.xml">
Intel 80386</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
's <artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/641324.xml">
Virtual 8086 mode</link></commodity>
</merchandise>
</artifact>
 to run DOS applications in <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual 8086 machine</link>s--commonly known as "DOS boxes"--which were preemptible.  In <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../064/34064.xml">
Windows 95</link></version>
 and its successors, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../433/75433.xml">
Windows 98</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../458/75458.xml">
Windows Me</link></version>
, 32-bit applications were made preemptible by running each one in a separate address space, but 16 bit applications remained cooperative. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
, which ran processes in a 32-bit paged address space from the outset, has always supported preemptive multitasking, and this has been inherited by the NT line of Windows systems, including <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
.</p>
<p>

Although there were plans to upgrade the cooperative multitasking Mac OS to a preemptive model, these were abandoned in favor of <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>, a re-engineered system based on the BSD-derived <link xlink:type="simple" xlink:href="../076/53076.xml">
Darwin</link> kernel, which supports preemptive multitasking.</p>
<p>

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
 Warp, IBM's rewrite of an earlier IBM/Microsoft collaboration, OS/2, targeted at 386 systems, supported preemptive multitasking of native applications, and also permitted several different Windows sessions to be multitasked preemptively.</p>

</ss1>
</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://support.microsoft.com/kb/117567">
How 16-Bit and 32-Bit Programs Multitask in Windows 95 (Q117567)</weblink></entry>
</reflist>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;Â·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;Â·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;Â·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;Â·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;Â·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;Â·  <link>
Supervisor mode</link>)&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;Â·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;Â·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;Â·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
moreâ€¦</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;Â·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;Â·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;Â·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;Â·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</article>
