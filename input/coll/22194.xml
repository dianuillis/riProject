<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:31:23[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Operating system</title>
<id>22194</id>
<revision>
<id>244621990</id>
<timestamp>2008-10-11T19:15:57Z</timestamp>
<contributor>
<username>Müslimix</username>
<id>503014</id>
</contributor>
</revision>
<categories>
<category>Articles lacking reliable references from May 2008</category>
<category>Operating systems</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <p>

This article or section has multiple issues. Please help <b><weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Operating_system&amp;action=edit">
improve the article</weblink></b> or discuss these issues on the .
<list>
<entry level="1" type="bullet">

 It needs <b>additional  for .</b> Tagged since May 2008.</entry>
<entry level="1" type="bullet">

 It may be . Some content may need to be .</entry>
</list>
</p>
</col>
</row>
</table>
<p>

<image width="150px" src="Operating_system_placement.svg" type="thumb">
<caption>

A layer structure showing where Operating System is located on generally used software systems on desktops
</caption>
</image>
</p>
<p>

An <b>operating system</b> (commonly abbreviated <it>OS</it> and <it>O/S</it>) is the software component of a <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link> system that is responsible for the management and coordination of activities and the sharing of the resources of the computer. The operating system acts as a host for <link xlink:type="simple" xlink:href="../746/454746.xml">
applications</link> that are run on the machine. As a host, one of the purposes of an operating system is to handle the details of the operation of the <link xlink:type="simple" xlink:href="../310/5310.xml">
hardware</link>. This relieves application programs from having to manage these details and makes it easier to write applications. Almost all computers, including <link xlink:type="simple" xlink:href="../879/662879.xml">
handheld computers</link>, <link xlink:type="simple" xlink:href="../742/52742.xml">
desktop computers</link>, <link xlink:type="simple" xlink:href="../153/37153.xml">
supercomputers</link>, and even <link xlink:type="simple" xlink:href="../629/32629.xml">
video game consoles</link>, use an operating system of some type. Some of the oldest models may however use an <link xlink:type="simple" xlink:href="../359/230359.xml">
embedded operating system</link>, that may be contained on a <link xlink:type="simple" xlink:href="../429/6429.xml">
compact disk</link> or other <link xlink:type="simple" xlink:href="../174/28174.xml">
data storage device</link>.</p>
<p>

Operating systems offer a number of services to application programs and users. Applications access these services through <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
application programming interfaces</link> (APIs) or <link>
system calls</link>. By invoking these interfaces, the application can request a service from the operating system, pass parameters, and receive the results of the operation. Users may also interact with the operating system with some kind a software user interface (UI) like typing commands by using <link xlink:type="simple" xlink:href="../707/6707.xml">
command line interface</link> (CLI) or using a <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link> (GUI, commonly pronounced “gooey”). For hand-held and desktop computers, the user interface is generally considered part of the operating system. On large multi-user systems like Unix and Unix-like systems, the user interface is generally implemented as an application program that runs outside the operating system. (Whether the user interface should be included as part of the operating system is a point of contention.) </p>
<p>

Common contemporary operating systems include <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 and <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
. Microsoft Windows has a significant majority of market share in the desktop and notebook computer markets, while servers generally run on Linux or other Unix-like systems. Embedded device markets are split amongst several operating systems.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

<ss1>
<st>
 Technology </st>

<p>

An operating system is a collection of technologies which are designed to allow the computer to perform certain functions. These technologies may or may not be present in every operating system, and there are often differences in how they are implemented. However as stated above most modern operating systems are derived from common design ancestors, and are therefore basically similar. </p>

</ss1>
<ss1>
<st>
 Program execution </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../178/45178.xml">
Process (computing)</link></it>
</indent>
Executing a program involves the creation of a process by the operating system. The <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> creates a process by setting aside or allocating some memory, loading program code from a disk or another part of memory into the newly allocated space, and starting it running.</p>

</ss1>
<ss1>
<st>
 Interrupts </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link></it>
</indent>
Interrupts are central to operating systems as they allow the operating system to deal with the unexpected activities of running programs and the world outside the computer. <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>-based programming is one of the most basic forms of time-sharing, being directly supported by most CPUs. Interrupts provide a computer with a way of automatically running specific code in response to events. Even very basic computers support hardware interrupts, and allow the programmer to specify code which may be run when that event takes place.</p>
<p>

When an interrupt is received, the computer's hardware automatically suspends whatever program is currently running by pushing the current state on a <link xlink:type="simple" xlink:href="../703/27703.xml">
stack</link>, and its <link xlink:type="simple" xlink:href="../996/25996.xml">
registers</link> and program counter are also saved. This is analogous to placing a bookmark in a book when someone is interrupted by a phone call. This task requires no operating system as such, but only that the interrupt be configured at an earlier time.</p>
<p>

In modern operating systems, interrupts are handled by the operating system's <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>. Interrupts may come from either the computer's hardware, or from the running program. When a hardware device triggers an interrupt, the operating system's kernel decides how to deal with this event, generally by running some processing code, or ignoring it. The processing of hardware interrupts is a task that is usually delegated to software called device drivers, which may be either part of the operating system's kernel, part of another program, or both. Device drivers may then relay information to a running program by various means.</p>
<p>

A program may also trigger an interrupt to the operating system, which are very similar in function. If a program wishes to access hardware for example, it may interrupt the operating system's kernel, which causes control to be passed back to the kernel. The kernel may then process the request which may contain instructions to be passed onto hardware, or to a device driver. When a program wishes to allocate more memory, launch or communicate with another program, or signal that it no longer needs the CPU, it does so through interrupts.</p>

</ss1>
<ss1>
<st>
 Protected mode and supervisor mode </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link></it>
</indent>

<indent level="1">

<it>Main article: <link>
Supervisor mode</link></it>
</indent>

Modern CPUs support something called dual mode operation. <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s with this capability use two modes: <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link> and <link>
supervisor mode</link>, which allow certain CPU functions to be controlled and affected only by the operating system <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>. Here, protected mode does not refer specifically to the <link xlink:type="simple" xlink:href="../054/15054.xml">
80286</link> (Intel's x86 16-bit microprocessor) CPU feature, although its protected mode is very similar to it. <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s might have other modes similar to 80286 protected mode as well, such as the <link xlink:type="simple" xlink:href="../324/641324.xml">
virtual 8086 mode</link> of the <link xlink:type="simple" xlink:href="../070/15070.xml">
80386</link> (Intel's x86 32-bit microprocessor or i386). </p>
<p>

However, the term is used here more generally in operating system theory to refer to all modes which limit the capabilities of programs running in that mode, providing things like virtual memory addressing and limiting access to hardware in a manner determined by a program running in supervisor mode. Similar modes have existed in supercomputers, minicomputers, and mainframes as they are essential to fully supporting UNIX-like multi-user operating systems.</p>
<p>

When a computer first starts up, it is automatically running in supervisor mode. The first few programs to run on the computer, being the <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
, <link xlink:type="simple" xlink:href="../909/40909.xml">
bootloader</link> and the operating system have unlimited access to hardware. However when the operating system passes control to another program, it can place the CPU into <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link>.</p>
<p>

In <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link>, programs may have access to a more limited set of the CPU's instructions. A user program may leave <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link> only by triggering an interrupt, causing control to be passed back to the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>. In this way the operating system can maintain exclusive control over things like access to hardware and memory. </p>
<p>

The term "protected mode resource" generally refers to one or more CPU registers, which contain information that the running program isn't allowed to alter. Attempts to alter these resources generally causes a switch to supervisor mode.</p>

</ss1>
<ss1>
<st>
 Memory management </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../373/515373.xml">
memory protection</link></it>
</indent>

Among other things, a multiprogramming operating system <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> must be responsible for managing all system memory which is currently in use by programs. This ensures that a program does not interfere with memory already used by another program. Since programs time share, each program must have independent access to memory.</p>
<p>

Cooperative memory management, used by many early operating systems assumes that all programs make voluntary use of the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>'s memory manager, and do not exceed their allocated memory. This system of memory management is almost never seen anymore, since programs often contain bugs which can cause them to exceed their allocated memory. If a program fails it may cause memory used by one or more other programs to be affected or overwritten. Malicious programs, or viruses may purposefully alter another program's memory or may affect the operation of the operating system itself. With cooperative memory management it takes only one misbehaved program to crash the system. </p>
<p>

<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link> enables the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> to limit a process' access to the computer's memory. Various methods of memory protection exist, including <link xlink:type="simple" xlink:href="../131/1323131.xml">
memory segmentation</link> and <link xlink:type="simple" xlink:href="../193/311193.xml">
paging</link>. All methods require some level of hardware support (such as the <link xlink:type="simple" xlink:href="../054/15054.xml">
80286</link> MMU) which doesn't exist in all computers. </p>
<p>

In both segmentation and paging, certain <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link> registers specify to the CPU what memory address it should allow a running program to access. Attempts to access other addresses will trigger an interrupt which will cause the CPU to re-enter <link>
supervisor mode</link>, placing the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> in charge. This is called a <link xlink:type="simple" xlink:href="../803/28803.xml">
segmentation violation</link> or Seg-V for short, and since it is usually a sign of a misbehaving program, the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> will generally kill the offending program, and report the error. </p>
<p>

Windows 3.1-Me had some level of memory protection, but programs could easily circumvent the need to use it. Under Windows 9x all MS-DOS applications ran in <link>
supervisor mode</link>, giving them almost unlimited control over the computer. A <link xlink:type="simple" xlink:href="../943/573943.xml">
general protection fault</link> would be produced indicating a segmentation violation had occurred, however the system would often crash anyway.</p>

</ss1>
<ss1>
<st>
 Virtual memory </st>

<p>

The use of virtual memory addressing (such as paging or segmentation) means that the kernel can choose which memory each program may use at any given time, allowing the operating system to use the same memory locations for multiple tasks. </p>
<p>

If a program tries to access memory that isn't in its current range of accessible memory, but nonetheless has been allocated to it, the kernel will be interrupted in the same way as it would if the program were to exceed its allocated memory. (See section on memory management.) Under UNIX this kind of interrupt is referred to as a <link xlink:type="simple" xlink:href="../143/1157143.xml">
page fault</link>. </p>
<p>

When the kernel detects a page fault it will generally adjust the virtual memory range of the program which triggered it, granting it access to the memory requested. This gives the kernel discretionary power over where a particular application's memory is stored, or even whether or not it has actually been allocated yet.</p>
<p>

In modern operating systems, application memory which is accessed less frequently can be temporarily stored on disk or other media to make that space available for use by other programs. This is called <link xlink:type="simple" xlink:href="../193/311193.xml">
swapping</link>, as an area of memory can be use by multiple programs, and what that memory area contains can be swapped or exchanged on demand.</p>

<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../143/1157143.xml">
Page fault</link></it>
</indent>

</p>
</ss1>
<ss1>
<st>
 Multitasking </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link></it>
</indent>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management (computing)</link></it>
</indent>

<link xlink:type="simple" xlink:href="../857/6857.xml">
Multitasking</link> refers to the running of multiple independent computer programs on the same computer, giving the appearance that it is performing the tasks at the same time. Since most computers can do at most one or two things at one time, this is generally done via time sharing, which means that each program uses a share of the computer's time to execute. </p>
<p>

An operating system <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> contains a piece of software called a <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduler</link> which determines how much time each program will spend executing, and in which order execution control should be passed to programs. Control is passed to a process by the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>, which allows the program access to the <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link> and memory. At a later time control is returned to the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> through some mechanism, so that another program may be allowed to use the CPU.  This so-called passing of control between the kernel and applications is called a <link xlink:type="simple" xlink:href="../904/6904.xml">
context switch</link>. </p>
<p>

An early model which governed the allocation of time to programs was called <link xlink:type="simple" xlink:href="../857/6857.xml">
cooperative multitasking</link>. In this model, when control is passed to a program by the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>, it may execute for as long as it wants before explicitly returning control to the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>. This means that a malfunctioning program may prevent any other programs from using the CPU. </p>
<p>

The philosophy governing <link xlink:type="simple" xlink:href="../566/2204566.xml">
preemptive multitasking</link> is that of ensuring that all programs are given regular time on the CPU. This implies that all programs must be limited in how much time they are allowed to spend on the CPU without being interrupted. To accomplish this, modern operating system kernels make use of a timed interrupt. A <link xlink:type="simple" xlink:href="../596/167596.xml">
protected mode</link> timer is set by the kernel which triggers a return to supervisor mode after the specified time has elapsed. (See above sections on Interrupts and Dual Mode Operation.)</p>
<p>

On many single user operating systems cooperative multitasking is perfectly adequate, as home computers generally run a small number of well tested programs. <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 was the first version of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> which enforced preemptive multitasking, but it didn't reach the home user market until <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
, (since <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 was targeted at professionals.)</p>

<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link></it>
</indent>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link></it>
</indent>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link></it>
</indent>

</p>
</ss1>
<ss1>
<st>
 Disk access and file systems </st>

<p>

<indent level="1">

<it>Main article: <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
</it>
</indent>

Access to files stored on disks is a central feature of all operating systems. Computers store data on <link xlink:type="simple" xlink:href="../777/13777.xml">
disk</link>s using <link xlink:type="simple" xlink:href="../077/7077.xml">
file</link>s, which are structured in specific ways in order to allow for faster access, higher reliability, and to make better use out of the drive's available space. The specific way in which files are stored on a disk is called a <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>, and enables files to have names and attributes. It also allows them to be stored in a hierarchy of directories or folders arranged in a <link xlink:type="simple" xlink:href="../027/5515027.xml">
directory tree</link>. </p>
<p>

Early operating systems generally supported a single type of disk drive and only one kind of file system. Early file systems were limited in their capacity, speed, and in the kinds of file names and directory structures they could use. These limitations often reflected limitations in the operating systems they were designed for, making it very difficult for an operating system to support more than one file system. </p>
<p>

While many simpler operating systems support a limited range of options for accessing storage systems, more modern operating systems like <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 support a technology known as a <link xlink:type="simple" xlink:href="../131/351131.xml">
virtual file system</link> or VFS. A modern operating system like UNIX supports a wide array of storage devices, regardless of their design or <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>s to be accessed through a common <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
application programming interface</link> (API). This makes it unnecessary for programs to have any knowledge about the device they are accessing. A VFS allows the operating system to provide programs with access to an unlimited number of devices with an infinite variety of file systems installed on them through the use of specific <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>s and file system drivers. </p>
<p>

A connected <link xlink:type="simple" xlink:href="../174/28174.xml">
storage device</link> such as a <link xlink:type="simple" xlink:href="../777/13777.xml">
hard drive</link> is accessed through a <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>. The device driver understands the specific language of the drive and is able to translate that language into a standard language used by the operating system to access all disk drives. On UNIX this is the language of <link xlink:type="simple" xlink:href="../986/18016986.xml">
block devices</link>. </p>
<p>

When the kernel has an appropriate device driver in place, it can then access the contents of the disk drive in raw format, which may contain one or more file systems. A file system driver is used to translate the commands used to access each specific file system into a standard set of commands that the operating system can use to talk to all file systems. Programs can then deal with these file systems on the basis of filenames, and directories/folders, contained within a hierarchical structure. They can create, delete, open, and close files, as well as gather various information about them, including access permissions, size, free space, and creation and modification dates. </p>
<p>

Various differences between file systems make supporting all file systems difficult. Allowed characters in file names, <link xlink:type="simple" xlink:href="../063/46063.xml">
case sensitivity</link>, and the presence of various kinds of <link xlink:type="simple" xlink:href="../503/1849503.xml">
file attribute</link>s makes the implementation of a single interface for every file system a daunting task. Operating systems tend to recommend the use of (and so support natively) file systems specifically designed for them; for example, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../184/39184.xml">
NTFS</link></instrumentality>
</artifact>
</system>
 in Windows and <link xlink:type="simple" xlink:href="../195/39195.xml">
ext<it>n''</it></link> and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../183/39183.xml">
ReiserFS</link></instrumentality>
</artifact>
</system>
 in Linux.  However, in practice, third party drives are usually available to give support for the most widely used filesystems in most general-purpose operating systems (for example, NTFS is available in Linux through <link xlink:type="simple" xlink:href="../127/8072127.xml">
NTFS-3g</link>, and ext2/3 and ReiserFS are available in Windows through <weblink xlink:type="simple" xlink:href="http://www.fs-driver.org">
FS-driver</weblink> and <weblink xlink:type="simple" xlink:href="http://p-nand-q.com/download/rfstool.html">
rfstool</weblink>).</p>

</ss1>
<ss1>
<st>
 Device drivers </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../101/9101.xml">
Device driver</link></it>
</indent>

A <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link> is a specific type of computer software developed to allow interaction with hardware devices. Typically this constitutes an interface for communicating with the device, through the specific computer bus or communications subsystem that the hardware is connected to, providing commands to and/or receiving data from the device, and on the other end, the requisite interfaces to the operating system and software applications. It is a specialized hardware-dependent computer program which is also operating system specific that enables another program, typically an operating system or applications software package or computer program running under the operating system kernel, to interact transparently with a hardware device, and usually provides the requisite interrupt handling necessary for any necessary asynchronous time-dependent hardware interfacing needs.</p>
<p>

The key design goal of device drivers is <link xlink:type="simple" xlink:href="../ury/30th_century.xml">
abstraction</link>. Every model of hardware (even within the same class of device) is different. Newer models also are released by manufacturers that provide more reliable or better performance and these newer models are often controlled differently. Computers and their operating systems cannot be expected to know how to control every device, both now and in the future. To solve this problem, OSes essentially dictate how every type of device should be controlled. The function of the device driver is then to translate these OS mandated function calls into device specific calls. In theory a new device, which is controlled in a new manner, should function correctly if a suitable driver is available. This new driver will ensure that the device appears to operate as usual from the operating systems' point of view for any person.</p>

</ss1>
<ss1>
<st>
 Networking </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link></it>
</indent>

Currently most operating systems support a variety of networking protocols, hardware, and applications for using them. This means that computers running dissimilar operating systems can participate in a common <link xlink:type="simple" xlink:href="../592/4122592.xml">
network</link> for sharing resources such as <link xlink:type="simple" xlink:href="../346/26346.xml">
computing</link>, files, printers, and scanners using either wired or wireless connections. Networks can essentially allow a computer's operating system to access the resources of a remote computer to support the same functions as it could if those resources were connected directly to the local computer. This includes everything from simple communication, to using networked file systems or even sharing another computer's graphics or sound hardware. Some network services allow the resources of a computer to be accessed transparently, such as <link xlink:type="simple" xlink:href="../784/12291784.xml">
SSH</link> which allows networked users direct access to a computer's command line interface.  </p>
<p>

Client/server networking involves a program on a computer somewhere which connects via a network to another computer, called a server. Servers, usually running <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> or <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, offer (or host) various services to other network computers and users. These services are usually provided through ports or numbered access points beyond the server's <link xlink:type="simple" xlink:href="../925/8168925.xml">
network address</link>. Each port number is usually associated with a maximum of one running program, which is responsible for handling requests to that port. A daemon, being a user program, can in turn access the local hardware resources of that computer by passing requests to the operating system kernel. </p>
<p>

Many operating systems support one or more vendor-specific or open networking protocols as well, for example, <link xlink:type="simple" xlink:href="../267/78267.xml">
SNA</link> on <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 systems, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../926/77926.xml">
DECnet</link></rule>
</direction>
</protocol>
</message>
 on systems from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
, and Microsoft-specific protocols (<link xlink:type="simple" xlink:href="../873/349873.xml">
SMB</link>) on Windows. Specific protocols for specific tasks may also be supported such as <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/51252.xml">
NFS</link></rule>
</direction>
</protocol>
</message>
 for file access. Protocols like <link>
ESound</link>, or esd can be easily extended over the network to provide sound from local applications, on a remote system's sound hardware.</p>

</ss1>
<sec>
<st>
 Security </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../398/7398.xml">
computer security</link></it>
</indent>

A computer being secure depends on a number of technologies working properly. A modern operating system provides access to a number of resources, which are available to software running on the system, and to external devices like networks via the kernel. </p>
<p>

The operating system must be capable of distinguishing between requests which should be allowed to be processed, and others which should not be processed. While some systems may simply distinguish between "privileged" and "non-privileged", systems commonly have a form of requester <it>identity</it>, such as a user name. To establish identity there may be a process of <it>authentication</it>. Often a username must be quoted, and each username may have a password. Other methods of authentication, such as magnetic cards or biometric data, might be used instead. In some cases, especially connections from the network, resources may be accessed with no authentication at all (such as reading files over a network share).</p>
<p>

In addition to the allow/disallow model of security, a system with a high level of security will also offer auditing options. These would allow tracking of requests for access to resources (such as, "who has been reading this file?").  Internal security, or security from an already running program is only possible if all possibly harmful requests must be carried out through interrupts to the operating system kernel. If programs can directly access hardware and resources, they cannot be secured.</p>
<p>

External security involves a request from outside the computer, such as a login at a connected console or some kind of network connection. External requests are often passed through device drivers to the operating system's kernel, where they can be passed onto applications, or carried out directly. Security of operating systems has long been a concern because of highly sensitive data held on computers, both of a commercial and military nature. The United States <link>
Government</link> <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../897/7279897.xml">
Department of Defense</link></agency>
 (DoD) created the <it><event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../300/6687300.xml">
Trusted Computer System Evaluation Criteria</link></activity>
</procedure>
</psychological_feature>
</act>
</event>
</it> (TCSEC) which is a standard that sets basic requirements for assessing the effectiveness of security. This became of vital importance to operating system makers, because the TCSEC was used to evaluate, classify and select computer systems being considered for the processing, storage and retrieval of sensitive or <link xlink:type="simple" xlink:href="../857/252857.xml">
classified information</link>.</p>
<p>

Network services include offerings such as file sharing, print services, email, web sites, and <link xlink:type="simple" xlink:href="../289/53289.xml">
file transfer protocol</link>s (FTP), most of which can have compromised security. At the front line of security are hardware devices known as <link xlink:type="simple" xlink:href="../296/1362296.xml">
firewalls</link> or intrusion detection/prevention systems. At the operating system level, there are a number of software firewalls available, as well as intrusion detection/prevention systems. Most modern operating systems include a software firewall, which is enabled by default. A software firewall can be configured to allow or deny network traffic to or from a service or application running on the operating system. Therefore, one can install and be running an insecure service, such as Telnet or FTP, and not have to be threatened by a security breach because the firewall would deny all traffic trying to connect to the service on that port.</p>
<p>

An alternative strategy, and the only <link xlink:type="simple" xlink:href="../932/1291932.xml">
sandbox</link> strategy available in systems that do not meet the <link xlink:type="simple" xlink:href="../085/957085.xml">
Popek and Goldberg virtualization requirements</link>, is the operating system not running user programs as native code, but instead either <link xlink:type="simple" xlink:href="../937/18943937.xml">
emulates</link> a processor or provides a host for a <link xlink:type="simple" xlink:href="../722/24722.xml">
p-code</link> based system such as Java.</p>
<p>

Internal security is especially relevant for multi-user systems; it allows each user of the system to have private files that the other users cannot tamper with or read. Internal security is also vital if auditing is to be of any use, since a program can potentially bypass the operating system, inclusive of bypassing auditing.</p>

<ss2>
<st>
Example: Microsoft Windows</st>

<p>

While the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../486/454486.xml">
Windows 9x</link></O>
 series offered the option of having profiles for multiple users, they had no concept of <link xlink:type="simple" xlink:href="../226/1695226.xml">
access privileges</link>, and did not allow concurrent access; and so were not true <link xlink:type="simple" xlink:href="../751/39751.xml">
multi-user</link> operating systems.  In addition, they implemented only partial <link xlink:type="simple" xlink:href="../373/515373.xml">
memory protection</link>.  They were accordingly widely criticised for lack of security.</p>
<p>

The <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 series of operating systems, by contrast, are true multi-user, and implement absolute memory protection.  However, a lot of the advantages of being a true multi-user operating system were nullified by the fact that, prior to <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
, the first user account created during the setup process was an <link xlink:type="simple" xlink:href="../209/264209.xml#xpointer(//*[./st=%22Windows+N%22])">
administrator</link> account, which was also the default for new accounts.  Though <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
 did have limited accounts, the majority of home users did not change to an account type with fewer rights -- partially due to the number of programs which unnecessarily required administrator rights -- and so most home users ran as administrator all the time.</p>
<p>

<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 changes this<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> by introducing a privilege elevation system called <link xlink:type="simple" xlink:href="../671/4359671.xml">
User Account Control</link>.  When logging in as a standard user, a logon session is created and a <link xlink:type="simple" xlink:href="../514/13628514.xml">
token</link> containing only the most basic privileges is assigned. In this way, the new logon session is incapable of making changes that would affect the entire system. When logging in as a user in the Administrators group, two separate tokens are assigned. The first token contains all privileges typically awarded to an administrator, and the second is a restricted token similar to what a standard user would receive. User applications, including the <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../677/4124677.xml">
Windows Shell</link></part>
</component>
</concept>
</idea>
, are then started with the restricted token, resulting in a reduced privilege environment even under an Administrator account. When an application requests higher privileges or "Run as administrator" is clicked, UAC will prompt for confirmation and, if consent is given (including administrator credentials if the account requesting the elevation is not a member of the administrators group), start the process using the unrestricted token.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>

</ss2>
<ss2>
<st>
Example: Linux/Unix</st>

<p>

Linux and UNIX both have two tier security, which limits any system-wide changes to the root user, a special user account on all UNIX-like systems. While the root user has virtually unlimited permission to affect system changes, programs running as a regular user are limited in where they can save files, what hardware they can access, etc.  In many systems, a user's memory usage, their selection of available programs, their total disk usage or <link xlink:type="simple" xlink:href="../280/769280.xml">
quota</link>, available range of programs' <link xlink:type="simple" xlink:href="../920/231920.xml">
priority</link> settings, and other functions can also be locked down. This provides the user with plenty of freedom to do what needs done, without being able to put any part of the system in jeopardy (barring accidental triggering of system-level bugs) or make sweeping, system-wide changes. The user's settings are stored in an area of the computer's file system called the user's home directory, which is also provided as a location where the user may store their work, similar to My Documents on a Windows system. Should a user have to install software or make system-wide changes, they must become the root user temporarily, usually with the <link xlink:type="simple" xlink:href="../280/459280.xml">
su</link> command, which is answered with the computer's root password when prompted.  Some systems (such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../298/990298.xml">
Ubuntu</link></O>
 and its derivatives) are configured by default to allow select users to run programs as the root user via the <link xlink:type="simple" xlink:href="../028/1008028.xml">
sudo</link> command, using the user's own password for authentication instead of the system's root password.  One is sometimes said to "go root" when elevating oneself to root access.</p>
<p>

For more information on the differences between the Linux su/sudo approach and Vista's <link xlink:type="simple" xlink:href="../671/4359671.xml">
User Account Control</link>, see <link xlink:type="simple" xlink:href="../043/10027043.xml">
Comparison of privilege authorization features</link>.</p>

</ss2>
</sec>
<sec>
<st>
 File system support in modern operating systems </st>

<p>

Support for file systems is highly varied among modern operating systems although there are several common file systems which almost all operating systems include support and drivers for. </p>

<ss1>
<st>
 Linux and UNIX </st>

<p>

Many <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 distributions support some or all of <link xlink:type="simple" xlink:href="../194/39194.xml">
ext2</link>, <link xlink:type="simple" xlink:href="../195/39195.xml">
ext3</link>, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../183/39183.xml">
ReiserFS</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../918/412918.xml">
Reiser4</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../487/50487.xml">
JFS</link></instrumentality>
</artifact>
</system>
 , <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../203/34203.xml">
XFS</link></instrumentality>
</artifact>
</system>
 , <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/762226.xml">
GFS</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/762226.xml">
GFS2</link></instrumentality>
</artifact>
</system>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/3328147.xml">
OCFS</link></instrumentality>
</artifact>
</system>
, <link xlink:type="simple" xlink:href="../147/3328147.xml">
OCFS2</link>, and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../858/2821858.xml">
NILFS</link></instrumentality>
</artifact>
</system>
. The ext file systems, namely ext2 and ext3 are based on the original Linux file system. Others have been developed by companies to meet their specific needs, hobbyists, or adapted from UNIX, Microsoft Windows, and other operating systems. Linux has full support for <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../203/34203.xml">
XFS</link></instrumentality>
</artifact>
</system>
 and <link xlink:type="simple" xlink:href="../487/50487.xml">
JFS</link>, along with <link xlink:type="simple" xlink:href="../045/53045.xml">
FAT</link> (the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 file system), and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../347/55347.xml">
HFS</link></instrumentality>
</artifact>
</system>
 which is the primary file system for the <link xlink:type="simple" xlink:href="../979/19006979.xml">
Macintosh</link>. </p>
<p>

In recent years support for Microsoft <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
's <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../184/39184.xml">
NTFS</link></instrumentality>
</artifact>
</system>
 file system has appeared in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, and is now comparable to the support available for other native <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> file systems. <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/15145.xml">
ISO 9660</link></system_of_measurement>
</standard>
</instrumentality>
</artifact>
</system>
 and <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../627/49627.xml">
UDF</link></system_of_measurement>
</part>
</component>
</standard>
</concept>
</idea>
 are supported which are standard file systems used on CDs, DVDs, and BluRay discs. It is possible to install Linux on the majority of these file systems. Unlike other operating systems, Linux and UNIX allow any file system to be used regardless of the media it is stored on, whether it is a hard drive, CD or DVD, or even contained within a file located on an another file system.</p>

</ss1>
<ss1>
<st>
 Microsoft Windows </st>

<p>

<link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> presently supports <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../184/39184.xml">
NTFS</link></instrumentality>
</artifact>
</system>
 and <link xlink:type="simple" xlink:href="../045/53045.xml">
FAT</link> file systems, along with <link xlink:type="simple" xlink:href="../477/598477.xml">
network file system</link>s shared from other computers, and the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/15145.xml">
ISO 9660</link></system_of_measurement>
</standard>
</instrumentality>
</artifact>
</system>
 and <link xlink:type="simple" xlink:href="../553/308553.xml">
UDF</link> filesystems used for <link xlink:type="simple" xlink:href="../429/6429.xml">
CD</link>s, <medium wordnetid="106254669" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../498/11014498.xml">
DVD</link></medium>
s, and other optical discs such as <link xlink:type="simple" xlink:href="../826/11015826.xml">
BluRay</link>. Under Windows each file system is usually limited in application to certain media, for example CDs must use ISO 9660 or UDF, and as of <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../184/39184.xml">
NTFS</link></instrumentality>
</artifact>
</system>
 is the only file system which the operating system can be installed on. <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../542/5151542.xml">
Windows Embedded CE 6.0</link></version>
 introduced <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../456/7121456.xml">
ExFAT</link></instrumentality>
</artifact>
</system>
, a file system more suitable for <link xlink:type="simple" xlink:href="../298/7366298.xml">
flash drive</link>s.</p>

</ss1>
<ss1>
<st>
 Mac OS X </st>

<p>

<link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> supports <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../752/927752.xml">
HFS+</link></instrumentality>
</artifact>
</system>
 with journaling as its primary file system. It is derived from the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../347/55347.xml">
Hierarchical File System</link></instrumentality>
</artifact>
</system>
 of the earlier <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>. Mac OS X has facilities to read and write FAT, NTFS, UDF, and other file systems, but cannot be installed to them. Due to its UNIX heritage <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> now supports virtually all the file systems supported by the UNIX VFS. Recently <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
 started work on porting <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystem's</link></institution>
</company>
 <link xlink:type="simple" xlink:href="../693/1205693.xml">
ZFS</link> filesystem to <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> and preliminary support is already available in <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> 10.5.</p>

</ss1>
<ss1>
<st>
 Special purpose file systems </st>

<p>

FAT file systems are commonly found on <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disc</link>s, <link xlink:type="simple" xlink:href="../595/50595.xml">
flash memory</link> cards, <link xlink:type="simple" xlink:href="../797/52797.xml">
digital camera</link>s, and many other portable devices because of their relative simplicity. Performance of FAT compares poorly to most other file systems as it uses overly simplistic data structures, making file operations time-consuming, and makes poor use of disk space in situations where many small files are present. <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/15145.xml">
ISO 9660</link></system_of_measurement>
</standard>
</instrumentality>
</artifact>
</system>
 and <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../627/49627.xml">
Universal Disk Format</link></system_of_measurement>
</part>
</component>
</standard>
</concept>
</idea>
 are two common formats that target <link xlink:type="simple" xlink:href="../429/6429.xml">
Compact Disc</link>s and <medium wordnetid="106254669" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../498/11014498.xml">
DVD</link></medium>
s. <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../361/315361.xml">
Mount Rainier</link></instrumentality>
</artifact>
</system>
 is a newer extension to UDF supported by Linux 2.6 kernels and Windows Vista that facilitates rewriting to DVDs in the same fashion as has been possible with floppy disks.</p>

</ss1>
<ss1>
<st>
 Journalized file systems </st>

<p>

File systems may provide <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../073/48073.xml">
journaling</link></instrumentality>
</artifact>
</system>
, which provides safe recovery in the event of a system crash. A journaled file system writes some information twice: first to the journal, which is a log of file system operations, then to its proper place in the ordinary file system. Journaling is handled by the file system driver, and keeps track of each operation taking place that changes the contents of the disk. In the event of a crash, the system can recover to a consistent state by replaying a portion of the journal. Many UNIX file systems provide journaling including <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../183/39183.xml">
ReiserFS</link></instrumentality>
</artifact>
</system>
, <link xlink:type="simple" xlink:href="../315/7089315.xml">
JFS</link>, and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../195/39195.xml">
Ext3</link></instrumentality>
</artifact>
</system>
. </p>
<p>

In contrast, non-journaled file systems typically need to be examined in their entirety by a utility such as <link xlink:type="simple" xlink:href="../881/79881.xml">
fsck</link> or <link xlink:type="simple" xlink:href="../823/1909823.xml">
chkdsk</link> for any inconsistencies after an unclean shutdown. <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../459/971459.xml">
Soft updates</link></instrumentality>
</artifact>
</system>
 is an alternative to journaling that avoids the redundant writes by carefully ordering the update operations. Log-structured file systems and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../693/1205693.xml">
ZFS</link></instrumentality>
</artifact>
</system>
 also differ from traditional journaled file systems in that they avoid inconsistencies by always writing new copies of the data, eschewing in-place updates.</p>

</ss1>
</sec>
<sec>
<st>
 Graphical user interfaces </st>

<p>

Most modern computer systems support <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link>s (GUI), and often include them. In some computer systems, such as the original implementations of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> and the <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, the GUI is integrated into the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>.</p>
<p>

While technically a graphical user interface is not an operating system service, incorporating support for one into the operating system kernel can allow the GUI to be more responsive by reducing the number of <link xlink:type="simple" xlink:href="../904/6904.xml">
context switch</link>es required for the GUI to perform its output functions.  Other operating systems are <link xlink:type="simple" xlink:href="../133/939133.xml">
modular</link>, separating the graphics subsystem from the kernel and the Operating System. In the 1980s UNIX, VMS and many others had operating systems that were built this way.  GNU/Linux and Mac OS X are also built this way. Modern releases of Microsoft Windows such as <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 implement a graphics subsystem that is mostly in user-space, however versions between <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../680/795680.xml">
Windows NT 4.0</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../068/208068.xml">
Windows Server 2003</link></version>
's graphics drawing routines exist mostly in kernel space.  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../486/454486.xml">
Windows 9x</link></O>
 had very little distinction between the interface and the kernel.</p>
<p>

Many computer operating systems allow the user to install or create any user interface they desire. The <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/34147.xml">
X Window System</link></rule>
</direction>
</protocol>
</message>
 in conjunction with <link xlink:type="simple" xlink:href="../362/12362.xml">
GNOME</link> or <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../629/16629.xml">
KDE</link></software>
 is a commonly-found setup on most Unix and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
  (BSD, GNU/Linux, <link xlink:type="simple" xlink:href="../977/18977.xml">
Minix</link>) systems. A number of <link xlink:type="simple" xlink:href="../520/458520.xml">
Windows shell replacement</link>s have been released for Microsoft Windows, which offer alternatives to the included <link xlink:type="simple" xlink:href="../677/4124677.xml">
Windows shell</link>, but the shell itself cannot be separated from Windows.</p>
<p>

Numerous Unix-based GUIs have existed over time, most derived from X11. Competition among the various vendors of Unix (HP, IBM, Sun) led to much fragmentation, though an effort to standardize in the 1990s to <link xlink:type="simple" xlink:href="../534/6061534.xml">
COSE</link> and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../627/6627.xml">
CDE</link></software>
 failed for the most part due to various reasons, eventually eclipsed by the widespread adoption of GNOME and KDE. Prior to open source-based toolkits and desktop environments, Motif was the prevalent toolkit/desktop combination (and was the basis upon which CDE was developed).</p>
<p>

Graphical user interfaces evolve over time. For example, Windows has modified its user interface almost every time a new major version of Windows is released, and the Mac OS GUI changed dramatically with the introduction of Mac OS X in 2001.</p>

</sec>
<sec>
<st>
 History </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../395/55395.xml">
History of operating systems</link></it>
</indent>

The first computers did not have operating systems. By the early 1960s, commercial computer vendors were supplying quite extensive tools for streamlining the development, scheduling, and execution of jobs on <link xlink:type="simple" xlink:href="../285/37285.xml">
batch processing</link> systems. Examples were produced by <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../173/144173.xml">
UNIVAC</link></institution>
</company>
 and <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
, amongst others.</p>
<p>

The operating systems originally deployed on <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframes</link>, and, much later, the original <link xlink:type="simple" xlink:href="../144/48144.xml">
microcomputer</link> operating systems, only supported one program at a time, requiring only a very basic scheduler. Each program was in complete control of the machine while it was running. Multitasking (timesharing) first came to mainframes in the 1960s. </p>
<p>

In 1969-70, <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> first appeared on the <link xlink:type="simple" xlink:href="../278/38278.xml">
PDP-7</link> and later the <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link>. It soon became capable of providing cross-platform time sharing using preemptive multitasking, advanced memory management, memory protection, and a host of other advanced features. <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> soon gained popularity as an operating system for mainframes and minicomputers alike. </p>
<p>

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 provided many operating system like features, such as disk access. However many DOS programs bypassed it entirely and ran directly on hardware. IBM's version, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../169/148169.xml">
PC-DOS</link></O>
, ran on IBM microcomputers, including the <link xlink:type="simple" xlink:href="../032/15032.xml">
IBM PC</link> and the <link xlink:type="simple" xlink:href="../840/928840.xml">
IBM PC XT</link>, and MS-DOS came into widespread use on clones of these machines.</p>
<p>

<link xlink:type="simple" xlink:href="../803/49803.xml">
IBM PC compatible</link>s could also run <link xlink:type="simple" xlink:href="../404/84404.xml">
Microsoft Xenix</link>, a UNIX-like operating system from the early 1980s. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../404/84404.xml">
Xenix</link></O>
 was heavily marketed by Microsoft as a multi-user alternative to its single user <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 operating system. The <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s of these personal computers could not facilitate kernel memory protection or provide dual mode operation, so <link xlink:type="simple" xlink:href="../404/84404.xml">
Microsoft Xenix</link> relied on cooperative multitasking and had no protected memory. </p>
<p>

The <link xlink:type="simple" xlink:href="../054/15054.xml">
80286</link>-based <link xlink:type="simple" xlink:href="../917/348917.xml">
IBM PC AT</link> was the first computer technically capable of using dual mode operation, and providing memory protection. </p>
<p>

Classic <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, and <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> 1.0-3.11 supported only <link xlink:type="simple" xlink:href="../857/6857.xml">
cooperative multitasking</link> (Windows 95, 98, &amp; ME supported preemptive multitasking only when running 32 bit applications, but ran legacy 16 bit applications using cooperative multitasking), and were very limited in their abilities to take advantage of protected memory. Application programs running on these operating systems must yield CPU time to the scheduler when they are not using it, either by default, or by calling a function. </p>
<p>

<family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
's underlying operating system kernel which was a designed by essentially the same team as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
's <link xlink:type="simple" xlink:href="../520/32520.xml">
VMS</link>, a <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>-like operating system which provided protected mode operation for all user programs, kernel memory protection, preemptive multi-tasking, virtual file system support, and a host of other features. </p>
<p>

Classic <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
 and versions of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> from <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../387/67387.xml">
Windows 1.0</link></version>
 through <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../458/75458.xml">
Windows Me</link></version>
 did not properly track resources allocated by processes at runtime. If a process had to be terminated, the resources might not be freed up for new programs until the machine was restarted.</p>
<p>

The AmigaOS did have preemptive multitasking.</p>

</sec>
<sec>
<st>
 Mainframes </st>

<p>

Through the 1960s, many major features were pioneered in the field of operating systems. The development of the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> produced a family of <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframe computer</link>s available in widely differing capacities and price points, for which a single operating system <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> was planned (rather than developing ad-hoc programs for every individual model). This concept of a single OS spanning an entire product line was crucial for the success of System/360 and, in fact, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
`s current mainframe operating systems are <link xlink:type="simple" xlink:href="../089/13856089.xml">
distant descendants</link> of this original system; applications written for the <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> can still be run on modern machines. In the mid-70's, the <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link>, the descendant of OS/360 offered the first implementation of using <link xlink:type="simple" xlink:href="../847/25847.xml">
RAM</link> as a transparent <link xlink:type="simple" xlink:href="../829/6829.xml">
cache</link> for disk resident data.</p>
<p>

<link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> also pioneered a number of concepts that, in some cases, are still not seen outside of the mainframe arena.  For instance, in <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>, when a program is started, the operating system keeps track of all of the system resources that are used including storage, locks, data files, and so on.  When the process is terminated for any reason, all of these resources are re-claimed by the operating system. An alternative <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> system started a whole line of operating systems focused on the concept of <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>s.  </p>
<p>

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
 developed the <link xlink:type="simple" xlink:href="../953/6975953.xml">
SCOPE</link> operating system in the 1960s, for batch processing. In cooperation with the University of Minnesota, the KRONOS and later the <link xlink:type="simple" xlink:href="../436/669436.xml">
NOS</link> operating systems were developed during the 1970s, which supported simultaneous batch and timesharing use. Like many commercial timesharing systems, its interface was an extension of the Dartmouth BASIC operating systems, one of the pioneering efforts in timesharing and programming languages. In the late 1970s, Control Data and the University of Illinois developed the PLATO operating system, which used plasma panel displays and long-distance time sharing networks. Plato was remarkably innovative for its time, featuring real-time chat, and multi-user graphical games.</p>
<p>

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../524/4524.xml">
Burroughs Corporation</link></institution>
</company>
 introduced the <link xlink:type="simple" xlink:href="../693/332693.xml">
B5000</link> in 1961 with the <link xlink:type="simple" xlink:href="../244/966244.xml">
MCP</link>, (<link xlink:type="simple" xlink:href="../244/966244.xml">
Master Control Program</link>) operating system. The <link xlink:type="simple" xlink:href="../693/332693.xml">
B5000</link> was a <link xlink:type="simple" xlink:href="../078/510078.xml">
stack machine</link> designed to exclusively support high-level languages with no machine language or assembler, and indeed the <link xlink:type="simple" xlink:href="../244/966244.xml">
MCP</link> was the first OS to be written exclusively in a high-level language &ndash; <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<speech wordnetid="107109196" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<dialect wordnetid="107155661" confidence="0.8">
<auditory_communication wordnetid="107109019" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<non-standard_speech wordnetid="107155081" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/949062.xml">
ESPOL</link></non-standard_speech>
</writer>
</causal_agent>
</compiler>
</auditory_communication>
</dialect>
</person>
</speech>
</communicator>
</physical_entity>
, a dialect of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../453/1453.xml">
ALGOL</link></programming_language>
. <link xlink:type="simple" xlink:href="../244/966244.xml">
MCP</link> also introduced many other ground-breaking innovations, such as being the first commercial implementation of <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>. <link xlink:type="simple" xlink:href="../244/966244.xml">
MCP</link> is still in use today in the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../274/61274.xml">
Unisys</link></company>
 <link>
ClearPath/MCP</link> line of computers.</p>
<p>

UNIVAC, the first commercial computer manufacturer, produced a series of EXEC operating systems. Like all early main-frame systems, this was a batch-oriented system that managed magnetic drums, disks, card readers and line printers. In the 1970s, UNIVAC produced the Real-Time Basic (RTB) system to support large-scale time sharing, also patterned after the Dartmouth BASIC system.</p>
<p>

General Electric and MIT developed General Electric Comprehensive Operating Supervisor (GECOS), which introduced the concept of ringed security privilege levels. After acquisition by Honeywell it was renamed to <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../002/195002.xml">
General Comprehensive Operating System</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 (GCOS).</p>
<p>

Digital Equipment Corporation developed many operating systems for its various computer lines, including <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../607/529607.xml">
TOPS-10</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../380/66380.xml">
TOPS-20</link></O>
 time sharing systems for the 36-bit PDP-10 class systems. Prior to the widespread use of UNIX, TOPS-10 was a particularly popular system in universities, and in the early ARPANET community.</p>
<p>

In the late 1960s through the late 1970s, several hardware capabilities evolved that allowed similar or ported software to run on more than one system. Early systems had utilized microprogramming to implement features on their systems in order to permit different underlying architecture to appear to be the same as others in a series. In fact most 360's after the 360/40 (except the 360/165 and 360/168) were microprogrammed implementations. But soon other means of achieving application compatibility were proven to be more significant.</p>
<p>

The enormous investment in software for these systems made since 1960s caused most of the original computer manufacturers to continue to develop compatible operating systems along with the hardware. The notable supported mainframe operating systems include: 
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../244/966244.xml">
Burroughs MCP</link> -- <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../693/332693.xml">
B5000</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
,1961 to <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../274/61274.xml">
Unisys</link></company>
 Clearpath/MCP, present.</entry>
<entry level="1" type="bullet">

 IBM <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> -- <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../294/29294.xml">
IBM System/360</link></horizontal_surface>
</surface>
</artifact>
</platform>
, 1966 to IBM <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>, present.</entry>
<entry level="1" type="bullet">

 IBM <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link> -- <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../294/29294.xml">
IBM System/360</link></horizontal_surface>
</surface>
</artifact>
</platform>
, 1967 to IBM <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>, present.</entry>
<entry level="1" type="bullet">

 UNIVAC <link xlink:type="simple" xlink:href="../841/1312841.xml">
EXEC 8</link> -- <link xlink:type="simple" xlink:href="../145/201145.xml">
UNIVAC 1108</link>, 1964, to <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../274/61274.xml">
Unisys</link></company>
 Clearpath IX, present.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Microcomputers </st>
<p>

The first <link xlink:type="simple" xlink:href="../144/48144.xml">
microcomputer</link>s did not have the capacity or need for the elaborate operating systems that had been developed for mainframes and minis; minimalistic operating systems were developed, often loaded from <link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link> and known as <it>Monitors</it>. One notable early disk-based operating system was <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
, which was supported on many early microcomputers and was closely imitated in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
, which became wildly popular as the operating system chosen for the <link xlink:type="simple" xlink:href="../032/15032.xml">
IBM PC</link> (IBM's version of it was called IBM-DOS or <link xlink:type="simple" xlink:href="../169/148169.xml">
PC-DOS</link>), its successors making <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 one of the world's most profitable companies. In the 80's Apple Computer Inc. (now <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
) abandoned its popular <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
Apple II</link> series of microcomputers to introduce the <link xlink:type="simple" xlink:href="../979/19006979.xml">
Apple Macintosh</link> computer with the an innovative <link xlink:type="simple" xlink:href="../293/12293.xml">
Graphical User Interface</link> (GUI) to the <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>. </p>
<p>

The introduction of the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../070/15070.xml">
Intel 80386</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link> chip with <link xlink:type="simple" xlink:href="../733/80733.xml">
32-bit</link> architecture and <link xlink:type="simple" xlink:href="../193/311193.xml">
paging</link> capabilities, provided personal computers with the ability to run <link xlink:type="simple" xlink:href="../857/6857.xml">
 multitasking</link> operating systems like those of earlier <link xlink:type="simple" xlink:href="../272/20272.xml">
minicomputers</link> and <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframes</link>.  Microsoft's responded to this progress by hiring <person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../793/51793.xml">
 Dave Cutler</link></programmer>
</person>
, who had developed the <link xlink:type="simple" xlink:href="../520/32520.xml">
VMS</link> operating system for <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
. He would lead the development of the <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 operating system, which continues to serve as the basis for Microsoft's operating systems line. <president wordnetid="110468962" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/7412236.xml">
Steve Jobs</link></person>
</president>
, a co-founder of <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
, started <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../694/21694.xml">
NeXT</link></company>
 Computer Inc., which developed the <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 <link xlink:type="simple" xlink:href="../642/40642.xml">
NEXTSTEP</link> operating system. NEXTSTEP would later be acquired by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
 and used, along with code from <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
 as the core of Mac OS X.  </p>
<p>

<link xlink:type="simple" xlink:href="../977/18977.xml">
Minix</link>, an academic teaching tool which could be run on early PCs, would inspire another reimplementation of <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
, called <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
. Started by computer student <celebrity wordnetid="109903153" confidence="0.9508927676800064">
<person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../618/17618.xml">
Linus Torvalds</link></programmer>
</person>
</celebrity>
 with cooperation from volunteers over the internet, developed a <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> which was combined with the tools from the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../549/275549.xml">
GNU Project</link></medium>
</instrumentality>
</artifact>
. The Berkeley Software Distribution, known as <link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link>, is the UNIX derivative distributed by the University of California, Berkeley, starting in the 1970s. Freely distributed and <link xlink:type="simple" xlink:href="../804/214804.xml">
ported</link> to many minicomputers, it eventually also gained a following for use on PCs, mainly as <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
, <link xlink:type="simple" xlink:href="../495/21495.xml">
NetBSD</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../571/18949571.xml">
OpenBSD</link></O>
.</p>

</sec>
<sec>
<st>
 Examples </st>

<ss1>
<st>
 Microsoft Windows </st>
<p>

The <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> family of operating systems originated as an add-on to the older <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 operating system for the <link xlink:type="simple" xlink:href="../032/15032.xml">
IBM PC</link>. Modern versions are based on the newer <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 kernel that was originally intended for <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
. Windows runs on <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link>, <link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link> and <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 processors. Earlier versions also ran on the <link xlink:type="simple" xlink:href="../971/8971.xml">
DEC Alpha</link>, <link xlink:type="simple" xlink:href="../170/20170.xml">
MIPS</link>, <company wordnetid="108058098" confidence="0.8">
<electronics_company wordnetid="108003035" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../263/180263.xml">
Fairchild</link></institution>
</electronics_company>
</company>
 (later <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../437/1769437.xml">
Intergraph</link></company>
) <link xlink:type="simple" xlink:href="../058/1647058.xml">
Clipper</link> and <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link> architectures (some work was done to port it to the <link xlink:type="simple" xlink:href="../954/36954.xml">
SPARC</link> architecture).</p>
<p>

As of June 2008, Microsoft Windows holds a large amount of the worldwide desktop <link xlink:type="simple" xlink:href="../445/8012445.xml">
market share</link>. Windows is also used on servers, supporting applications such as <link xlink:type="simple" xlink:href="../455/33455.xml">
web server</link>s and <link xlink:type="simple" xlink:href="../513/8513.xml">
database servers</link>. In recent years, Microsoft has spent significant marketing and research &amp; development money to demonstrate that Windows is capable of running any enterprise application, which has resulted in consistent price/performance records (see the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<benchmark wordnetid="107261143" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../972/17582972.xml">
TPC</link></system_of_measurement>
</benchmark>
</standard>
</instrumentality>
</artifact>
</system>
) and significant acceptance in the enterprise market.</p>
<p>

The most widely used version of the Microsoft Windows family is <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
, released on October 25, 2001.</p>
<p>

In November 2006, after more than five years of development work, Microsoft released <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
, a major new operating system version of Microsoft Windows family which contains a large number of <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<property wordnetid="105849040" confidence="0.8">
<feature wordnetid="105849789" confidence="0.8">
<link xlink:type="simple" xlink:href="../839/3738839.xml">
new features</link></feature>
</property>
</concept>
</idea>
 and architectural changes. Chief amongst these are a new user interface and visual style called <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<link xlink:type="simple" xlink:href="../981/2902981.xml">
Windows Aero</link></framework>
</supporting_structure>
</window>
</artifact>
</structure>
, a number of new security features such as <link xlink:type="simple" xlink:href="../671/4359671.xml">
User Account Control</link>, and few new multimedia applications such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../577/5066577.xml">
Windows DVD Maker</link></software>
.</p>
<p>

Microsoft has announced a new version codenamed <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../123/326123.xml">
Windows 7</link></version>
 will be released in late 2009 - mid 2010</p>

</ss1>
<ss1>
<st>
 Plan 9 </st>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../747/10817747.xml">
Ken Thompson</link></scientist>
</person>
, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../218/8218.xml">
Dennis Ritchie</link></scientist>
</person>
 and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../744/189744.xml">
Douglas McIlroy</link></scholar>
</scientist>
</causal_agent>
</alumnus>
</intellectual>
</person>
</physical_entity>
 at <link xlink:type="simple" xlink:href="../712/3712.xml">
Bell Labs</link> designed and developed the C programming language to build the operating system Unix. Programmers at Bell Labs went on to develop <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/24226.xml">
Plan 9</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../928/507928.xml">
Inferno</link></O>
, which were engineered for modern distributed environments. Plan 9 was designed from the start to be a networked operating system, and had graphics built-in, unlike Unix, which added these features to the design later. Plan 9 has yet to become as popular as Unix derivatives, but it has an expanding community of developers. It is currently released under the <link xlink:type="simple" xlink:href="../312/2251312.xml">
Lucent Public License</link>. Inferno was sold to <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../917/192917.xml">
Vita Nuova Holdings</link></institution>
</company>
 and has been released under a GPL/MIT license.</p>

</ss1>
<ss1>
<st>
 Unix and Unix-like operating systems </st>
<p>

<image width="150px" src="Ubuntu.png" type="thumb">
</image>

<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../747/10817747.xml">
Ken Thompson</link></scientist>
</person>
 wrote <link xlink:type="simple" xlink:href="../475/4475.xml">
B</link>, mainly based on <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../052/4052.xml">
BCPL</link></programming_language>
, which he used to write Unix, based on his experience in the <link xlink:type="simple" xlink:href="../847/18847.xml">
MULTICS</link> project. B was replaced by <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, and Unix developed into a large, complex family of inter-related operating systems which have been influential in every modern operating system (see <link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>). </p>
<p>

The <it><family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
</it> family is a diverse group of operating systems, with several major sub-categories including <link>
System V</link>, <link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link>, and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
. The name "<link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>" is a trademark of <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../819/57819.xml">
The Open Group</link></system_of_measurement>
</standard>
 which licenses it for use with any operating system that has been shown to conform to their definitions. "Unix-like" is commonly used to refer to the large set of operating systems which resemble the original Unix.</p>
<p>

Unix-like systems run on a wide variety of machine architectures. They are used heavily for <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../116/42116.xml">
servers</link></generic>
 in business, as well as <link xlink:type="simple" xlink:href="../181/68181.xml">
workstation</link>s in academic and engineering environments. <link xlink:type="simple" xlink:href="../635/10635.xml">
Free software</link> Unix variants, such as <link xlink:type="simple" xlink:href="../875/11875.xml">
GNU</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link></O>
, are popular in these areas.</p>
<p>

Market share statistics for freely available operating systems are usually inaccurate since most free operating systems are not purchased, making usage under-represented. On the other hand, market share statistics based on total downloads of free operating systems are often inflated, as there is no economic disincentive to acquire multiple operating systems so users can download multiple systems, test them, and decide which they like best.</p>
<p>

Some Unix variants like HP's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
 and IBM's <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
AIX</link> are designed to run only on that vendor's hardware. Others, such as <link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link>, can run on multiple types of hardware, including <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> servers and PCs. Apple's <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>, a <link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid kernel</link>-based BSD variant derived from <link xlink:type="simple" xlink:href="../642/40642.xml">
NeXTSTEP</link>, <link xlink:type="simple" xlink:href="../028/21028.xml">
Mach</link>, and <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
, has replaced Apple's earlier (non-Unix) Mac OS.</p>
<p>

Unix interoperability was sought by establishing the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../305/23305.xml">
POSIX</link></system_of_measurement>
</standard>
 standard. The POSIX standard can be applied to any operating system, although it was originally created for various Unix variants.</p>

</ss1>
<ss1>
<st>
 Mac OS X </st>
<p>

<link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> is a line of <link xlink:type="simple" xlink:href="../886/18934886.xml">
proprietary</link>, graphical operating systems developed, marketed, and sold by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
, the latest of which is pre-loaded on all currently shipping <link xlink:type="simple" xlink:href="../979/19006979.xml">
Macintosh</link> computers. Mac OS X is the successor to the original <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, which had been Apple's primary operating system since 1984. Unlike its predecessor, Mac OS X is a <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link> operating system built on technology that had been developed at <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../694/21694.xml">
NeXT</link></company>
 through the second half of the 1980s and up until Apple purchased the company in early 1997.</p>
<p>

The operating system was first released in 1999 as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../931/1661931.xml">
Mac OS X Server 1.0</link></O>
, with a desktop-oriented version (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../991/500991.xml">
Mac OS X v10.0</link></version>
) following in March 2001. Since then, five more distinct "end-user" and "server" editions of Mac OS X have been released, the most recent being <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2001664.xml">
Mac OS X v10.5</link></version>
, which was first made available in October 2007. Releases of Mac OS X are named after <link xlink:type="simple" xlink:href="../456/165456.xml">
big cat</link>s; Mac OS X v10.5 is usually referred to by Apple and users as "Leopard".</p>
<p>

The server edition, <link xlink:type="simple" xlink:href="../086/47086.xml">
Mac OS X Server</link>, is <link xlink:type="simple" xlink:href="../364/48364.xml">
architecturally</link> identical to its desktop counterpart but usually runs on Apple's line of Macintosh <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../116/42116.xml">
server</link></generic>
 hardware. Mac OS X Server includes workgroup management and administration software tools that provide simplified access to key <link xlink:type="simple" xlink:href="../676/788676.xml">
network service</link>s, including a <link xlink:type="simple" xlink:href="../624/20624.xml">
mail transfer agent</link>, a <link xlink:type="simple" xlink:href="../198/29198.xml">
Samba server</link>, an <link xlink:type="simple" xlink:href="../508/18508.xml">
LDAP</link> server, a <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
domain name server</link></rule>
</direction>
</protocol>
</message>
, and others.
</p>
</ss1>
<ss1>
<st>
 Real-time operating systems </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link></it>
</indent>

A <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link> (RTOS) is a multitasking operating system intended for applications with fixed deadlines (<link xlink:type="simple" xlink:href="../767/25767.xml">
real-time computing</link>). Such applications include some small embedded systems, automobile engine controllers, industrial robots, spacecraft, industrial control, and some large-scale computing systems.</p>
<p>

An early example of a large-scale real-time operating system was <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../433/30433.xml">
Transaction Processing Facility</link></O>
 developed by <airline wordnetid="102690081" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/24th_century.xml">
American Airlines</link></airline>
 and <link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link> for the <link xlink:type="simple" xlink:href="../993/1155993.xml">
Sabre Airline Reservations System</link>.</p>

</ss1>
<ss1>
<st>
 Embedded systems </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../916/71916.xml#xpointer(//*[./st=%22Microcontroller=2C+Real-time%22])">
list of operating systems#Microcontroller, Real-time</link></it>
</indent>

<link xlink:type="simple" xlink:href="../630/46630.xml">
Embedded system</link>s use a variety of dedicated operating systems. In some cases, the "operating system" software is directly linked to the application to produce a monolithic special-purpose program. In the simplest embedded systems, there is no distinction between the OS and the application.</p>
<p>

Embedded systems that have fixed deadlines use a <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link> such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../105/157105.xml">
VxWorks</link></O>
, <link xlink:type="simple" xlink:href="../225/432225.xml">
eCos</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/65184.xml">
QNX</link></O>
, and <link xlink:type="simple" xlink:href="../232/419232.xml">
RTLinux</link>.</p>
<p>

Some embedded systems use operating systems such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../446/72446.xml">
Symbian OS</link></O>
, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../545/37545.xml">
Palm OS</link></O>
, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../360/230360.xml">
Windows CE</link></O>
, <link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link>, and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, although such operating systems do not support real-time computing.</p>
<p>

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../360/230360.xml">
Windows CE</link></O>
 shares similar APIs to desktop Windows but shares none of desktop Windows' codebase.</p>

</ss1>
<ss1>
<st>
 Hobby development </st>
<p>

<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Operating system development</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
, or OSDev for short, as a hobby has a large cult-like following. As such, operating systems, such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, have derived from hobby operating system projects. The design and implementation of an operating system requires skill and determination, and the term can cover anything from a basic <link xlink:type="simple" xlink:href="../834/13834.xml">
"Hello World"</link> boot loader to a fully featured kernel. One classical example of this is the <link xlink:type="simple" xlink:href="../977/18977.xml">
Minix</link> Operating System&mdash;an OS that was designed by <link xlink:type="simple" xlink:href="../110/3110.xml">
A.S. Tanenbaum</link> as a teaching tool but was heavily used by hobbyists before <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 eclipsed it in popularity.</p>

</ss1>
<ss1>
<st>
 Other </st>
<p>

Older operating systems which are still used in niche markets include <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
 from IBM; <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, the non-Unix precursor to Apple's Mac OS X; <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>; <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../230/6061230.xml">
XTS-300</link></O>
. Some, most notably <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../999/167999.xml">
RISC OS</link></O>
, continue to be developed as minority platforms for enthusiast communities and specialist applications. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
 formerly from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
DEC</link></company>
, is still under active development by <link xlink:type="simple" xlink:href="../973/13973.xml">
Hewlett-Packard</link>.</p>
<p>

Research and development of new operating systems continues. <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/13236.xml">
GNU Hurd</link></software>
 is designed to be backwards compatible with Unix, but with enhanced functionality and a microkernel architecture. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../655/2049655.xml">
Singularity</link></O>
 is a project at <physical_entity wordnetid="100001930" confidence="0.8">
<military_unit wordnetid="108198398" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<division wordnetid="108213205" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<army_unit wordnetid="108190754" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../522/2163522.xml">
Microsoft Research</link></research_worker>
</army_unit>
</scientist>
</causal_agent>
</division>
</person>
</military_unit>
</physical_entity>
 to develop an operating system with better <link xlink:type="simple" xlink:href="../373/515373.xml">
memory protection</link> based on the .Net managed code model. Systems development follows the same model used by other <link xlink:type="simple" xlink:href="../932/248932.xml">
Software development</link>, which involves maintainers, version control "trees"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>, <fork wordnetid="103383948" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<article wordnetid="100022903" confidence="0.8">
<ware wordnetid="104550840" confidence="0.8">
<tableware wordnetid="104381994" confidence="0.8">
<cutlery wordnetid="103153375" confidence="0.8">
<link xlink:type="simple" xlink:href="../506/301506.xml">
forks</link></cutlery>
</tableware>
</ware>
</article>
</artifact>
</fork>
, "patches", and specifications. From the AT&amp;T-Berkeley lawsuit the new unencumbered systems were based on 4.4BSD which forked as FreeBSD and NetBSD efforts to replace missing code after the <group_action wordnetid="101080366" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<competition wordnetid="101168569" confidence="0.8">
<link xlink:type="simple" xlink:href="../636/501636.xml">
Unix wars</link></competition>
</psychological_feature>
</act>
</event>
</group_action>
. Recent forks include <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../229/294229.xml">
DragonFly BSD</link></O>
 and <link xlink:type="simple" xlink:href="../076/53076.xml">
Darwin</link> from BSD Unix <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>.</p>

</ss1>
</sec>
<sec>
<st>
 Kernel Preemption </st>

<p>

In recent years concerns have arisen because of long latencies often associated with some kernel run-times, sometimes on the order of 100ms or more in systems with monolithic kernels. These latencies often produce noticeable slowness in desktop systems, and can prevent operating systems from performing time-sensitive operations such as audio recording and some communications. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>
<p>

Modern operating systems extend the concepts of application preemption to device drivers and kernel code, so that the operating system has preemptive control over internal run-times as well. Under <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
, the introduction of the <link xlink:type="simple" xlink:href="../679/5385679.xml">
Windows Display Driver Model</link> (WDDM) accomplishes this for display drivers, and in Linux, the preemptable kernel model introduced in version 2.6 allows all device drivers and some other parts of kernel code to take advantage of preemptive multi-tasking. </p>
<p>

Under Windows prior to <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 prior to version 2.6 all driver execution was co-operative, meaning that if a driver entered an infinite loop it would freeze the system.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../916/71916.xml">
List of operating systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../531/981531.xml">
Comparison of operating systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../968/247968.xml">
Operating systems timeline</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../509/6509.xml">
Computer systems architecture</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../973/622973.xml">
Trusted operating system</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../351/454351.xml#xpointer(//*[./st=%22Operating+systems%22])">
List of important publications in computer science#Operating systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel (computer science)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../908/102908.xml">
System call</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../550/6025550.xml">
Orthogonal persistence</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../109/230109.xml">
Object-oriented operating system</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../773/147773.xml">
Disk operating system</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../528/22528.xml">
Operating system advocacy</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management (computing)</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 Footnotes </st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://arstechnica.com/news.ars/post/20070903-linux-marketshare-set-to-surpass-windows-98.html">
Linux market share set to surpass Win 98, OS X still ahead of Vista</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.linux-watch.com/news/NS5369154346.html">
Linux server market share keeps growing</weblink></entry>
<entry id="3">
Microsoft describes in detail the steps taken to combat this in a TechNet bulletin. <weblink xlink:type="simple" xlink:href="http://technet.microsoft.com/en-us/windowsvista/aa905073.aspx">
http://technet.microsoft.com/en-us/windowsvista/aa905073.aspx</weblink></entry>
<entry id="4">
Kenny Kerr&#32;(2006-09-29).&#32;"<weblink xlink:type="simple" xlink:href="http://weblogs.asp.net/kennykerr/archive/2006/09/29/Windows-Vista-for-Developers-_1320_-Part-4-_1320_-User-Account-Control.aspx">
Windows Vista for Developers – Part 4 – User Account Control</weblink>".&#32;Retrieved on <link>
2007-03-15</link>.</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://en.wikipedia.org/wiki/Comparison_of_revision_control_software|Comparison">
of revision control software</weblink></entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://en.wikipedia.org/wiki/Comparison_of_BSD_operating_systems|Comparison">
of BSD operating systems</weblink></entry>
<entry id="7">
inf3-www.informatik.unibw-muenchen.de/research/linux/milan/paper_milan.pdf</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 Auslander, Marc A.;&#32;Larkin, David C.; Scherr, Allan L..&#32;"<it>The evolution of the MVS Operating System</it>". &#32;IBM J. Research &amp; Development. http://www.research.ibm.com/journal/rd/255/auslander.pdf </entry>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book">Deitel, Harvey M.;&#32;Deitel, Paul; Choffnes, David. Operating Systems.&#32;Pearson/Prentice Hall. ISBN 978-0-13-092641-8.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Reference-Bic-2003" style="font-style:normal" class="book">Bic, Lubomur F.;&#32;Shaw, Alan C.&#32;(2003). Operating Systems..&#32;Pearson:&#32;<link xlink:type="simple" xlink:href="../050/5421050.xml">
Prentice Hall</link>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Reference-Stallings-2005" style="font-style:normal" class="book">Stallings&#32;(2005). Operating Systems, Internals and Design Principles.&#32;Pearson:&#32;<link xlink:type="simple" xlink:href="../050/5421050.xml">
Prentice Hall</link>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Reference-Silberschatz-2008" style="font-style:normal" class="book">Silberschatz, Avi;&#32;Galvin, Peter; Gagne, Greg&#32;(2008). Operating Systems Concepts.&#32;John Wiley &amp; Sons. ISBN 0-470-12872-0.</cite>&nbsp;</entry>
</list>
</p>


</sec>
<sec>
<st>
 External links </st>



<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.dmoz.org/Computers/Software/Operating_Systems/">
Operating Systems</weblink> at the <work wordnetid="100575741" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<company wordnetid="108058098" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<property wordnetid="113244109" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<subsidiary_company wordnetid="108003935" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/18949501.xml">
Open Directory Project</link></institution>
</subsidiary_company>
</activity>
</psychological_feature>
</act>
</property>
</undertaking>
</company>
</event>
</possession>
</work>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cbi.umn.edu/iterations/haigh.html">
Multics History</weblink> and the history of operating systems</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://computer.howstuffworks.com/operating-system.htm">
How Stuff Works - Operating Systems</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.iterating.org/productclasses/Operating-Systems">
Operating Systems Reviews</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.hoozi.com/Articles/DynaOS.htm">
DynaOS - Description of a conceptual Distributed Operating System</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.iterating.com/productclasses/Operating-Systems">
How to choose the right operating system</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.operating-system.org">
Operating System Documentation Project</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.google.com/Top/Computers/Programming/Operating_Systems/">
Google Directory for Operating System</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../675/8286675.xml">
System</link>s and <link xlink:type="simple" xlink:href="../757/659757.xml">
systems science</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">

Systems|Systems categories</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">

Conceptual systems|Conceptual systems&nbsp;·  
Physical systems|Physical systems&nbsp;·  
Social systems|Social systems&nbsp;·  
Systems theory|Systems theory&nbsp;·  
Systems science|Systems science&nbsp;·  
Systems scientists|Systems scientists</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../675/8286675.xml">
System</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../599/5780599.xml">
Biological system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../438/37438.xml">
Complex system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../810/1428810.xml">
Complex adaptive system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../298/773298.xml">
Conceptual system</link>&nbsp;·  <work wordnetid="100575741" confidence="0.8">
<examination wordnetid="100635850" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<survey wordnetid="100644503" confidence="0.8">
<investigation wordnetid="100633864" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../149/996149.xml">
Cultural system</link></activity>
</psychological_feature>
</act>
</investigation>
</survey>
</event>
</examination>
</work>
&nbsp;·  <link xlink:type="simple" xlink:href="../513/8513.xml">
Database management system</link>&nbsp;· <link xlink:type="simple" xlink:href="../087/9087.xml">
Dynamical system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../262/692262.xml">
Economic system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../632/9632.xml">
Ecosystem</link>&nbsp;·  <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../102/396102.xml">
Formal system</link></language>
</method>
</know-how>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../866/11866.xml">
Global Positioning System</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../268/13268.xml">
Human anatomy</link>&nbsp;·  <link xlink:type="simple" xlink:href="../495/237495.xml">
Information system</link>s&nbsp;·  <link xlink:type="simple" xlink:href="../708/154708.xml">
Legal systems of the world</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../664/16554664.xml">
Living systems</link></instrumentality>
</artifact>
</system>
&nbsp;·  <unit_of_measurement wordnetid="113583724" confidence="0.8">
<definite_quantity wordnetid="113576101" confidence="0.8">
<link xlink:type="simple" xlink:href="../988/1241988.xml">
Systems of measurement</link></definite_quantity>
</unit_of_measurement>
&nbsp;·  <link xlink:type="simple" xlink:href="../142/44142.xml">
Metric system</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../833/938833.xml">
Multi-agent system</link></instrumentality>
</artifact>
</system>
&nbsp;·   <link xlink:type="simple" xlink:href="../944/21944.xml">
Nervous system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../103/146103.xml">
Nonlinearity</link>&nbsp;·  <link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../322/773322.xml">
Physical system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../724/258724.xml">
Political system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../234/379234.xml">
Sensory system</link>&nbsp;·  <link xlink:type="simple" xlink:href="../444/634444.xml">
Social structure</link>&nbsp;·  <link xlink:type="simple" xlink:href="../903/26903.xml">
Solar System</link>&nbsp;·  <link xlink:type="simple" xlink:href="../135/16280135.xml">
Systems art</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Theoretical fields</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../295/6295.xml">
Chaos theory</link></concept>
</idea>
&nbsp;·  <link xlink:type="simple" xlink:href="../903/62903.xml">
Complex systems</link>&nbsp;·  <link xlink:type="simple" xlink:href="../039/7039.xml">
Control theory</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/5904.xml">
Cybernetics</link>&nbsp;·  <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../219/1303219.xml">
Scientific holism</link></geographical_area>
</tract>
</location>
</field>
</region>
&nbsp;·  <process wordnetid="105701363" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<explanation wordnetid="105793000" confidence="0.8">
<theory wordnetid="105989479" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../774/1683774.xml">
Sociotechnical systems theory</link></higher_cognitive_process>
</theory>
</explanation>
</thinking>
</process>
&nbsp;·  <link xlink:type="simple" xlink:href="../899/467899.xml">
Systems biology</link>&nbsp;·  <link xlink:type="simple" xlink:href="../208/153208.xml">
System dynamics</link>&nbsp;·  <link xlink:type="simple" xlink:href="../299/3253299.xml">
Systems ecology</link>&nbsp;·  <link xlink:type="simple" xlink:href="../764/27764.xml">
Systems engineering</link>&nbsp;·  <division wordnetid="108220714" confidence="0.8">
<administrative_unit wordnetid="108077292" confidence="0.8">
<branch wordnetid="108401248" confidence="0.8">
<link xlink:type="simple" xlink:href="../882/16700882.xml">
Systems psychology</link></branch>
</administrative_unit>
</division>
&nbsp;·  <link xlink:type="simple" xlink:href="../757/659757.xml">
Systems science</link>&nbsp;·  <process wordnetid="105701363" confidence="0.8">
<division wordnetid="108220714" confidence="0.8">
<administrative_unit wordnetid="108077292" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<explanation wordnetid="105793000" confidence="0.8">
<theory wordnetid="105989479" confidence="0.8">
<branch wordnetid="108401248" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../238/29238.xml">
Systems theory</link></higher_cognitive_process>
</branch>
</theory>
</explanation>
</thinking>
</administrative_unit>
</division>
</process>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Systems scientists</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../270/1045270.xml">
Russell L. Ackoff</link></research_worker>
</scientist>
</causal_agent>
</intellectual>
</theorist>
</person>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<specialist wordnetid="110632576" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<health_professional wordnetid="110165109" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<psychologist wordnetid="110488865" confidence="0.8">
<doctor wordnetid="110020890" confidence="0.8">
<medical_practitioner wordnetid="110305802" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<psychiatrist wordnetid="110488016" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../926/298926.xml">
William Ross Ashby</link></research_worker>
</psychiatrist>
</causal_agent>
</theorist>
</medical_practitioner>
</doctor>
</psychologist>
</professional>
</scientist>
</health_professional>
</adult>
</intellectual>
</specialist>
</person>
</physical_entity>
&nbsp;·  <link>
Béla H. Bánáthy</link>&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../331/154331.xml">
Gregory Bateson</link></scientist>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../173/730173.xml">
Richard E. Bellman</link></scientist>
&nbsp;·  <link xlink:type="simple" xlink:href="../597/142597.xml">
Stafford Beer</link>&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<biologist wordnetid="109855630" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../597/64597.xml">
Ludwig von Bertalanffy</link></scientist>
</causal_agent>
</biologist>
</person>
</physical_entity>
&nbsp;·  <expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<therapist wordnetid="110707233" confidence="0.8">
<specialist wordnetid="110632576" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<health_professional wordnetid="110165109" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<doctor wordnetid="110020890" confidence="0.8">
<medical_practitioner wordnetid="110305802" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<psychiatrist wordnetid="110488016" confidence="0.8">
<link xlink:type="simple" xlink:href="../746/2350746.xml">
Murray Bowen</link></psychiatrist>
</causal_agent>
</medical_practitioner>
</doctor>
</professional>
</scientist>
</health_professional>
</adult>
</specialist>
</therapist>
</person>
</physical_entity>
</expert>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<religious_person wordnetid="109628382" confidence="0.8">
<link xlink:type="simple" xlink:href="../715/676715.xml">
Kenneth E. Boulding</link></religious_person>
</scientist>
</causal_agent>
</person>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../021/1057021.xml">
C. West Churchman</link></research_worker>
</scientist>
</causal_agent>
</intellectual>
</theorist>
</person>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<analyst wordnetid="109790482" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<statistician wordnetid="110653238" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../rry/Bill_B$erry.xml">
George Dantzig</link></research_worker>
</mathematician>
</scientist>
</causal_agent>
</statistician>
</person>
</analyst>
</expert>
</physical_entity>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../035/105035.xml">
Heinz von Foerster</link></scientist>
</causal_agent>
</person>
</physical_entity>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../393/290393.xml">
Jay Wright Forrester</link></scientist>
&nbsp;·  <link>
George  Klir</link>&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../783/1706783.xml">
Edward Lorenz</link></scientist>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../465/21465.xml">
Niklas Luhmann</link></scientist>
</person>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<philosopher wordnetid="110423589" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<biologist wordnetid="109855630" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<psychologist wordnetid="110488865" confidence="0.8">
<link xlink:type="simple" xlink:href="../061/9638061.xml">
Humberto Maturana</link></psychologist>
</scholar>
</scientist>
</causal_agent>
</intellectual>
</biologist>
</person>
</philosopher>
</physical_entity>
&nbsp;·  <anthropologist wordnetid="109796323" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../617/19617.xml">
Margaret Mead</link></person>
</anthropologist>
&nbsp;·  <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<environmentalist wordnetid="110060621" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<disputant wordnetid="109615465" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<reformer wordnetid="110515194" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<advocate wordnetid="109774783" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../840/207840.xml">
Donella Meadows</link></scholar>
</writer>
</advocate>
</causal_agent>
</alumnus>
</reformer>
</communicator>
</disputant>
</associate>
</scientist>
</colleague>
</intellectual>
</person>
</environmentalist>
</physical_entity>
</peer>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<biologist wordnetid="109855630" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/12917041.xml">
Mihajlo D. Mesarovic</link></scientist>
</causal_agent>
</engineer>
</biologist>
</person>
</physical_entity>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../627/1019627.xml">
Howard T. Odum</link></scientist>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../041/54041.xml">
Talcott Parsons</link></scientist>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../560/238560.xml">
Ilya Prigogine</link></scientist>
&nbsp;·  <citizen wordnetid="109923673" confidence="0.8">
<obstructionist wordnetid="110349243" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<national wordnetid="109625401" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<educator wordnetid="110045713" confidence="0.8">
<disputant wordnetid="109615465" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<academician wordnetid="109759069" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../039/992039.xml">
Anatol Rapoport</link></causal_agent>
</academician>
</theorist>
</disputant>
</educator>
</professional>
</scientist>
</adult>
</intellectual>
</national>
</person>
</physical_entity>
</obstructionist>
</citizen>
&nbsp;·  <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../693/5693.xml">
Claude Shannon</link></scientist>
&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<philosopher wordnetid="110423589" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<biologist wordnetid="109855630" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<convert wordnetid="109962414" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../989/76989.xml">
Francisco Varela</link></research_worker>
</scholar>
</scientist>
</causal_agent>
</convert>
</intellectual>
</biologist>
</person>
</philosopher>
</physical_entity>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../453/17453.xml">
Kevin Warwick</link></scientist>
</person>
&nbsp;·  <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../185/63185.xml">
Norbert Wiener</link></scientist>
</person>
</col>
</row>
</table>
</col>
</row>
</table>
</p>




</sec>
</bdy>
</article>
