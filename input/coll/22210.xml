<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:31:19[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106253690">
<cipher  confidence="0.8" wordnetid="106254239">
<header>
<title>One-time pad</title>
<id>22210</id>
<revision>
<id>244377544</id>
<timestamp>2008-10-10T14:37:50Z</timestamp>
<contributor>
<username>Fuzzform</username>
<id>546423</id>
</contributor>
</revision>
<categories>
<category>Stream ciphers</category>
<category>Articles with Alice and Bob explanations</category>
<category>Wikipedia articles needing clarification</category>
<category>Cryptography</category>
</categories>
</header>
<bdy>

<image width="310px" src="One-time_pad.svg" type="thumb">
<caption>

Excerpt from a one-time pad.
</caption>
</image>

In <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link>, the <b>one-time pad (OTP)</b> is an <link xlink:type="simple" xlink:href="../294/10294.xml">
encryption</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> where the <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link> is combined with a random <link xlink:type="simple" xlink:href="../039/53039.xml">
key</link> or <it>"pad"</it> that is as long as the plaintext and used only once. A <link xlink:type="simple" xlink:href="../087/20087.xml">
modular addition</link>  is used to combine the plaintext with the pad. (For binary data, the operation <link xlink:type="simple" xlink:href="../979/105979.xml">
XOR</link> amounts to the same thing.) It was invented in <link xlink:type="simple" xlink:href="../595/34595.xml">
1917</link> and patented a couple of years later. If the key is truly <link xlink:type="simple" xlink:href="../523/19196523.xml">
random</link>, never reused, and kept <link xlink:type="simple" xlink:href="../505/66505.xml">
secret</link>, the one-time pad provides perfect secrecy. It has also been proven that any cipher with perfect secrecy must use keys with the same requirements as OTP keys. The key normally consists of a random stream of numbers, each of which indicates the number of places in the alphabet (or number stream, if the plaintext message is in numerical form) which the corresponding letter or number in the plaintext message should be shifted. For messages in the Latin alphabet, for example, the key will consist of a random string of numbers between 0 and 25; for binary messages the key will consist of a random string of 0s and 1s; and so on.<p>

The "pad" part of the name comes from early implementations where the key material was distributed as a pad of paper, so the top sheet could be easily torn off and destroyed after use. For easy concealment, the pad was sometimes reduced to such a small size that a powerful <link xlink:type="simple" xlink:href="../652/11817652.xml">
magnifying glass</link> was required to use it. Photos accessible on the Internet show captured <link xlink:type="simple" xlink:href="../958/16958.xml">
KGB</link> pads that fit in the palm of one's hand <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>, or in a <link xlink:type="simple" xlink:href="../140/165140.xml">
walnut</link> shell. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. To increase security, one-time-pads were sometimes printed onto sheets of highly <link xlink:type="simple" xlink:href="../214/9808214.xml">
flammable</link> <link xlink:type="simple" xlink:href="../246/58246.xml">
nitrocellulose</link>.</p>
<p>

The one-time pad is derived from the <link xlink:type="simple" xlink:href="../127/578127.xml">
Vernam cipher</link>, named after <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../127/578127.xml">
Gilbert Vernam</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
, one of its inventors. Vernam's system was a cipher that combined a message with a key read from a <link xlink:type="simple" xlink:href="../761/49761.xml">
paper tape</link> loop. In its original form, Vernam's system was not unbreakable because the key could be reused. One-time use came a little later when <physical_entity wordnetid="100001930" confidence="0.8">
<skilled_worker wordnetid="110605985" confidence="0.8">
<commissioned_officer wordnetid="109942970" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<general wordnetid="110123844" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<commissioned_military_officer wordnetid="109943239" confidence="0.8">
<general_officer wordnetid="110125786" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../117/580117.xml">
Joseph Mauborgne</link></decoder>
</causal_agent>
</worker>
</general_officer>
</commissioned_military_officer>
</military_officer>
</general>
</serviceman>
</intellectual>
</cryptanalyst>
</person>
</commissioned_officer>
</skilled_worker>
</physical_entity>
 recognized that if the key tape was totally random, <link xlink:type="simple" xlink:href="../715/5715.xml">
cryptanalytic</link> difficulty would be increased.  </p>
<p>

There is some term ambiguity due to the fact that some authors use the term "Vernam cipher" synonymously for the "one-time-pad", while others refer to any additive <link xlink:type="simple" xlink:href="../007/49007.xml">
stream cipher</link> as a "Vernam cipher", including those based on a <link xlink:type="simple" xlink:href="../249/182249.xml">
cryptographically secure pseudorandom number generator</link> (CSPRNG). <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

<sec>
<st>
Perfect secrecy</st>
<p>

The Vernam-Mauborgne one-time pad was recognized early on as difficult to break, but its special status was only established by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../693/5693.xml">
Claude Shannon</link></scientist>
 some 25 years later. He proved, using <link xlink:type="simple" xlink:href="../773/14773.xml">
information theory</link> considerations, that the one-time pad has a property he termed <it>perfect secrecy</it>; that is, the ciphertext <it>C</it> gives absolutely no additional <link xlink:type="simple" xlink:href="../062/18985062.xml">
information</link> about the <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link>. Thus, the <it><link xlink:type="simple" xlink:href="../056/6679056.xml">
a priori</link></it> probability of a plaintext message <it>M</it> is the same as the <it><link xlink:type="simple" xlink:href="../056/6679056.xml">
a posteriori</link></it> probability of a plaintext message <it>M</it> given the corresponding ciphertext. Mathematically, this is expressed as <math>H(M)=H(M|C)</math>, where <math>H(M)</math> is the <link xlink:type="simple" xlink:href="../445/15445.xml">
entropy</link> of the plaintext and <math>H(M|C)</math> is the <link xlink:type="simple" xlink:href="../548/908548.xml">
conditional entropy</link> of the plaintext given the ciphertext <it>C</it>. Perfect secrecy is a strong notion of cryptanalytic difficulty. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

Despite Shannon's proof of its security, the one-time pad has serious drawbacks in practice: </p>
<p>

<list>
<entry level="1" type="bullet">

 it requires perfectly random one-time pads</entry>
<entry level="1" type="bullet">

 secure generation and exchange of the one-time pad material, which must be at least as long as the message</entry>
<entry level="1" type="bullet">

 careful treatment to make sure that it continues to remain secret from any adversary, and is disposed of correctly preventing any reuse in whole or part &mdash; hence "one time". See <link xlink:type="simple" xlink:href="../415/1230415.xml">
data remanence</link> for a discussion of difficulties in completely erasing computer media.</entry>
</list>
</p>
<p>

Because the pad must be passed and kept secure, and the pad has to be at least as long as the message, there is often no point in using one-time padding, as you can simply send the plain text instead of the pad (as both are the same size and have to be sent securely). However, once a very long pad has been securely sent (e.g., a computer disk full of random data), it can be used for numerous future messages, until the sum of their sizes equals the size of the pad.</p>
<p>

Implementation difficulties have led to one-time pad systems being broken, and are so serious that they have prevented the one-time pad from being adopted as a widespread tool in <link xlink:type="simple" xlink:href="../036/15036.xml">
information security</link>. </p>
<p>

In particular, one-time use is absolutely necessary. If a one-time pad is used just twice, simple mathematical operations can reduce it to a <link xlink:type="simple" xlink:href="../657/450657.xml">
running key cipher</link>. If both plaintexts are in a natural language (e.g., English or Russian or Gaelic), even though both are secret,  each stands a very high chance of being recovered by <link xlink:type="simple" xlink:href="../452/63452.xml">
heuristic</link> cryptanalysis, with possibly a few ambiguities. Of course the longer message can only be broken for the portion that overlaps the shorter message, plus, perhaps, a little more by completing a word or phrase. The most famous exploit of this vulnerability is the <link xlink:type="simple" xlink:href="../620/173620.xml">
VENONA project</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

The one time pad does not provide a mechanism to ensure message integrity and, in theory, a <link xlink:type="simple" xlink:href="../676/144676.xml">
man-in-the-middle attack</link>er who knows the exact message being sent can straightforwardly replace all or part of that message with text of their choosing which is the same length.  Standard techniques to prevent this, such as the use of a <link xlink:type="simple" xlink:href="../523/567523.xml">
message authentication code</link>, can be used along with a one-time pad system, but they lack the perfect security the OTP itself has.</p>

</sec>
<sec>
<st>
History</st>
<p>

The history of the one-time pad is marked by four separate but closely related discoveries.</p>
<p>

The first one-time pad system was electrical. In <link xlink:type="simple" xlink:href="../595/34595.xml">
1917</link>, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../127/578127.xml">
Gilbert Vernam</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 (of <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../269/17555269.xml">
AT&amp;T</link></company>
) invented and later patented in 1919 (<weblink xlink:type="simple" xlink:href="http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=1310719">
U.S. Patent 1,310,719</weblink><weblink xlink:type="simple" xlink:href="http://www.pat2pdf.org/pat2pdf/foo.pl?number=1310719">
&nbsp;</weblink>) a cipher based on <link xlink:type="simple" xlink:href="../247/31247.xml">
Teletype</link> machine technology. Each character in a message was electrically combined with a character on a <link xlink:type="simple" xlink:href="../761/49761.xml">
paper tape</link> key. Captain <physical_entity wordnetid="100001930" confidence="0.8">
<skilled_worker wordnetid="110605985" confidence="0.8">
<commissioned_officer wordnetid="109942970" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<general wordnetid="110123844" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<commissioned_military_officer wordnetid="109943239" confidence="0.8">
<general_officer wordnetid="110125786" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../117/580117.xml">
Joseph Mauborgne</link></decoder>
</causal_agent>
</worker>
</general_officer>
</commissioned_military_officer>
</military_officer>
</general>
</serviceman>
</intellectual>
</cryptanalyst>
</person>
</commissioned_officer>
</skilled_worker>
</physical_entity>
 (then a captain in the <work wordnetid="100575741" confidence="0.8">
<army wordnetid="108191230" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<force wordnetid="108208016" confidence="0.8">
<military_service wordnetid="108198137" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../087/32087.xml">
United States Army</link></activity>
</psychological_feature>
</act>
</military_service>
</force>
</service>
</event>
</army>
</work>
 and later chief of the <link xlink:type="simple" xlink:href="../745/341745.xml">
Signal Corps</link>) recognized that the character sequence on the key tape could be completely random and that, if so, cryptanalysis would be more difficult. Together they invented the first one-time tape system. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

The second development was the paper pad system. Diplomats had long used <link xlink:type="simple" xlink:href="../225/5225.xml">
code</link>s and <link xlink:type="simple" xlink:href="../244/5244.xml">
cipher</link>s for confidentiality and to minimize <link xlink:type="simple" xlink:href="../010/30010.xml">
telegraph</link> costs. For the codes, words and phrases were converted to groups of numbers (typically 4 or 5 digits) using a dictionary-like <link xlink:type="simple" xlink:href="../786/530786.xml">
codebook</link>. For added security, secret numbers could be combined with (usually modular addition) each code group before transmission, with the secret numbers being changed periodically (this was called superencryption). In the early <link xlink:type="simple" xlink:href="../615/34615.xml">
1920s</link>, three German cryptographers, Werner Kunze, Rudolf Schauffler and Erich Langlotz, who were involved in breaking such systems, realized that they could never be broken if a separate randomly chosen additive number was used for every code group. They had duplicate paper pads printed up with lines of random number groups. Each page had a serial number and eight lines. Each line had six 5-digit numbers. A page would be used as a work sheet to encode a message and then destroyed. The serial number of the page would be sent with the encoded message. The recipient would reverse the procedure and then destroy his copy of the page. The German foreign office put this system into operation by <link xlink:type="simple" xlink:href="../863/34863.xml">
1923</link>. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

A separate notion was the use of a one-time pad of letters to encode plaintext directly as in the example below. <physical_entity wordnetid="100001930" confidence="0.8">
<skilled_worker wordnetid="110605985" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scriptwriter wordnetid="110564905" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<screenwriter wordnetid="110564400" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../446/18446.xml">
Leo Marks</link></decoder>
</writer>
</screenwriter>
</causal_agent>
</worker>
</communicator>
</military_officer>
</serviceman>
</scriptwriter>
</scientist>
</intellectual>
</cryptanalyst>
</person>
</skilled_worker>
</physical_entity>
 describes inventing such a system for the British <link xlink:type="simple" xlink:href="../898/28898.xml">
Special Operations Executive</link> during <military_action wordnetid="100952963" confidence="0.8">
<group_action wordnetid="101080366" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<conflict wordnetid="100958896" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<war wordnetid="100973077" confidence="0.8">
<link xlink:type="simple" xlink:href="../927/32927.xml">
World War II</link></war>
</psychological_feature>
</act>
</conflict>
</event>
</group_action>
</military_action>
, though he suspected at the time that it was already known in the highly compartmentalized world of cryptography, as for instance at <artifact wordnetid="100021939" confidence="0.8">
<science_museum wordnetid="104147364" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<depository wordnetid="103177349" confidence="0.8">
<museum wordnetid="103800563" confidence="0.8">
<link xlink:type="simple" xlink:href="../037/4037.xml">
Bletchley Park</link></museum>
</depository>
</facility>
</science_museum>
</artifact>
. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>
<p>

The final discovery was by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../693/5693.xml">
Claude Shannon</link></scientist>
 in the <link xlink:type="simple" xlink:href="../583/34583.xml">
1940s</link> who recognized and proved the theoretical significance of the one-time pad system. Shannon delivered his results in a classified report in 1945, and published them openly in 1949<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>. At the same time, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<hero wordnetid="110325013" confidence="0.8">
<leader wordnetid="109623038" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../594/4791594.xml">
Vladimir Kotelnikov</link></scientist>
</causal_agent>
</engineer>
</leader>
</hero>
</person>
</physical_entity>
 had independently proven absolute security of the one-time pad; his results were delivered in 1941 in a report that apparently remains classified<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>.</p>

</sec>
<sec>
<st>
 Example </st>
<p>

Suppose <link xlink:type="simple" xlink:href="../079/679079.xml">
Alice</link> wishes to send the message 'HELLO' to <link xlink:type="simple" xlink:href="../079/679079.xml">
Bob</link>. Assume two pads of paper containing identical random sequences of letters were somehow previously produced and securely issued to both. Alice chooses the appropriate unused page from the pad. The way to do this is normally arranged for in advance, as for instance 'use the 12th sheet on Labor Day', or 'use the next available sheet for the next message'.  The material on the selected sheet is the <it>key</it> for this message. Each letter from the pad will be combined in a predetermined way with one letter of the message. It is common, but not required, to assign each letter a numerical value: e.g., "A" is 0, "B" is 1, and so on through "Z", 25. In this example, the technique is to combine the key and the message using <link xlink:type="simple" xlink:href="../087/20087.xml">
modular addition</link>. The numerical  values of corresponding message and key letters are added together, modulo 26. If key material begins with, </p>
<p>

X M C K L</p>
<p>

and the message is "HELLO", then the coding would be done as follows:</p>
<p>

7 (H)   4 (E)  11 (L)  11 (L)  14 (O) message
+ 23 (X)  12 (M)   2 (C)  10 (K)  11 (L) key
= 30      16      13      21      25     message + key
=  4 (E)  16 (Q)  13 (N)  21 (V)  25 (Z) message + key (mod 26) &amp;gt;&amp;gt; ciphertext</p>
<p>

Note that if a number is larger than 25, then in modular arithmetic fashion, the remainder after subtraction of 26 is taken.  This simply means that, if your computations "go past" Z, you start again at A.</p>
<p>

The ciphertext to be sent to Bob is thus "EQNVZ." Bob uses the matching key page and the same process, but in reverse, to obtain the <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link>. Here, the key is <it>subtracted</it> from the ciphertext, again using modular arithmetic:</p>
<p>

4 (E)  16 (Q)  13 (N)  21 (V)  25 (Z) ciphertext
-  23 (X)  12 (M)   2 (C)  10 (K)  11 (L) key
= -19       4      11      11      14     ciphertext - key
=   7 (H)   4 (E)  11 (L)  11 (L)  14 (O) ciphertext - key (mod 26) &amp;gt;&amp;gt; message</p>
<p>

Similar to above, if a number is negative, 26 is added to make the number positive.</p>
<p>

Thus, Bob recovers Alice's plaintext, the message "HELLO". Both Alice and Bob destroy the key sheet immediately after use, thus preventing reuse and an attack against the cipher. The <link xlink:type="simple" xlink:href="../958/16958.xml">
KGB</link> often issued its <link xlink:type="simple" xlink:href="../501/10501.xml">
agents</link> one-time pads printed on tiny sheets of "flash paper"&mdash;paper chemically converted to <link xlink:type="simple" xlink:href="../246/58246.xml">
nitrocellulose</link>, which burns almost instantly and leaves no ash.</p>
<p>

The classical one-time pad of espionage used actual pads of minuscule, easily-concealed paper, a sharp pencil, and some <link xlink:type="simple" xlink:href="../292/567292.xml">
mental arithmetic</link>.  The method can be implemented now as a software program, using data files as input (plaintext), output (ciphertext) and key material (the required random sequence). The <link xlink:type="simple" xlink:href="../979/105979.xml">
XOR</link> operation is often used to combine the plaintext and the key elements, and is especially attractive on computers since it is usually a native machine instruction and is therefore very fast. However, ensuring that the key material is actually random, is used only once, never becomes known to the opposition, and is completely destroyed after use is hard to do. The auxiliary parts of a software one-time pad implementation present real challenges: secure handling/transmission of plaintext, truly random keys, and one-time-only use of the key.</p>

</sec>
<sec>
<st>
 Security </st>
<p>

One-time pads are "<link xlink:type="simple" xlink:href="../968/677968.xml">
information-theoretically secure</link>" in that the encrypted message (i.e., the <link xlink:type="simple" xlink:href="../294/10294.xml">
ciphertext</link>) provides no information about the original message to a <link xlink:type="simple" xlink:href="../715/5715.xml">
cryptanalyst</link> (except the length of the message). This is a very strong notion of security first developed during WWII by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../693/5693.xml">
Claude Shannon</link></scientist>
 and proved, mathematically, to be true of the one-time pad by Shannon about the same time. His result was published in the <it>Bell Labs Technical Journal</it> in 1949. Properly used one-time pads are secure in this sense even against adversaries with infinite computational power. To continue the example from above, suppose Eve intercepts Alice's ciphertext: "EQNVZ." If Eve had infinite computing power, she would quickly find that the key "XMCKL" would produce the plaintext "HELLO", but she would also find that the key "TQURI" would produce the plaintext "LATER", an equally plausible message:
4 (E)  16 (Q)  13 (N)  21 (V)  25 (Z) ciphertext
−  19 (T)  16 (Q)  20 (U)  17 (R)   8 (I) possible key
= −15       0      −7       4      17     ciphertext-key
=  11 (L)   0 (A)  19 (T)   4 (E)  17 (R) ciphertext-key (mod 26)
In fact, it is possible to "decrypt" out of the ciphertext any message whatsoever with the same number of characters, simply by using a different key, and there is no information in the ciphertext which will allow Eve to choose among the various possible readings of the ciphertext.</p>
<p>

Conventional symmetric encryption algorithms use complex patterns of substitution and transpositions. For the best of these currently in use, it is not known whether there can be a cryptanalytic procedure which can reverse (or, usefully, partially reverse) these transformations without knowing the key used during encryption. Asymmetric encryption algorithms depend on mathematical problems that are thought to be difficult to solve, such as <link xlink:type="simple" xlink:href="../491/15491.xml">
integer factorization</link> and <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link>s. However there is no proof that these problems are hard and a mathematical breakthrough could make existing systems vulnerable to attack.</p>

</sec>
<sec>
<st>
Applicability of one-time pads</st>
<p>

<image width="150px" src="PersonalStorageDevices.agr.jpg" type="thumb">
<caption>

Any digital <link xlink:type="simple" xlink:href="../174/28174.xml">
data storage device</link> can be used to transport one-time pad data.
</caption>
</image>

The theoretical perfect security of the one-time-pad applies only in a theoretically perfect setting;  no real-world implementation of any cryptosystem can provide perfect security because practical considerations introduce potential vulnerabilities.  These practical considerations of security and convenience have meant that the one-time-pad is, in practice, little-used.</p>
<p>

<list>
<entry level="1" type="bullet">

 One-time pads solve few current practical problems in cryptography. High quality ciphers that have undergone rigorous public review are widely available and their security is not considered a major worry at present. Such ciphers are almost always easier to employ than one-time pads; the amount of key material which must be properly generated and securely distributed is far smaller, and <link>
public key cryptography</link> overcomes this problem. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 High quality random numbers can be hard to generate.  The random number generation functions in most <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link> libraries are not suitable for cryptographic use.  Even those generators that are suitable for normal cryptographic use, including <link xlink:type="simple" xlink:href="../128/776128.xml">
/dev/random</link> and many <link xlink:type="simple" xlink:href="../506/160506.xml">
hardware random number generator</link>s, make some use of cryptographic functions whose security is unproven.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Distributing very long one-time pad keys is inconvenient and usually poses a significant security risk. The pad is essentially the encryption key, but unlike keys for modern ciphers, it must be extremely long and is much too difficult for humans to remember. Storage media such as <link xlink:type="simple" xlink:href="../414/400414.xml">
thumb drive</link>s, <link xlink:type="simple" xlink:href="../034/407034.xml">
DVD-R</link>s or personal <link xlink:type="simple" xlink:href="../424/1247424.xml">
digital audio player</link>s can be used to carry a very large one-time-pad from place to place in a (somewhat) non-suspicious way, but even so the need to transport the pad physically is a burden compared to the key negotiation protocols of a modern public-key cryptosystem, and such  media cannot reliably be erased securely by any means short of physical destruction (eg, incineration). A 4.7 GB DVD-R full of one-time-pad data, if shredded into particles 1 mm² in size, leaves over 100 kilobits of (admittedly hard to recover, but not impossibly so) data on each particle. In addition, the risk of compromise during transit (for example, a <link xlink:type="simple" xlink:href="../629/227629.xml">
pickpocket</link> swiping, copying and replacing the 'pad') is likely much greater in practice than the likelihood of compromise for a cipher such as <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../260/1260.xml">
AES</link></cipher>
. Finally, the effort needed to manage one-time pad key material scales very badly for large networks of communicants. The number of pads required goes up as the square of the number of users exchanging messages freely amongst each other. For communication between only two persons, or a <link xlink:type="simple" xlink:href="../244/28244.xml">
star network</link> topology, this is somewhat less of a problem.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 The key material must be securely disposed of after use, to ensure the key material is never reused and to protect the messages sent.  Because the key material must be transported from one endpoint to another, and persist until the message is sent or received, it can be more vulnerable to <link xlink:type="simple" xlink:href="../799/615799.xml">
forensic recovery</link> than the transient plaintext it protects. <it>See also:</it> <link xlink:type="simple" xlink:href="../415/1230415.xml">
data remanence</link>.  </entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 As traditionally used, one-time pads provide no <link xlink:type="simple" xlink:href="../967/47967.xml">
message authentication</link>, the lack of which is a frequent source of security failure in real-world systems.  The straightforward additive <link xlink:type="simple" xlink:href="../065/10441065.xml">
keystream</link> nature makes this vulnerability especially simple to exploit - for example, an attacker who knows that the message contains "Meet Jane and me tomorrow at 3:30 pm" at a particular point can replace that content by any other content of the exact same length, such as "3:30 meeting is cancelled, stay home", without having access to the one-time pad.  <mathematical_relation wordnetid="113783581" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../666/4024666.xml">
Universal hashing</link></algorithm>
</function>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</mathematical_relation>
 provides a way to authenticate messages up to an arbitrary security bound (i.e. for any p&amp;gt;0, a large enough hash ensures that even a computationally unbounded attacker's likelihood of successful forgery is less than p), but this uses additional random data from the pad, and removes the possibility of implementing the system without a computer.</entry>
</list>
</p>
<p>

Nonetheless, the one-time-pad retains some limited practical interest:</p>
<p>

<list>
<entry level="1" type="bullet">

 The one-time-pad is the only cryptosystem with perfect secrecy.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 The one-time-pad is one of the most practical methods of encryption where one or both parties must do all work by hand, without the aid of a computer; this made it important in the pre-computer era, and it could conceivably still be useful in situations where possession of a computer is illegal or incriminating or where trustworthy computer <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s are not available.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Making and using a one-time pad has educational value. No special equipment is required and it serves as a good introduction to several cryptographic ideas.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 OTP can be used, along with a more standard cryptosystem, in a <link xlink:type="simple" xlink:href="../541/1062541.xml">
superencryption</link> scheme. Adding an OTP layer is a special case of superencryption in which it can be proved that, provided you use keys that are statistically independent for each layer (e.g. independent <link xlink:type="simple" xlink:href="../939/2736939.xml">
RNG</link>s), the combination would be at least as strong as the strongest layer.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

One-time pads are practical in situations where two parties in a secure environment must be able to depart from one another and communicate from two separate secure environments with perfect secrecy.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Uses </st>
<p>

In some hypothetical espionage situations, the one-time pad might be useful because it can be computed by hand with only pencil and paper. Indeed, nearly all other high quality ciphers are entirely impractical without computers.  Spies can receive their pads in person from their "handlers."  In the modern world, however, computers (such as those embedded in personal electronic devices such as <link xlink:type="simple" xlink:href="../137/19644137.xml">
mobile phone</link>s) are so ubiquitous that possessing a computer suitable for performing conventional encryption (for example, a phone which can run concealed cryptographic software) will usually not attract suspicion.</p>
<p>

One-time pads have been used in special circumstances since the early <link xlink:type="simple" xlink:href="../568/19515568.xml">
1900s</link>. The <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../685/33685.xml">
Weimar Republic</link></country>
 Diplomatic Service began using the method in about <link xlink:type="simple" xlink:href="../676/34676.xml">
1920</link>. The breaking of poor <link xlink:type="simple" xlink:href="../779/26779.xml">
Soviet</link> cryptography by the <autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
British</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
, with messages made public for political reasons in two instances in the <link xlink:type="simple" xlink:href="../615/34615.xml">
1920s</link>, appear to have induced the USSR to adopt one-time pads for some purposes by around <link xlink:type="simple" xlink:href="../911/34911.xml">
1930</link>. <link xlink:type="simple" xlink:href="../958/16958.xml">
KGB</link> spies are also known to have used pencil and paper one-time pads more recently. Examples include Colonel <link xlink:type="simple" xlink:href="../909/474909.xml">
Rudolf Abel</link>, who was arrested and convicted in <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/645042.xml">
New York City</link></village>
 in the 1950s, and the 'Krogers' (ie, Morris and Lona Cohen), who were arrested and convicted of espionage in the <autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
United Kingdom</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
 in the early 1960s. Both were found with physical one-time pads in their possession.</p>
<p>

A number of nations have used one-time pad systems for their sensitive traffic. <physical_entity wordnetid="100001930" confidence="0.8">
<skilled_worker wordnetid="110605985" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scriptwriter wordnetid="110564905" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<screenwriter wordnetid="110564400" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../446/18446.xml">
Leo Marks</link></decoder>
</writer>
</screenwriter>
</causal_agent>
</worker>
</communicator>
</military_officer>
</serviceman>
</scriptwriter>
</scientist>
</intellectual>
</cryptanalyst>
</person>
</skilled_worker>
</physical_entity>
 reports that the British <link xlink:type="simple" xlink:href="../898/28898.xml">
Special Operations Executive</link> used one-time pads in World War II  to encode traffic between its offices. One-time pads for use with its overseas agents were introduced late in the war. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> Other one-time tape cipher machines include the British machines <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../283/3429283.xml">
Rockex</link></device>
</instrumentality>
</artifact>
 and <link xlink:type="simple" xlink:href="../481/3429481.xml">
Noreen</link>.</p>
<p>

The <military_action wordnetid="100952963" confidence="0.8">
<group_action wordnetid="101080366" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<conflict wordnetid="100958896" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<war wordnetid="100973077" confidence="0.8">
<link xlink:type="simple" xlink:href="../927/32927.xml">
World War II</link></war>
</psychological_feature>
</act>
</conflict>
</event>
</group_action>
</military_action>
 voice <link xlink:type="simple" xlink:href="../680/41680.xml">
scrambler</link> <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../918/740918.xml">
SIGSALY</link></device>
</instrumentality>
</artifact>
 was also a form of one-time system. It added analog noise to the signal at one end and removed it at the other end. The noise was distributed to the channel ends in the form of large shellac records of which only two were made. There were both starting synchronization and longer-term phase drift problems which arose and were solved before the system could be used.</p>
<p>

The <link xlink:type="simple" xlink:href="../939/21939.xml">
NSA</link> describes one-time tape systems like <link>
SIGTOT</link> and <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../691/1198691.xml">
5-UCO</link></device>
</instrumentality>
</artifact>
 as being used for intelligence traffic until the introduction of the electronic cipher based <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../090/1006090.xml">
KW-26</link></device>
</instrumentality>
</artifact>
 in 1957.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></p>
<p>

The <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<electrical_device wordnetid="103269401" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<circuit wordnetid="103033362" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/3628041.xml">
hotline</link></circuit>
</device>
</electrical_device>
</instrumentality>
</artifact>
 between <city wordnetid="108524735" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/19004.xml">
Moscow</link></city>
 and <link xlink:type="simple" xlink:href="../956/108956.xml">
Washington D.C.</link>, established in 1963 after the <link>
Cuban missile crisis</link>, used <link xlink:type="simple" xlink:href="../247/31247.xml">
teleprinter</link>s protected by a commercial one-time tape system. Each country prepared the keying tapes used to encode its messages and delivered them via their embassy in the other country. A unique advantage of the OTP in this case was that neither country had to reveal more sensitive encryption methods to the other. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> p.715</p>
<p>

During the <link xlink:type="simple" xlink:href="../755/34755.xml">
1983</link> <conflict wordnetid="100958896" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../273/159273.xml">
Invasion of Grenada</link></conflict>
, U.S. forces found a supply of pairs of one-time pad books in a Cuban warehouse .</p>
<p>

The British Army's <link xlink:type="simple" xlink:href="../751/19097751.xml">
BATCO</link> tactical communication code is a pencil-and-paper one-time-pad system. Key material is provided on paper sheets that are kept in a special plastic wallet with a sliding pointer that indicates the last key used. New sheets are provided daily (though a small series of "training BATCO" is usually recycled on exercise) and the old ones destroyed. BATCO is used on battlefield voice nets; the most sensitive portions of a message (typically <link xlink:type="simple" xlink:href="../280/227280.xml">
grid reference</link>s) are encoded and the ciphertext is read out letter by letter.</p>
<p>

A related notion is the <link xlink:type="simple" xlink:href="../989/838989.xml#xpointer(//*[./st=%22One-time+code%22])">
one-time code</link>&mdash;a signal, used only once, eg "Alpha" for "mission completed" and "Bravo" for "mission failed" cannot be "decrypted" in any reasonable sense of the word. Understanding the message will require additional information, often 'depth' of repetition, or some <link xlink:type="simple" xlink:href="../015/480015.xml">
traffic analysis</link>. However, such strategies (though often used by real operatives, and <link xlink:type="simple" xlink:href="../850/3850.xml">
baseball</link> coaches) are not a cryptographic one-time pad in any significant sense.</p>

</sec>
<sec>
<st>
Exploits</st>
<p>

While one-time pads provide perfect secrecy if generated and used properly, small mistakes can lead to successful cryptanalysis:</p>
<p>

<list>
<entry level="1" type="bullet">

In <link xlink:type="simple" xlink:href="../622/34622.xml">
1944</link>&ndash;<link xlink:type="simple" xlink:href="../624/34624.xml">
1945</link>, the US Army's <link>
Signal Security Agency</link> was able to solve a one-time pad system used by the German Foreign Office for its high-level traffic, codenamed GEE (Erskine, 2001). GEE was insecure because the pads were not completely random &mdash; the machine used to generate the pads produced predictable output.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

In <link xlink:type="simple" xlink:href="../624/34624.xml">
1945</link> the U.S. discovered that <site wordnetid="108651247" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../983/51983.xml">
Canberra</link></site>
-<city wordnetid="108524735" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/19004.xml">
Moscow</link></city>
 messages were being encrypted first using a code-book and then using a one-time pad. However the one-time pad used was the same one used by Moscow for <link xlink:type="simple" xlink:href="../956/108956.xml">
Washington, DC</link>-Moscow messages. Combined with the fact that some of the Canberra-Moscow messages included known British government documents, this allowed some of the encrypted messages to be broken.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

One-time pads were employed by <system wordnetid="108435388" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../779/26779.xml">
Soviet</link></group>
</economy>
</system>
 espionage agencies for covert communications with agents and agent controllers. Analysis has shown that these pads were generated by typists using actual typewriters. This method is of course not "truly" random, as it makes certain convenient key sequences more likely than others, yet it proved to be generally effective. Without copies of the key material used, only some defect in the generation method or reuse of keys offered much hope of cryptanalysis. Beginning in the late <link xlink:type="simple" xlink:href="../583/34583.xml">
1940s</link>, U.S. and UK intelligence agencies were able to break some of the Soviet one-time pad traffic to <city wordnetid="108524735" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/19004.xml">
Moscow</link></city>
 during WWII as a result of errors made in generating and distributing the key material. One suggestion is that Moscow Centre personnel were somewhat rushed by the presence of German troops just outside Moscow in late 1941 and early 1942, and they produced more than one copy of same key material during that period. This decades-long effort was finally codenamed <link xlink:type="simple" xlink:href="../620/173620.xml">
VENONA</link> (BRIDE had been an earlier name); it produced a considerable amount of information, including more than a little about some of the Soviet atom spies. Even so, only a small percentage of the intercepted messages were either fully or partially decrypted (a few thousand out of several hundred thousand). <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Burglaries are said to have been carried out by the FBI during WWII against Soviet offices in the US which yielded copies of some key material. There are some claims that the material copied was helpful cryptanalytically. </entry>
</list>
</p>

</sec>
<sec>
<st>
 True randomness requirements </st>
<p>

In discussing the one-time pad, two notions of security have to be kept distinct. The first is the perfect secrecy of the one-time pad system as proved by Shannon (<link xlink:type="simple" xlink:href="../085/452085.xml">
Shannon security</link>). The second is the security offered by state-of-the-art ciphers (e.g. <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../260/1260.xml">
AES</link></cipher>
) designed with principles learned in the long history of code breaking and subjected to extensive testing in a standardization process, either in public or by a top notch security service (<b>empirical security</b>).  The former is mathematically proven, subject to the practical availability of random numbers. The latter is unproven but relied upon by most governments to protect their most vital secrets (insofar as publicly known thus far).</p>

<ss1>
<st>
Methods that may offer practical security, but do not have Shannon security</st>
<p>

If the key material is generated by a deterministic program, then it is not random and the encryption system no longer has perfect secrecy. Such a system is called a <link xlink:type="simple" xlink:href="../007/49007.xml">
stream cipher</link>. These generally use a short key which is used to seed a long <link xlink:type="simple" xlink:href="../210/23210.xml">
pseudorandom</link> stream, which is then combined with the message using some such mechanism as those used in one-time pads (eg, XOR). Stream ciphers can be secure in practice, but they cannot achieve perfect secrecy like the one-time pad does. </p>
<p>

The <link xlink:type="simple" xlink:href="../139/294139.xml">
Fish ciphers</link> used by the German military in WWII turned out to be insecure stream ciphers, not practical automated one-time pads as their designers had intended. <artifact wordnetid="100021939" confidence="0.8">
<science_museum wordnetid="104147364" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<depository wordnetid="103177349" confidence="0.8">
<museum wordnetid="103800563" confidence="0.8">
<link xlink:type="simple" xlink:href="../037/4037.xml">
Bletchley Park</link></museum>
</depository>
</facility>
</science_museum>
</artifact>
 broke one of them, the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../173/301173.xml">
Lorenz cipher</link></device>
</instrumentality>
</artifact>
 machine, regularly. </p>
<p>

However, if a modern so-called <link xlink:type="simple" xlink:href="../249/182249.xml">
cryptographically secure pseudo-random number generator</link> is used, it can form the basis for an empirically secure  stream cipher. There are many well-vetted designs in the public domain, ranging from the simplicity of <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../831/25831.xml">
RC4</link></cipher>
 to using a <link xlink:type="simple" xlink:href="../594/4594.xml">
block cipher</link> like AES in <link>
counter mode</link>. There would appear to be little reason to invent new stream ciphers, yet it has long been thought that NSA and its comparable agencies devote considerable effort to stream ciphers for their government customers.</p>

</ss1>
<ss1>
<st>
Methods that offer neither practical security nor Shannon security</st>
<p>

The similarity between stream ciphers and one-time pads often leads the cryptographically unwary to invent insecure stream ciphers under the mistaken impression that they have developed a practical version of the one-time pad. An especially insecure approach is to use any of the <link xlink:type="simple" xlink:href="../524/45524.xml">
random number generators</link> that are distributed in many (perhaps most) computer programming language runtime support packages or as <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> system calls. These typically produce sequences that pass some (or even many) <link xlink:type="simple" xlink:href="../685/26685.xml">
statistical</link> tests, but are nonetheless breakable by cryptoanalytic techniques. For some time the ANSI C standard restricted the C language random number routine output to a single precision integer, for most implementations that would be 16-bits, giving at most 32768 different values before repeating (assuming a cyclical algorithm, as is common, but not mandatory). This is entirely insecure and is easily breakable by <link xlink:type="simple" xlink:href="../784/53784.xml">
exhaustive test</link> (for perspective, a 1 GHz computer which takes 10,000 clock cycles to check an offset within the RNG's cycle would take under a third of a second to check every possible offset). Standard computer random number generators are not suitable for cryptographic purposes, specifically including the one-time pad. In particular, the relatively newly developed and widely admired <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<link xlink:type="simple" xlink:href="../538/45538.xml">
Mersenne twister</link></equipment>
</generator>
</apparatus>
</instrumentality>
</artifact>
 algorithm, while sufficiently "random" for most research or simulation uses, better than almost any other such generator, and quite fast as well, should not be used to generate one-time pad key material. The algorithm is deterministic and was not designed for cryptographic security.  Some programs use a user-supplied key to uniquely scatter the output of a pseudorandom number generator in a way that requires knowledge of the key and any <link xlink:type="simple" xlink:href="../971/105971.xml">
initialization vector</link>s used, to predict the final output.</p>
<p>

As well, publicly known values such as the terminal digits of <link xlink:type="simple" xlink:href="../132/49132.xml">
marathon</link> race times, closing stock prices from any source however obscure, daily temperatures or atmospheric pressures, etc, though seemingly random, are predictable -- after the fact. Indeed, even truly random sequences which have been published cannot be used as they are now predictable if identified. An example is the <link xlink:type="simple" xlink:href="../944/214944.xml">
RAND</link> Corporation's 1950s <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../812/1354812.xml">
publication of a million random digits</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
; it has passed every statistical test for randomness thus far and is thought to be actually random. But, having been published, it is fully predictable. So are the digits of pi, e, <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<constant wordnetid="105858936" confidence="0.8">
<quantity wordnetid="105855125" confidence="0.8">
<link xlink:type="simple" xlink:href="../386/12386.xml">
phi</link></quantity>
</constant>
</concept>
</idea>
, and other irrational or transcendental numbers; the sequences may be statistically random (an open question, actually), but are fully predictable nonetheless.</p>

</ss1>
<ss1>
<st>
Achieving Shannon security</st>
<p>

To achieve Shannon security, a source of perfectly unpredictable random data is needed. One theoretical basis for the physical existence of unpredictability is <link xlink:type="simple" xlink:href="../202/25202.xml">
quantum mechanics</link>. Its assertions of unpredictability are subject to experimental test. <it>See:</it> <link xlink:type="simple" xlink:href="../766/886766.xml">
Bell test experiments</link>.  Another basis is the theory of unstable <link xlink:type="simple" xlink:href="../087/9087.xml">
dynamical system</link>s and <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../295/6295.xml">
Chaos theory</link></concept>
</idea>
. These theories suggest that even in the deterministic world of <link xlink:type="simple" xlink:href="../586/19555586.xml">
Newtonian mechanics</link>, real-world systems evolve in ways that cannot be predicted in practice because one would need to know the initial conditions to an accuracy that <link xlink:type="simple" xlink:href="../933/191933.xml">
grows exponentially</link> over time.</p>
<p>

For use in a one-time pad, data should exhibit perfect randomness. Most practical sources exhibit some imperfection or bias. The quality of randomness is measured by <link xlink:type="simple" xlink:href="../445/15445.xml">
entropy</link>. A perfectly random bit has an entropy of one bit. An idea due to Von Neumann is to use an algorithm to combine multiple, imperfectly random bits, each with entropy less than one, to create a single bit with entropy equal to one. This process is called <b>entropy distillation</b> or <b>entropy extraction</b>.  Von Neumann proposed the following method, called "Von Neumann whitening":<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>
<table class="wikitable">
<header>
Input bits</header>
<header>
Output</header>
<row>
<col>
00</col>
<col>
No output.</col>
</row>
<row>
<col>
01</col>
<col>
Output "0" bit.</col>
</row>
<row>
<col>
10</col>
<col>
Output "1" bit.</col>
</row>
<row>
<col>
11</col>
<col>
No output.</col>
</row>
</table>
 </p>
<p>

This will produce uniformly random output bits if the input bits are <link xlink:type="simple" xlink:href="../593/27593.xml">
statistically independent</link> and all drawn from the <it>same</it> distribution.  However, that is not a realistic assumption since most physical randomness sources may have some correlation in the output, and the distribution may change with the device temperature, etc.  In 2003, <link>
Boaz Barak</link>, <link>
Ronen Shaltiel</link>, and <link>
Eran Tromer</link> stated some reasonable security criteria for entropy distillation and constructed an algorithm for doing it.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>   (description needed).&#91;&#93;</p>
<p>

In <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 (and some other <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 systems) the kernel's random number generator, <link xlink:type="simple" xlink:href="../128/776128.xml">
/dev/random</link>, uses environmental noise to generate random data and is better than many such <link xlink:type="simple" xlink:href="../908/102908.xml">
system call</link> designs. It attempts to estimate the amount of entropy it collects and blocks if the entropy pool is exhausted.  It is intended to be, and is widely thought to actually be, better than most such generators, and if so is rather closer to satisfactorily random.  But this process will be slow on systems which have few usable noise sources. It can, however, be fed additional entropy by reading from an attached noise generating device.</p>
<p>

Linux also provides /dev/urandom which uses a deterministic algorithm to generate the data whenever environmental noise is unavailable.  Improved designs, such as the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<link xlink:type="simple" xlink:href="../416/74416.xml">
Yarrow algorithm</link></equipment>
</generator>
</apparatus>
</instrumentality>
</artifact>
 are available. One-time pad key material generated in this way (ie, from deterministic random number generators) lacks the information-theoretic security of a one-time pad. Yarrow offers at least as much strength as a block cipher based on <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../375/48375.xml">
Triple DES</link></cipher>
.</p>
<p>

If a computer used for one-time pad generation is compromised, by a <link xlink:type="simple" xlink:href="../196/18994196.xml">
computer virus</link> or other <link xlink:type="simple" xlink:href="../901/20901.xml">
malware</link> or by an adversary gaining physical access, the software can be modified to leak the pad data or generate apparently random data that is in fact predictable. See <link xlink:type="simple" xlink:href="../124/1250124.xml">
random number generator attack</link>. One way to reduce this risk is to generate pads on a machine that is never connected to any computer network and preferably not used for any other purpose. Collecting key material on new, blank media (e.g. <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link>s or <link xlink:type="simple" xlink:href="../780/6780.xml">
CD-R</link>s) eliminates another route for malware infection. If paper pads are to be produced, the printer is best dedicated as well. One approach might be to use an older laptop for OTP generation, purged and rebuilt with a fresh, traceable copy of an <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>, such as Linux or <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link>. The smaller size would allow it to be easily locked up in a <link xlink:type="simple" xlink:href="../411/697411.xml">
safe</link> when not in use.</p>

</ss1>
</sec>
<sec>
<st>
Making one-time pads by hand</st>
<p>

<image location="right" width="150px" src="Scrabble_tiles_en.jpg" type="thumb">
<caption>

A full English-language Scrabble tile set. See <link xlink:type="simple" xlink:href="../641/1348641.xml">
Scrabble letter distributions</link> for other languages.
</caption>
</image>
</p>
<p>

One-time pads were originally made without the use of a computer and this is still possible today.  The process can be tedious, but if done correctly and the pad used only once, the result is unbreakable.</p>
<p>

There are two components needed to make a one-time pad: a way to generate letters at random and a way to record two copies of the result. The traditional way to do the latter was to use a <link xlink:type="simple" xlink:href="../365/44365.xml">
typewriter</link> and <link xlink:type="simple" xlink:href="../441/267441.xml">
carbon paper</link>. The carbon paper and typewriter ribbon would then be destroyed since it may be possible for the pad data to be recovered from them. As typewriters have become scarce, it is also acceptable to hand write the letters neatly in groups of five on two part <link xlink:type="simple" xlink:href="../030/1296030.xml">
carbonless copy paper</link> sheets, which can be purchased at office supply stores. Each sheet should be given a serial number or some other unique marking.</p>
<p>

The simplest way to generate random letters is to obtain 26 identical objects with each letter of the alphabet marked on one object. Tiles from the game <link xlink:type="simple" xlink:href="../929/27929.xml">
Scrabble</link> can be used (as long as only one of each letter is selected).  Kits for making name charm bracelets are another possibility. One can also write the letters on 26 <link xlink:type="simple" xlink:href="../092/164092.xml">
pennies</link> with a marking pen. The objects are placed in a box or cup and shaken vigorously, then one object is withdrawn and its letter is recorded. The object is returned to the box and the process is repeated.</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../506/160506.xml">
Hardware random number generator</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../704/156704.xml">
Numbers station</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../968/677968.xml">
Information theoretic security</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../733/28733.xml">
Steganography</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../941/63941.xml">
Session key</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.ranum.com/security/computer_security/papers/otp-faq">
One-Time-Pad (Vernam's Cipher) Frequently Asked Questions, with photo</weblink>".&#32;Retrieved on <link>
2006-05-12</link>.</entry>
<entry id="2">
Savory, Stuart&#32;(2001).&#32;"<weblink xlink:type="simple" xlink:href="http://home.egge.net/~savory/chiffre9.htm">
Chiffriergerätebau : One-Time-Pad (German), with photo</weblink>".&#32;Retrieved on <link>
2006-07-24</link>.</entry>
<entry id="3">
 <cite id="Reference-Kahn-1967" style="font-style:normal" class="book">Kahn, David&#32;(1967). <link xlink:type="simple" xlink:href="../052/578052.xml">
The Codebreakers</link>.&#32;Macmillan,&#32;398 ff. ISBN 0-684-83130-9.</cite>&nbsp;</entry>
<entry id="4">
 <cite style="font-style:normal">Shannon, Claude&#32;(1949).&#32;"Communication Theory of Secrecy Systems". <it>Bell System Technical Journal</it>&#32;<b>28</b>&#32;(4): 656–715.</cite>&nbsp;</entry>
<entry id="5">
"<weblink xlink:type="simple" xlink:href="http://www.nsa.gov/venona/index.cfm">
NSA Venona page</weblink>".</entry>
<entry id="6">
 <cite id="Reference-Marks-1998" style="font-style:normal" class="book">Marks, Leo&#32;(1998). Between Silk and Cyanide: a Codemaker's Story, 1941-1945.&#32;HarperCollins. ISBN 0-684-86780-X.</cite>&nbsp;</entry>
<entry id="7">
S. N. Molotkov, “Quantum cryptography and V. A. Kotel’nikov’s one-time key and sampling theorems,” PHYS-USP <b>49</b>, 750-761 (2006), article available to journal subscribers in&nbsp;English <weblink xlink:type="simple" xlink:href="http://www.turpion.org/php/paper.phtml?journal_id=pu&amp;paper_id=6050">
http://www.turpion.org/php/paper.phtml?journal_id=pu&amp;paper_id=6050</weblink> and openly in&nbsp;Russian <weblink xlink:type="simple" xlink:href="http://www.ufn.ru/ru/articles/2006/7/k/">
http://www.ufn.ru/ru/articles/2006/7/k/</weblink></entry>
<entry id="8">
Schneier, Bruce.&#32;"<weblink xlink:type="simple" xlink:href="http://www.schneier.com/crypto-gram-0210.html#7">
Arguments against one-time pad systems</weblink>".</entry>
<entry id="9">
Klein, Melville&#32;(2003).&#32;"<weblink xlink:type="simple" xlink:href="http://www.nsa.gov/publications/publi00017.pdf">
Securing Record Communications: The TSEC/KW-26</weblink>"&#32;(PDF).&#32;  NSA.&#32;Retrieved on <link>
2006-05-12</link>.</entry>
<entry id="10">
Cryptography Research, Inc.&#32;(February 27, 2003).&#32;"<weblink xlink:type="simple" xlink:href="http://www.cryptography.com/resources/whitepapers/VIA_rng.pdf">
Evaluation of VIA C3 Nehemiah Random Number Generator</weblink>"&#32;(PDF).&#32;Retrieved on <link>
2006-05-12</link>.</entry>
<entry id="11">
http://www.wisdom.weizmann.ac.il/~tromer/papers/rng.pdf</entry>
</reflist>
</p>

</sec>
<sec>
<st>
Further reading</st>
<p>

<list>
<entry level="1" type="bullet">

  Robert Wallace and H. Keith Melton, with Henry R. Schlesinger, <it>Spycraft: The Secret History of the CIA's Spytechs, from Communism to al-Qaeda</it>, New York, <link xlink:type="simple" xlink:href="../329/1103329.xml">
Dutton</link>, 2008. ISBN 0525949801</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 Erskine, Ralph, "Enigma's Security: What the Germans Really Knew", in "Action this Day", edited by Ralph Erskine and Michael Smith, pp 370&ndash;386, 2001.</entry>
</list>
</p>


</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

Detailed <weblink xlink:type="simple" xlink:href="http://users.telenet.be/d.rijmenants/en/onetimepad.htm">
description of One-time Pad</weblink> with examples and images on <weblink xlink:type="simple" xlink:href="http://users.telenet.be/d.rijmenants">
Cipher Machines and Cryptology</weblink></entry>
<entry level="1" type="bullet">

<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../640/17844640.xml">
Marcus Ranum</link></person>
's <weblink xlink:type="simple" xlink:href="http://www.ranum.com/security/computer_security/papers/otp-faq/">
One-Time Pad FAQ</weblink></entry>
<entry level="1" type="bullet">

The <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../979/1658979.xml">
FreeS/WAN</link></software>
 <weblink xlink:type="simple" xlink:href="http://www.freeswan.org/freeswan_trees/freeswan-2.06/doc/glossary.html#OTP">
glossary entry</weblink> with a discussion of OTP weaknesses</entry>
<entry level="1" type="bullet">

OTP based program <weblink xlink:type="simple" xlink:href="http://www.longpass.de">
http://www.longpass.de</weblink></entry>
</list>
</p>


</sec>
</bdy>
</cipher>
</message>
</article>
