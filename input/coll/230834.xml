<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:34:52[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<software  confidence="0.8" wordnetid="106566077">
<application  confidence="0.8" wordnetid="106570110">
<program  confidence="0.8" wordnetid="106568978">
<written_communication  confidence="0.8" wordnetid="106349220">
<writing  confidence="0.8" wordnetid="106359877">
<code  confidence="0.8" wordnetid="106355894">
<coding_system  confidence="0.8" wordnetid="106353757">
<header>
<title>CAPTCHA</title>
<id>230834</id>
<revision>
<id>244435310</id>
<timestamp>2008-10-10T20:03:21Z</timestamp>
<contributor>
<username>Calendar</username>
<id>3214269</id>
</contributor>
</revision>
<categories>
<category>All articles with dead external links</category>
<category>Computer security</category>
<category>Artificial intelligence applications</category>
<category>Articles with invalid date parameter in template</category>
<category>Articles with dead external links since December 2007</category>
<category>Internet forum terminology</category>
</categories>
</header>
<bdy>

<image width="290px" src="captcha.jpg" type="thumb">
<caption>

Early CAPTCHAs such as these, generated by the EZ-Gimpy program, were used on <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../213/188213.xml">
Yahoo!</link></company>
. However, technology was developed to read this type of CAPTCHA<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
</caption>
</image>

<image width="290px" src="Modern-captcha.jpg" type="thumb">
<caption>

A modern CAPTCHA, rather than attempting to create a distorted background and high levels of warping on the text, might focus on making <link xlink:type="simple" xlink:href="../717/505717.xml">
segmentation</link> difficult by adding an angled line
</caption>
</image>

<image width="290px" src="KCAPTCHA_with_crowded_symbols.gif" type="thumb">
<caption>

Another way to make segmentation difficult is to crowd symbols together. This, though, is often very difficult for humans to read
</caption>
</image>
<p>

A <b>CAPTCHA</b> (IPA: ) is a type of <link xlink:type="simple" xlink:href="../627/412627.xml">
challenge-response</link> test used in <link xlink:type="simple" xlink:href="../213/5213.xml">
computing</link> to ensure that the response is not generated by a computer.   The process usually involves one computer (a <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../116/42116.xml">
server</link></generic>
) asking a user to complete a simple test which the computer is able to generate and grade. Because other computers are unable to solve the CAPTCHA, any user entering a correct solution is presumed to be human. Thus, it is sometimes described as a <link xlink:type="simple" xlink:href="../435/723435.xml">
reverse Turing test</link>, because it is administered by a machine and targeted to a human, in contrast to the standard <link xlink:type="simple" xlink:href="../840/43840.xml">
Turing test</link> that is typically administered by a human and targeted to a machine. A common type of CAPTCHA requires that the user type the letters or digits of a distorted image that appears on the screen. </p>
<p>

The term "CAPTCHA" was coined in 2000 by <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<educator wordnetid="110045713" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<teacher wordnetid="110694258" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/5648968.xml">
Luis von Ahn</link></scholar>
</teacher>
</causal_agent>
</alumnus>
</associate>
</educator>
</professional>
</scientist>
</adult>
</colleague>
</intellectual>
</person>
</physical_entity>
</peer>
, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../357/308357.xml">
Manuel Blum</link></scientist>
</person>
, Nicholas J. Hopper (all of <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../093/48093.xml">
Carnegie Mellon University</link></university>
), and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../225/13033225.xml">
John Langford</link></scholar>
</scientist>
</causal_agent>
</alumnus>
</intellectual>
</person>
</physical_entity>
 (then of <link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link>). It is a <link>
contrived acronym</link> for "<b>C</b>ompletely <b>A</b>utomated <b>P</b>ublic <b>T</b>uring test to tell <b>C</b>omputers and <b>H</b>umans <b>A</b>part." Carnegie Mellon University attempted to trademark the term,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> but the trademark application was abandoned on 21 April 2008.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> Currently, CAPTCHA creators recommend use of <link xlink:type="simple" xlink:href="../897/11451897.xml">
reCAPTCHA</link> as the official implementation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>

<sec>
<st>
 Characteristics </st>
<p>

A CAPTCHA system is a means of automatically generating new challenges which:
<list>
<entry level="1" type="bullet">

Current software is unable to solve accurately.</entry>
<entry level="1" type="bullet">

Most humans can solve.</entry>
<entry level="1" type="bullet">

Does not rely on the type of CAPTCHA being new to the attacker.</entry>
</list>
</p>
<p>

Although a checkbox "check here if you are not a bot" might serve to distinguish between humans and computers, it is not a CAPTCHA because it relies on the fact that an attacker has not spent effort to break that specific form.</p>
<p>

Withholding of the algorithm can increase the integrity of a limited set of systems, as in the practice of <link xlink:type="simple" xlink:href="../087/29087.xml">
security through obscurity</link>. The most important factor in deciding whether an algorithm should be made open or restricted is the size of the system. Although an algorithm which survives scrutiny by security experts may be assumed to be more conceptually secure than an unevaluated algorithm, an unevaluated algorithm specific to a very limited set of systems is always of less interest to those engaging in automated abuse. Breaking a CAPTCHA generally requires some effort specific to that particular CAPTCHA implementation, and an abuser may decide that the benefit granted by automated bypass is negated by the effort required to engage in abuse of that system in the first place.</p>

</sec>
<sec>
<st>
 History </st>
<p>

While often uncredited, Moni Naor was the first person to theorize a list of ways  to verify that a request comes from a human and not a bot<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>. Perfecto Technologies (later renamed Sanctum Inc) filed for a <weblink xlink:type="simple" xlink:href="http://www.google.com/patents?id=5_SWAAAAEBAJ&amp;printsec=abstract&amp;zoom=4&amp;dq=perfecto+technologies">
CAPTCHA patent</weblink> on Dec 1997, and had a reference implementation developed by Ohad Eder Pressman. Primitive CAPTCHAs seem to have been developed in 1997 at <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../024/366024.xml">
AltaVista</link></company>
 by <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<executive wordnetid="110069645" confidence="0.8">
<administrator wordnetid="109770949" confidence="0.8">
<leader wordnetid="109623038" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<head wordnetid="110162991" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../109/3458109.xml">
Andrei Broder</link></scholar>
</head>
</employee>
</causal_agent>
</alumnus>
</worker>
</leader>
</administrator>
</executive>
</associate>
</scientist>
</colleague>
</intellectual>
</person>
</physical_entity>
</peer>
 and his colleagues to prevent <link xlink:type="simple" xlink:href="../607/1569607.xml">
bot</link>s from adding <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>s to their <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link>. In order to make the images resistant to <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../091/49091.xml">
OCR</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
 (Optical Character Recognition), the team simulated situations that scanner manuals claimed resulted in bad OCR. In 2000, <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<educator wordnetid="110045713" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<teacher wordnetid="110694258" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/5648968.xml">
Luis von Ahn</link></scholar>
</teacher>
</causal_agent>
</alumnus>
</associate>
</educator>
</professional>
</scientist>
</adult>
</colleague>
</intellectual>
</person>
</physical_entity>
</peer>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../357/308357.xml">
Manuel Blum</link></scientist>
</person>
 coined the term 'CAPTCHA', improved and publicized the notion, which included any program that can distinguish humans from computers. They invented multiple examples of CAPTCHAs, including the first CAPTCHAs to be widely used, which were those adopted by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../213/188213.xml">
Yahoo!</link></company>
.</p>

</sec>
<sec>
<st>
 Applications </st>
<p>

CAPTCHAs are used to prevent automated software from performing actions which degrade the quality of service of a given system, whether due to abuse or resource expenditure. Although CAPTCHAs are most often deployed as a response to encroachment by commercial interests, the notion that they exist to stop only <link xlink:type="simple" xlink:href="../166/6621166.xml">
spammers</link> is mistaken. CAPTCHAs can be deployed to protect systems vulnerable to <link xlink:type="simple" xlink:href="../847/459847.xml">
e-mail spam</link>, such as the <link xlink:type="simple" xlink:href="../887/75887.xml">
webmail</link> services of <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../005/569005.xml">
Gmail</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../466/15559466.xml">
Hotmail</link></software>
, and <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../788/646788.xml">
Yahoo! Mail</link></web_site>
. CAPTCHAs have also found active use in stopping automated posting to <link xlink:type="simple" xlink:href="../645/33645.xml">
blog</link>s, <link xlink:type="simple" xlink:href="../813/294813.xml">
forums</link> and <link xlink:type="simple" xlink:href="../851/32851.xml">
wikis</link>, whether as a result of <link xlink:type="simple" xlink:href="../830/528830.xml">
commercial promotion</link>, or <link xlink:type="simple" xlink:href="../594/14594.xml">
harassment and vandalism</link>. CAPTCHAs also serve an important function in rate limiting, as automated usage of a service might be desirable until such usage is done in excess, and to the detriment of human users. In such a case, a CAPTCHA can enforce automated usage policies as set by the administrator when certain usage metrics exceed a given threshold.  The article rating systems used by many news web sites are another example of an online facility vulnerable to manipulation by automated software.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>.So it is a defensive mechanism against such spam.</p>

</sec>
<sec>
<st>
 Accessibility </st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../305/1192305.xml">
Web accessibility</link></it>
</indent>
Because CAPTCHAs rely on visual perception, users unable to view a CAPTCHA (for example, due to a disability or because it is difficult to read) will be unable to perform the task protected by a CAPTCHA. As such, sites implementing CAPTCHAs may provide an audio version of the CAPTCHA in addition to the visual method.  The official CAPTCHA site  recommends providing an audio CAPTCHA for accessibility reasons.</p>

<ss1>
<st>
 Attempts at more accessible CAPTCHAs </st>
<p>

Even an audio and visual CAPTCHA will require manual intervention for some users, such as those who are both deaf and blind. There have been various attempts at creating CAPTCHAs that are more accessible. Attempts include the use of JavaScript,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> mathematical questions ("what is 1+1" or even more complex problems like derivatives or polynomial factorization -- also known as a MAPTCHA, or <it>Mathematical CAPTCHA</it>), or "common sense" questions ("what color is the sky"). These attempts violate one or both of the principles of CAPTCHAs: either they cannot be automatically generated or they can be easily cracked given the state of artificial intelligence. As such, the only security these CAPTCHAs provide is <link xlink:type="simple" xlink:href="../087/29087.xml">
security through obscurity</link>; an attacker is unlikely to have encountered the formulation of the CAPTCHA in question, and unlikely to find it worth the time spending resources to break the CAPTCHA of a small site.</p>
<p>

Due to the lack of security provided by text based CAPTCHAs, most sites choose to use an audio and visual CAPTCHA as a way of balancing accessibility and security. Often, email or telephone support is used to manually provide access to users who are unable to solve a CAPTCHA.</p>

</ss1>
</sec>
<sec>
<st>
 Circumvention </st>
<p>

There are a few approaches to defeating CAPTCHAs: exploiting bugs in the implementation that allow the attacker to completely bypass the CAPTCHA, improving character recognition software, or using cheap <link xlink:type="simple" xlink:href="../446/4253446.xml">
human labor</link> to process the tests.</p>

<ss1>
<st>
 Insecure implementation </st>
<p>

Like any security system, design flaws in a system implementation can prevent the theoretical security from being realized. Many CAPTCHA implementations, especially those which have not been designed and reviewed by experts in the fields of security, are prone to common attacks.</p>
<p>

Some CAPTCHA protection systems can be bypassed without using <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../091/49091.xml">
OCR</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
 simply by re-using the <link xlink:type="simple" xlink:href="../076/8513076.xml">
session ID</link> of a known CAPTCHA image. A correctly designed CAPTCHA does not allow multiple solution attempts at one CAPTCHA. This prevents the reuse of a correct CAPTCHA solution or making a second guess after an incorrect OCR attempt.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>. Other CAPTCHA implementations use a hash (such as an <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hash) of the solution as a key passed to the client to validate the CAPTCHA. Often the CAPTCHA is of small enough size that this hash could be cracked.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> Further, the hash could assist an OCR based attempt. A more secure scheme would use an <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../112/17112.xml">
HMAC</link></code>
</written_communication>
. Finally, some implementations use only a small fixed pool of CAPTCHA images. Eventually, when enough CAPTCHA image solutions have been collected by an attacker over a period of time, the CAPTCHA can be broken by simply looking up solutions in a table, based on a hash of the challenge image.</p>

</ss1>
<ss1>
<st>
 Computer character recognition </st>
<p>

A number of research projects have attempted (often with success) to beat visual CAPTCHAs by creating programs that contain the following functionality:</p>
<p>

<list>
<entry level="1" type="number">

<link xlink:type="simple" xlink:href="../836/476836.xml">
Pre-processing</link>: Removal of background clutter and noise.</entry>
<entry level="1" type="number">

<link xlink:type="simple" xlink:href="../717/505717.xml">
Segmentation</link>: Splitting the image into regions which each contain a single character.</entry>
<entry level="1" type="number">

Classification: Identifying the character in each region.</entry>
</list>
</p>
<p>

Steps 1 and 3 are easy tasks for computers <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> The only step where humans still outperform computers is segmentation. If the background clutter consists of shapes similar to letter shapes, and the letters are connected by this clutter, the segmentation becomes nearly impossible with current software. Hence, an effective CAPTCHA should focus on the segmentation.</p>
<p>

Several research projects have broken real world CAPTCHAs, including one of Yahoo's early CAPTCHAs called "EZ-Gimpy"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> and the CAPTCHA used by popular sites such as Paypal <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>, LiveJournal, phpBB, and other open source solutions <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>.
In January 2008 Network Security Research released their program for automated Yahoo! CAPTCHA recognition.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref>  <link xlink:type="simple" xlink:href="../466/15559466.xml">
Windows Live Hotmail</link> and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../005/569005.xml">
Gmail</link></software>
, the other two major free email providers, were cracked shortly after.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></p>
<p>

In February 2008 it was reported that spammers had achieved a success rate of 30% to 35%, using a bot, in responding to CAPTCHAs for Microsoft's Live Mail service <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref> and a success rate of 20% against Google's Gmail CAPTCHA.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref>  A Newcastle University research team has defeated the segmentation part of Microsoft's CAPTCHA with a 90% success rate, and claim that this could lead to a complete crack with a greater than 60% rate.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>

</ss1>
<ss1>
<st>
 Human solvers </st>
<p>

CAPTCHA is vulnerable to a <link xlink:type="simple" xlink:href="../207/5376207.xml">
relay attack</link> that uses humans to solve the puzzles. One approach involves relaying the puzzles to a group of human operators who can solve CAPTCHAs. In this scheme, a computer fills out a form and when it reaches a CAPTCHA, it gives the CAPTCHA to the human operator to solve.</p>
<p>

Another variation of this technique involves copying the CAPTCHA images and using them as CAPTCHAs for a high-traffic site owned by the attacker. With enough traffic, the attacker can get a solution to the CAPTCHA puzzle in time to relay it back to the target site.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref> In October 2007, a piece of malware appeared <link>
in the wild</link> which enticed users to solve CAPTCHAs in order to see progressively further into a series of <link xlink:type="simple" xlink:href="../309/47309.xml">
striptease</link> images.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref></p>

</ss1>
<ss1>
<st>
 Legality </st>
<p>

The circumvention of CAPTCHAs may violate the anti-circumvention clause of the <legislation wordnetid="106535222" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../271/19596271.xml">
Digital Millennium Copyright Act</link></legislation>
 (DMCA) in the <body wordnetid="107965085" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<colony wordnetid="108374049" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../750/3434750.xml">
United States</link></democracy>
</group>
</political_unit>
</state>
</colony>
</political_orientation>
</social_group>
</body>
. In 2007, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../768/545768.xml">
Ticketmaster</link></company>
 sued software maker RMG Technologies<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2224%22])">24</ref> for its product which circumvented the ticket seller's CAPTCHAs on the basis that it violates the anti-circumvention clause of the DMCA. In October 2007, an <link xlink:type="simple" xlink:href="../343/39343.xml">
injunction</link> was issued stating that Ticketmaster would likely succeed in making its case.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2225%22])">25</ref>  In June 2008, Ticketmaster filed for Default Judgment against RMG.  The Court granted Ticketmaster the Default and entered an $18.2M judgment in favor of Ticketmaster.</p>

</ss1>
</sec>
<sec>
<st>
 Image-recognition CAPTCHAs </st>
<p>

Some researchers promote image recognition CAPTCHAs as a possible alternative for text based CAPTCHAs.
To date, no major website has made use of an image based CAPTCHA. However, many amateur users of the <link xlink:type="simple" xlink:href="../971/247971.xml">
phpBB</link> forum software (which has suffered greatly from spam) have implemented an <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> image recognition CAPTCHA system in the form of an addon called KittenAuth<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2226%22])">26</ref> which in its default form presents a question requiring the user to select a stated type of animal from an array of thumbnail images of assorted animals. The images (and the challenge questions) can be customized, for example to present questions and images which would be easily answered by the forum's target userbase. Furthermore, for a time, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../589/19658589.xml">
RapidShare</link></company>
 free users had to get past a CAPTCHA where you had to only enter letters attached to a cat, while others were attached to dogs. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2227%22])">27</ref> This was later removed because users had trouble entering the correct letters.</p>
<p>

Image recognition CAPTCHAs face many potential problems which have not been fully studied.</p>
<p>

It is difficult for a small site to acquire a large dictionary of images which an attacker does not have access to and without a means of automatically acquiring new labelled images, an image based challenge does not meet the definition of a CAPTCHA. KittenAuth, by default, only had 42 images in its database.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2226%22])">26</ref> Microsoft's "Asirra", which it is providing as a free web service, attempts to address this by means of Microsoft Research's partnership with <link xlink:type="simple" xlink:href="../902/4638902.xml">
Petfinder.com</link>, which has provided it with more than three million images of cats and dogs, classified by people at thousands of US animal shelters.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2228%22])">28</ref></p>
<p>

Human solvers are a potential weakness for strategies such as Asirra.  If the database of cat and dog photos can be downloaded, then paying workers $0.01 to classify each photo as either a dog or a cat means that almost the entire database of photos can be deciphered for $30,000.  Photos that are subsequently added to the Asirra database are then a relatively small data set that can be classified as they first appear. Causing minor changes to images each time they appear will not prevent a computer from recognizing a repeated image as there are robust image comparator functions (e.g., <link>
image hashes</link>, <link xlink:type="simple" xlink:href="../813/474813.xml">
color histogram</link>s) that are insensitive to many simple image distortions. Warping an image sufficiently to fool a computer will likely also be troublesome to a human.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2229%22])">29</ref></p>
<p>

Another potential weakness is that only a yes/no answer for each picture is required by most designs. Even with sixteen images, a bot has a 1 in 65536 (216) chance of getting the captcha right purely by chance. Furthermore, such chance identifications can be used to accumulate knowledge about the correct identification of the images, allowing the bot to progressively improve the accuracy of its guesses over time. In order for the CAPTCHA to be resistant to such chance-guessing <link xlink:type="simple" xlink:href="../268/636268.xml">
botnet</link> attacks, the user would need to be forced to solve an annoyingly large number of images.</p>
<p>

Microsoft Asirra has mitigated all these weaknesses. The image database is not downloadable as it includes images of already adopted pets, which is 10 times the size of pets for adoption. Bot guessing is solved by creating both IP address and session based buckets&nbsp;— once an IP address has misclassified a challenge, a human needs to solve just two Asirras in a row from the same browser session reducing brute force probability to less than 1 in 5 million.</p>

</sec>
<sec>
<st>
 3D CAPTCHA </st>
<p>

<process wordnetid="100029677" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<phenomenon wordnetid="100034213" confidence="0.8">
<consequence wordnetid="111410625" confidence="0.8">
<link xlink:type="simple" xlink:href="../073/10175073.xml">
3D computer graphics</link></consequence>
</phenomenon>
</physical_entity>
</process>
 can be used to automatically juxtapose several objects in a single, visually-complex scene, with parts of those objects marked with different letters of the alphabet.  The user will be asked to type the alphanumeric character that overlies a particular feature.  This process can automatically generate an effectively infinite number of image-recognition CAPTCHA.</p>
<p>

Designing a <link xlink:type="simple" xlink:href="../596/6596.xml">
computer vision</link> program that can recognize the objects within the 3-D CAPTCHA images is intrinsically difficult.  In addition, a compromised object will be automatically identified by the sudden influx of responses that correctly name the compromised object while incorrectly naming the other objects.  The object will be automatically and instantly removed from the library and replaced with a new item.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2230%22])">30</ref></p>
<p>

Conventional text based CAPTCHA can often be decoded by paid human solvers in as little as six seconds.  Identifying multiple separate objects within a 3-D CAPTCHA will likely prove to be considerably more time consuming; as a result the costs associated with employing human solvers might increase substantially.</p>
<p>

The instructions that accompany the 3-D CAPTCHA image are bound by language dependency.  Any entity deploying the 3-D CAPTCHA will need to select the language to be used for the instructions that will accompany the image.</p>

</sec>
<sec>
<st>
 Collateral benefits </st>
<p>

Some of the original inventors of the CAPTCHA system have implemented a means by which some of the effort and time spent by people who are responding to challenges can be harnessed as a distributed work system.  This system, called <link xlink:type="simple" xlink:href="../897/11451897.xml">
reCAPTCHA</link>, works by including "solved" and "unrecognized" elements (images which were not successfully recognized via <link xlink:type="simple" xlink:href="../091/49091.xml">
OCR</link>) in each challenge.  The respondent thus answers both elements and roughly half of his or her effort validates the challenge while the other half is captured as work..</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../061/11383061.xml">
Image spam</link>, where spammers exploit the inability of computers to read to avoid junkmail filtering</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/363890.xml">
One-way function</link></primitive>
</causal_agent>
</person>
</physical_entity>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>


<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.cs.sfu.ca/~mori/research/gimpy/">
Breaking a Visual CAPTCHA</weblink></entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://www.time.com/time/magazine/article/0,9171,1812084,00.html">
Computer Literacy Tests: Are You Human?</weblink>", <magazine wordnetid="106595351" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../600/31600.xml">
Time (magazine)</link></magazine>
.&#32;Retrieved on <link>
2008-06-12</link>.&nbsp;"The Carnegie Mellon team came back with the CAPTCHA. (It stands for "completely automated public Turing test to tell computers and humans apart"; no, the acronym doesn't really fit.) The point of the CAPTCHA is that reading those swirly letters is something that computers aren't very good at."&nbsp;</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://tarr.uspto.gov/servlet/tarr?regser=serial&amp;entry=78500434">
Latest Status of CAPTCHA Trademark Application</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://www.captcha.net/">
reCAPTCHA homepage</weblink></entry>
<entry id="5">
Moni Naor&#32;(July, 1996).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~naor/PAPERS/human.ps">
Verification of a human in the loop or Identification via the Turing Test</weblink></it>"&#32;(PS). &#32;Retrieved on <link>
2008-07-06</link>.</entry>
<entry id="6">
 <cite style="font-style:normal">Amrinder Arora&#32;(2007).&#32;"<weblink xlink:type="simple" xlink:href="http://paper.ijcsns.org/07_book/200703/20070348.pdf">
Statistics Hacking&nbsp;— Exploiting Vulnerabilities in News Websites</weblink>"&#32;(PDF). <it>International Journal of Computer Science and Network Security</it>&#32;<b>7</b>: 342–347.</cite>&nbsp;</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.protectwebform.com/smartcaptcha">
Smart Captcha - Protect Web Form .COM</weblink></entry>
<entry id="8">
"<weblink xlink:type="simple" xlink:href="http://www.puremango.co.uk/cm_breaking_captcha_115.php">
Breaking CAPTCHAs Without Using OCR</weblink>".&#32;<it>Howard Yeend (pureMango.co.uk)</it>&#32;(2005).&#32;Retrieved on <link>
2006-08-22</link>.</entry>
<entry id="9">
"<weblink xlink:type="simple" xlink:href="http://milw0rm.com/cracker/list.php">
Online services allow MD5 hashes to be cracked</weblink>".&#32;Retrieved on <link>
2007-01-04</link>.</entry>
<entry id="10">
Kumar Chellapilla, Kevin Larson, Patrice Simard, Mary Czerwinski&#32;(2005).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.ceas.cc/papers-2005/160.pdf">
Computers beat Humans at Single Character Recognition in Reading based Human Interaction Proofs (HIPs)</weblink></it>"&#32;(PDF). &#32;<physical_entity wordnetid="100001930" confidence="0.8">
<military_unit wordnetid="108198398" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<division wordnetid="108213205" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<army_unit wordnetid="108190754" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../522/2163522.xml">
Microsoft Research</link></research_worker>
</army_unit>
</scientist>
</causal_agent>
</division>
</person>
</military_unit>
</physical_entity>
.&#32;Retrieved on <link>
2006-08-02</link>.</entry>
<entry id="11">
<weblink xlink:type="simple" xlink:href="http://www.kloover.com/2008/05/12/breaking-the-paypalcom-captcha/">
Breaking the PayPal CAPTCHA</weblink></entry>
<entry id="12">
<weblink xlink:type="simple" xlink:href="http://www.kloover.com/2008/02/28/breaking-the-asp-security-image-generator/">
Breaking ASP Security Image Generator</weblink></entry>
<entry id="13">
<weblink xlink:type="simple" xlink:href="http://sam.zoy.org/pwntcha/">
PWNtcha - captcha decoder</weblink></entry>
<entry id="14">
<weblink xlink:type="simple" xlink:href="http://www.captcha.ru/en/breakings/">
Examples of breakings - CAPTCHA.ru</weblink></entry>
<entry id="15">
<weblink xlink:type="simple" xlink:href="http://network-security-research.blogspot.com/">
Network Security Research and AI</weblink></entry>
<entry id="17">
Dawson&#32;(<link>
2008-02-26</link>).&#32;"<weblink xlink:type="simple" xlink:href="http://it.slashdot.org/article.pl?sid=08/02/27/0045242">
Gmail CAPTCHA Cracked</weblink>", <it><web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../715/26715.xml">
Slashdot</link></web_site>
</it>, <link xlink:type="simple" xlink:href="../227/52227.xml">
SourceForge</link>.&#32;Retrieved on <link>
2008-04-16</link>.&nbsp;</entry>
<entry id="16">
Dawson&#32;(<link>
2008-04-15</link>).&#32;"<weblink xlink:type="simple" xlink:href="http://tech.slashdot.org/article.pl?sid=08/04/15/1941236&amp;from=rss">
Windows Live Hotmail CAPTCHA Cracked, Exploited</weblink>", <it><web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../715/26715.xml">
Slashdot</link></web_site>
</it>, <link xlink:type="simple" xlink:href="../227/52227.xml">
SourceForge</link>.&#32;Retrieved on <link>
2008-04-16</link>.&nbsp;</entry>
<entry id="19">
<weblink xlink:type="simple" xlink:href="http://www.websense.com/securitylabs/blog/blog.php?BlogID=174">
Websense® - Blog: Google’s CAPTCHA busted in recent spammer tactics</weblink></entry>
<entry id="18">
Gregg Keizer, <weblink xlink:type="simple" xlink:href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;articleId=9061558">
"Spammers' bot cracks Microsoft's CAPTCHA: Bot beats Windows Live Mail's registration test 30% to 35% of the time, says Websense"</weblink>, <it>Computerworld"', February 7, 2008</it></entry>
<entry id="21">
<blogger wordnetid="109860415" confidence="0.9173553029164789">
<person wordnetid="100007846" confidence="0.9508927676800064">
<writer wordnetid="110794014" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../477/220477.xml">
Doctorow, Cory</link></writer>
</person>
</blogger>
&#32;(2004-01-27).&#32;"<weblink xlink:type="simple" xlink:href="http://www.boingboing.net/2004/01/27/solving_and_creating.html">
Solving and creating CAPTCHAs with free porn</weblink>".&#32;<it>Boing Boing</it>.&#32;Retrieved on <link>
2006-08-22</link>.</entry>
<entry id="20">
<weblink xlink:type="simple" xlink:href="http://homepages.cs.ncl.ac.uk/jeff.yan/msn_draft.pdf">
A Low-cost Attack on a Microsoft CAPTCHA</weblink></entry>
<entry id="23">
<weblink xlink:type="simple" xlink:href="http://www.pcmag.com/article2/0,2704,2210674,00.asp">
PC Magazine:  Striptease Used to Recruit Help in Cracking Sites</weblink></entry>
<entry id="22">
<weblink xlink:type="simple" xlink:href="http://ap.google.com/article/ALeqM5jnNrQKxFzt7mPu3DZcP7_UWr8UfwD8SKE6Q80">
AP: Scams Use Striptease to Break Web Traps</weblink>&#91;&#93;</entry>
<entry id="25">
"<weblink xlink:type="simple" xlink:href="http://www.scribd.com/doc/404395/ticketmaster-v-rmg">
TicketMaster v. RMG</weblink>".</entry>
<entry id="24">
Ulanoff, Lance&#32;(<link xlink:type="simple" xlink:href="../437/22437.xml">
October 31</link>, <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link>).&#32;"<weblink xlink:type="simple" xlink:href="http://www.pcmag.com/article2/0,2704,2209782,00.asp">
Deep-Sixing CAPTCHA</weblink>".&#32;<it>PC Magazine</it>.&#32;  Ziff Davis Media.&#32;Retrieved on <link>
2007-12-12</link>.</entry>
<entry id="27">
<weblink xlink:type="simple" xlink:href="http://www.randomwire.com/2008/06/04/attached-to-a-captcha/">
Attached to a Cat - Crazy CAPTCHA</weblink></entry>
<entry id="26">
<weblink xlink:type="simple" xlink:href="http://www.thepcspy.com/articles/security/the_cutest_humantest_kittenauth">
The Cutest Human-Test: KittenAuth</weblink> from ThePCSpy.com </entry>
<entry id="29">
<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/asirra/papers/CCS2007.pdf">
Asirra: A CAPTCHA that Exploits Interest-Aligned Manual Image Categorization</weblink> from <physical_entity wordnetid="100001930" confidence="0.8">
<military_unit wordnetid="108198398" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<division wordnetid="108213205" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<army_unit wordnetid="108190754" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../522/2163522.xml">
Microsoft Research</link></research_worker>
</army_unit>
</scientist>
</causal_agent>
</division>
</person>
</military_unit>
</physical_entity>
 (<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link></format>
</language>
</information>
</message>
)</entry>
<entry id="28">
<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/asirra/">
Asirra</weblink> from <physical_entity wordnetid="100001930" confidence="0.8">
<military_unit wordnetid="108198398" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<division wordnetid="108213205" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<army_unit wordnetid="108190754" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../522/2163522.xml">
Microsoft Research</link></research_worker>
</army_unit>
</scientist>
</causal_agent>
</division>
</person>
</military_unit>
</physical_entity>
 (<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link></format>
</language>
</information>
</message>
)</entry>
<entry id="30">
<weblink xlink:type="simple" xlink:href="http://spamfizzle.com/CAPTCHA.aspx">
The 3-D CAPTCHA</weblink> from SpamFizzle.com</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dmoz.org/Computers/Internet/Abuse/CAPTCHA/">
CAPTCHA</weblink> at the <work wordnetid="100575741" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<company wordnetid="108058098" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<property wordnetid="113244109" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<subsidiary_company wordnetid="108003935" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/18949501.xml">
Open Directory Project</link></institution>
</subsidiary_company>
</activity>
</psychological_feature>
</act>
</property>
</undertaking>
</company>
</event>
</possession>
</work>
</entry>
</list>
</p>


</sec>
</bdy>
</coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
</article>
