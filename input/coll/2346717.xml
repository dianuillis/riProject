<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:31:17[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<system  confidence="0.8" wordnetid="104377057">
<artifact  confidence="0.8" wordnetid="100021939">
<instrumentality  confidence="0.8" wordnetid="103575240">
<header>
<title>Volume (computing)</title>
<id>2346717</id>
<revision>
<id>221283642</id>
<timestamp>2008-06-23T21:12:22Z</timestamp>
<contributor>
<username>Jimmi Hugh</username>
<id>3829114</id>
</contributor>
</revision>
<categories>
<category>Disk file systems</category>
</categories>
</header>
<bdy>

In the context of computer <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s, <b>volume</b> is the term used to describe a single accessible storage area with a single <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>, typically (though not necessarily) resident on a single <link xlink:type="simple" xlink:href="../380/55380.xml">
partition</link> of a <link xlink:type="simple" xlink:href="../777/13777.xml">
hard disk</link>. Similarly, it refers to the logical interface used by an operating system to access data stored on some media using a single instance of a filesystem. "Volume" can be used in place of the term "drive" where it is desirable to indicate that the entity in question is not a physical disk drive, but rather the corporate data stored using a filesystem there. "Logical drive" and "volume" should be considered synonymous, however "volume" and "<link xlink:type="simple" xlink:href="../380/55380.xml">
partition</link>" are not synonymous. In <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 systems, volumes are usually handled by the <link xlink:type="simple" xlink:href="../532/2273532.xml">
Logical Volume Manager</link> or the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../874/4525874.xml">
Enterprise Volume Management System</link></software>
 and manipulated using <weblink xlink:type="simple" xlink:href="http://www.netadmintools.com/html/8mount.man.html">
mount(8)</weblink>. The term is also used in <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
NT</link></family>
-based versions of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, where they are handled by the kernel and managed using the Disk Management <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../273/4057273.xml">
MMC snap-in</link></part>
</component>
</concept>
</idea>
.
<sec>
<st>
 Differences between volume and partition </st>
<p>

A volume is not the same thing as a partition. For example, a <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link> might be accessible as a volume, even though it does not contain a partition, as floppy disks cannot be partitioned with most modern computer hardware. Also, an OS can recognize a partition without recognizing any volume associated with it, as when the OS cannot interpret the filesystem stored there. This situation occurs, for example, with Windows NT-based OSes and most non-<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 OS partitions, such as with the <link xlink:type="simple" xlink:href="../195/39195.xml">
ext3</link> filesystem commonly used with <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
. Another example occurs in the <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> world with the "Extended Partition". While these are partitions, they cannot contain a filesystem directly. Instead, "logical drives" (aka volumes) must be created within them. This is also the case with NetWare volumes residing inside of a single partition. In short, volumes exist at the logical OS level, and partitions exist at the physical, media specific level. Some times there is a one-to-one correspondence, but it is not guaranteed to be true.</p>
<p>

It isn't uncommon to see a volume packed into a single file. Examples include ISO9660 disc images (CD/DVD images, commonly called "ISOs"), and installer volumes for Mac OS X (DMGs). As these volumes are files which reside within another volume, they certainly <it>aren't</it> partitions.</p>

<ss1>
<st>
 Example </st>
<p>

This example concerns a <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
 system with two physical hard disks. The first hard disk has two partitions, the second has only one. The first partition of the first hard disk contains the operating system. Mount points have been left at defaults.</p>
<p>

<table class="wikitable">
<header>
Physical Disk</header>
<header>
Partition</header>
<header>
Filesystem</header>
<header>
Drive Letter</header>
<row>
<col>
Hard Disk 1</col>
<col>
Partition 1</col>
<col>
NTFS</col>
<col>
C:</col>
</row>
<row>

<col>
Partition 2</col>
<col>
FAT32</col>
<col>
D:</col>
</row>
<row>
<col>
Hard Disk 2</col>
<col>
Partition 1</col>
<col>
FAT32</col>
<col>
E:</col>
</row>
</table>
</p>
<p>

In this example, 
<list>
<entry level="1" type="bullet">

 "C:", "D:", and "E:" are volumes.</entry>
<entry level="1" type="bullet">

 Hard Disk 1 and Hard Disk 2 are physical disks.</entry>
<entry level="1" type="bullet">

 Any of these can be called a "drive".</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 Nomenclature of volumes </st>

<ss1>
<st>
 Windows-NT based operating systems </st>
<p>

It is important to note that Windows NT-based OSes do not have a single root directory. As a result, Windows will assign at least one path to each mounted volume, which will take one of two forms:
<list>
<entry level="1" type="bullet">

 A drive letter, in the form of a single letter followed by a colon, such as "F:"</entry>
<entry level="1" type="bullet">

 A mount-point on an <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../184/39184.xml">
NTFS</link></instrumentality>
</artifact>
</system>
 volume having a drive letter, such as "C:\Music"</entry>
</list>
</p>
<p>

In these two examples, a file called "Track 1.mp3" stored in the root directory of the mounted volume could be referred to as "F:\Track 1.mp3" or "C:\Music\Track 1.mp3" respectively. </p>
<p>

In order to assign a mount point for a volume as a path within another volume, the following criteria must be met:
<list>
<entry level="1" type="bullet">

 The volume must be formatted NTFS.</entry>
<entry level="1" type="bullet">

 A folder must exist at the root path. (As of Windows Vista, it can be any subfolder in a volume)</entry>
<entry level="1" type="bullet">

 That folder must be empty.</entry>
</list>
</p>
<p>

By default, Windows will assign drive letters to all drives, as follows:
<list>
<entry level="1" type="bullet">

 "A:" and "B:" to floppy disk drives, present or not</entry>
<entry level="1" type="bullet">

 "C:" and subsequent letters, as needed, to:</entry>
<entry level="2" type="bullet">

 Hard disks</entry>
<entry level="2" type="bullet">

 Removable disks, including optical media (e.g. CDs and DVDs)</entry>
</list>
</p>
<p>

Because of this convention, the operating system startup drive is most commonly called "C:". This is not always the case. </p>
<p>

On Windows XP, mount points may be managed through the Disk Management snap-in for the Microsoft Management Console. This can be most conveniently accessed through "Computer Management" in the "Administrative Tools" section of the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../714/1615714.xml">
Control Panel (Windows)</link></software>
.</p>
<p>

More than one drive letter can refer to a single volume, as when using the <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/subst.mspx">
SUBST</weblink> command.</p>
<p>

<b>Warning:</b> removing drive letters or mount-points for a drive may break some programs, as some files may not be accessible under the known path. For example, if a program is installed at "D:\Program Files\Some Program", it may expect to find its data files at "D:\Program Files\Some Program\Data". If the logical disk previously called "D:" has its drive letter changed to "E:", "Some Program" won't be able to find its data at "D:\Program Files\Some Program\Data", since the drive letter "D:" no longer represents that volume.</p>

</ss1>
<ss1>
<st>
 Unix-like operating systems </st>
<p>

In <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 operating systems, volumes other than the boot volume have a mount-point somewhere within the filesystem, represented by a path. Logically, the directory tree stored on the volume is grafted in at the mountpoint. By convention, mount-points will often be placed in a directory called '/mnt', though '/media' and other terms are sometimes used. </p>
<p>

Like in Windows, to use a given path as a mount-point for another volume, an empty directory (sometimes called a folder) must exist there.</p>
<p>

Unix-like operating systems use the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../987/5176987.xml">
mount</link></instrumentality>
</artifact>
</system>
 command to manipulate mount points for volumes. </p>
<p>

For example, if a CD-ROM drive containing a text file called 'info.txt' was mounted at '/mnt/iso9660', the text file would be accessible at '/mnt/iso9660/info.txt'.</p>

</ss1>
</sec>
<sec>
<st>
 Benefits of keeping files within one volume </st>

<ss1>
<st>
 Speed of data management </st>
<p>

Files within a volume can generally be moved to any other place within that volume by manipulating the filesystem, without moving the actual data. However, if a file is to be moved outside the volume, the data itself must be relocated, which is a much more expensive operation. </p>
<p>

In order to better visualize this concept, one might consider the example of a large library. If a non-fiction work is originally classified as having the subject "plants", but then has to be moved to the subject "flora", one does not need to refile the book, whose position on the shelf would be static, but rather, one needs only to replace the <link xlink:type="simple" xlink:href="../324/1631324.xml">
index card</link>. However, to move the book to another library, adjusting index cards alone is insufficient. The entire book must be moved.</p>

</ss1>
<ss1>
<st>
 Special functions of advanced filesystems and volumes </st>
<p>

Some filesystems, such as Microsoft's NTFS filesystem, and <link xlink:type="simple" xlink:href="../195/39195.xml">
ext3</link>, allow multiple pseudonyms (known as "<link xlink:type="simple" xlink:href="../957/496957.xml">
hard link</link>s") to be created for a single file within the same volume.  Hard links allow a file to be referenced by two separate filenames, without its data being stored in two places on the disk (and thereby consuming twice as much space). Hard links cannot be created for files between volumes; this is comparable to moving the file in the library example above. To return to the library analogy, this is like filing two index cards for the same book: one could file the above book under both 'flora' and 'plants'. In general, deleting one hard link does not immediately effect other hard links, while deleting the final hard link for a file frees the disk space occupied by that file. However, modifying the data of the file referred to by one hard link will impact all other hard links as well. In the library, this is comparable to writing in the book. Hard links should not be confused with aliases (Mac OS), <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<link xlink:type="simple" xlink:href="../875/2020875.xml">
shortcuts</link></framework>
</format>
</supporting_structure>
</window>
</artifact>
</structure>
</information>
</message>
 (Windows), or <link xlink:type="simple" xlink:href="../473/180473.xml">
soft link</link>s (Unix and variants), which can refer to files on another volume in some cases. <link xlink:type="simple" xlink:href="../045/53045.xml">
FAT</link> filesystems, such as FAT32, do not support hard or soft links as such, although the Windows operating system supports 'links', which are somewhat less capable.</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>
 
<list>
<entry level="1" type="bullet">

 MSDN's article on <weblink xlink:type="simple" xlink:href="http://msdn.microsoft.com/en-us/library/aa365006.aspx">
Hard Links and Junctions</weblink></entry>
</list>
</p>


</sec>
</bdy>
</instrumentality>
</artifact>
</system>
</article>
