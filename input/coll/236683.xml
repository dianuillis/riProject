<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:36:41[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Amortized analysis</title>
<id>236683</id>
<revision>
<id>234090671</id>
<timestamp>2008-08-25T06:59:27Z</timestamp>
<contributor>
<username>Pierre de Lyon</username>
<id>1117388</id>
</contributor>
</revision>
<categories>
<category>Analysis of algorithms</category>
</categories>
</header>
<bdy>

For other uses of the term "Amortization", see <link xlink:type="simple" xlink:href="../322/265322.xml">
Amortization</link>.
In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, especially <link xlink:type="simple" xlink:href="../ury/23rd_century.xml">
analysis of algorithms</link>, <b>amortized analysis</b> refers to finding the average running time per operation over a <link xlink:type="simple" xlink:href="../956/37956.xml">
worst-case</link> <it>sequence</it> of operations.  Amortized analysis differs from <link xlink:type="simple" xlink:href="../956/37956.xml">
average-case performance</link> in that <link xlink:type="simple" xlink:href="../934/22934.xml">
probability</link> is not involved; amortized analysis guarantees the time per operation over worst-case performance.<p>

The method requires knowledge of which series of operations are possible. This is most commonly the case with <link xlink:type="simple" xlink:href="../519/8519.xml">
data structure</link>s, which have <link xlink:type="simple" xlink:href="../512/285512.xml">
state</link> that persists between operations. The basic idea is that a worst case operation can alter the state in such a way that the worst case cannot occur again for a long time, thus "amortizing" its cost.</p>
<p>

As a simple example, in a specific implementation of the <link xlink:type="simple" xlink:href="../434/1456434.xml">
dynamic array</link>, we double the size of the array each time it fills up. Because of this, array reallocation may be required, and in the worst case an insertion may require <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(<it>n</it>). However, a <it>sequence</it> of <it>n</it> insertions can always be done in O(<it>n</it>) time, so the <it>amortized</it> time per operation is O(<it>n</it>) / <it>n</it> = O(1).</p>
<p>

Notice that <link xlink:type="simple" xlink:href="../889/15383889.xml">
average-case analysis</link> and <link xlink:type="simple" xlink:href="../889/15383889.xml">
probabilistic analysis</link> are not the same thing as amortized analysis. In average-case analysis, we are averaging over all possible inputs; in probabilistic analysis, we are averaging over all possible random choices; in amortized analysis, we are averaging over a sequence of operations. Amortized analysis assumes worst-case input and typically does not allow random choices.</p>
<p>

There are several techniques used in amortized analysis:</p>
<p>

<list>
<entry level="1" type="bullet">

Aggregate analysis determines the upper bound <it>T</it>(<it>n</it>) on the total cost of a sequence of <it>n</it> operations, then calculates the average cost to be <it>T</it>(<it>n</it>) / <it>n</it>.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../019/1124019.xml">
Accounting method</link> determines the individual cost of each operation, combining its immediate execution time and its influence on the running time of future operations. Usually, many short-running operations accumulate a "debt" of unfavorable state in small increments, while rare long-running operations decrease it drastically.  </entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../300/5870300.xml">
Potential method</link> is like the accounting method, but overcharges operations early to compensate for undercharges later.</entry>
</list>
</p>

<sec>
<st>
 Common use </st>
<p>
 
<list>
<entry level="1" type="bullet">

 In common usage, an "amortized algorithm" is one that an amortized analysis has shown to perform well.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../716/22716.xml">
Online algorithms</link> commonly use amortized analysis.</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book"><physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../449/2815449.xml">
Allan Borodin</link></associate>
</scholar>
</scientist>
</causal_agent>
</alumnus>
</colleague>
</intellectual>
</person>
</peer>
</physical_entity>
 and Ran El-Yaniv&#32;(1998). <weblink xlink:type="simple" xlink:href="http://www.cs.technion.ac.il/~rani/book.html">
Online Computation and Competitive Analysis</weblink>.&#32;Cambridge University Press,&#32;20,141.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Chapter 17: Amortized Analysis, pp.405&ndash;430.</entry>
</list>
</p>



</sec>
</bdy>
</article>
