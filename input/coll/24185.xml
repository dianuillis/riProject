<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:32:44[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<subject  confidence="0.8" wordnetid="106599788">
<header>
<title>Pseudocode</title>
<id>24185</id>
<revision>
<id>243835392</id>
<timestamp>2008-10-08T06:54:45Z</timestamp>
<contributor>
<username>LeaveSleaves</username>
<id>3431267</id>
</contributor>
</revision>
<categories>
<category>Source code</category>
<category>Articles with example pseudocode</category>
<category>Algorithms</category>
<category>Articles with example PHP code</category>
<category>Programming language topics</category>
</categories>
</header>
<bdy>

<b>Pseudocode</b> is a compact and informal high-level description of a <link xlink:type="simple" xlink:href="../311/5311.xml">
computer programming</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> that uses the structural conventions of some <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>, but is intended for human reading rather than machine reading. Pseudo-code typically omits details that are not essential for human understanding of the algorithm, such as <link xlink:type="simple" xlink:href="../406/4329406.xml">
variable declaration</link>s, system-specific code and <link xlink:type="simple" xlink:href="../988/40988.xml">
subroutines</link>. The programming language is augmented with <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link> descriptions of the details, where convenient, or with compact mathematical notation. The purpose of using pseudocode is that it may be easier for humans to understand than conventional programming language code, and that it may be a compact and environment-independent description of the key principles of an algorithm. It is commonly used in textbooks and scientific publications that are documenting various algorithms, and also in planning of computer program development, for sketching out the structure of the program before the actual coding takes place. <p>

No standard for pseudocode syntax exists, as a program in pseudocode is not an executable program. Pseudocode resembles, but should not be confused with, <message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/954216.xml">
skeleton programs</link></subject>
</message>
 including <link xlink:type="simple" xlink:href="../739/4719739.xml">
dummy code</link>, which can be <link xlink:type="simple" xlink:href="../739/5739.xml">
compiled</link> without errors. <link xlink:type="simple" xlink:href="../453/527453.xml">
Flowchart</link>s can be thought of as a graphical alternative to pseudocode. </p>

<sec>
<st>
Application</st>
<p>

Textbooks and <link xlink:type="simple" xlink:href="../618/406618.xml">
scientific publication</link>s related to <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> and <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical computation</link> often use pseudocode in description of algorithms, so that all programmers can understand them, even if they do not all know the same programming languages. In textbooks, there is usually an accompanying introduction explaining the particular conventions in use. The level of detail of such languages may in some cases approach that of formalized general-purpose languages &mdash; for example, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Knuth</link></scientist>
</person>
's seminal textbook <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../358/31358.xml">
The Art of Computer Programming</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it> describes algorithms in a fully-specified <link xlink:type="simple" xlink:href="../368/1368.xml">
assembly language</link> for a non-existent <link xlink:type="simple" xlink:href="../553/19553.xml">
microprocessor</link>.</p>
<p>

A <link xlink:type="simple" xlink:href="../716/23716.xml">
programmer</link> who needs to implement a specific algorithm, especially an unfamiliar one, will often start with a pseudocode description, and then simply "translate" that description into the target programming language and modify it to interact correctly with the rest of the program. Programmers may also start a project by sketching out the code in pseudocode on paper before writing it in its actual language, as a <link xlink:type="simple" xlink:href="../635/45635.xml">
top-down</link> structuring approach.</p>

</sec>
<sec>
<st>
Syntax</st>
<p>

As the name suggests, pseudocode generally does not actually obey the <link xlink:type="simple" xlink:href="../860/26860.xml">
syntax</link> rules of any particular language; there is no systematic standard form, although any particular writer will generally borrow style and syntax for example control structures from some conventional programming language. Popular syntax sources include <link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link>, <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
 Java</link></request>
</message>
, <link xlink:type="simple" xlink:href="../016/18016.xml">
Lisp</link>, and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../453/1453.xml">
ALGOL</link></programming_language>
. Variable declarations are typically omitted. Function calls and blocks of code, for example code contained within a loop, is often replaced by a one-line natural language sentence. </p>
<p>

Depending on the writer, pseudocode may therefore vary widely in style, from a near-exact imitation of a real programming language at one extreme, to a description approaching formatted prose at the other.</p>

</sec>
<sec>
<st>
Examples of pseudocode</st>
<p>

An example of how pseudocode differs from regular code is below.</p>
<p>

<table>
<row>
<col>
Regular code (written in <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/24131.xml">
PHP</link></writer>
</language>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
):<p>

?php
if (is_valid($cc_number)) {
execute_transaction($cc_number, $order);
} else {
show_failure();
}
?&amp;gt;</p>
</col>
<col>
<b>Pseudocode:</b>
<b>if</b> credit card number is valid <b>then</b>
execute transaction based on number and order
<b>else</b>
show a generic failure message
<b>end if</b></col>
</row>
</table>
</p>
<p>

The pseudocode of the <link xlink:type="simple" xlink:href="../834/13834.xml">
Hello world program</link> is particularly simple:</p>

<p>

<b>output</b>: Hello World</p>

</sec>
<sec>
<st>
Mathematical style pseudocode</st>
<p>

In <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical computation</link>, pseudocode often consists of <link xlink:type="simple" xlink:href="../184/277184.xml">
mathematical notation</link>, typically from <link xlink:type="simple" xlink:href="../553/27553.xml">
set</link> and <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> theory, mixed with the control structures of a conventional programming language, and perhaps also <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link> descriptions. This is a compact and often informal notation that can be understood by a wide range of mathematically trained people, and is frequently used as a way to describe mathematical <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s.</p>
<p>

Normally non-<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<representation wordnetid="105926676" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../586/586.xml">
ASCII</link></rule>
</direction>
</representation>
</protocol>
</message>
 <link xlink:type="simple" xlink:href="../180/169180.xml">
typesetting</link> is used for the mathematical equations, for example by means of <link xlink:type="simple" xlink:href="../065/30065.xml">
TeX</link> or <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../313/52313.xml">
MathML</link></format>
 markup, or proprietary <link xlink:type="simple" xlink:href="../362/486362.xml">
formula editor</link>s.</p>
<p>

Mathematical style pseudocode is sometimes referred to as <link xlink:type="simple" xlink:href="../409/958409.xml">
pidgin code</link>, for example <it>pidgin <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../453/1453.xml">
ALGOL</link></programming_language>
</it> (the origin of the concept), <it>pidgin <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
</it>, <it>pidgin <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC</link></it>, <it>pidgin <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../773/23773.xml">
 Pascal</link></programming_language>
</it>, <it>pidgin <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
 C</link></programming_language>
</it>, and <it>pidgin <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/1242.xml">
 Ada</link></causal_agent>
</physical_entity>
</it>.</p>

</sec>
<sec>
<st>
Machine compilation or interpretation</st>
<p>

It is often suggested that future programming languages will be more similar to pseudocode or <link xlink:type="simple" xlink:href="../173/21173.xml">
natural language</link> than to present-day languages; the idea is that increasing computer speeds and advances in compiler technology will permit computers to create programs from descriptions of algorithms, instead of requiring the details to be implemented by a human. </p>

<ss1>
<st>
Natural language grammar in programming languages</st>
<p>

Various attempts to bring elements of natural language grammar into computer programming have produced programming languages such as <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../136/78136.xml">
HyperTalk</link></language>
, <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../076/493076.xml">
Lingo</link></language>
, <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/88392.xml">
AppleScript</link></language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/29004.xml">
SQL</link></programming_language>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../989/227989.xml">
Inform</link></programming_language>
</software>
. In these languages, parentheses and other special characters are replaced by prepositions, resulting in quite talkative code. This may make it easier for a person without knowledge about the language to understand the code and perhaps also to learn the language. However, the similarity to natural language is usually more cosmetic than genuine. The syntax rules are just as strict and formal as in conventional programming, and do not necessarily make development of the programs easier.</p>

</ss1>
<ss1>
<st>
Mathematical programming languages</st>
<p>

An alternative to using mathematical pseudocode (involving set theory notation or matrix operations) for documentation of algorithms is to use a formal mathematical programming language that is a mix of non-ASCII mathematical notation and program control structures. Then the code can be parsed and interpreted by a machine. </p>
<p>

Several formal <link xlink:type="simple" xlink:href="../586/140586.xml">
specification language</link>s include set theory notation using special characters. Examples are:
<list>
<entry level="1" type="bullet">

 <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../521/34521.xml">
Z notation</link></language>
 </entry>
<entry level="1" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../583/140583.xml">
Vienna Development Method</link></language>
</method>
</know-how>
 Specification Language (VDM-SL).</entry>
</list>
</p>
<p>

Some <link xlink:type="simple" xlink:href="../887/890887.xml">
array programming languages</link> include vectorized expressions and matrix operations as non-ASCII formulas, mixed with conventional control structures. Examples are: 
<list>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../451/1451.xml">
 A programming language</link></programming_language>
 (APL), and its dialects <link xlink:type="simple" xlink:href="../780/933780.xml">
APLX</link> and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../931/890931.xml">
A+</link></programming_language>
.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../437/1730437.xml">
MathCAD</link>.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../950/5276950.xml">
Short Code</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../739/4719739.xml">
Dummy code</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<link xlink:type="simple" xlink:href="../409/958409.xml">
Pidgin code</link></subject>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../216/954216.xml">
Skeleton program</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../262/11643262.xml">
Structured English</link></entry>
<entry level="1" type="bullet">

 <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../061/2875061.xml">
Concept programming</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.csc.calpoly.edu/~jdalbey/SWE/pdl_std.html">
A pseudocode standard</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://calgo.acm.org/">
Collected Algorithms of the <organization wordnetid="108008335" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/30th_century.xml">
ACM</link></organization>
</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cornell.edu/Courses/cs482/2003su/handouts/pseudocode.pdf">
Pseudocode Guidelines</weblink>, PDF file.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.coderookie.com/2006/tutorial/the-pseudocode-programming-process/">
Pseudocode Programming Process</weblink> base on data from Code Complete book</entry>
</list>
</p>


</sec>
</bdy>
</subject>
</message>
</article>
