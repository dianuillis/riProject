<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:32:48[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>Public-key cryptography</title>
<id>24222</id>
<revision>
<id>244525348</id>
<timestamp>2008-10-11T06:47:21Z</timestamp>
<contributor>
<username>Dtwong</username>
<id>5699684</id>
</contributor>
</revision>
<categories>
<category>Articles with Alice and Bob explanations</category>
<category>Banking technology</category>
<category>Asymmetric-key cryptosystems</category>
<category>Cryptography</category>
</categories>
</header>
<bdy>

<image location="right" width="250px" src="Public_key_making.svg" type="thumb">
<caption>

A big random number is used to make a public-key/private-key pair.
</caption>
</image>

<image location="right" width="280px" src="Public_key_encryption.svg" type="thumb">
<caption>

In an encryption scheme anyone can encrypt using the public key, but only the holder of the private key can decrypt. Security depends on the secrecy of the private key.
</caption>
</image>

<image location="right" width="280px" src="Public_key_signing.svg" type="thumb">
<caption>

In a signature scheme the private key is needed to <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
 sign</link></writing>
</written_communication>
</document>
 a message; but anyone can check the signature using the public key. Validity depends on private key security.
</caption>
</image>

<image location="right" width="300px" src="Public_key_shared_secret.svg" type="thumb">
<caption>

In the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../903/7903.xml">
Diffie-Hellman key predistribution scheme</link></rule>
</direction>
</protocol>
</message>
, each party generates a public/private key pair and distributes the public key. After obtaining an authentic copy of each others public keys, Alice and Bob can compute a shared secret offline. The shared secret can be used as the key for a <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric cipher</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
.
</caption>
</image>

<b><it>Public-key cryptography</it></b>, also known as <b>asymmetric cryptography</b>, is a form of <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link> in which the key used to encrypt a message differs from the key used to decrypt it. In public key cryptography, a user has a pair of <link>
cryptographic key</link>s&mdash;a <b>public key</b> and a <b>private key</b>. The private key is kept secret, while the public key may be widely distributed. Incoming messages would have been <link xlink:type="simple" xlink:href="../294/10294.xml">
encrypted</link> with the recipient's public key and can only be decrypted with his corresponding private key. The keys are related mathematically, but the private key cannot be practically derived from the public key. <p>

Conversely, <it>secret key cryptography</it>, also known as <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric cryptography</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, uses a single secret <link xlink:type="simple" xlink:href="../039/53039.xml">
key</link> for both encryption and decryption. To use symmetric cryptography for communication, both the sender &amp; receiver would have to know the key beforehand, or it would have to be sent along with the message. </p>
<p>

The two main branches of public key cryptography are:
<list>
<entry level="1" type="bullet">

 <b>Public key encryption</b> &mdash; a message encrypted with a recipient's public key cannot be decrypted by anyone except the recipient possessing the corresponding private key. This is used to ensure <link xlink:type="simple" xlink:href="../859/353859.xml">
confidentiality</link>.</entry>
<entry level="1" type="bullet">

 <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
Digital signature</link></writing>
</written_communication>
</document>
s &mdash; a message signed with a sender's private key can be verified by anyone who has access to the sender's public key, thereby proving that the sender signed it and that the message has not been tampered with. This is used to ensure <link xlink:type="simple" xlink:href="../967/47967.xml">
authenticity</link>.</entry>
</list>
</p>
<p>

An analogy for public-key encryption is that of a locked <link xlink:type="simple" xlink:href="../921/771921.xml">
mailbox</link> with a mail slot. The mail slot is exposed and accessible to the public; its location (the street address) is in essence the public key. Anyone knowing the street address can go to the door and drop a written message through the slot; however, only the person who possesses the key can open the mailbox and read the message.</p>
<p>

An analogy for digital signatures is the sealing of an envelope with a personal <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../136/38136.xml">
wax seal</link></database>
</wordnet>
</method>
</know-how>
</lexical_database>
</electronic_database>
</information>
</message>
. The message can be opened by anyone, but the presence of the seal authenticates the sender.</p>
<p>

A central problem for use of public-key cryptography is confidence (ideally proof) that a public key is correct, belongs to the person or entity claimed (i.e., is 'authentic'), and has not been tampered with or replaced by a malicious third party. The usual approach to this problem is to use a <link xlink:type="simple" xlink:href="../112/194112.xml">
public-key infrastructure</link> (PKI), in which one or more third parties, known as <link xlink:type="simple" xlink:href="../370/296370.xml">
certificate authorities</link>, certify ownership of key pairs. Another approach, used by <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/23080.xml">
PGP</link></system_of_measurement>
</standard>
, is the "<link xlink:type="simple" xlink:href="../356/296356.xml">
web of trust</link>" method to ensure authenticity of key pairs.</p>
<p>

So far, public key techniques have been much more computationally intensive than purely <link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric algorithms</link>. The judicious use of these techniques enables a wide variety of applications without incurring a prohibitive computational penalty. In practice, public key cryptography is often used in combination with secret-key methods for efficiency reasons. Such a combination is called a <link xlink:type="simple" xlink:href="../462/11756462.xml">
hybrid cryptosystem</link>. For encryption, the sender encrypts the message with a secret-key algorithm using a randomly generated key, and that random key is then encrypted with the recipient's public key. For digital signatures, the sender hashes the message (using a <link xlink:type="simple" xlink:href="../526/439526.xml">
cryptographic hash function</link>) and then signs the resulting "hash value". Before verifying the signature, the recipient also computes the hash of the message, and compares this hash value with the signed hash value to check that the message has not been tampered with.</p>

<sec>
<st>
History</st>
<p>

For most of the <link xlink:type="simple" xlink:href="../066/520066.xml">
history of cryptography</link>, a key had to be kept absolutely secret and would be agreed upon beforehand using a secure, but non-cryptographic, method; for example, a face-to-face meeting or a trusted courier. There are a number of significant practical difficulties in this approach to <link xlink:type="simple" xlink:href="../275/1725275.xml">
distributing keys</link>. Public-key cryptography was invented to address these drawbacks &mdash; 
with public-key cryptography, users can communicate securely over an insecure channel without having to agree upon a shared key beforehand.</p>
<p>

In 1874, a book by <link xlink:type="simple" xlink:href="../021/207021.xml">
William Stanley Jevons</link> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> described the relationship of <link xlink:type="simple" xlink:href="../890/363890.xml">
one-way function</link>s to cryptography and went on to discuss specifically the <link xlink:type="simple" xlink:href="../341/82341.xml">
factorization</link> problem used to create the <link xlink:type="simple" xlink:href="../753/206753.xml">
trapdoor function</link> in the <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> system. In July 1996, one observer <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> commented on the Jevons book in this way:</p>
<p>

In his book <it>The Principles of Science: A Treatise on Logic and Scientific Method</it>, written and published in the 1890s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>, William S. Jevons observed that there are many situations where the 'direct' operation is relatively easy, but the 'inverse' operation is significantly more difficult. One example mentioned briefly is that enciphering (encryption) is easy while deciphering (decryption) is not. In the same section of Chapter 7: Introduction titled 'Induction an Inverse Operation', much more attention is devoted to the principle that multiplication of integers is easy, but finding the (prime) factors of the product is much harder. Thus, Jevons anticipated a key feature of the RSA Algorithm for public key cryptography, though he certainly did not invent the concept of public key cryptography.</p>
<p>

The first invention <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> of asymmetric key algorithms was by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../948/615948.xml">
James H. Ellis</link></decoder>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<companion wordnetid="109945905" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<friend wordnetid="110112591" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../040/578040.xml">
Clifford Cocks</link></decoder>
</friend>
</causal_agent>
</intellectual>
</companion>
</cryptanalyst>
</person>
</physical_entity>
, and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../495/1108495.xml">
Malcolm Williamson</link></decoder>
</mathematician>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 at <link xlink:type="simple" xlink:href="../884/12884.xml">
GCHQ</link> in the <autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
UK</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
 in the early 1970s; these inventions were what later became known as <link>
Diffie-Hellman</link> key exchange, and a special case of <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>. The GCHQ cryptographers referred to the technique as "non-secret encryption". These inventions were not publicly disclosed at the time, and the fact that they had been developed was kept secret until 1997.</p>
<p>

An asymmetric-key cryptosystem was published in 1976 by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../776/427776.xml">
Whitfield Diffie</link></decoder>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<inventor wordnetid="110214637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../387/422387.xml">
Martin Hellman</link></scholar>
</decoder>
</employee>
</causal_agent>
</worker>
</alumnus>
</creator>
</inventor>
</scientist>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
, who, influenced by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../849/25849.xml">
Ralph Merkle</link></scientist>
's work on public-key distribution, disclosed a method of public-key agreement. This method of exponential-key exchange, which came to be known as <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../903/7903.xml">
Diffie-Hellman key exchange</link></rule>
</direction>
</protocol>
</message>
, was the first published practical method for establishing a shared secret-key over an unprotected communications channel without using a prior shared secret. Merkle's public-key-agreement technique became known as <link xlink:type="simple" xlink:href="../670/791670.xml">
Merkle's Puzzles</link>, and was published in 1978.</p>
<p>

A generalisation of the Cocks method was reinvented in 1977 by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../057/68057.xml">
Rivest</link></scientist>
</person>
, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../314/57314.xml">
Shamir</link></scientist>
</person>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../886/249886.xml">
Adleman</link></scientist>
</person>
, all then at <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/18879.xml">
MIT</link></university>
. The latter authors published their work in 1978, and the algorithm appropriately came to be known as <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>.  RSA uses exponentiation modulo a product of two large <link xlink:type="simple" xlink:href="../666/23666.xml">
primes</link> to encrypt and decrypt, performing both public key encryption and public key digital signature, and its security is connected to the presumed difficulty of <link xlink:type="simple" xlink:href="../491/15491.xml">
factoring large integers</link>, a problem for which there is no known efficient (i.e., practicably fast) general technique. </p>
<p>

Since the 1970s, a large number and variety of encryption, digital signature, key agreement, and other techniques have been developed in the field of public-key cryptography. The <link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal cryptosystem</link> (invented by <link xlink:type="simple" xlink:href="../930/565930.xml">
Taher ElGamal</link>) relies on the (similar, and related) difficulty of the <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm problem</link>, as does the closely related <link xlink:type="simple" xlink:href="../470/59470.xml">
DSA</link> developed at <link xlink:type="simple" xlink:href="../939/21939.xml">
NSA</link> and published by <link xlink:type="simple" xlink:href="../888/21888.xml">
NIST</link> as a proposed standard. The introduction of <link xlink:type="simple" xlink:href="../966/9966.xml">
elliptic curve cryptography</link> by <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../628/1587628.xml">
Neal Koblitz</link></scholar>
</decoder>
</mathematician>
</causal_agent>
</alumnus>
</associate>
</scientist>
</colleague>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
</peer>
 in the mid 1980s has yielded a new family of analogous public-key algorithms. Although mathematically more complex, elliptic curves appear to provide a more efficient way to leverage the <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link> problem, particularly with respect to <link xlink:type="simple" xlink:href="../749/5749.xml">
key size</link> for equivalent estimated security.</p>

</sec>
<sec>
<st>
Security</st>
<p>

Some encryption schemes can be proven secure based on the presumed hardness of a mathematical problem like <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<premise wordnetid="106753800" confidence="0.8">
<postulate wordnetid="106753299" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/15491.xml">
factoring</link></proposition>
</postulate>
</premise>
</message>
</statement>
 the product of two large primes or computing <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link>s Rabin has done so for an impracticable approach. Note that "secure" here has a precise mathematical meaning, and there are multiple different (meaningful) definitions of what it means for an encryption scheme to be secure. The "right" definition depends on the context in which the scheme will be deployed.</p>
<p>

In contrast to the <link xlink:type="simple" xlink:href="../210/22210.xml">
one-time pad</link>, no public-key encryption scheme has been shown to be secure against eavesdroppers with unlimited computational power. Proofs of security therefore hold with respect to computationally-limited adversaries, and can give guarantees (relative to particular mathematical assumptions) of the form "the scheme cannot be broken using a desktop computer in 1000 years", or "this algorithm is secure if no improved method of (for instance, integer factoring) is found".</p>
<p>

The most obvious application of a <b>public key encryption</b> system is <link xlink:type="simple" xlink:href="../859/353859.xml">
confidentiality</link>; a message which a sender encrypts using the recipient's public key can be decrypted only by the recipient's paired private key (assuming, of course that no flaw is discovered in the basic algorithm used).</p>
<p>

Public-key <link xlink:type="simple" xlink:href="../644/59644.xml">
digital signature</link> algorithms can also be used for sender <link xlink:type="simple" xlink:href="../967/47967.xml">
authentication</link> and <link xlink:type="simple" xlink:href="../491/52491.xml">
non-repudiation</link>. For instance, a user can encrypt a message with his own private key and send it. If another user can successfully decrypt it using the corresponding <b> public key</b>, this provides assurance that the first user (and no other) sent it (if, that is, there is not a flaw in the algorithm,  if the public key is the correct one, and if the corresponding private key has not been compromised). In practice, a cryptographic hash value of the message is usually calculated, encrypted with the private key and sent along with the message (in essence, a cryptographic signature of the message). The receiver can then verify message integrity and origin by calculating the hash value of the received message and comparing it against the decoded signature (the original hash). If the hash from the sender and the hash on the receiver side do <b>not match</b>, then the received message is not identical to the message which the sender "signed", or the sender's identity is wrong.</p>
<p>

To achieve authentication, non-repudiation, <it>and</it> confidentiality, the sender would first encrypt the message using his private key, then a second encryption is performed using the recipient's public key.</p>
<p>

These characteristics can be used to construct many other, sometimes surprising, cryptographic protocols and applications, like <link xlink:type="simple" xlink:href="../244/66244.xml">
digital cash</link>, <link xlink:type="simple" xlink:href="../676/2152676.xml">
password-authenticated key agreement</link>, multi-party key agreement, etc.</p>

</sec>
<sec>
<st>
Practical considerations</st>

<ss1>
<st>
A postal analogy</st>
<p>

An analogy which can be used to understand the advantages of an asymmetric system is to imagine two people, <link xlink:type="simple" xlink:href="../079/679079.xml">
Alice and Bob</link>, sending a secret message through the public mail. In this example, Alice wants to send a secret message to Bob, and expects a secret reply from  Bob.</p>
<p>

With a <link xlink:type="simple" xlink:href="../042/53042.xml">
symmetric key</link> system, Alice first puts the secret message in a box, and locks the box using a <link xlink:type="simple" xlink:href="../229/1829229.xml">
padlock</link> to which she has a key. She then sends the box to Bob through regular mail. When Bob receives the box, he uses an identical copy of Alice's key (which he has somehow obtained previously, maybe by a face-to-face meeting) to open the box, and reads the message. Bob can then use the same padlock to send his secret reply.</p>
<p>

In an asymmetric key system, Bob and Alice have separate padlocks. First, Alice asks Bob to send his open padlock to her through regular mail, keeping his key to himself. When Alice receives it she uses it to lock a box containing her message, and sends the locked box to Bob. Bob can then unlock the box with his key and read the message from Alice. To reply, Bob must similarly get Alice's open padlock to lock the box before sending it back to her.</p>
<p>

The critical advantage in an asymmetric key system is that Bob and Alice never need to send a copy of their keys to each other. This prevents a third party (perhaps, in the example, a corrupt postal worker) from copying a key while it is in transit, allowing said third party to spy on all future messages sent between Alice and Bob. So in the public key scenario, Alice and Bob need not trust the postal service as much. In addition, if Bob were careless and allowed someone else to copy <it>his</it> key, Alice's messages to Bob would be compromised, but Alice's messages to other people would remain secret, since the other people would be providing different padlocks for Alice to use.</p>
<p>

In another kind of asymmetric key system, Bob and Alice have separate padlocks.
First, Alice puts the secret message in a box, and locks the box using a padlock to which only she has a key.
She then sends the box to Bob through regular mail.
When Bob receives the box, he adds his own padlock to the box, and sends it back to Alice.
When Alice receives the box with the two padlocks, she removes her padlock and sends it back to Bob.
When Bob receives the box with only his padlock on it, Bob can then unlock the box with his key and read the message from Alice.
This <link xlink:type="simple" xlink:href="../492/14580492.xml">
three-pass protocol</link> is typically used during <link xlink:type="simple" xlink:href="../092/578092.xml">
key exchange</link>.</p>

</ss1>
<ss1>
<st>
Actual algorithms—two linked keys</st>
<p>

Not all asymmetric key algorithms operate in precisely this fashion. The most common ones have the property that Alice and Bob each own <it>two</it> keys, one for encryption and one for decryption.  In a secure asymmetric key encryption scheme, the private key should not be deducible from the public key.  This is known as public-key encryption, since an encryption key can be published without compromising the security of messages encrypted with that key.</p>
<p>

In the analogy above, Bob might publish instructions on how to make a lock ("public key"), but the lock is such that it is impossible (so far as is known) to deduce from these instructions how to make a key which will open that lock ("private key").  Those wishing to send messages to Bob use the public key to encrypt the message; Bob uses his private key to decrypt it.</p>
<p>

The key pair can also be used in reverse; the private key can be used to encrypt messages that only the public key can decrypt.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>  This is useful for applications where, instead of confidentiality being the goal, integrity, authenticity, and/or transparency is the goal, such as with digital signing.</p>

</ss1>
<ss1>
<st>
Weaknesses</st>
<p>

Of course, there is a possibility that someone could "pick" Bob's or Alice's lock. Among symmetric key encryption algorithms, only the <link xlink:type="simple" xlink:href="../210/22210.xml">
one-time pad</link> can be proven to be secure against any adversary, no matter how much computing power is available. Unfortunately, there is no public-key scheme with this property, since all public-key schemes are susceptible to <link xlink:type="simple" xlink:href="../784/53784.xml">
brute force key search attack</link>. Such attacks are impractical if the amount of computation needed to succeed (termed 'work factor' by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../693/5693.xml">
Claude 
Shannon</link></scientist>
) is out of reach of potential attackers. The work factor can be increased by simply choosing a longer key. Other attacks may be more efficient, and some are known for some public key encryption algorithms. Both <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> and <link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal encryption</link> have known attacks which are much faster than the brute force approach. Such estimates have changed both with the decreasing cost of computer power, and new mathematical discoveries.</p>
<p>

In practice, these insecurities can be avoided by choosing key sizes large enough that the best known attack would take so long that it is not worth any adversary's time and money to break the code. For example, if an estimate of how long it takes to break an encryption scheme is one thousand years, and it were used to encrypt your credit card details, they would be safe enough, since the time needed to decrypt the details will be rather longer than the useful life of those details, which expire after a few years. Typically, the key size needed is much longer for public key algorithms than for symmetric key algorithms.</p>
<p>

Besides the raw algorithmic strength of a particular keypair, the security of the certification <link xlink:type="simple" xlink:href="../998/13998.xml">
hierarchy</link> must be considered when deploying public key systems. This hierarchy vouches for the identities assigned to specific private keys. <link xlink:type="simple" xlink:href="../796/223796.xml">
Public key digital certificates</link> are typically valid for several years at a time, so the associated private keys must be held securely over the long term. When a private key higher in the hierarchy is compromised or accidentally disclosed then a <link xlink:type="simple" xlink:href="../676/144676.xml">
man in the middle attack</link> attack is possible. </p>
<p>

Major weaknesses have been found for several formerly promising asymmetric key algorithms. The <link xlink:type="simple" xlink:href="../652/59652.xml">
'knapsack packing' algorithm</link> was found to be insecure when a new attack was found. Recently, some attacks based on careful measurements of the exact amount of time it takes known hardware to encrypt plain text have been used to simplify the search for likely decryption keys (see <link xlink:type="simple" xlink:href="../678/667678.xml">
side channel attack</link>). Thus, mere use of asymmetric key algorithms does not ensure security; it is an area of active research to discover and protect against new attacks.</p>
<p>

Another potential security vulnerability in using asymmetric keys is the possibility of a <link xlink:type="simple" xlink:href="../676/144676.xml">
man in the middle attack</link>, in which communication of public keys is intercepted by a third party and modified to provide different public keys instead. Encrypted messages and responses must also be intercepted, decrypted and re-encrypted by the attacker using the correct public keys for different communication segments in all instances to avoid suspicion. This attack may seem to be difficult to implement in practice, but it's not impossible when using insecure media (e.g. public networks such as the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link> or wireless communications). A malicious staff member at Alice or Bob's ISP might find it outright easy. </p>
<p>

One approach to prevent such attacks is the use of a <link xlink:type="simple" xlink:href="../370/296370.xml">
certificate authority</link>, a <link xlink:type="simple" xlink:href="../651/584651.xml">
trusted third party</link> who is responsible for verifying the identity of a user of the system and issuing a <link xlink:type="simple" xlink:href="../796/223796.xml">
digital certificate</link>, which is a <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
signed</link></writing>
</written_communication>
</document>
 block of data stating that this public key belongs to that person, company or other entity. This approach also has weaknesses. For example, the certificate authority must be trusted to have properly checked the identity of the key-holder and the correctness of the public key when it issues a certificate, and has been correctly set up at communication participants before it can be used. An attacker who could subvert the certificate authority into issuing a certificate for a bogus public key could then mount a man in the middle attack as easily as if the certificate scheme were not used at all. Despite its problems, this approach is widely used; examples include <link xlink:type="simple" xlink:href="../813/187813.xml">
SSL</link> and its successor, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
, which are commonly used to provide security in web browsers, for example, to securely send credit card details to an online store.</p>

</ss1>
<ss1>
<st>
Computational cost</st>
<p>

Public key algorithms known thus far are relatively computationally costly compared with most symmetric key algorithms of apparently equivalent security. The difference factor is typically quite large. This has important implications for their practical use. Most are used in hybrid cryptosystems for reasons of efficiency; in such a cryptosystem, a shared secret key ("session key") is generated by one party and this much briefer session key is then encrypted by each recipient's public key.  Each recipient uses the corresponding private key to decrypt the session key. Once all parties have obtained the session key they can use a much faster symmetric algorithm to encrypt and decrypt messages. In many of these schemes, the session key is unique to each message exchange, being randomly chosen for each message.</p>

</ss1>
<ss1>
<st>
Associating public keys with identities</st>
<p>

The binding between a public key and its 'owner' must be correct, lest the algorithm function perfectly and yet be entirely insecure in practice. As with most cryptography, the <link xlink:type="simple" xlink:href="../994/591994.xml">
protocol</link>s used to establish and verify this binding are critically important. Associating a public key with its owner is typically done by protocols implementing a <link xlink:type="simple" xlink:href="../112/194112.xml">
public key infrastructure</link>; these allow the validity of the association to be formally verified by reference to a <link xlink:type="simple" xlink:href="../651/584651.xml">
trusted third party</link>, either in the form of a hierarchical <link xlink:type="simple" xlink:href="../370/296370.xml">
certificate authority</link> (e.g., <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<proposal wordnetid="107162194" confidence="0.8">
<recommendation wordnetid="106671637" confidence="0.8">
<advice wordnetid="106671484" confidence="0.8">
<link xlink:type="simple" xlink:href="../352/296352.xml">
X.509</link></advice>
</recommendation>
</proposal>
</rule>
</direction>
</protocol>
</message>
), a local trust model (e.g., <link xlink:type="simple" xlink:href="../227/750227.xml">
SPKI</link>), or a <link xlink:type="simple" xlink:href="../356/296356.xml">
web of trust</link> scheme (e.g., that originally built into <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/23080.xml">
PGP</link></system_of_measurement>
</standard>
 and <link xlink:type="simple" xlink:href="../809/38809.xml">
GPG</link> and still to some extent usable with them). Whatever the cryptographic assurance of the protocols themselves, the association between a public key and its owner is ultimately a matter of subjective judgement on the part of the trusted third party, since the key is a mathematical entity whilst the owner, and the connection between owner and key, are not.  For this reason, the formalism of a <link xlink:type="simple" xlink:href="../112/194112.xml">
public key infrastructure</link> must provide for explicit statements of the <link xlink:type="simple" xlink:href="../091/375091.xml">
policy</link> followed when making this judgement. For example, the complex and never fully implemented <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<proposal wordnetid="107162194" confidence="0.8">
<recommendation wordnetid="106671637" confidence="0.8">
<advice wordnetid="106671484" confidence="0.8">
<link xlink:type="simple" xlink:href="../352/296352.xml">
X.509</link></advice>
</recommendation>
</proposal>
</rule>
</direction>
</protocol>
</message>
 standard allows a <link xlink:type="simple" xlink:href="../370/296370.xml">
certificate authority</link> to identify its policy by means of an <link xlink:type="simple" xlink:href="../013/1064013.xml">
object identifier</link> which functions as an index into a catalogue of registered policies.  Policies may exist for many different purposes, ranging from anonymity to military classification.</p>

</ss1>
<ss1>
<st>
Relation to real world events</st>
<p>

A public key will be known to a large and, in practice, unknown set of users.  All events requiring revocation or replacement of a public key can take a long time to take full effect with all who must be informed (i.e. all those users who possess that key). For this reason, systems which must react to events in real time (e.g. safety-critical systems or national security systems) should not use public-key encryption without taking great care.  There are four issues of interest:</p>

<ss2>
<st>
Privilege of key revocation</st>
<p>

A malicious (or erroneous) revocation of some, or all, of the keys in the system is likely, in the second case, certain, to cause a complete failure of the system. If public keys can be revoked individually, this is a possibility. However, there are design approaches which can reduce the practical chance of this occurring. For example, by means of certificates we can create what is called a "compound principal"; one such principal could be "Alice and Bob have Revoke Authority". Now only Alice and Bob (in concert) can revoke a key, and neither Alice nor Bob can revoke keys alone. However, revoking a key now requires both Alice and Bob to be available, and this creates a problem of reliability. In concrete terms, from a security point of view, there is now a single point of failure in the public key revocation system.  A successful <link xlink:type="simple" xlink:href="../776/39776.xml">
Denial of Service</link> attack against either Alice or Bob (or both) will block a required revocation. In fact, any partition of authority between Alice and Bob will have this effect, regardless of how it comes about.</p>
<p>

Because the principal having revocation authority for keys is very powerful, the mechanisms used to control it should involve both as many participants as possible (to guard against malicious attacks of this type), while at the same time as few as possible (to ensure that a key can be revoked without dangerous delay). Public key certificates which include an expiry date are unsatisfactory in that the expiry date may not correspond with a real world revocation need, but at least such certificates need not all be tracked down system wide, nor must all users be in constant contact with the system at all times.</p>

</ss2>
<ss2>
<st>
Distribution of a new key</st>
<p>

After a key has been revoked, or when a new user is added to a system, a new key must be distributed in some predetermined manner. 
Assume that Carol's key has been <b>revoked</b> (e.g. automatically by exceeding its use-before date, or less so, because of a compromise of Carol's matching private key). Until a new key has been distributed, Carol is effectively out of contact. No one will be able to send her messages without violating system protocols (i.e. without a valid public key, no one can encrypt messages to her), and messages from her cannot be signed for the same reason. Or, in other words, the "part of the system" controlled by Carol is essentially unavailable. Security requirements have been ranked higher than system availability in such designs.</p>
<p>

One could leave the power to create (and certify) keys as well as revoke them in the hands of each user, and the original PGP design did so, but this raises problems of user understanding and operation. For security reasons, this approach has considerable difficulties; if nothing else, some users will be forgetful or inattentive or confused. On one hand, a message revoking a public key certificate should be spread as fast as possible while, on the other hand, (parts of) the system might be rendered inoperable before a new key can be installed. The time window can obviously be reduced to zero by always issuing the new key together with the certificate that revokes the old one, but this requires co-location of both authority to revoke and to generate new keys. </p>
<p>

It is most likely a system-wide failure if the (possibly combined) principal that issues new keys fails by issuing keys improperly. It is an instance of a common mutual exclusion; a design can make the reliability of a system high, but only at the cost of system availability, and vice versa.</p>

</ss2>
<ss2>
<st>
Spreading the revocation</st>
<p>

Notification of a key certificate revocation must be spread to all those who might potentially hold it, and as rapidly as possible.</p>
<p>

There are two means of spreading information (e.g., a key revocation here) in a distributed system: either the information is pushed to users from a central point(s), or it is pulled from a central point(s) to end users.</p>
<p>

Pushing the information is the simplest solution in that a message is sent to all participants. However, there is no way of knowing that all participants will actually receive the message, and if the number of participants is large and some of their physical or network distance great, the probability of complete success (which is, ideally, required for system security) will be rather low. In a partially updated state, the system is particularly vulnerable to denial of service attacks as security has been breached, and a vulnerability window will continue to exist as long as some users have not 'gotten the word'. In other words, pushing certificate revocation messages is neither easy to secure nor very reliable.</p>
<p>

The alternative to pushing is pulling. In the extreme, all certificates contain all the keys needed to verify that the public key of interest (i.e. the one belonging to the user to whom one wishes to send a message, or whose signature is to be checked) is still valid. In this case, at least some use of the system will be blocked if a user cannot reach the verification service (i.e. one of those systems which can establish the current validity of another user's key). Again, such a system design can be made as reliable as one wishes, at the cost of lowering security (the more servers to check for the possibility of a key revocation, the longer the window of vulnerability).</p>
<p>

Another trade-off is to use a somewhat less reliable, but more secure, verification service but to include an expiry date for each of the verification sources. How long this timeout should be is a decision which embodies a trade-off between availability and security that will have to be decided in advance, at system design time.</p>

</ss2>
<ss2>
<st>
Recovery from a leaked key</st>
<p>

Assume that the principal authorized to revoke a key has decided that a certain key must be revoked. In most cases this  happens after the fact; for instance, it becomes known that at some time in the past an event occurred that endangered a private key. Let us denote the time at which it is decided that the compromise occurred with T.</p>
<p>

Such a compromise has two implications. Messages encrypted with the matching public key (now or in the past) can no longer be assumed to be secret. One solution to avoid this problem is to use a protocol that has <link xlink:type="simple" xlink:href="../130/2191130.xml">
perfect forward secrecy</link>. Second, signatures made with the <it>no longer trusted to be actually private key</it> after time T, can no longer be assumed to be authentic without additional information about who, where, when, etc of the events leading up to digital signature. These will not always be available, and so all such digital signatures will be less than credible. A solution to reduce the impact of leaking a private key of a signature scheme is to use <link xlink:type="simple" xlink:href="../727/14155727.xml">
timestamps</link>.   </p>
<p>

Loss of secrecy and/or authenticity, even for a single user, has system-wide security implications, and a strategy for recovery must thus be established. Such a strategy will determine who has authority and under what conditions to revoke a public key certificate, how to spread the revocation, but also, ideally, how to deal with all messages signed with the key since time T (which will rarely be known precisely). Messages sent to that user (which require the proper, now compromised, private key to decrypt) must be considered compromised as well, no matter when they were sent. </p>
<p>

Such a recovery procedure can be quite complex, and while it is in progress the system will likely be vulnerable against <link xlink:type="simple" xlink:href="../776/39776.xml">
Denial of Service</link> attacks, among other things.</p>

</ss2>
</ss1>
</sec>
<sec>
<st>
Examples</st>
<p>

<b>Examples of well-regarded asymmetric key techniques for varied purposes include:</b>
<list>
<entry level="1" type="bullet">

<link>
Diffie-Hellman</link> key exchange protocol</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../470/59470.xml">
DSS</link> (Digital Signature Standard), which incorporates the Digital Signature Algorithm</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal</link></entry>
<entry level="1" type="bullet">

Various <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../966/9966.xml">
Elliptic Curve</link></geographical_area>
</tract>
</location>
</field>
</region>
 techniques</entry>
<entry level="1" type="bullet">

Various <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../676/2152676.xml">
Password-authenticated key agreement</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
 techniques</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../685/480685.xml">
Paillier cryptosystem</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> encryption algorithm (<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../008/16706008.xml">
PKCS#1</link></system_of_measurement>
</standard>
)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../406/1564406.xml">
Cramer-Shoup</link> encryption</entry>
</list>
</p>
<p>

<b>Examples of notable yet insecure asymmetric key algorithms include:</b>
<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../652/59652.xml">
Merkle-Hellman</link> the 'knapsack' algorithms</entry>
</list>
</p>
<p>

<b>Examples of protocols using asymmetric key algorithms include:</b>
<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../809/38809.xml">
GPG</link>, an implementation of <link>
OpenPGP</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../900/99900.xml">
IKE</link></entry>
<entry level="1" type="bullet">

<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/23080.xml">
PGP</link></system_of_measurement>
</standard>
 </entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../674/4422674.xml">
ZRTP</link></rule>
</direction>
</protocol>
</message>
, a secure <link xlink:type="simple" xlink:href="../028/75028.xml">
VoIP</link> protocol</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../813/187813.xml">
Secure Socket Layer</link>, now implemented as an <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> standard <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/1514252.xml">
SILC</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/28814.xml">
SSH</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>
<p>

<reflist>
<entry id="1">
Jevons, William Stanley, <it>The Principles of Science: A Treatise on Logic and Scientific Method</it>, Macmillan &amp; Co., London, 1874, 2nd ed. 1877, 3rd ed. 1879.  Reprinted with a foreword by <link xlink:type="simple" xlink:href="../778/1216778.xml">
Ernst Nagel</link>, Dover Publications, New York, NY, 1958.</entry>
<entry id="2">
Solomon W. Golomb, On Factoring Jevons' Number, CRYPTOLOGIA 243 (July 1996).</entry>
<entry id="3">
The 1890s date for the publication of Jevons' book in this quotation is incorrect.</entry>
<entry id="4">
The <link xlink:type="simple" xlink:href="../939/21939.xml">
NSA</link> has also claimed to have invented public-key cryptography, in the 1960s; however, there is currently (as of 2004) little supporting public evidence for this claim <weblink xlink:type="simple" xlink:href="http://www.cs.columbia.edu/~smb/nsam-160/">
http://www.cs.columbia.edu/~smb/nsam-160/</weblink>.</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.sei.cmu.edu/str/descriptions/publickey.html">
Public Key Cryptography</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="Reference-N. Ferguson-2003" style="font-style:normal" class="book">N. Ferguson;&#32;B. Schneier&#32;(2003). Practical Cryptography.&#32;<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../930/537930.xml">
Wiley</link></company>
. ISBN 0-471-22357-3.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite id="Reference-J. Katz-2007" style="font-style:normal" class="book">J. Katz;&#32;Y. Lindell&#32;(2007). Introduction to Modern Cryptography.&#32;<link xlink:type="simple" xlink:href="../382/834382.xml">
CRC Press</link>. ISBN 1-58488-551-3.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite id="Reference-A. J. Menezes-1997" style="font-style:normal" class="book"><physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../319/4356319.xml">
A. J. Menezes</link></decoder>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
;&#32;P. C. van Oorschot; <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../043/578043.xml">
S. A. Vanstone</link></decoder>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
&#32;(1997). <weblink xlink:type="simple" xlink:href="http://www.cacr.math.uwaterloo.ca/hac/">
Handbook of Applied Cryptography</weblink>. ISBN 0-8493-8523-7.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite id="Reference-Anoop MS-2007" style="font-style:normal" class="book">Anoop MS&#32;(2007). <weblink xlink:type="simple" xlink:href="http://www.infosecwriters.com/text_resources/pdf/Public_Key_Cryptography_AMS.pdf">
Public key Cryptography - Applications Algorithms and Mathematical Explanations</weblink>.&#32;<country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../533/14533.xml">
India</link></country>
:&#32;<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../718/2481718.xml">
Tata Elxsi</link></company>
.</cite>&nbsp;</entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../203/466203.xml">
Books on cryptography</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../944/63944.xml">
Key-agreement protocol</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../114/17114.xml">
Key escrow</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../809/38809.xml">
GNU Privacy Guard</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../892/385892.xml">
Identity based encryption</link> (IBE)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../861/8860861.xml">
PGP word list</link></entry>
<entry level="1" type="bullet">

 <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/23080.xml">
Pretty Good Privacy</link></system_of_measurement>
</standard>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../426/53426.xml">
Pseudonymity</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../312/7943312.xml">
Public key fingerprint</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../112/194112.xml">
Public key infrastructure</link> (PKI)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../910/51910.xml">
Quantum cryptography</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/28814.xml">
Secure Shell</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 </entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../813/187813.xml">
Secure Sockets Layer</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../642/6866642.xml">
Threshold cryptosystem</link></entry>
</list>
</p>


</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ladlass.com/intel/archives/010256.html">
An account of how GCHQ kept their invention of PKE secret until 1997</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks  " cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<b>Algorithms:</b> <link xlink:type="simple" xlink:href="../287/14050287.xml">
CEILIDH</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../406/1564406.xml">
Cramer-Shoup</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../903/7903.xml">
DH</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../470/59470.xml">
DSA</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../958/3357958.xml">
ECDH</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../525/450525.xml">
ECDSA</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../894/1506894.xml">
EKE</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal encryption</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../473/2033473.xml">
ElGamal signature scheme</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../608/598608.xml">
GMR</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../076/3530076.xml">
IES</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../486/3200486.xml">
Lamport</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../447/1586447.xml">
MQV</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../582/481582.xml">
NTRUEncrypt</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../327/3513327.xml">
NTRUSign</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../685/480685.xml">
Paillier</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../283/451283.xml">
Rabin</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../536/450536.xml">
Schnorr</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../061/2159061.xml">
SPEKE</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../670/1306670.xml">
SRP</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../137/2587137.xml">
STS</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
&nbsp;&#124; 
<region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../209/3963209.xml">
XTR</link></geographical_area>
</tract>
</location>
</field>
</region>
</p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even"><p>

<b>Theory:</b> <link xlink:type="simple" xlink:href="../334/181334.xml">
Discrete logarithm</link>&nbsp;&#124; 
<region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../966/9966.xml">
Elliptic curve cryptography</link></geographical_area>
</tract>
</location>
</field>
</region>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../741/1544741.xml">
RSA problem</link></p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<b>Standardization:</b> <link>
ANS X9F1</link>&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../159/549159.xml">
CRYPTREC</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/1644154.xml">
IEEE P1363</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../430/497430.xml">
NESSIE</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../099/1602099.xml">
NSA Suite B</link></p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even"><p>

<b>Misc:</b> <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
Digital signature</link></writing>
</written_communication>
</document>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../312/7943312.xml">
Fingerprint</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../112/194112.xml">
PKI</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../356/296356.xml">
Web of trust</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../749/5749.xml">
Key size</link></p>
</col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../432/18934432.xml">
Cryptography</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../066/520066.xml">
History of cryptography</link> | <link xlink:type="simple" xlink:href="../715/5715.xml">
Cryptanalysis</link> | 
Cryptography portal | <link xlink:type="simple" xlink:href="../585/449585.xml">
Topics in cryptography</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
Symmetric-key algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../594/4594.xml">
Block cipher</link> | <link xlink:type="simple" xlink:href="../007/49007.xml">
Stream cipher</link> | <link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link> | <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../526/439526.xml">
Cryptographic hash function</link></primitive>
</causal_agent>
</person>
</physical_entity>
 | <link xlink:type="simple" xlink:href="../523/567523.xml">
Message authentication code</link> | <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/182249.xml">
Random numbers</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../733/28733.xml">
Steganography</link></col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
</table>
</p>




</sec>
</bdy>
</entity>
</article>
