<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:42:14[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>TwoOStwo</title>
<id>2428957</id>
<revision>
<id>240681572</id>
<timestamp>2008-09-24T13:57:29Z</timestamp>
<contributor>
<username>Ynhockey</username>
<id>131372</id>
</contributor>
</revision>
<categories>
<category>Virtualization software</category>
</categories>
</header>
<bdy>

<b>twoOStwo</b> is one of the commercial software products developed by Parallels Software Studio. The Workstation software consists of a virtual machine suite for <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link>-compatible computers which allows the creation and execution of multiple x86 virtual computers simultaneously. Each virtual machine instance can execute its own guest operating system, such as (but not limited to) <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link> and <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD variants</link>. In simple terms, twoOStwo allows one physical machine to run numerous operating systems simultaneously. 
<sec>
<st>
Description</st>

<p>

The computer and operating system instance that executes the twoOStwo process is referred to as the host machine. Instances of operating systems running inside a virtual machine are referred to as guest virtual machines. Like an emulator, twoOStwo provides a completely virtualized set of hardware to the guest operating system &ndash; for example, irrespective of make and model of the physical network adapter, the guest machine will see a Novell/Eagle NE2000 or Realtek RTL8029(AS) network adapter. twoOStwo virtualizes all devices within the virtual environment, including the video adapter, network adapter, and hard disk adapters. It also provides pass-through drivers serial, and parallel devices.</p>
<p>

Because all guest virtual machines use the same hardware drivers irrespective of the actual hardware on the host computer, virtual machine instances are highly portable between computers. For example, a running virtual machine can be stopped, copied to another physical computer, and started.  </p>

</sec>
<sec>
<st>
Implementation</st>

<p>

Conventional emulators like <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../072/362072.xml">
Bochs</link></causal_agent>
</copycat>
</person>
</physical_entity>
 emulate the microprocessor, executing each guest CPU instruction by calling a software subroutine on the host machine that simulates the function of that CPU instruction. This level of abstraction allows the guest machine to run on host machines with a different type of microprocessor, but is also very slow.</p>
<p>

A more efficient approach consists in software debugger technique. Some parts of code executed natively on real processor and on 'bad' instructions there placed software interrupts, which brakes execution of guest OS code and that instruction is emulated.</p>
<p>

twoOStwo, as well as VMware Workstation, Virtual PC for Windows and QEMU with the kqemu add-on, take an even more optimized approach and run code directly when this is possible. This is the case for user mode and <link xlink:type="simple" xlink:href="../324/641324.xml">
virtual 8086 mode</link> code on x86. </p>
<p>

The drawback is that the guest OS has to be compatible with the host CPU. So unlike with an emulator, one cannot use twoOStwo to run Mac/PPC software on an <link xlink:type="simple" xlink:href="../198/34198.xml">
Intel x86</link> processor. Another drawback is that it is not normally possible to efficiently nest twoOStwo virtual machines. Finally, although twoOStwo virtual machines run in user mode, twoOStwo itself requires installing various drivers in the host operating system.</p>

</sec>
<sec>
<st>
Features</st>

<p>

Besides bridging to network adapters, CD-ROM readers and hard disk drives twoOStwo also provides the ability to simulate some hardware. For example, an ISO file can be mounted as a CDROM, .hdd files can be mounted as hard disks.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../034/2429034.xml">
SVISTA</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../697/373697.xml">
User Mode Linux</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../833/1582833.xml">
Comparison of Virtual Machines</link></entry>
</list>
</p>

</sec>
</bdy>
</article>
