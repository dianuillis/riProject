<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:37:14[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Write ahead logging</title>
<id>244953</id>
<revision>
<id>226509660</id>
<timestamp>2008-07-18T20:18:33Z</timestamp>
<contributor>
<username>Rohita</username>
<id>1180324</id>
</contributor>
</revision>
<categories>
<category>Database algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, <b>write ahead logging (WAL)</b> is a family of techniques for providing <link>
 atomicity</link> and
<link>
 durability</link> (two of the <link xlink:type="simple" xlink:href="../776/60776.xml">
ACID</link> properties)  in <link xlink:type="simple" xlink:href="../571/244571.xml">
database system</link>s.<p>

In a system using WAL, all modifications are written to a <link>
 log</link> before they are applied.  Usually both redo and undo information is stored in the log. </p>
<p>

The purpose of this can be illustrated by an example. Imagine a program that is in the middle of performing some operation when the machine it is running on loses power. Upon restart, that program might well need to know whether the operation it was performing succeeded, half-succeeded, or failed. If a write-ahead log were used, the program could check this log and compare what it was supposed to be doing when it unexpectedly lost power to what was actually done. Based on this comparison, the program could decide to undo what it had started, complete what it had started, or keep things as they are.</p>
<p>

WAL allows updates of a database to be done <link xlink:type="simple" xlink:href="../861/219861.xml">
in-place</link>.  Another way to implement atomic updates is with <link xlink:type="simple" xlink:href="../930/245930.xml">
shadow paging</link>, which is not in-place.  The main advantage of doing updates in-place is that it reduces the need to modify indexes and block lists.</p>
<p>

<link xlink:type="simple" xlink:href="../955/245955.xml">
ARIES</link> is a popular algorithm in the WAL family.</p>
<p>

In <link xlink:type="simple" xlink:href="../280/1010280.xml">
file systems</link>, WAL is often called <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../073/48073.xml">
Journaling</link></instrumentality>
</artifact>
</system>
.</p>




</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
