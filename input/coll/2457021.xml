<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 19:37:24[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Neural gas</title>
<id>2457021</id>
<revision>
<id>179696242</id>
<timestamp>2007-12-23T00:27:31Z</timestamp>
<contributor>
<username>Avalon</username>
<id>357672</id>
</contributor>
</revision>
<categories>
<category>Neural networks</category>
</categories>
</header>
<bdy>

<b>Neural Gas</b> - a <link xlink:type="simple" xlink:href="../632/9127632.xml">
biologically</link> inspired adaptive <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>, coined by Martinetz and Schulten, 1991. It sorts for the input signal according to how far away they are. A certain number of them are selected by distance in order, then the number of adaptation units and strength are decreased according to a fixed schedule.
<sec>
<st>
Algorithm</st>
<p>

The rough steps of the <b>Neural Gas</b> algorithm can be specified as</p>
<p>

Assuming that we have a distribution p(ζ)for which a Neural Gas model has to be created. The following parameters are needed for the Algorithm initialization.</p>
<p>

λi,λf and Ei,Ef, and tmax</p>
<p>

λi,λf are used to set the rate at which learning rate E converges
Ei,Ef are the initial and final learning rate E respectively
tmax is the time till which the process continues.</p>
<p>

<b>Step 1</b>. Create a Set A to contain N units each with a vector reference from p(ζ). Also initialize the time parameter to 0.</p>
<p>

A={C1,C2,...CN}
t=0</p>
<p>

<b>Step 2</b>. Get a random value from the distribution p(ζ) and call it X.</p>
<p>

<b>Step 3</b>. Line up all the elements from A in relation with their nearness to X, with the nearest coming first and the farthest the last. </p>
<p>

Thus line up A's vectors such that for Cp,Cm,Co... the corresponding vectors Wp,Wm,Wo,...
||Wp-X|| =||Wm-X||=||Wo-X|| holds true
The norm || || usually taken is the square norm.</p>
<p>

<b>Step 4</b>. Change the vectors for Cp,Cm,Co...</p>
<p>

ΔWi = E(t)*hλ(ki(X,A))*(X-Wi)</p>
<p>

Where,
λ(t) = λi(λf/λi)(t/tmax)
E(t) = Ei(Ef/Ei)t/tmax
hλ = e(-k/λ(t))</p>
<p>

<b>Step 5</b>. Increment t</p>
<p>

t=t+1</p>
<p>

<b>Step 6</b>. tmax return to step 2.</p>

</sec>
<sec>
<st>
Comments</st>
<p>

1. The neural gas model does not delete a node and also does not create new nodes.</p>
<p>

2. The neural gas model will require fine tuning of the λ parameters especially to achieve a good convergence rate and stable model.</p>
<p>

3. It is topology representing neural network, that is after reaching convergence (&amp;gt;tmax), the network node's vector would be representing the distribution being modelled.<weblink xlink:type="simple" xlink:href="http://www.neuroinformatik.ruhr-uni-bochum.de/ini/VDM/research/gsn/JavaPaper/img187.gif">
http://www.neuroinformatik.ruhr-uni-bochum.de/ini/VDM/research/gsn/JavaPaper/img187.gif</weblink></p>

</sec>
<sec>
<st>
References &amp; External Links</st>
<p>

<list>
<entry level="1" type="bullet">

 T. M. Martinetz and K. J. Schulten. A ``neural-gas<it> network learns topologies. In T. Kohonen, K. Mäkisara, O. Simula, and J. Kangas, editors, Artificial Neural Networks, pages 397-402. North-Holland, Amsterdam, 1991.</it></entry>
<entry level="1" type="bullet">

 Neural Gas Algorithm <weblink xlink:type="simple" xlink:href="http://www.neuroinformatik.ruhr-uni-bochum.de/ini/VDM/research/gsn/JavaPaper/node16.html">
http://www.neuroinformatik.ruhr-uni-bochum.de/ini/VDM/research/gsn/JavaPaper/node16.html</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.neuroinformatik.ruhr-uni-bochum.de/ini/VDM/research/gsn/DemoGNG/GNG.html">
Java applet.</weblink> It show evolution of Neural Gas, Growing Neural Gas and several other methods related to competitive learning.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.e-nuts.net/en/growing-neural-gas">
Growing Neural Gas videos.</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://homepages.feis.herts.ac.uk/~nngroup/software.html">
Java Competitve Learning Application</weblink> A suite of Unsupervised Neural Networks (including Self-organizing map) written in Java.  Complete with all source code.</entry>
</list>
</p>


</sec>
</bdy>
</article>
