<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:36:59[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Graph isomorphism</title>
<id>247577</id>
<revision>
<id>244681067</id>
<timestamp>2008-10-12T00:47:52Z</timestamp>
<contributor>
<username>Arthur Rubin</username>
<id>374195</id>
</contributor>
</revision>
<categories>
<category>All pages needing cleanup</category>
<category>Graph theory</category>
<category>Incomplete lists</category>
<category>Articles with unsourced statements </category>
<category>Graph algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../401/12401.xml">
graph theory</link>, an <b>isomorphism of <link xlink:type="simple" xlink:href="../806/325806.xml">
graph</link>s</b> <it>G</it> and <it>H</it> is a <link xlink:type="simple" xlink:href="../942/3942.xml">
bijection</link> between the vertex sets of <it>G</it> and <it>H</it>
<indent level="1">

<math> f \colon V(G) \to V(H) \,\!</math>
</indent>
such that any two vertices <it>u</it> and <it>v</it> of <it>G</it> are <link xlink:type="simple" xlink:href="../508/1651508.xml">
adjacent</link> in <it>G</it> <link xlink:type="simple" xlink:href="../922/14922.xml">
if and only if</link> ƒ(<it>u</it>) and ƒ(<it>v</it>) are adjacent in <it>H</it>. This kind of bijection is commonly called "edge-preserving bijection", in accordance with the general notion of <link xlink:type="simple" xlink:href="../828/14828.xml">
isomorphism</link> being a structure-preserving bijection.<p>

If an <link xlink:type="simple" xlink:href="../828/14828.xml">
isomorphism</link> exists between two graphs, then the graphs are called <b>isomorphic</b>. In the case  when the bijection is a mapping of a graph onto itself, i.e., when <it>G</it> and <it>H</it> are one and the same graph, the bijection is called an <link xlink:type="simple" xlink:href="../186/15094186.xml">
automorphism</link> of <it>G</it>.</p>
<p>

The graph isomorphism is an <link xlink:type="simple" xlink:href="../259/9259.xml">
equivalence relation</link> on graphs and as such it partitions the set of all graphs into <link xlink:type="simple" xlink:href="../260/9260.xml">
equivalence class</link>es. A set of graphs isomorphic to each other is called an <b><link xlink:type="simple" xlink:href="../826/14826.xml">
isomorphism class</link> of graphs</b>. </p>

<p>

<table style="clear: right; margin-bottom: .5em; float: right; padding: .5em 0 .8em 1.4em; background: none; width: auto;" cellpadding="0" cellspacing="0">
<row>
<col>
__TOC__</col>
</row>
</table>

</p>
<sec>
<st>
Example</st>
<p>

The two graphs shown below are isomorphic, despite their different looking <link xlink:type="simple" xlink:href="../813/325813.xml">
drawings</link>.</p>
<p>

<table style="margin: 1em auto 1em auto" class="wikitable">
<header>
Graph G</header>
<header>
Graph H</header>
<header>
An isomorphismbetween G and H</header>
<row>
<col style="padding-left:2em;padding-right:2em;">
<image width="100px" src="Graph_isomorphism_a.svg">
</image>
</col>
<col style="padding-left:1em;padding-right:1em;">
<image width="210px" src="Graph_isomorphism_b.svg">
</image>
</col>
<col style="background-color:white;" align="center">
ƒ(<it>a</it>) = 1<p>

ƒ(<it>b</it>) = 6</p>
<p>

ƒ(<it>c</it>) = 8</p>
<p>

ƒ(<it>d</it>) = 3</p>
<p>

ƒ(<it>g</it>) = 5</p>
<p>

ƒ(<it>h</it>) = 2</p>
<p>

ƒ(<it>i</it>) = 4</p>
<p>

ƒ(<it>j</it>) = 7</p>
</col>
</row>
</table>
</p>

</sec>
<sec>
<st>
Motivation</st>
<p>

The formal notion of "isomorphism", e.g., of "graph isomorphism", captures the informal notion that some objects have "the same structure" if one ignores individual distinctions of "atomic" components of objects in question, see the <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Example%22])">
example above</link>. Whenever individuality of "atomic" components (vertices and edges, for graphs) is important for correct representation of whatever is modeled by graphs, the model is refined by imposing additional restrictions on the structure, and other mathematical objects are used: <link xlink:type="simple" xlink:href="../986/19721986.xml">
digraph</link>s, <link xlink:type="simple" xlink:href="../563/1017563.xml">
labeled graph</link>s, <link xlink:type="simple" xlink:href="../107/1304107.xml">
colored graph</link>s, <link xlink:type="simple" xlink:href="../560/48560.xml">
rooted tree</link>s and so on. The isomorphism relation may also be defined for all these generalizations of graphs:  the isomorphism bijection must preserve the elements of structure which define the object type in question: <link xlink:type="simple" xlink:href="../986/19721986.xml">
arc</link>s, labels, vertex/edge colors, the root of the rooted tree, etc.</p>
<p>

The notion of "graph isomorphism" allows us to distinguish <link xlink:type="simple" xlink:href="../142/1655142.xml">
graph properties</link> inherent to the structures of graphs themselves from properties associated with graph representations: <link xlink:type="simple" xlink:href="../813/325813.xml">
graph drawing</link>s, <link xlink:type="simple" xlink:href="../931/557931.xml">
data structures for graphs</link>, <link xlink:type="simple" xlink:href="../861/1609861.xml">
graph labeling</link>s, etc. For example, if a graph has exactly one <link xlink:type="simple" xlink:href="../609/168609.xml">
cycle</link>, then all graphs in its isomorphism class also have exactly one cycle. On the other hand, in the common case when the vertices of a graph are (<it>represented</it> by) the <link xlink:type="simple" xlink:href="../563/14563.xml">
integer</link>s 1, 2,... <it>N</it>, then the expression
<indent level="1">

<math>\sum_{v \in V(G)} v\cdot\text{deg }v</math>
</indent>
may be different for two isomorphic graphs.</p>

</sec>
<sec>
<st>
 Results </st>

<p>

<image location="right" width="200px" src="Whitneys_theorem_exception.svg" type="thumb">
<caption>

The exception of Whitney's theorem: these two graphs are not isomorphic but have isomorphic line graphs.
</caption>
</image>

The Whitney graph isomorphism theorem<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>, shown by <link xlink:type="simple" xlink:href="../794/391794.xml">
H. Whitney</link>, states that two connected graphs are isomorphic if and only if their <link xlink:type="simple" xlink:href="../231/675231.xml">
line graph</link>s are isomorphic, with a single exception: <it>K</it>3, the <link xlink:type="simple" xlink:href="../816/85816.xml">
complete graph</link> on three vertices, and the <link xlink:type="simple" xlink:href="../320/525320.xml">
complete bipartite graph</link> <it>K</it>1,3, which are not isomorphic but both have <it>K</it>3 as their line graph. The Whitney graph theorem can be extended to <link xlink:type="simple" xlink:href="../535/232535.xml">
hypergraph</link>s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

</sec>
<sec>
<st>
 The graph isomorphism problem </st>

<p>

The computational problem of determining whether two finite graphs are isomorphic is referred to as the <b>graph isomorphism problem</b>.</p>
<p>

Besides its practical importance, the graph isomorphism problem is a curiosity in <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link> as it is one of a very small number of problems belonging to <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../562/21562.xml">
NP</link></group>
</collection>
</class>
 neither known to be solvable in <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial time</link> nor <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/39466.xml">
NP-complete</link></group>
</collection>
</class>
. At the same time, isomorphism for many special classes of graphs can be solved in polynomial time, and in practice graph isomorphism can often be solved efficiently.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> </p>
<p>

A generalization of the problem, the <link xlink:type="simple" xlink:href="../062/450062.xml">
subgraph isomorphism problem</link>, is known to be <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/39466.xml">
NP-complete</link></group>
</collection>
</class>
.</p>

</sec>
<sec>
<st>
Solved special cases</st>
<p>

A number of important special cases of the graph isomorphism problem have efficient, polynomial-time solutions:
<list>
<entry level="1" type="bullet">

 <graph wordnetid="107000195" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../560/48560.xml">
Tree</link></graph>
s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></entry>
<entry level="1" type="bullet">

 <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../314/24314.xml">
Planar graph</link></family>
s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
<entry level="1" type="bullet">

 <graph wordnetid="107000195" confidence="0.8">
<family wordnetid="108078020" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<visual_communication wordnetid="106873252" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../423/363423.xml">
Interval graph</link></group>
</visual_communication>
</collection>
</class>
</family>
</graph>
s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="1" type="bullet">

 <graph wordnetid="107000195" confidence="0.8">
<family wordnetid="108078020" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<visual_communication wordnetid="106873252" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../375/17625375.xml">
Permutation graph</link></group>
</visual_communication>
</collection>
</class>
</family>
</graph>
s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref></entry>
<entry level="1" type="bullet">

 <link>
Partial k-tree</link>s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></entry>
<entry level="1" type="bullet">

Bounded-parameter graphs</entry>
<entry level="2" type="bullet">

 Graphs of bounded <link xlink:type="simple" xlink:href="../891/61891.xml">
genus</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref>(Note: planar graphs are graphs of genus 0)</entry>
<entry level="2" type="bullet">

 Graphs of bounded <link xlink:type="simple" xlink:href="../448/1374448.xml">
degree</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref></entry>
<entry level="2" type="bullet">

 Graphs with bounded <link xlink:type="simple" xlink:href="../429/2161429.xml">
eigenvalue</link> multiplicity.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></entry>
</list>
</p>

<ss1>
<st>
 Rooted trees </st>

<p>

There is a particularly simple algorithm for determining if two rooted trees T and T' are isomorphic. First, assume that T and T' have the same number of vertices and the same height (otherwise they are not isomorphic). The vertices can be grouped into <it>levels</it>, sets of vertices that are the same distance from the root; since distance from the root is preserved by isomorphism, vertices in T must correspond to vertices in T' at the same level. We process the tree beginning with the bottom level and moving upwards, systematically assigning a label to each vertex such that two vertices have the same label if and only if the subtrees rooted at those two vertices are isomorphic.</p>
<p>

Suppose <it>v</it> is an unlabelled vertex. Since the algorithm processes the tree bottom-up, all its children already have labels; assign <it>v</it> a temporary <it>long label</it> by sorting and concatenating the labels of its children. Next, sort all vertices at the current level by their long labels; then, assign fresh <it>short labels</it> to each vertex by numbering them from zero and giving identically-labelled vertices the same number. If at any level the final sorted set of short labels is different in T and T', then they are not isomorphic; otherwise the two roots will be assigned the same label and they are isomorphic.</p>
<p>

Sorting the labels with a simple <link xlink:type="simple" xlink:href="../304/3189304.xml">
comparison sort</link>, this algorithm requires &amp;Theta;(<it>n</it> log <it>n</it>) time, where <it>n</it> is the number of vertices; it can be made to operate in O(<it>n</it>) time by careful use of <link xlink:type="simple" xlink:href="../592/97592.xml">
bucket sort</link> and <link xlink:type="simple" xlink:href="../980/25980.xml">
radix sort</link>.</p>
<p>

This algorithm can be used to find isomorphism of general trees by noting that an isomorphism must map the <link xlink:type="simple" xlink:href="../275/10447275.xml">
center</link> of T to the center of T'; the center of a tree has at most two vertices, so there are at most two ways of selecting the root nodes.</p>

</ss1>
</sec>
<sec>
<st>
 Complexity class GI </st>
<p>

Since the graph isomorphism problem is neither known to be NP-complete nor to be tractable, researchers have sought to gain insight into the problem by defining a new class <b>GI</b>, the set of problems with a <link xlink:type="simple" xlink:href="../695/159695.xml">
polynomial-time Turing reduction</link> to the graph isomorphism problem.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref> If in fact the graph isomorphism problem is solvable in polynomial time, <b>GI</b> would equal <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../550/658550.xml">
P</link></group>
</collection>
</class>
</b>.</p>
<p>

Some problems are <link xlink:type="simple" xlink:href="../530/1176530.xml">
complete</link> for <b>GI</b>, meaning that there is a polynomial-time Turing reduction from any problem in <b>GI</b> to that problem; these problems are called <b>GI-complete</b>,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref> and a polynomial-time solution to any one of these would yield a polynomial-time solution to the graph ismorphism problem (and so all problems in <b>GI</b>).</p>
<p>

The graph isomorphism problem is contained in both <b>NP</b> and co-<b><link xlink:type="simple" xlink:href="../203/663203.xml">
AM</link></b>. GI is contained in and <link xlink:type="simple" xlink:href="../468/2006468.xml">
low</link> for <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../422/2120422.xml">
Parity P</link></group>
</collection>
</class>
, as well as contained in the potentially much smaller class <weblink xlink:type="simple" xlink:href="http://qwiki.caltech.edu/wiki/Complexity_Zoo#spp">
SPP</weblink>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref> That it lies in Parity P means that the graph isomorphism problem is no harder than determining whether a polynomial-time <link>
nondeterministic Turing machine</link> has an even or odd number of accepting paths. GI is also contained in and low for <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../772/54772.xml">
ZPP</link></group>
</collection>
</class>
NP.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref> This essentially means that an efficient <link xlink:type="simple" xlink:href="../519/537519.xml">
Las Vegas algorithm</link> with access to an NP <link xlink:type="simple" xlink:href="../431/22431.xml">
oracle</link> can solve graph isomorphism so easily that it gains no power from being given the ability to do so in constant time.</p>

</sec>
<sec>
<st>
GI-Complete problems</st>

<ss1>
<st>
Isomorphism of other objects</st>
<p>

There are a number of classes of mathematical objects for which the problem of isomorphism is a GI-complete problem. A number of them are graphs endowed with additional properties or restrictions: <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref>
<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../986/19721986.xml">
digraphs</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../563/1017563.xml">
labelled graph</link>s, with the proviso that an isomorphism is not required to preserve the labels, <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref>but only the <link xlink:type="simple" xlink:href="../259/9259.xml">
equivalence relation</link> consisting of pairs of vertices with the same label</entry>
<entry level="1" type="bullet">

<link>
polarized graph</link>s (made of a <link xlink:type="simple" xlink:href="../816/85816.xml">
complete graph</link> Km and an <link xlink:type="simple" xlink:href="../758/1520758.xml">
empty graph</link> Kn plus some edges connecting the two; their isomorphism must preserve the partition)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

2-<link xlink:type="simple" xlink:href="../107/1304107.xml">
colored graph</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

explicitly given finite <link xlink:type="simple" xlink:href="../928/4055928.xml">
structure</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../970/1774970.xml">
multigraph</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../535/232535.xml">
hypergraph</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../931/10931.xml">
finite automata</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../390/294390.xml">
commutative</link> class 3 <link xlink:type="simple" xlink:href="../235/252235.xml">
nilpotent</link> (i.e., <it>xyz</it> = 0 for every elements <it>x</it>, <it>y</it>, <it>z</it>) <link xlink:type="simple" xlink:href="../799/27799.xml">
semigroup</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

finite rank <link xlink:type="simple" xlink:href="../335/1335.xml">
associative</link> <link xlink:type="simple" xlink:href="../788/191788.xml">
algebras</link> over a fixed algebraically closed field with zero squared radical and commutative factor over the radical <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../759/6759.xml">
context-free grammar</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../184/1188184.xml">
balanced incomplete block design</link>s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
</list>

<it>This list is ; you can help by <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Graph_isomorphism&amp;action=edit">
expanding it</weblink></it>.</p>

</ss1>
<ss1>
<st>
GI-complete classes of graphs</st>
<p>

A class of graphs is called GI-complete if recognition of isomorphism for graphs from this subclass is a GI-complete problem. The following classes are GI-complete:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref>
<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../492/1614492.xml">
connected graph</link>s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

graphs of diameter 2 and radius 1<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../002/204002.xml">
directed acyclic graph</link>s  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../821/85821.xml">
regular graph</link>s.  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../431/244431.xml">
bipartite graph</link>s without non-trivial <link xlink:type="simple" xlink:href="../856/1399856.xml">
strongly regular subgraphs</link> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

bipartite <link xlink:type="simple" xlink:href="../219/333219.xml">
Eulerian graph</link>s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

bipartite regular graphs <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../231/675231.xml">
line graph</link>s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../165/744165.xml">
chordal graph</link>s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

regular <link xlink:type="simple" xlink:href="../884/15093884.xml">
self-complementary graph</link>s <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
<entry level="1" type="bullet">

graphs of general, simple, and simplicial <link xlink:type="simple" xlink:href="../471/23471.xml">
polytopes</link> in arbitrary dimensions</entry>
</list>

<it>This list is ; you can help by <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Graph_isomorphism&amp;action=edit">
expanding it</weblink></it>.
Many classes of digraphs are also GI-complete.</p>

</ss1>
<ss1>
<st>
Other</st>
<p>

There are other nontrivial GI-complete problems in addition to isomorphism problems.</p>
<p>

<list>
<entry level="1" type="bullet">

The recognition of self-complementarity of a graph or digraph<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref></entry>
<entry level="1" type="bullet">

A <link xlink:type="simple" xlink:href="../254/249254.xml">
clique problem</link> for a class of so-called M-graphs. It is shown that finding of an isomorphism for n-vertex graphs is equivalent to finding an n-clique in an M-graph of size n2. This fact is interesting because the problem of finding an n-ε-clique in a M-graph  of size n2 is NP-complete for arbitrarily small positive ε. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 Applications </st>
<p>

The graph isomorphism problem has a number of practical applications. </p>
<p>

In <link xlink:type="simple" xlink:href="../697/575697.xml">
cheminformatics</link> and in <link xlink:type="simple" xlink:href="../072/1570072.xml">
mathematical chemistry</link>, graph isomorphism and other graph matching techniques are used to identify a <link xlink:type="simple" xlink:href="../412/144412.xml">
chemical compound</link> within a <link xlink:type="simple" xlink:href="../787/553787.xml">
chemical database</link>. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref>  Also, in organic mathematical chemistry graph isomorphism testing is useful for generation of <link xlink:type="simple" xlink:href="../178/14240178.xml">
molecular graph</link>s and for <link xlink:type="simple" xlink:href="../680/36680.xml">
computer synthesis</link>.  </p>
<p>

Since the molecular graphs have bounded degree (as the <link xlink:type="simple" xlink:href="../042/1645042.xml">
valence</link> of any atom is at most 8), their isomorphism is testable in polynomial time<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref>. Also, the majority of chemical structures are <link xlink:type="simple" xlink:href="../314/24314.xml">
planar graph</link>s. So, for many practical wide-distributed tasks (chemical database support etc.) special notations (for example, <link xlink:type="simple" xlink:href="../569/28569.xml">
SMILES</link>) or fast isomorphism testing for planar molecular graphs may be sufficient. </p>
<p>

<family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../821/85821.xml">
Regular graph</link></family>
s are very difficult for isomorphism testing and many of them are very important for chemistry (for example, <substance wordnetid="100019613" confidence="0.8">
<solvent wordnetid="115047313" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<medium wordnetid="114899152" confidence="0.8">
<link xlink:type="simple" xlink:href="../744/384744.xml">
Cyclohexane</link></medium>
</part>
</solvent>
</substance>
, <link xlink:type="simple" xlink:href="../186/18582186.xml">
Benzene</link>, <link xlink:type="simple" xlink:href="../741/15451741.xml">
Cuneane</link>, <link xlink:type="simple" xlink:href="../483/1628483.xml">
Dodecahedrane</link> etc.), but their part among chemical compounds is small, and decreases with increasing of number of vertices.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref>&#91;&#93;</p>
<p>

In <link xlink:type="simple" xlink:href="../881/216881.xml">
electronic design automation</link> graph isomorphism is the basis of the <link xlink:type="simple" xlink:href="../934/4300934.xml">
Layout Versus Schematic</link> (LVS) circuit design step, which is a verification whether the <link xlink:type="simple" xlink:href="../559/9559.xml">
electric circuit</link>s represented by a <link xlink:type="simple" xlink:href="../339/587339.xml">
circuit schematic</link> and an <link xlink:type="simple" xlink:href="../949/598949.xml">
integrated circuit layout</link> are the same.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../328/676328.xml">
Graph homomorphism</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../186/15094186.xml">
Graph automorphism problem</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>

<p>

<reflist>
<entry id="1">
H. Whitney, "Congruent graphs and the connectivity of graphs", <it>Am. J. Math.</it>, <b>54</b>(1932) pp. 160-168.</entry>
<entry id="2">
Dirk L. Vertigan, Geoffrey P. Whittle: A 2-Isomorphism Theorem for Hypergraphs. J. Comb. Theory, Ser. B 71(2): 215-230. 1997.</entry>
<entry id="3">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFMcKay1981%22])">
McKay 1981</link></entry>
<entry id="4">
P.J. Kelly,   "A congruence theorem for trees"  Pacific J. Math., 7  (1957)  pp. 961–968</entry>
<entry id="5">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFAhoHopcroftUllman1974%22])">
Aho, Hopcroft &amp; Ullman 1974</link></entry>
<entry id="6">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFHopcroftWong1974%22])">
Hopcroft &amp; Wong 1974</link></entry>
<entry id="7">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFBoothLueker1979%22])">
Booth &amp; Lueker 1979</link></entry>
<entry id="8">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFColbourn1981%22])">
Colbourn 1981</link></entry>
<entry id="9">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFBodlaender1990%22])">
Bodlaender 1990</link></entry>
<entry id="10">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFMiller1980%22])">
Miller 1980</link></entry>
<entry id="11">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFFilottiMayer1980%22])">
Filotti &amp; Mayer 1980</link></entry>
<entry id="12">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFLuks1982%22])">
Luks 1982</link></entry>
<entry id="13">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFBabaiGrigoryevMount1982%22])">
Babai, Grigoryev &amp; Mount 1982</link></entry>
<entry id="14">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFBoothColbourn1977%22])">
Booth &amp; Colbourn 1977</link>; <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFK=C3=B6blerSch=C3=B6ningTor=C3=A1n1993%22])">
Köbler, Schöning &amp; Torán 1993</link></entry>
<entry id="15">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFBoucherLoker2006%22])">
Boucher &amp; Loker 2006</link></entry>
<entry id="17">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFArvindK=C3=B6bler2000%22])">
Arvind &amp; Köbler 2000</link></entry>
<entry id="16">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFK=C3=B6blerSch=C3=B6ningTor=C3=A1n1992%22])">
Köbler, Schöning &amp; Torán 1992</link>; <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFArvindKurur2006%22])">
Arvind &amp; Kurur 2006</link></entry>
<entry id="19">
Colbourn M.J., Colbourn Ch.J. "Graph isomorphism and self-complementary graphs", <it><link xlink:type="simple" xlink:href="../782/4356782.xml">
SIGACT News</link></it>, 1978, vol. 10, no. 1, 25-29</entry>
<entry id="18">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFZemlyachenkoKorneenkoTyshkevich1985%22])">
Zemlyachenko, Korneenko &amp; Tyshkevich 1985</link></entry>
<entry id="21">
Christophe-André Mario Irniger (2005) "Graph Matching: Filtering Databases of Graphs Using Machine Learning", ISBN 1586035576 </entry>
<entry id="20">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFKozen1978%22])">
Kozen 1978</link>.</entry>
<entry id="23">
M.I.Trofimov, E.A.Smolenskii, Russian Chemical Bulletin, 2005, Vol. 54, 9, 2235. (http://dx.doi.org/10.1007/s11172-006-0105-6)</entry>
<entry id="22">
<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFLuks1982%22])">
Luks 1982</link></entry>
</reflist>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFAhoHopcroftUllman1974" style="font-style:normal"><link>
Aho, Alfred V.</link>; <link>
Hopcroft, John</link>&#32;&amp;&#32;<link>
Ullman, Jeffrey D.</link>&#32;(1974),&#32;<it>The Design and Analysis of Computer Algorithms</it>, Reading, MA: Addison-Wesley</cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFArvindK.C3.B6bler2000" style="font-style:normal">Arvind, Vikraman&#32;&amp;&#32;Köbler, Johannes&#32;(2000),&#32;"Graph isomorphism is low for ZPP(NP) and other lowness results.",&#32;<it>Proceedings of the 17th Annual Symposium on Theoretical Aspects of Computer Science</it>, Springer-Verlag, Lecture Notes in Computer Science 1770, pp. 431–442, ISBN 3-540-67141-2</cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFArvindKurur2006" style="font-style:normal">Arvind, Vikraman&#32;&amp;&#32;Kurur, Piyush P.&#32;(2006),&#32;"Graph isomorphism is in SPP",&#32;<it>Information and Computation</it>&#32;<b>204</b>(5):  835–852, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2Fj.ic.2006.02.002">
10.1016/j.ic.2006.02.002</weblink></cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBabaiGrigoryevMount1982" style="font-style:normal"><link>
Babai, László</link>; <link>
Grigoryev, D. Yu.</link>&#32;&amp;&#32;<link>
Mount, David M.</link>&#32;(1982),&#32;<it><weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=802206&amp;dl=ACM&amp;coll=portal">
Isomorphism of graphs with bounded eigenvalue multiplicity</weblink></it>, pp. 310–324, Proceedings of the 14th  Annual ACM Symposium on Theory of Computing, </cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBodlaender1990" style="font-style:normal">Bodlaender, Hans&#32;(1990),&#32;"Polynomial algorithms for graph isomorphism and chromatic index on partial k-trees",&#32;<it>Journal of Algorithms</it>&#32;<b>11</b>:  631–643, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2F0196-6774%2890%2990013-5">
10.1016/0196-6774(90)90013-5</weblink></cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBoothColbourn1977" style="font-style:normal">Booth, Kellogg S.&#32;&amp;&#32;Colbourn, C. J.&#32;(1977),&#32;<it>Problems polynomially equivalent to graph isomorphism</it>, Technical Report CS-77-04, Computer Science Department, University of Waterloo</cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBoothLueker1979" style="font-style:normal">Booth, Kellogg S.&#32;&amp;&#32;Lueker, George S.&#32;(1979),&#32;"A linear time algorithm for deciding interval graph isomorphism",&#32;<it><magazine wordnetid="106595351" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../845/2321845.xml">
Journal of the ACM</link></magazine>
</it>&#32;<b>26</b>(2):  183–195, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F322123.322125">
10.1145/322123.322125</weblink></cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBoucherLoker2006" style="font-style:normal">Boucher, C.&#32;&amp;&#32;Loker, D.&#32;(2006),&#32;<it><weblink xlink:type="simple" xlink:href="http://www.cs.uwaterloo.ca/research/tr/2006/CS-2006-32.pdf">
Graph isomorphism completeness for perfect graphs and subclasses of perfect graphs</weblink></it>, University of Waterloo, Technical Report CS-2006-32, </cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFColbourn1981" style="font-style:normal">Colbourn, C. J.&#32;(1981),&#32;"On testing isomorphism of permutation graphs",&#32;<it>Networks</it>&#32;<b>11</b>:  13–21, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1002%2Fnet.3230110103">
10.1002/net.3230110103</weblink></cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

I. S. Filotti , Jack N. Mayer   (1980), A polynomial-time algorithm for determining the isomorphism of graphs of fixed genus, Proceedings of the 12th Annual ACM Symposium on Theory of Computing, p.236-243</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFGareyJohnson1979" style="font-style:normal"><link>
Garey, Michael R.</link>&#32;&amp;&#32;<link>
Johnson, David S.</link>&#32;(1979),&#32;<it>Computers and Intractability: A Guide to the Theory of NP-Completeness</it>, W. H. Freeman, ISBN 978-0716710455</cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFHopcroftWong1974" style="font-style:normal"><link>
Hopcroft, John</link>&#32;&amp;&#32;Wong, J.&#32;(1974),&#32;"Linear time algorithm for isomorphism of planar graphs",&#32;<it>Proceedings of the Sixth Annual ACM Symposium on Theory of Computing</it>, pp. 172–184, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F800119.803896">
10.1145/800119.803896</weblink></cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFK.C3.B6blerSch.C3.B6ningTor.C3.A1n1992" style="font-style:normal">Köbler, Johannes; Schöning, Uwe&#32;&amp;&#32;Torán, Jacobo&#32;(1992),&#32;"Graph isomorphism is low for PP",&#32;<it>Computational Complexity</it>&#32;<b>2</b>(4):  301–330, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1007%2FBF01200427">
10.1007/BF01200427</weblink></cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFK.C3.B6blerSch.C3.B6ningTor.C3.A1n1993" style="font-style:normal">Köbler, Johannes; Schöning, Uwe&#32;&amp;&#32;Torán, Jacobo&#32;(1993),&#32;<it>The Graph Isomorphism Problem: Its Structural Complexity</it>, Birkhäuser, ISBN 978-0817636807</cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFKozen1978" style="font-style:normal">Kozen, Dexter&#32;(1978),&#32;"A clique problem equivalent to graph isomorphism",&#32;<it>ACM SIGACT News</it>&#32;<b>10</b>(2):  50–52, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F990524.990529">
10.1145/990524.990529</weblink></cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFLuks1982" style="font-style:normal">Luks, Eugene M.&#32;(1982),&#32;"Isomorphism of graphs of bounded valence can be tested in polynomial time",&#32;<it>Journal of Computer and System Sciences</it>&#32;<b>25</b>:  42–65, <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2F0022-0000%2882%2990009-5">
10.1016/0022-0000(82)90009-5</weblink></cite>&nbsp;.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFMcKay1981" style="font-style:normal"><link>
McKay, Brendan D.</link>&#32;(1981),&#32;"<weblink xlink:type="simple" xlink:href="http://cs.anu.edu.au/~bdm/nauty/PGI/">
Practical graph isomorphism</weblink>",&#32;<it>Congressus Numerantium</it>&#32;<b>30</b>:  45–87, 10th. Manitoba Conference on Numerical Mathematics and Computing (Winnipeg, 1980), </cite>&nbsp;</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFMiller1980" style="font-style:normal"><link>
Miller, Gary</link>&#32;(1980),&#32;<it><weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=804670&amp;dl=ACM&amp;coll=portal">
Isomorphism testing for graphs of bounded genus</weblink></it>, pp. 225–235, Proceedings of the 12th Annual ACM Symposium on Theory of Computing, </cite>&nbsp;</entry>
</list>
</p>

<ss1>
<st>
Surveys</st>
<p>

<list>
<entry level="1" type="bullet">

Ronald Read and Derek Corneil. "The graph isomorphism disease". <it>Journal of Graph Theory</it> 1977, 1, 339-363</entry>
<entry level="1" type="bullet">

Gati, G. "Further annotated bibliography on the isomorphism disease." – <it>Journal of Graph Theory</it> 1979, 3, 95-109</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Zemlyachenko, V. N.; Korneenko, N. M. and Tyshkevich, R. I.&#32;(1985).&#32;"Graph isomorphism problem". <it>Journal of Mathematical Sciences</it>&#32;<b>29</b>&#32;(4): pp. 1426–1481. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1007%2FBF02104746">
10.1007/BF02104746</weblink>.</cite>&nbsp; (Translated from <it>Zapiski Nauchnykh Seminarov Leningradskogo Otdeleniya Matematicheskogo Instituta im. V. A. Steklova AN SSSR</it> (Records of Seminars of the <link xlink:type="simple" xlink:href="../996/16031996.xml">
Leningrad Department of Steklov Institute of Mathematics of the USSR Academy of Sciences</link>), Vol. 118, pp. 83–158, 1982.)</entry>
</list>
</p>





</ss1>
</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
