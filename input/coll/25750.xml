<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:34:03[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Routing</title>
<id>25750</id>
<revision>
<id>243073852</id>
<timestamp>2008-10-05T01:05:24Z</timestamp>
<contributor>
<username>Darth Panda</username>
<id>580942</id>
</contributor>
</revision>
<categories>
<category>Internet architecture</category>
<category>Routing</category>
</categories>
</header>
<bdy>

This article is about routing in networks.&#32;&#32;For other uses, see <link xlink:type="simple" xlink:href="../339/1072339.xml">
Routing (disambiguation)</link>.<p>

<b>Routing</b> is the process of selecting paths in a <link xlink:type="simple" xlink:href="../592/4122592.xml">
network</link> along which to send network traffic.  Routing is performed for many kinds of networks, including the <link xlink:type="simple" xlink:href="../436/468436.xml">
telephone network</link>, electronic data networks (such as the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>), and <link xlink:type="simple" xlink:href="../428/1457428.xml">
transportation (transport) networks</link>. This article is concerned primarily with routing in electronic data networks using <link xlink:type="simple" xlink:href="../339/43339.xml">
packet switching</link> technology.</p>
<p>

In packet switching networks, routing directs <link xlink:type="simple" xlink:href="../520/1073520.xml">
forwarding</link>, the transit of logically addressed packets from their source toward their ultimate destination through intermediate <link xlink:type="simple" xlink:href="../116/998116.xml">
nodes</link>; typically hardware devices called <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link>s, <link xlink:type="simple" xlink:href="../410/642410.xml">
bridges</link>, <link xlink:type="simple" xlink:href="../556/1338556.xml">
gateways</link>, <link xlink:type="simple" xlink:href="../296/1362296.xml">
firewall</link>s, or <link xlink:type="simple" xlink:href="../614/40614.xml">
switches</link>.  Ordinary computers with multiple <link xlink:type="simple" xlink:href="../613/243613.xml">
network card</link>s can also forward packets and perform routing, though they are not specialized hardware and may suffer from limited performance.  The routing process usually directs forwarding on the basis of <link xlink:type="simple" xlink:href="../043/48043.xml">
routing table</link>s which maintain a record of the routes to various network destinations.  Thus constructing routing tables, which are held in the routers' <link xlink:type="simple" xlink:href="../300/5300.xml">
memory</link>, becomes very important for efficient routing.  Most routing algorithms use only one network path at a time, but <link xlink:type="simple" xlink:href="../656/18111656.xml">
multipath routing</link> techniques enable the use of multiple alternative paths.</p>
<p>

Routing, in a more narrow sense of the term, is often contrasted with <link xlink:type="simple" xlink:href="../169/2702169.xml">
bridging</link> in its assumption that <link xlink:type="simple" xlink:href="../925/8168925.xml">
network address</link>es are structured and that similar addresses imply proximity within the network.  Because structured addresses allow a single routing table entry to represent the route to a group of devices, structured addressing (routing, in the narrow sense) outperforms unstructured addressing (bridging) in large networks, and has become the dominant form of addressing on the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>, though bridging is still widely used within localized environments.</p>

<sec>
<st>
Delivery semantics</st>

<p>

<table style="float:right; clear:both; margin:1em; padding:0; border: thin solid #000; text-align:center;">
<header style="background-color:#ddd; color:#000;">
<link xlink:type="simple" xlink:href="../750/25750.xml">
Routing</link> Schemes<p>

<image width="100px" src="cast.svg">
</image>
</p>
</header>
<row>
<header style="border-bottom: thin solid #999;">
<link xlink:type="simple" xlink:href="../545/387545.xml">
anycast</link><p>

<image width="100px" src="anycast.svg">
</image>
</p>
</header>
</row>
<row>
<header style="border-bottom: thin solid #999;">
<link xlink:type="simple" xlink:href="../540/2704540.xml">
broadcast</link><p>

<image width="100px" src="broadcast.svg">
</image>
</p>
</header>
</row>
<row>
<header style="border-bottom: thin solid #999;">
<link xlink:type="simple" xlink:href="../407/20407.xml">
multicast</link><p>

<image width="100px" src="multicast.svg">
</image>
</p>
</header>
</row>
<row>
<header style="border-bottom: 0 solid #555;">
<link xlink:type="simple" xlink:href="../077/738077.xml">
unicast</link><p>

<image width="100px" src="unicast.svg">
</image>
</p>
</header>
</row>
</table>
</p>

<p>


Routing schemes differ in their delivery semantics:</p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../077/738077.xml">
unicast</link> delivers a message to a single specified node;</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../540/2704540.xml">
broadcast</link> delivers a message to all nodes in the network;</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../407/20407.xml">
multicast</link> delivers a message to a group of nodes that have expressed interest in receiving the message;</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../545/387545.xml">
anycast</link> delivers a message to any one out of a group of nodes, typically the one nearest to the source.</entry>
</list>
</p>
<p>

Unicast is the dominant form of message delivery on the Internet, and this article focuses on unicast routing algorithms.</p>

</sec>
<sec>
<st>
Topology distribution</st>

<p>

Small networks may involve manually configured routing tables, while larger networks involve complex <link xlink:type="simple" xlink:href="../413/41413.xml">
topologies</link> and may change rapidly, making the manual construction of routing tables unfeasible. Nevertheless, most of the <link xlink:type="simple" xlink:href="../436/468436.xml">
public switched telephone network</link> (PSTN) uses pre-computed routing tables, with fallback routes if the most direct route becomes blocked; see <link xlink:type="simple" xlink:href="../465/925465.xml">
routing in the PSTN</link>. <link xlink:type="simple" xlink:href="../453/923453.xml">
Adaptive routing</link> attempts to solve this problem by constructing routing tables automatically, based on information carried by <link xlink:type="simple" xlink:href="../059/10123059.xml">
routing protocol</link>s, and allowing the network to act nearly autonomously in avoiding network failures and blockages.</p>
<p>

<link xlink:type="simple" xlink:href="../453/923453.xml">
Dynamic routing</link> dominates the Internet.  However, the configuration of the routing protocols often requires a skilled touch; one should not suppose that networking technology has developed to the point of the complete automation of routing.</p>

<ss1>
<st>
Distance vector algorithms</st>

<p>

<indent level="1">

<it>Main article: <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../228/159228.xml">
Distance-vector routing protocol</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</rule>
</direction>
</event>
</protocol>
</message>
</it>
</indent>

<b><it>Distance vector algorithms</it></b> use the <link xlink:type="simple" xlink:href="../244/221244.xml">
Bellman-Ford</link> algorithm. This approach assigns a number, the <it>cost</it>, to each of the links between each node in the network. Nodes will send information from point A to point B via the path that results in the lowest <it>total cost</it> (i.e. the sum of the costs of the links between the nodes used).</p>
<p>

The algorithm operates  in a very simple manner. When a node first starts, it only knows of its immediate neighbours, and the direct cost involved in reaching them. (This information, the list of destinations, the total cost to each, and the <it>next hop</it> to send data to get there, makes up the <link xlink:type="simple" xlink:href="../043/48043.xml">
routing table</link>, or <it>distance table</it>.) Each node, on a regular basis, sends to each neighbour its own current idea of the total cost to get to all the destinations it knows of. The neighbouring node(s) examine this information, and compare it to what they already 'know'; anything which represents an improvement on what they already have, they insert in their own routing table(s). Over time, all the nodes in the network will discover the best next hop for all destinations, and the best total cost.</p>
<p>

When one of the nodes involved goes down, those nodes which used it as their next hop for certain destinations discard those entries, and create new routing-table information. They then pass this information to all adjacent nodes, which then repeat the process. Eventually all the nodes in the network receive the updated information, and will then discover new paths to all the destinations which they can still "reach".</p>

</ss1>
<ss1>
<st>
Link-state algorithms</st>

<p>

<indent level="1">

<it>Main article: <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../632/159632.xml">
Link-state routing protocol</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</rule>
</direction>
</event>
</protocol>
</message>
</it>
</indent>

When applying link-state algorithms, each node uses as its fundamental data a <link xlink:type="simple" xlink:href="../877/19877.xml">
map</link> of the network in the form of a <link xlink:type="simple" xlink:href="../806/325806.xml">
graph</link>. To produce this, each node floods the entire network with information about what other nodes it can connect to, and each node then independently assembles this information into a map. Using this map, each router then independently determines the least-cost path from itself to every other node using a standard <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../985/41985.xml">
shortest paths</link></difficulty>
</problem>
</state>
</condition>
 algorithm such as <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../809/45809.xml">
Dijkstra's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
.  The result is a <graph wordnetid="107000195" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../560/48560.xml">
tree</link></graph>
 rooted at the current node such that the path through the tree from the root to any other node is the least-cost path to that node. This tree then serves to construct the routing table, which specifies the best next hop to get from the current node to any other node.</p>

</ss1>
<ss1>
<st>
Path vector protocol</st>

<p>

<indent level="1">

<it>Main article: <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../243/2421243.xml">
Path vector protocol</link></rule>
</direction>
</protocol>
</message>
</it>
</indent>

Distance vector and link state routing are both intra-domain routing protocols. They are used inside an <link xlink:type="simple" xlink:href="../399/312399.xml">
autonomous system</link>, but not between autonomous systems. Both of these routing protocols become intractable in large networks and cannot be used in <link xlink:type="simple" xlink:href="../563/10617563.xml">
Inter-domain</link> routing.  Distance vector routing is subject to instability if there are more than a few hops in the domain.  Link state routing needs huge amount of resources to calculate routing tables.  It also creates heavy traffic because of flooding.</p>
<p>

Path vector routing is used for inter-domain routing.  It is similar to Distance vector routing.  In path vector routing we assume there is one node (there can be many) in each  autonomous system which acts on behalf of the entire autonomous system.  This node is called the speaker node.  The speaker node creates a routing table and advertises it to neighboring speaker nodes in neighboring autonomous systems.  The idea is the same as Distance vector routing except that only speaker nodes in each autonomous system can communicate with each other.  The speaker node advertises the path, not the metric of the nodes, in its autonomous system or other autonomous systems.
Path vector routing is discussed in RFC 1322; the path vector routing algorithm is somewhat similar to the distance vector algorithm in the sense that each border router advertises the destinations it can reach to its neighboring router. However, instead of advertising networks in terms of a destination and the distance to that destination, networks are advertised as destination addresses and path descriptions to reach those destinations. A route is defined as a pairing between a destination and the attributes of the path to that destination, thus the name, path vector routing, where the routers receive a vector that contains paths to a set of destinations.
The path, expressed in terms of the domains (or confederations) traversed so far, is carried in a special path attribute that records the sequence of routing domains through which the reachability information has passed. The path represented by the smallest number of domains becomes the preferred path to reach the destination.</p>

</ss1>
<ss1>
<st>
Comparison of routing algorithms</st>

<p>

<link xlink:type="simple" xlink:href="../228/159228.xml">
Distance-vector routing protocols</link> are simple and efficient in small networks, and require little, if any management. However, naïve distance-vector algorithms do not <link xlink:type="simple" xlink:href="../529/185529.xml">
scale</link> well (due to the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../228/159228.xml#xpointer(//*[./st=%22Limitations%22])">
count-to-infinity</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</rule>
</direction>
</event>
</protocol>
</message>
 problem<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>), and have poor <link xlink:type="simple" xlink:href="../779/349779.xml">
convergence</link> properties.</p>
<p>

This has led to the development of more complex but more scalable algorithms for use in large networks.  Interior routing mostly uses <link xlink:type="simple" xlink:href="../632/159632.xml">
link-state routing protocol</link>s such as <link xlink:type="simple" xlink:href="../388/43388.xml">
OSPF</link> and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../219/39219.xml">
IS-IS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
.</p>
<p>

A more recent development is that of loop-free <link xlink:type="simple" xlink:href="../228/159228.xml">
distance-vector protocols</link> (e.g. <link xlink:type="simple" xlink:href="../544/51544.xml">
EIGRP</link>). Loop-free distance-vector protocols are as robust and manageable as distance-vector protocols, while avoiding counting to infinity and hence having good worst-case convergence times.</p>

</ss1>
</sec>
<sec>
<st>
 Path selection </st>
<p>

Path selection involves applying a <b>routing metric</b> to multiple routes, in order to select (or predict) the best route.  Path selection is a normal behavior of animals including humans.  In <link xlink:type="simple" xlink:href="../520/22520.xml">
orienteering</link>, a sport that involves <link xlink:type="simple" xlink:href="../040/3988040.xml">
point to point</link> land <link xlink:type="simple" xlink:href="../854/21854.xml">
navigation</link>, path selection often is an important tactic and is known as <link xlink:type="simple" xlink:href="../569/1346569.xml">
route choice</link>.</p>
<p>

In the case of computer networking, the metric is computed by a routing algorithm, and can cover such information as <link xlink:type="simple" xlink:href="../827/15612827.xml">
bandwidth</link>, <link xlink:type="simple" xlink:href="../584/10145584.xml">
network delay</link>, <link xlink:type="simple" xlink:href="../241/41241.xml">
hop count</link>, path cost, load, <link xlink:type="simple" xlink:href="../894/20894.xml">
MTU</link>, reliability, and communication cost (see e.g.  <weblink xlink:type="simple" xlink:href="http://rainer.baumann.info/public/tik262.pdf">
this survey </weblink>  for a list of proposed routing metrics). The routing table stores only the best possible routes, while <link xlink:type="simple" xlink:href="../632/159632.xml">
link-state</link> or topological databases may store all other information as well.</p>
<p>

Because a routing metric is specific to a given routing protocol, multi-protocol routers must use some external heuristic in order to select between routes learned from different routing protocols.  <link xlink:type="simple" xlink:href="../746/51746.xml">
Cisco</link>'s routers, for example, attribute a value known as the <link xlink:type="simple" xlink:href="../942/1314942.xml">
administrative distance</link> to each route, where smaller administrative distances indicate routes learned from a supposedly more reliable protocol.</p>
<p>

A local network administrator, in special cases, can set up host-specific routes to a particular machine which provides more control over network usage, permits testing and better overall security. This can come in handy when required to debug network connections or routing tables.</p>

</sec>
<sec>
<st>
 Multiple agents </st>

<p>

In some networks, routing is complicated by the fact that no single entity is responsible for selecting paths: instead, multiple entities are involved in selecting paths or even parts of a single path.  Complications or inefficiency can result if these entities choose paths to selfishly optimize their own objectives, which may conflict with the objectives of other participants.</p>
<p>

A classic example involves traffic in a road system, in which each driver selfishly picks a path which minimizes their own travel time. With such selfish routing, the <equilibrium wordnetid="113934900" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../337/45337.xml">
equilibrium</link></equilibrium>
 routes can be longer than optimal for all drivers. In particular, <link xlink:type="simple" xlink:href="../885/826885.xml">
Braess' paradox</link> shows that adding a new road can <it>lengthen</it> travel times for all drivers.</p>
<p>

The Internet is partitioned into <link xlink:type="simple" xlink:href="../399/312399.xml">
autonomous system</link>s (ASs) such as <link xlink:type="simple" xlink:href="../245/100245.xml">
internet service provider</link>s (ISPs), each of which has control over routes involving its network, at multiple levels. First, AS-level paths are selected via the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../893/38893.xml">
BGP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 protocol, which produces a sequence of ASs through which packets will flow.  Each AS may have multiple paths, offered by neighboring ASs, from which to choose. Its decision often involves business relationships with these neighboring ASs,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> which may be unrelated to path quality or latency. Second, once an AS-level path has been selected, there are often multiple corresponding <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link>-level paths, in part because two ISPs may be connected in multiple locations.  In choosing the single router-level path, it is common practice for each ISP to employ <link xlink:type="simple" xlink:href="../873/1325873.xml">
hot-potato routing</link>: sending traffic along the path that minimizes the distance through the ISP's own network—even if that path lengthens the total distance to the destination. </p>
<p>

Consider two ISPs, <it>A</it> and <it>B</it>, which each have a presence in <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/645042.xml">
New York</link></village>
, connected by a fast link with latency 5 <link xlink:type="simple" xlink:href="../153/36153.xml">
ms</link>; and which each have a presence in <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../867/17867.xml">
London</link></village>
 connected by a 5 ms link.  Suppose both ISPs have trans-Atlantic links connecting their two networks, but <it>A</it>'s link has latency 100 ms and B's has latency 120 ms.  When routing a message from a source in <it>A</it>'s London network to a destination in <it>B</it>'s New York network, <it>A</it> may choose to immediately send the message to <it>B</it> in London. This saves <it>A</it> the work of sending it along an expensive trans-Atlantic link, but causes the message to experience latency 125 ms when the other route would have been 20 ms faster.</p>
<p>

A <link xlink:type="simple" xlink:href="../163/36163.xml">
2003</link> measurement study of Internet routes found that, between pairs of neighboring ISPs, more than 30% of paths have inflated latency due to hot potato routing, with 5% of paths being delayed by at least 12 ms. Inflation due to AS-level path selection, while substantial, was attributed primarily to BGP's lack of a mechanism to directly optimize for latency, rather than to selfish routing policies. It was also suggested that, were an appropriate mechanism in place, ISPs would be willing to cooperate to reduce latency rather than use hot-potato routing.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../036/53036.xml">
Network address translation</link></entry>
</list>

</p>
<ss1>
<st>
Routing algorithms and techniques</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../453/923453.xml">
Adaptive routing</link></entry>
<entry level="1" type="bullet">

 <link>
Alternative-path routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../873/1325873.xml">
Deflection routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../054/2708054.xml">
Edge Disjoint Shortest Pair Algorithm</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../809/45809.xml">
Dijkstra's Algorithm</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../333/8373333.xml">
Fuzzy routing</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../648/8425648.xml">
Geographic routing</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</rule>
</direction>
</event>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../237/41237.xml">
Hierarchical routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../656/18111656.xml">
Multipath routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../669/1014669.xml">
Overlay network</link> routing schemes</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../792/1014792.xml">
Key based routing</link> (KBR)</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../346/10847346.xml">
Decentralized object location and routing</link> (DOLR)</entry>
<entry level="2" type="bullet">

 <link>
Group anycast and multicast</link> (CAST)</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../141/192141.xml">
Distributed hash table</link> (DHT)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../375/1632375.xml">
Policy-based routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../315/25315.xml">
Quality of Service</link> in routing</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../570/18488570.xml">
Static routing</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../548/7790548.xml">
Backward learning routing</link></entry>
</list>
</p>


</ss1>
<ss1>
<st>
Routing in specific networks</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../524/1346524.xml">
Route assignment</link> in transportation networks</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../012/10096012.xml">
National Routeing Guide</link>: passenger routing in the UK rail network</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../465/925465.xml">
Routing in the PSTN</link></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Routing protocols</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../059/10123059.xml">
Routing protocol</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../404/38404.xml">
Classless inter-domain routing</link> (CIDR)</entry>
<entry level="1" type="bullet">

 <link>
MPLS</link> routing</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../ury/25th_century.xml">
ATM</link> routing</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../285/3450285.xml">
RPSL</link></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Alternative methods for network data flow</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../107/24107.xml">
Peer-to-peer</link></entry>
<entry level="1" type="bullet">

 <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../295/3084295.xml">
Network coding</link></geographical_area>
</tract>
</location>
</field>
</region>
</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://wiki.uni.lu/secan-lab/Count-To-Infinity+Problem.html">
Count-To-Infinity Problem</weblink></entry>
<entry id="2">
Matthew Caesar and Jennifer Rexford. <weblink xlink:type="simple" xlink:href="http://www.cs.princeton.edu/~jrex/papers/policies.pdf">
BGP routing policies in ISP networks</weblink>. IEEE Network Magazine, special issue on Interdomain Routing, Nov/Dec 2005.</entry>
<entry id="3">
Neil Spring, Ratul Mahajan, and Thomas Anderson. <weblink xlink:type="simple" xlink:href="http://www.cs.washington.edu/research/networking/rocketfuel/papers/sigcomm2003.pdf">
Quantifying the Causes of Path Inflation</weblink>. Proc. <link xlink:type="simple" xlink:href="../124/337124.xml">
SIGCOMM</link> 2003.</entry>
</reflist>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Ash, Gerald&#32;(1997). Dynamic Routing in Telecommunication Networks.&#32;McGraw-Hill. ISBN 0070064148.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Doyle, Jeff and Carroll, Jennifer&#32;(2005). Routing TCP/IP, Volume I, Second Ed..&#32;Cisco Press. ISBN 1587052024.</cite>&nbsp;<weblink xlink:type="simple" xlink:href="http://www.ciscopress.com/title/1587052024">
Ciscopress ISBN 1587052024</weblink></entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Doyle, Jeff and Carroll, Jennifer&#32;(2001). Routing TCP/IP, Volume II,.&#32;Cisco Press. ISBN 1578700892.</cite>&nbsp;<weblink xlink:type="simple" xlink:href="http://www.ciscopress.com/title/1578700892">
Ciscopress ISBN 1578700892</weblink></entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Huitema, Christian&#32;(2000). Routing in the Internet, Second Ed..&#32;Prentice-Hall. ISBN 0321227352.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Kurose, James E. and Ross, Keith W.&#32;(2004). Computer Networking, Third Ed..&#32;Benjamin/Cummings. ISBN 0321227352.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal" class="book">Medhi, Deepankar and Ramasamy, Karthikeyan&#32;(2007). Network Routing: Algorithms, Protocols, and Architectures.&#32;Morgan Kaufmann. ISBN 0120885883.</cite>&nbsp;</entry>
</list>
</p>


</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://wiki.uni.lu/secan-lab/Count-To-Infinity+Problem.html">
Count-To-Infinity Problem</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ba-stuttgart.de/~schulte/htme/55024.htm#HDR3">
"Stability Features"</weblink> are ways of avoiding the "count to infinity" problem.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cisco.com/web/about/ciscoitatwork/case_studies/routing.html">
Cisco IT Case Studies</weblink> about Routing and Switching</entry>
</list>
</p>


</sec>
</bdy>
</article>
