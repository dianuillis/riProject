<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:34:07[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<generator  confidence="0.9511911446218017" wordnetid="103434188">
<cipher  confidence="0.9508927676800064" wordnetid="106254239">
<header>
<title>RC4</title>
<id>25831</id>
<revision>
<id>242386027</id>
<timestamp>2008-10-02T00:59:58Z</timestamp>
<contributor>
<username>Gabriel Kielland</username>
<id>2014336</id>
</contributor>
</revision>
<categories>
<category>Pseudorandom number generators</category>
<category>Stream ciphers</category>
<category>Articles with example Python code</category>
<category>Free ciphers</category>
<category>Wikipedia articles in need of updating</category>
</categories>
</header>
<bdy>

For the Vietnam road named RC4, see <conflict wordnetid="100958896" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../507/144507.xml">
Battle of Route Coloniale 4</link></conflict>
.<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Ambox_outdated_serious.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
<b>This article or section needs to be updated.</b>
Please update the article to reflect recent events / newly available information, and remove this template when finished.</col>
</row>
</table>

</p>
<p>

In <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link>, <b>RC4</b> (also known as <b>ARC4</b> or <b>ARCFOUR</b> meaning Alleged RC4, see below) is the most widely-used software <link xlink:type="simple" xlink:href="../007/49007.xml">
stream cipher</link> and is used in popular protocols such as <link xlink:type="simple" xlink:href="../813/187813.xml">
Secure Sockets Layer</link> (SSL) (to protect Internet traffic) and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../014/422014.xml">
WEP</link></rule>
</direction>
</protocol>
</message>
 (to secure wireless networks). While remarkable for its simplicity and speed in software, RC4 is vulnerable to attacks when the beginning of the output <link xlink:type="simple" xlink:href="../065/10441065.xml">
keystream</link> is not discarded, or a single keystream is used twice; some ways of using RC4 can lead to very insecure <link xlink:type="simple" xlink:href="../383/506383.xml">
cryptosystem</link>s such as <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../014/422014.xml">
WEP</link></rule>
</direction>
</protocol>
</message>
.</p>

<sec>
<st>
History</st>
<p>

RC4 was designed by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../057/68057.xml">
Ron Rivest</link></scientist>
</person>
 of <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../240/301240.xml">
RSA Security</link></company>
 in 1987. While it is officially termed "Rivest Cipher 4", the RC acronym is alternatively understood to stand for "Ron's Code"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> (see also <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../592/632592.xml">
RC2</link></cipher>
, <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../600/102600.xml">
RC5</link></cipher>
 and <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../216/160216.xml">
RC6</link></cipher>
).</p>
<p>

RC4 was initially a <link xlink:type="simple" xlink:href="../960/29960.xml">
trade secret</link>, but in September 1994 a description of it was anonymously posted to the <link xlink:type="simple" xlink:href="../314/37314.xml">
Cypherpunks</link> mailing list<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. It was soon posted on the <link xlink:type="simple" xlink:href="../557/725557.xml">
sci.crypt</link> newsgroup, and from there to many sites on the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>.  The leaked code was confirmed to be genuine as its output was found to match that of proprietary software using licensed RC4.  Because the algorithm is known, it is no longer a <link xlink:type="simple" xlink:href="../960/29960.xml">
trade secret</link>. The name "RC4" is <link xlink:type="simple" xlink:href="../023/18935023.xml">
trademark</link>ed, however. RC4 is often referred to as "ARCFOUR" or "ARC4" (meaning <b>A</b>lleged <b>RC4</b>, because <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../240/301240.xml">
RSA</link></company>
 has never officially released the algorithm), to avoid possible trademark problems. It has become part of some commonly used encryption protocols and standards, including <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../014/422014.xml">
WEP</link></rule>
</direction>
</protocol>
</message>
 and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../017/422017.xml">
WPA</link></rule>
</direction>
</protocol>
</message>
 for wireless cards and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../813/187813.xml">
TLS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
.</p>
<p>

The main factors which helped its deployment over such a wide range of applications consisted in its impressive speed and simplicity. Implementations in both software and hardware are very easy to develop.</p>

</sec>
<sec>
<st>
Description</st>
<p>

RC4 generates a <link xlink:type="simple" xlink:href="../524/45524.xml">
pseudorandom stream of bits</link> (a <link xlink:type="simple" xlink:href="../065/10441065.xml">
keystream</link>) which, for encryption, is combined with the plaintext using bit-wise <link xlink:type="simple" xlink:href="../979/105979.xml">
exclusive-or</link>; decryption is performed the same way (since exclusive-or is a symmetric operation). (This is similar to the <link xlink:type="simple" xlink:href="../127/578127.xml">
Vernam cipher</link> except that pseudorandom bits, rather than random bits, are used.) To generate the keystream, the cipher makes use of a secret internal state which consists of two parts:
<list>
<entry level="1" type="number">

 A <link xlink:type="simple" xlink:href="../027/44027.xml">
permutation</link> of all 256 possible <link xlink:type="simple" xlink:href="../365/3365.xml">
bytes</link> (denoted "S" below).</entry>
<entry level="1" type="number">

 Two 8-bit index-pointers (denoted "i" and "j").</entry>
</list>

The permutation is initialized with a variable length <link xlink:type="simple" xlink:href="../039/53039.xml">
key</link>, typically between 40 and 256 bits, using the <it><link xlink:type="simple" xlink:href="../603/609603.xml">
key-scheduling</link></it> algorithm (KSA). Once this has been completed, the stream of bits is generated using the <it>pseudo-random generation algorithm</it> (PRGA).</p>

<ss1>
<st>
The key-scheduling algorithm (KSA)</st>
<p>

The <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../603/609603.xml">
key-scheduling</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 algorithm is used to initialize the permutation in the array "S". "keylength" is defined as the number of bytes in the key and can be in the range 1 ≤ keylength ≤ 256, typically between 5 and 16, corresponding to a <link xlink:type="simple" xlink:href="../749/5749.xml">
key length</link> of 40 &ndash; 128 bits. First, the array "S" is initialized to the <link xlink:type="simple" xlink:href="../428/298428.xml">
identity permutation</link>. S is then processed for 256 iterations in a similar way to the main PRGA algorithm, but also mixes in bytes of the key at the same time.</p>
<p>

<b>for</b> i <b>from</b> 0 <b>to</b> 255
S[i] := i
<b>endfor</b>
j := 0
<b>for</b> i <b>from</b> 0 <b>to</b> 255
j := (j + S[i] + key[i [[modulo operation|mod]] keylength]) mod 256
swap(S[i],S[j])
<b>endfor</b></p>

</ss1>
<ss1>
<st>
The pseudo-random generation algorithm (PRGA)</st>
<p>

<image location="right" width="320px" src="RC4.svg" type="thumbnail">
<caption>

The lookup stage of RC4. The output byte is selected by looking up the values of S(i) and S(j), adding them together modulo 256, and then looking up the sum in S; S(S(i) + S(j)) is used as a byte of the key stream, K.
</caption>
</image>
 For as many iterations as are needed, the PRGA modifies the state and outputs a byte of the keystream. In each iteration, the PRGA increments <it>i</it>, adds the value of S pointed to by <it>i</it> to <it>j</it>, exchanges the values of S[''i''] and S[''j''], and then outputs the value of S at the location S[i] + S[j] (modulo 256). Each value of S is swapped at least once every 256 iterations.</p>
<p>

i := 0
j := 0
<b>while</b> GeneratingOutput:
i := (i + 1) mod 256
j := (j + S[i]) mod 256
swap(S[i],S[j])
output S[(S[i] + S[j]) mod 256] ^ input[i]
<b>endwhile</b></p>

</ss1>
<ss1>
<st>
Implementation</st>
<p>

Many stream ciphers are based on <link xlink:type="simple" xlink:href="../992/58992.xml">
linear feedback shift register</link>s (LFSRs), which while efficient in hardware are less so in software. The design of RC4 avoids the use of LFSRs, and is ideal for software implementation, as it requires only byte manipulations. It uses 256 bytes of memory for the state array, S[0] through S[255], k bytes of memory for the key, key[0] through key[k-1], and integer variables, i, j, and k. Performing a <it>modulus 256</it> can be done with a <link xlink:type="simple" xlink:href="../399/264399.xml">
bitwise AND</link> with 255 (or on most platforms, simple addition of bytes ignoring overflow).</p>



<p>

class WikipediaARC4:
def __init__(self, key = None):
self.state = range(256) # Initialize state array with values 0 .. 255
self.x = self.y = 0 # Our indexes. x, y instead of i, j</p>
<p>

if key is not None:
self.init(key)</p>
<p>

<list>
<entry level="1" type="number">

 KSA</entry>
</list>

def init(self, key):
for i in range(256):
self.x = (ord(key[i % len(key)]) + self.state[i] + self.x) &amp; 0xFF
self.state[i], self.state[self.x] = self.state[self.x], self.state[i]
self.x = 0</p>
<p>

<list>
<entry level="1" type="number">

 PRGA</entry>
</list>

def crypt(self, input):
output = [None]*len(input)
for i in xrange(len(input)):
self.x = (self.x + 1) &amp; 0xFF
self.y = (self.state[self.x] + self.y) &amp; 0xFF
self.state[self.x], self.state[self.y] = self.state[self.y], self.state[self.x]
r = self.state[(self.state[self.x] + self.state[self.y]) &amp; 0xFF]
output[i] = chr(ord(input[i]) ^ r)
return <it>.join(output)</it></p>
<p>

if __name__ == '__main__':
test_vectors = <link>
'Key', 'Plaintext'], \
['Wiki', 'pedia'], \
['Secret', 'Attack at dawn'</link>
for i in test_vectors:
print WikipediaARC4(i[0]).crypt(i[1]).encode('hex').upper()</p>


</ss1>
<ss1>
<st>
Test vectors</st>
<p>

These test vectors are not official, but convenient for anyone testing their own RC4 program. The inputs are <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<representation wordnetid="105926676" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../586/586.xml">
ASCII</link></rule>
</direction>
</representation>
</protocol>
</message>
, the output is in <link xlink:type="simple" xlink:href="../263/13263.xml">
hexadecimal</link>.</p>
<p>


RC4( "Key", "Plaintext" ) == BBF316E8D940AF0AD3

RC4( "Wiki", "pedia" ) == 1021BF0420

RC4( "Secret", "Attack at dawn" ) == 45A01F645FC35B383552544B9BF5

OR In Plain/Text:
Password: Text: Output:
RC4( "24g3", "24z0") == nhnW
RC4( "24g3", "24z2") == nhnU
RC4( "5ybdt", "5ybu8") == XJrkp
</p>

</ss1>
</sec>
<sec>
<st>
Security</st>
<p>

RC4 falls short of the standards set by cryptographers for a secure cipher in several ways, and thus is not recommended for use in new applications.</p>
<p>

Unlike a modern stream cipher (such as those in <link xlink:type="simple" xlink:href="../686/2287686.xml">
eSTREAM</link>), RC4 does not take a separate <link xlink:type="simple" xlink:href="../390/6988390.xml">
nonce</link> alongside the key.  This means that if a single long-term key is to be used to securely encrypt multiple streams, the cryptosystem must specify how to combine the nonce and the long-term key to generate the stream key for RC4.  One approach to addressing this is to generate a "fresh" RC4 key by <link xlink:type="simple" xlink:href="../526/439526.xml">
hashing</link> a long-term key with a <link xlink:type="simple" xlink:href="../390/6988390.xml">
nonce</link>. However, many applications that use RC4 simply concatenate key and nonce; RC4's weak <link xlink:type="simple" xlink:href="../603/609603.xml">
key schedule</link> then gives rise to a variety of serious problems.
</p>
<ss1>
<st>
Biased Outputs of the RC4</st>
<p>

The keystream generated by the RC4 is biased in varying degrees towards certain sequences. The best such attack is due to Itsik Mantin and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../314/57314.xml">
Adi Shamir</link></scientist>
</person>
 who showed that the second output byte of the cipher was biased toward zero with high probability. Such bias can be detected by observing only 256 bytes. </p>
<p>

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../790/9922790.xml">
Souradyuti Paul</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../490/1520490.xml">
Bart Preneel</link></professor>
</person>
 of <link xlink:type="simple" xlink:href="../603/8116603.xml">
COSIC</link> showed that the first and the second bytes of the RC4 were also biased. The number of required samples to detect this bias is 225 bytes.</p>
<p>

<link>
Fluhrer</link> and <link>
McGrew</link> also showed such attacks which distinguished the keystream of the RC4 from a random stream given a gigabyte of output.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</ss1>
<ss1>
<st>
Fluhrer, Mantin and Shamir attack</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../532/10461532.xml">
Fluhrer, Mantin, and Shamir attack</link></it>
</indent>

In 2001 a new and surprising discovery was made by <link>
Fluhrer</link>, <link>
Mantin</link> and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../314/57314.xml">
Shamir</link></scientist>
</person>
: over all possible RC4 keys, the statistics for the first few bytes of output keystream are strongly non-random, leaking information about the key. If the long-term key and nonce are simply concatenated to generate the RC4 key, this long-term key can be discovered by analysing a large number of messages encrypted with this key. This and related effects were then used to break the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../014/422014.xml">
WEP</link></rule>
</direction>
</protocol>
</message>
 ("wired equivalent privacy") encryption used with <link xlink:type="simple" xlink:href="../739/14739.xml">
802.11</link> <link xlink:type="simple" xlink:href="../172/33172.xml">
wireless network</link>s. This caused a scramble for a standards-based replacement for WEP in the 802.11 market, and led to the <link xlink:type="simple" xlink:href="../135/783135.xml">
IEEE 802.11i</link> effort and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../017/422017.xml">
WPA</link></rule>
</direction>
</protocol>
</message>
.</p>
<p>

Cryptosystems can defend against this attack by discarding the initial portion of the keystream.  Such a modified algorithm is traditionally called "RC4-drop[n]", where n is the number of initial keystream bytes that are dropped.  The SCAN default is n = 768 bytes, but a conservative value would be n = 3072 bytes. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>

</ss1>
<ss1>
<st>
 Klein's Attack </st>
<p>

In 2005, Andreas Klein presented an analysis of the RC4 stream cipher showing more correlations between the RC4 keystream and the key.  <link>
Erik Tews</link>, <link>
Ralf-Philipp Weinmann</link>, and <link>
Andrei Pyshkin</link> used this analysis to create aircrack-ptw, a tool which cracks 104-bit RC4 used in 128-bit WEP in under a minute<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>  Whereas the Fluhrer, Mantin, and Shamir attack used around 10 million messages, aircrack-ptw can break 104-bit keys in 40,000 frames with 50% probability, or in 85,000 frames with 95% probability.</p>

</ss1>
<ss1>
<st>
 Combinatorial problem  </st>
<p>

A combinatorial problem related to the number of inputs and outputs of the RC4 cipher was first posed by <link>
Itsik Mantin</link> and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../314/57314.xml">
Adi Shamir</link></scientist>
</person>
 in 2001, whereby, of the total 256 elements in the typical state of RC4, if <it>x</it> number of elements (<it>x</it> ≤ 256) are <it>only</it> known (all other elements can be assumed empty), then the maximum number of elements that can be produced deterministically is also <it>x</it> in the next 256 rounds. This conjecture was put to rest in 2004 with a formal proof given by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../790/9922790.xml">
Souradyuti Paul</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../490/1520490.xml">
Bart Preneel</link></professor>
</person>
.</p>

</ss1>
</sec>
<sec>
<st>
RC4-based cryptosystems</st>
<p>

<list>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../014/422014.xml">
WEP</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../017/422017.xml">
WPA</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../886/3803886.xml">
BitTorrent protocol encryption</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../368/4223368.xml">
Microsoft Point-to-Point Encryption</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../813/187813.xml">
Secure Sockets Layer</link> (optionally)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../814/28814.xml">
Secure shell</link> (optionally)</entry>
<entry level="1" type="bullet">

 <link>
Remote Desktop Client (RDC over RDP)</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../947/16947.xml">
Kerberos</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
 (optionally)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../786/593786.xml">
SASL</link> Mechanism Digest-MD5 (optionally)</entry>
<entry level="1" type="bullet">

 <link>
Gpcode.AK</link>, an early June 2008 computer virus for Microsoft Windows, which takes documents hostage for <link xlink:type="simple" xlink:href="../260/524260.xml">
ransom</link> by obscuring them with RC4 and RSA-1024 encryption</entry>
</list>
</p>
<p>

Where a cryptosystem is marked with "(optionally)", RC4 is one of several ciphers the system can be configured to use.</p>

</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../686/2287686.xml">
eSTREAM</link> - An evaluation of new <link xlink:type="simple" xlink:href="../007/49007.xml">
stream cipher</link>s being conducted by the EU.</entry>
<entry level="1" type="bullet">

 <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../720/528720.xml">
TEA</link></cipher>
, <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../334/530334.xml">
Block TEA</link></cipher>
 also known as <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../334/530334.xml">
eXtended TEA</link></cipher>
 and <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../454/10919454.xml">
Corrected Block TEA</link></cipher>
 - A family of <link xlink:type="simple" xlink:href="../594/4594.xml">
block cipher</link>s that, like RC4, are designed to be very simple to implement.</entry>
<entry level="1" type="bullet">

 <cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../260/1260.xml">
Advanced Encryption Standard</link></cipher>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://people.csail.mit.edu/rivest/faq.html#Ron">
Rivest FAQ</weblink></entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://cypherpunks.venona.com/date/1994/09/msg00304.html">
Thank you Bob Anderson</weblink>".&#32;<it><link xlink:type="simple" xlink:href="../314/37314.xml">
Cypherpunks</link> mailing list</it>&#32;(<link>
1994-09-09</link>).&#32;Retrieved on <link>
2007-05-28</link>.</entry>
<entry id="3">
Scott R. Fluhrer and David A. McGrew, Statistical Analysis of the Alleged RC4 Keystream Generator. FSE 2000, pp19 &ndash; 30 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/FluhrerMcgrew.pdf">
(PDF)</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://www.users.zetnet.co.uk/hopwood/crypto/scan/cs.html#RC4-drop">
 "RC4-drop(nbytes)"</weblink> in the <it>"Standard Cryptographic Algorithm Naming"</it> database</entry>
<entry id="5">
Erik Tews, Ralf-Philipp Weinmann, Andrei Pyshkin.  <weblink xlink:type="simple" xlink:href="http://eprint.iacr.org/2007/120">
Breaking 104-bit WEP in under a minute</weblink>.</entry>
</reflist>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Scott R. Fluhrer, Itsik Mantin and Adi Shamir, Weaknesses in the Key Scheduling Algorithm of RC4. <social_group wordnetid="107950920" confidence="0.8">
<meeting wordnetid="108307589" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<conference wordnetid="108308497" confidence="0.8">
<link xlink:type="simple" xlink:href="../951/9545951.xml">
Selected Areas in Cryptography</link></conference>
</group>
</gathering>
</meeting>
</social_group>
 2001, pp1 &ndash; 24 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/Rc4_ksa.ps">
(PS)</weblink>.</entry>
<entry level="1" type="bullet">

 Jovan Dj. Golic, Iterative Probabilistic Cryptanalysis of RC4 Keystream Generator. ACISP 2000, pp220 &ndash; 233</entry>
<entry level="1" type="bullet">

 Jovan Dj. Golic, Linear Statistical Weakness of Alleged RC4 Keystream Generator. <link xlink:type="simple" xlink:href="../207/4229207.xml">
EUROCRYPT</link> 1997, pp226 &ndash; 238 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/Golic.PDF">
(PDF)</weblink>.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../375/709375.xml">
Lars R. Knudsen</link>, Willi Meier, <person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../490/1520490.xml">
Bart Preneel</link></professor>
</person>
, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/423466.xml">
Vincent Rijmen</link></decoder>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and Sven Verdoolaege, Analysis Methods for (Alleged) RC4. <link xlink:type="simple" xlink:href="../573/4229573.xml">
ASIACRYPT</link> 1998, pp327 &ndash; 341 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/Knudsen.ps">
(PS)</weblink>.</entry>
<entry level="1" type="bullet">

 Itsik Mantin and <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../314/57314.xml">
Adi Shamir</link></scientist>
</person>
, A Practical Attack on Broadcast RC4. FSE 2001, pp152 &ndash; 164 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/bc_rc4.ps">
(PS)</weblink>.</entry>
<entry level="1" type="bullet">

 Serge Mister and <link xlink:type="simple" xlink:href="../396/9546396.xml">
Stafford E. Tavares</link>, Cryptanalysis of RC4-like Ciphers. Selected Areas in Cryptography 1998, pp131 &ndash; 143</entry>
<entry level="1" type="bullet">

 Ilya Mironov, (Not So) Random Shuffles of RC4. <link xlink:type="simple" xlink:href="../977/40977.xml">
CRYPTO</link> 2002, pp304 &ndash; 319</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../790/9922790.xml">
Souradyuti Paul</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../490/1520490.xml">
Bart Preneel</link></professor>
</person>
, Analysis of Non-fortuitous Predictive States of the RC4 Keystream Generator. <link xlink:type="simple" xlink:href="../663/9578663.xml">
INDOCRYPT</link> 2003, pp52 &ndash; 67 <weblink xlink:type="simple" xlink:href="http://www.cosic.esat.kuleuven.be/publications/article-86.pdf">
(PDF)</weblink>.</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../790/9922790.xml">
Souradyuti Paul</link></decoder>
</scientist>
</causal_agent>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
 and <person wordnetid="100007846" confidence="0.9508927676800064">
<professor wordnetid="110480730" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../490/1520490.xml">
Bart Preneel</link></professor>
</person>
, A New Weakness in the RC4 Keystream Generator and an Approach to Improve the Security of the Cipher. <social_group wordnetid="107950920" confidence="0.8">
<meeting wordnetid="108307589" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<conference wordnetid="108308497" confidence="0.8">
<link xlink:type="simple" xlink:href="../848/4229848.xml">
Fast Software Encryption</link></conference>
</group>
</gathering>
</meeting>
</social_group>
 - FSE 2004, pp245 &ndash; 259 <weblink xlink:type="simple" xlink:href="http://www.cosic.esat.kuleuven.be/publications/article-40.pdf">
(PDF)</weblink>.</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<it>RC4</it>
<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.mozilla.org/projects/security/pki/nss/draft-kaukonen-cipher-arcfour-03.txt">
IETF Draft - A Stream Cipher Encryption Algorithm "Arcfour"</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://cypherpunks.venona.com/archive/1994/09/msg00304.html">
Original posting of RC4 algorithm to Cypherpunks mailing list</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.users.zetnet.co.uk/hopwood/crypto/scan/cs.html#RC4">
SCAN's entry for RC4</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/rc4.html">
Attacks on RC4</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://research.cyber.ee/~lipmaa/crypto/link/stream/rc4.php">
RC4 - Cryptology Pointers by Helger Lipmaa</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.rsasecurity.com/rsalabs/node.asp?id=2009">
RSA Security Response to Weaknesses in Key Scheduling Algorithm of RC4</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sqlteam.com/forums/topic.asp?TOPIC_ID=76258">
 T-SQL implementation</weblink></entry>
</list>
</p>
<p>

<it>RC4 in WEP</it>
<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.isaac.cs.berkeley.edu/isaac/wep-faq.html">
(in)Security of the WEP algorithm</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/rc4_wep.ps">
Fluhrer, Mantin, and Shamir attack on WEP (postscript format)</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks  " cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../007/49007.xml">
Stream cipher</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<b>Algorithms: </b><message wordnetid="106253690" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../149/294149.xml">
A5/1</link></system_of_measurement>
</cipher>
</standard>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../816/543816.xml">
A5/2</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/2137226.xml">
E0</link></cipher>
</equipment>
</generator>
</apparatus>
</instrumentality>
</artifact>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<amount wordnetid="105107765" confidence="0.8">
<magnitude wordnetid="105090441" confidence="0.8">
<property wordnetid="104916342" confidence="0.8">
<number wordnetid="105121418" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../005/1290005.xml">
FISH</link></cipher>
</number>
</property>
</magnitude>
</amount>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../390/2710390.xml">
Grain</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../087/4546087.xml">
HC-256</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../564/295564.xml">
ISAAC</link></cipher>
</equipment>
</generator>
</apparatus>
</instrumentality>
</artifact>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../225/1508225.xml">
MUGI</link></cipher>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../789/4170789.xml">
Panama</link>&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../596/883596.xml">
Phelix</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../128/294128.xml">
Pike</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../084/3955084.xml">
Py</link></cipher>
</message>
&nbsp;&#124; 
<cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../998/15603998.xml">
 QUAD </link></cipher>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../952/4565952.xml">
Rabbit</link></cipher>
</message>
&nbsp;&#124; 
<cipher wordnetid="106254239" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../831/25831.xml">
RC4</link></cipher>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../329/2701329.xml">
Salsa20</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../011/4159011.xml">
Scream</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../108/294108.xml">
SEAL</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../325/8648325.xml">
SOBER</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../280/1080280.xml">
SOBER-128</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../152/4546152.xml">
SOSEMANUK</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../653/2620653.xml">
Trivium</link></cipher>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../536/2613536.xml">
VEST</link>&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../287/599287.xml">
WAKE</link></cipher>
</message>
</p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even"><p>

<b>Theory:</b> <link xlink:type="simple" xlink:href="../699/41699.xml">
Shift register</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../992/58992.xml">
LFSR</link>&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/2613481.xml">
NLFSR</link></cipher>
</message>
&nbsp;&#124; 
<message wordnetid="106253690" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../743/297743.xml">
Shrinking generator</link></cipher>
</equipment>
</generator>
</apparatus>
</instrumentality>
</artifact>
</message>
&nbsp;&#124; 
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../531/8585531.xml">
T-function</link></primitive>
</causal_agent>
</person>
</physical_entity>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../971/105971.xml">
IV</link></p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<b>Standardization:</b> <message wordnetid="106253690" confidence="0.8">
<cipher wordnetid="106254239" confidence="0.8">
<link xlink:type="simple" xlink:href="../686/2287686.xml">
eSTREAM</link></cipher>
</message>
</col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../432/18934432.xml">
Cryptography</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../066/520066.xml">
History of cryptography</link> | <link xlink:type="simple" xlink:href="../715/5715.xml">
Cryptanalysis</link> | 
Cryptography portal | <link xlink:type="simple" xlink:href="../585/449585.xml">
Topics in cryptography</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
Symmetric-key algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../594/4594.xml">
Block cipher</link> | <link xlink:type="simple" xlink:href="../007/49007.xml">
Stream cipher</link> | <link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link> | <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../526/439526.xml">
Cryptographic hash function</link></primitive>
</causal_agent>
</person>
</physical_entity>
 | <link xlink:type="simple" xlink:href="../523/567523.xml">
Message authentication code</link> | <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/182249.xml">
Random numbers</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../733/28733.xml">
Steganography</link></col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</cipher>
</generator>
</article>
