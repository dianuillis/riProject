<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:42:58[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<condition  confidence="0.8" wordnetid="113920835">
<state  confidence="0.8" wordnetid="100024720">
<problem  confidence="0.8" wordnetid="114410605">
<difficulty  confidence="0.8" wordnetid="114408086">
<algorithm  confidence="0.9511911446218017" wordnetid="105847438">
<header>
<title>Bin packing problem</title>
<id>287015</id>
<revision>
<id>232805179</id>
<timestamp>2008-08-19T00:58:51Z</timestamp>
<contributor>
<username>Ken g6</username>
<id>2829238</id>
</contributor>
</revision>
<categories>
<category>Optimization algorithms</category>
<category>NP-complete problems</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>, the <b>bin packing problem</b> is a <link xlink:type="simple" xlink:href="../170/5170.xml">
combinatorial</link> <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
 problem. In it, objects of different volumes must be packed into a finite number of bins of capacity <it>V</it> in a way that minimizes the number of bins used.<p>

There are many variations of this problem, such as 2D packing, linear packing, packing by weight, packing by cost, and so on. They have many applications, such as filling up containers, loading trucks with weight capacity, and creating file backup in removable media.</p>
<p>

Since it is <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
, the most efficient known algorithms use <link xlink:type="simple" xlink:href="../509/846509.xml">
heuristics</link> to accomplish results which, though very good in most cases, may not be the optimal solution. For example, the <b>first fit algorithm</b> provides a fast but often nonoptimal solution, involving placing each item into the first bin in which it will fit. It requires <link xlink:type="simple" xlink:href="../578/44578.xml">
<b>Θ</b></link>(<it>n</it>&nbsp;log&nbsp;<it>n</it>) time. The algorithm can be made much more effective by first sorting the list of elements into decreasing order (sometimes known as the first-fit decreasing algorithm), although this does not guarantee an optimal solution, and for longer lists may increase the running time of the algorithm.</p>

<sec>
<st>
Formal statement</st>
<p>

Given a bin size <math>V</math> and a list <math>a_1,\dots,a_n</math> of sizes of the items to pack, find an integer <math>B</math> and a <math>B</math>-<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../240/340240.xml">
partition</link></family>
</concept>
</idea>
 <math>S_1 \cup \dots \cup S_B</math> of <math>\{1,\dots,n\}</math> such that <math>\sum_{i \in S_k} a_i \leq V</math> for all <math>k=1,\dots,B</math>.</p>
<p>

A solution is <it>optimal</it> if it has minimal <math>B</math>. The <math>B</math>-value for an optimal solution is denoted <b>OPT</b> below.</p>

</sec>
<sec>
<st>
Analysis of heuristic algorithms</st>
<p>

The <it>best fit decreasing</it> and <it>first fit decreasing</it> strategies are among the simplest heuristic algorithms for solving the bin packing problem.  They have been shown to use no more than 11/9&nbsp;<b>OPT</b>&nbsp;+&nbsp;1 bins (where <b>OPT</b> is the number of bins given by the optimal solution).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> The simpler of these, the <it>First Fit Decreasing</it> strategy, operates by first sorting the items to be inserted in decreasing order by volume, and then inserting each item into the first bin in the list with sufficient remaining space. The sorting step is relatively expensive, but without it we only achieve the looser bound of 17/10&nbsp;<b>OPT</b>&nbsp;+&nbsp;2.  Recently, it was proved that the bound 11/9&nbsp;<b>OPT</b>&nbsp;+&nbsp;6/9 for FFD is <link xlink:type="simple" xlink:href="../578/44578.xml">
tight</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>  MFDD<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> (a variant of FFD) uses no more than 71/60&nbsp;<b>OPT</b>&nbsp;+&nbsp;1 bins<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> (i.e. bounded by about 1.18×opt, compared to about 1.22×opt for FFD).</p>
<p>

Although these simple strategies are often good enough, efficient <link xlink:type="simple" xlink:href="../105/563105.xml">
approximation algorithm</link>s have been demonstrated<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> that can solve the bin packing problem within <it>any</it> fixed percentage of the optimal solution for sufficiently large inputs (this is called an asymptotic <link xlink:type="simple" xlink:href="../431/666431.xml">
polynomial-time approximation scheme</link>). This is an advantage the problem has over many other common <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
 problems, some of which cannot be approximated within any constant factor at all.</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../974/16974.xml">
Knapsack problem</link></difficulty>
</problem>
</state>
</condition>
</entry>
<entry level="1" type="bullet">

 <puzzle wordnetid="106784639" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<problem wordnetid="106784003" confidence="0.8">
<question wordnetid="106783768" confidence="0.8">
<link xlink:type="simple" xlink:href="../003/213003.xml">
Packing problem</link></question>
</problem>
</subject>
</message>
</puzzle>
</entry>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../567/3269567.xml">
Partition problem</link></difficulty>
</problem>
</state>
</condition>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../845/3302845.xml">
Multiprocessor scheduling problem</link></entry>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../811/36811.xml">
Subset sum problem</link></difficulty>
</problem>
</state>
</condition>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
M. Yue, "A simple proof of the inequality FFD(L) ≤ (11/9)OPT(L) + 1, for all L, for the FFD bin-packing algorithm", <it>Acta Mathematicae Applicatae Sinica</it> <b>7</b> (1991), pp.&nbsp;321–331.</entry>
<entry id="2">
György Dósa, "The Tight Bound of First Fit Decreasing Bin-Packing Algorithm Is FFD(I)≤(11/9)OPT(I)+6/9", ESCAPE 2007, <it>Springer LNCS</it> <it>4614</it> (2007), pp.&nbsp;1–11.</entry>
<entry id="3">
<link xlink:type="simple" xlink:href="../372/1709372.xml">
Michael R. Garey</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../983/577983.xml">
David S. Johnson</link></associate>
</scholar>
</causal_agent>
</alumnus>
</colleague>
</intellectual>
</person>
</peer>
</physical_entity>
, "A 71/60 theorem for bin packing", <it>Journal of Complexity</it>, Vol.&nbsp;1 (1985), pp.&nbsp;65–106.</entry>
<entry id="4">
Yue Minyi and Zhang Lei, "A simple proof of the inequality MFFD(L) ≤ 71/60 OPT(L) + 1, L for the MFFD bin-packing algorithm", <it>Acta Mathematicae Applicatae Sinica</it> <b>11</b> (1995), pp. 318–330.</entry>
<entry id="5">
<physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../036/3007036.xml">
Vijay V. Vazirani</link></associate>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
, Approximation Algorithms. Springer. ISBN 3-540-65367-8. p.&nbsp;74.</entry>
</reflist>

<list>
<entry level="1" type="bullet">

 Michael R. Garey and David S. Johnson (1979), Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. Freeman. ISBN 0-7167-1045-5. A4.1: SR1, p. 226.</entry>
<entry level="1" type="bullet">

 David S. Johnson, Alan J. Demers, Jeffrey D. Ullman, M. R. Garey, Ronald L. Graham. <weblink xlink:type="simple" xlink:href="http://siamdl.aip.org/dbt/dbt.jsp?KEY=SMJCAT&amp;Volume=3&amp;Issue=4">
Worst-Case Performance Bounds for Simple One-Dimensional Packing Algorithms</weblink>. SICOMP, Volume 3, Issue 4. 1974.</entry>
<entry level="1" type="bullet">

 Lodi A., Martello S., Vigo, D. (2002) Recent advances on two-dimensional bin packing problems. Discrete Appl. Math., Volume 123, p. 379-396</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.phpclasses.org/browse/package/2027.html">
PHP Class to pack files without exceeding a given size limit</weblink> on the <model wordnetid="105890249" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<hypothesis wordnetid="105888929" confidence="0.8">
<link xlink:type="simple" xlink:href="../720/10543720.xml">
PHPClasses Repository</link></hypothesis>
</concept>
</idea>
</model>
</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=3833&amp;jmp=abstract&amp;dl=portal&amp;dl=ACM">
http://portal.acm.org/citation.cfm?id=3833&amp;jmp=abstract&amp;dl=portal&amp;dl=ACM</weblink></entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</difficulty>
</problem>
</state>
</condition>
</article>
