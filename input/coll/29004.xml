<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:35:59[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<system  confidence="0.9511911446218017" wordnetid="104377057">
<programming_language  confidence="0.9508927676800064" wordnetid="106898352">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<datum  confidence="0.9511911446218017" wordnetid="105816622">
<header>
<title>SQL</title>
<id>29004</id>
<revision>
<id>244608010</id>
<timestamp>2008-10-11T18:00:30Z</timestamp>
<contributor>
<username>Darth Panda</username>
<id>580942</id>
</contributor>
</revision>
<categories>
<category>Articles with example SQL code</category>
<category>Databases</category>
<category>IBM software</category>
<category>SQL</category>
<category>Query languages</category>
<category>Cross-platform software</category>
<category>Database management systems</category>
<category>Data modeling languages</category>
<category>Declarative programming languages</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox programming language</name>
<parameters>
<paradigm>
<link xlink:type="simple" xlink:href="../843/226843.xml">
Multi-paradigm</link></paradigm>
<latest_release_version>
SQL:2006</latest_release_version>
<designer>
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../014/6911014.xml">
Donald D. Chamberlin</link></scientist>
 and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../574/9805574.xml">
Raymond F. Boyce</link></scientist>
</designer>
<implementations>
<link xlink:type="simple" xlink:href="../820/1568820.xml">
Many</link></implementations>
<turing-complete>
No</turing-complete>
<latest_release_date>
2006</latest_release_date>
<influenced_by>
<link xlink:type="simple" xlink:href="../357/968357.xml">
Datalog</link></influenced_by>
<dialects>
SQL-86, SQL-89, <link xlink:type="simple" xlink:href="../160/2264160.xml">
SQL-92</link>, , , , <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></dialects>
<developer>
<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
</developer>
<name>
SQL</name>
<typing>
<link>
static</link>, <link xlink:type="simple" xlink:href="../585/919585.xml">
strong</link></typing>
<year>
1974</year>
<influenced>
<link xlink:type="simple" xlink:href="../354/9672354.xml">
CQL</link>, <link xlink:type="simple" xlink:href="../337/13706337.xml">
LINQ</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../871/14465871.xml">
Windows PowerShell</link></programming_language>
</software>
</influenced>
<operating_system>
<platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../193/81193.xml">
Cross-platform</link></horizontal_surface>
</surface>
</artifact>
</platform>
</operating_system>
</parameters>
</template>


This article is about the database language.&#32;&#32;For the airport with IATA code SQL, see <airport wordnetid="102692232" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../566/266566.xml">
San Carlos Airport</link></airport>
.&#32;&#32;

<p>

<b>SQL</b> (<b>Structured Query Language</b>) (pronounced  officially, although the unofficial pronunciation "sequel", /ˈsiːkwəl/, is often used) (<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Standardization%22])">
see below</link>), is a <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link> <link xlink:type="simple" xlink:href="../015/23015.xml">
computer language</link> designed for the retrieval and management of <link xlink:type="simple" xlink:href="../040/18985040.xml">
data</link> in <link xlink:type="simple" xlink:href="../743/98743.xml">
relational database management system</link>s (RDBMS), database schema creation and modification, and database object access control management.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> </p>
<p>

SQL is a standard interactive and programming language for querying and modifying data and managing databases. Although SQL is both an <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../659/659.xml">
ANSI</link></system_of_measurement>
</standard>
 and an <organization wordnetid="108008335" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../934/14934.xml">
ISO</link></organization>
 standard, many database products support SQL with proprietary extensions to the standard language. The core of SQL is formed by a command language that allows the retrieval, insertion, updating, and deletion of data, and performing management and administrative functions. SQL also includes a <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../718/172718.xml">
Call Level Interface</link></system_of_measurement>
</standard>
 (SQL/CLI) for accessing and managing data and databases remotely.</p>
<p>

The first version of SQL was developed at <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../014/6911014.xml">
Donald D. Chamberlin</link></scientist>
 and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../574/9805574.xml">
Raymond F. Boyce</link></scientist>
 in the early 1970s.  This version, initially called <b>SEQUEL</b>, was designed to manipulate and retrieve data stored in IBM's original relational database product, <link xlink:type="simple" xlink:href="../791/472791.xml">
System R</link>.  The SQL language was later formally <link xlink:type="simple" xlink:href="../065/27065.xml">
standard</link>ized by the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../659/659.xml">
American National Standards Institute</link></system_of_measurement>
</standard>
 (ANSI) in 1986.  Subsequent versions of the SQL standard have been released as <organization wordnetid="108008335" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../934/14934.xml">
International Organization for Standardization</link></organization>
 (ISO) standards.</p>
<p>

Originally designed as a <link xlink:type="simple" xlink:href="../648/210648.xml">
declarative</link> query and data manipulation language, variations of SQL have been created by SQL <link xlink:type="simple" xlink:href="../513/8513.xml">
database management system (DBMS)</link> vendors that add procedural constructs, <link xlink:type="simple" xlink:href="../459/45459.xml">
control-of-flow</link> statements, user-defined data types, and various other language extensions.  With the release of the SQL:1999 standard, many such extensions were formally adopted as part of the SQL language via the SQL Persistent Stored Modules (SQL/PSM) portion of the standard.</p>
<p>

Common criticisms of SQL include a perceived lack of cross-platform portability between vendors, inappropriate handling of missing data (<it>see <link xlink:type="simple" xlink:href="../540/2002540.xml">
Null (SQL)</link></it>), and unnecessarily complex and occasionally ambiguous language grammar and semantics.</p>

<sec>
<st>
 History </st>

<p>

During the 1970s, a group at <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../371/1886371.xml">
IBM San Jose Research Laboratory</link></facility>
</artifact>
 developed the <link xlink:type="simple" xlink:href="../791/472791.xml">
System R</link> relational database management system, based on the model introduced by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../548/93548.xml">
Edgar F. Codd</link></scientist>
</person>
 in his influential <link xlink:type="simple" xlink:href="../570/324570.xml">
paper</link>, <b>A Relational Model of Data for Large Shared Data Banks</b>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>  Donald D. Chamberlin and Raymond F. Boyce of IBM subsequently created the <b>Structured English Query Language</b> (SEQUEL) to manipulate and manage data stored in System R.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>  The acronym SEQUEL was later changed to SQL because "SEQUEL" was a <link xlink:type="simple" xlink:href="../023/18935023.xml">
trademark</link> of the <autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
UK-based</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../411/318411.xml">
Hawker Siddeley</link></company>
 aircraft company.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

The first non-commercial non-SQL RDBMS, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../394/84394.xml">
Ingres</link></instrumentality>
</artifact>
</system>
, was developed in 1974 at the <university wordnetid="108286163" confidence="0.9508927676800064">
<ranking wordnetid="114429484" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../922/31922.xml">
U.C. Berkeley</link></ranking>
</university>
.  Ingres implemented a query language known as <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../140/10344140.xml">
QUEL</link></instrumentality>
</artifact>
</system>
, which was later supplanted in the marketplace by SQL.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

In the late 1970s, Relational Software, Inc. (now <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/22591.xml">
Oracle Corporation</link></company>
) saw the potential of the concepts described by Codd, Chamberlin, and Boyce and developed their own SQL-based <link xlink:type="simple" xlink:href="../743/98743.xml">
RDBMS</link> with aspirations of selling it to the <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../083/32083.xml">
U.S. Navy</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
, <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../633/5183633.xml">
CIA</link></agency>
, and other <link xlink:type="simple" xlink:href="../149/195149.xml">
government</link> agencies.  In the summer of <link xlink:type="simple" xlink:href="../754/34754.xml">
1979</link>, Relational Software, Inc. introduced the first commercially available implementation of SQL, <link xlink:type="simple" xlink:href="../725/323725.xml">
Oracle</link> V2 (Version2) for <link xlink:type="simple" xlink:href="../517/32517.xml">
VAX</link> computers.  <it>Oracle V2</it> beat IBM's release of the <link xlink:type="simple" xlink:href="../646/294646.xml">
System/38</link> RDBMS to market by a few weeks.</p>
<p>

After testing SQL at customer test sites to determine the usefulness and practicality of the system, IBM began developing commercial products based on their System R prototype including <link xlink:type="simple" xlink:href="../646/294646.xml">
System/38</link>, <link xlink:type="simple" xlink:href="../374/2683374.xml">
SQL/DS</link>, and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../983/142983.xml">
DB2</link></instrumentality>
</artifact>
</system>
, which were commercially available in <link xlink:type="simple" xlink:href="../754/34754.xml">
1979</link>, <link xlink:type="simple" xlink:href="../776/34776.xml">
1981</link>, and <link xlink:type="simple" xlink:href="../755/34755.xml">
1983</link>, respectively.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

<ss1>
<st>
 Standardization </st>

<p>

SQL was adopted as a standard by <weblink xlink:type="simple" xlink:href="http://special.lib.umn.edu/findaid/xml/cbi00168.xml">
ANSI</weblink> in 1986 and ISO in 1987. In the original SQL standard, ANSI declared that the official pronunciation for SQL is "es queue el".<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> However, many English-speaking database professionals still use the nonstandard<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> pronunciation /ˈsiːkwəl/ (like the word "sequel"). SEQUEL was an earlier IBM <link xlink:type="simple" xlink:href="../528/494528.xml">
database language</link>, a predecessor to the SQL language.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> </p>
<p>

Until <link xlink:type="simple" xlink:href="../636/34636.xml">
1996</link>, the <link xlink:type="simple" xlink:href="../888/21888.xml">
National Institute of Standards and Technology (NIST)</link> data management standards program was tasked with certifying SQL DBMS compliance with the SQL standard.  In 1996, however, the NIST data management standards program was dissolved, and vendors are now relied upon to self-certify their products for compliance.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

The SQL standard has gone through a number of revisions, as shown below:
<table class="wikitable">
<header>
Year</header>
<header>
Name</header>
<header width="125">
Alias</header>
<header>
Comments</header>
<row valign="top">
<col>
1986</col>
<col>
SQL-86</col>
<col>
SQL-87</col>
<col>
First published by ANSI. Ratified by ISO in 1987.</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../847/34847.xml">
1989</link></col>
<col>
SQL-89</col>
<col>
 <link xlink:type="simple" xlink:href="../113/11113.xml">
FIPS</link>127-1</col>
<col>
Minor revision, adopted as FIPS 127-1.</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../669/34669.xml">
1992</link></col>
<col>
 <link xlink:type="simple" xlink:href="../160/2264160.xml">
SQL-92</link></col>
<col>
SQL2, FIPS 127-2</col>
<col>
Major revision (ISO 9075), <it>Entry Level</it> SQL-92 adopted as FIPS 127-2.</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../553/34553.xml">
1999</link></col>

<col>
SQL3</col>
<col>
 Added regular expression matching, recursive queries, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../316/1384316.xml">
triggers</link></instrumentality>
</artifact>
</system>
, support for procedural and control-of-flow statements, non-scalar types, and some object-oriented features.</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../163/36163.xml">
2003</link></col>

<col>
&nbsp;</col>
<col>
 Introduced <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../138/34138.xml">
XML</link></format>
-related features, <it>window functions</it>, standardized sequences, and columns with auto-generated values (including identity-columns).</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../164/36164.xml">
2006</link></col>

<col>
&nbsp;</col>
<col>
 ISO/IEC 9075-14:2006 defines ways in which SQL can be used in conjunction with XML. It defines ways of importing and storing XML data in an SQL database, manipulating it within the database and publishing both XML and conventional SQL-data in XML form. In addition, it provides facilities that permit applications to integrate into their SQL code the use of <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/309466.xml">
XQuery</link></system_of_measurement>
</standard>
, the XML Query Language published by the World Wide Web Consortium (<link xlink:type="simple" xlink:href="../434/33434.xml">
W3C</link>), to concurrently access ordinary SQL-data and XML documents.</col>
</row>
<row valign="top">
<col>
 <link xlink:type="simple" xlink:href="../825/35825.xml">
2008</link></col>

<col>
&nbsp;</col>
<col>
Defines more flexible windowing functions, clarifies SQL 2003 items that were still unclear <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></col>
</row>
</table>
</p>
<p>

The SQL standard is not freely available.  SQL:2003 and SQL:2006 may be purchased from ISO or ANSI.  A <weblink xlink:type="simple" xlink:href="http://www.wiscorp.com/sql_2003_standard.zip">
late draft</weblink> of SQL:2003 is freely available as a <link xlink:type="simple" xlink:href="../488/188488.xml">
zip</link> archive, however, from <weblink xlink:type="simple" xlink:href="http://www.wiscorp.com/SQLStandards.html">
Whitemarsh Information Systems Corporation</weblink>.  The zip archive contains a number of <link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link> files that define the parts of the SQL:2003 specification.</p>

</ss1>
</sec>
<sec>
<st>
 Scope and extensions </st>

<ss1>
<st>
 Procedural extensions </st>
<p>

SQL is designed for a specific purpose: to query data contained in a <link xlink:type="simple" xlink:href="../873/25873.xml">
relational database</link>. SQL is a <link xlink:type="simple" xlink:href="../127/201127.xml">
set</link>-based, <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../648/210648.xml">
declarative</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
 query language, not an <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../847/197847.xml">
imperative language</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
 such as <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 or <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC</link>.  However, there are extensions to Standard SQL which add <link xlink:type="simple" xlink:href="../801/23801.xml">
procedural programming language</link> functionality, such as control-of-flow constructs. These are:</p>
<p>

<table class="wikitable">
<row>
<header>
Source</header>
<header>
CommonName</header>
<header>
Full Name</header>
</row>
<row>
<col align="center">
ANSI/ISO Standard</col>
<col align="center">
 <link xlink:type="simple" xlink:href="../200/11665200.xml">
SQL/PSM</link></col>
<col>
SQL/Persistent Stored Modules</col>
</row>
<row>
<col align="center">
 <link xlink:type="simple" xlink:href="../684/172684.xml">
Interbase</link>/<software wordnetid="106566077" confidence="0.9508927676800064">
<link>
Firebird</link></software>
</col>
<col align="center">
 <link>
PSQL</link></col>
<col>
Procedural SQL</col>
</row>
<row>
<col align="center">
IBM</col>
<col align="center">
 <link xlink:type="simple" xlink:href="../982/11665982.xml">
SQL PL</link></col>
<col>
SQL Procedural Language (implements SQL/PSM)</col>
</row>
<row>
<col align="center">
 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
/<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../688/198688.xml">
Sybase</link></company>
</col>
<col align="center">
 <link xlink:type="simple" xlink:href="../710/295710.xml">
T-SQL</link></col>
<col>
Transact-SQL</col>
</row>
<row>
<col align="center">
 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../545/19545.xml">
MySQL</link></instrumentality>
</artifact>
</system>
</col>
<col align="center">
SQL/PSM</col>
<col>
SQL/Persistent Stored Module (as in ISO SQL:2003)</col>
</row>
<row>
<col align="center">
 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/22591.xml">
Oracle</link></company>
</col>
<col align="center">
 <link xlink:type="simple" xlink:href="../106/24106.xml">
PL/SQL</link></col>
<col>
 Procedural Language/SQL (based on <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link></causal_agent>
</physical_entity>
)</col>
</row>
<row>
<col align="center">
 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../824/23824.xml">
PostgreSQL</link></instrumentality>
</artifact>
</system>
</col>
<col align="center">
 <link xlink:type="simple" xlink:href="../014/1545014.xml">
PL/pgSQL</link></col>
<col>
Procedural Language/PostgreSQL Structured Query Language (based on Oracle PL/SQL)</col>
</row>
<row>
<col align="center">
 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../824/23824.xml">
PostgreSQL</link></instrumentality>
</artifact>
</system>
</col>
<col align="center">
 <link>
PL/PSM</link></col>
<col>
Procedural Language/Persistent Stored Modules (implements SQL/PSM)</col>
</row>
</table>
</p>
<p>

In addition to the standard SQL/PSM extensions and proprietary SQL extensions, procedural and <link xlink:type="simple" xlink:href="../758/22758.xml">
object-oriented</link> programmability is available on many SQL platforms via DBMS integration with other languages.  The SQL standard defines <link xlink:type="simple" xlink:href="../697/11723697.xml">
SQL/JRT</link> extensions (SQL Routines and Types for the Java Programming Language) to support <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 code in SQL databases.  <link xlink:type="simple" xlink:href="../994/13989994.xml">
SQL Server 2005</link> uses the <link>
SQLCLR</link> (SQL Server Common Language Runtime) to host managed <link>
.NET</link> assemblies in the database, while prior versions of SQL Server were restricted to using unmanaged extended stored procedures which were primarily written in C.  Other database platforms, like MySQL and Postgres, allow functions to be written in a wide variety of languages including <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/23862.xml">
Python</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../237/30237.xml">
Tcl</link></programming_language>
, and C.</p>

</ss1>
<ss1>
<st>
 Additional extensions </st>
<p>

SQL:2003 also defines several additional extensions to the standard to increase SQL functionality overall.  These extensions include:</p>
<p>

The <link xlink:type="simple" xlink:href="../614/11723614.xml">
SQL/CLI</link>, or <b>Call-Level Interface</b>, extension is defined in ISO/IEC 9075-3:2003.  This extension defines common interfacing components (structures and procedures) that can be used to execute SQL statements from applications written in other programming languages.  The SQL/CLI extension is defined in such a way that SQL statements and SQL/CLI procedure calls are treated as separate from the calling application's source code.</p>
<p>

The <link xlink:type="simple" xlink:href="../628/11723628.xml">
SQL/MED</link>, or <b>Management of External Data</b>, extension is defined by ISO/IEC 9075-9:2003.  SQL/MED provides extensions to SQL that define foreign-data wrappers and datalink types to allow SQL to manage external data.  External data is data that is accessible to, but not managed by, an SQL-based DBMS.</p>
<p>

The <link xlink:type="simple" xlink:href="../650/11723650.xml">
SQL/OLB</link>, or <b>Object Language Bindings</b>, extension is defined by ISO/IEC 9075-10:2003.  SQL/OLB defines the syntax and symantics of <link xlink:type="simple" xlink:href="../242/5936242.xml">
SQLJ</link>, which is SQL embedded in Java.  The standard also describes mechanisms to ensure binary portability of SQLJ applications, and specifies various Java packages and their contained classes.</p>
<p>

The <link xlink:type="simple" xlink:href="../673/11723673.xml">
SQL/Schemata</link>, or <b>Information and Definition Schemas</b>, extension is defined by ISO/IEC 9075-11:2003.  SQL/Schemata defines the Information Schema and Definition Schema, providing a common set of tools to make SQL databases and objects self-describing.  These tools include the SQL object identifier, structure and integrity constraints, security and authorization specifications, features and packages of ISO/IEC 9075, support of features provided by SQL-based DBMS implementations, SQL-based DBMS implementation information and sizing items, and the values supported by the DBMS implementations.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref></p>
<p>

The SQL/JRT, or <b>SQL Routines and Types for the Java Programming Language</b>, extension is defined by ISO/IEC 9075-13:2003.  SQL/JRT specifies the ability to invoke static Java methods as routines from within SQL applications.  It also calls for the ability to use Java classes as SQL structured user-defined types.</p>
<p>

The <link xlink:type="simple" xlink:href="../713/11723713.xml">
SQL/XML</link>, or <b>XML-Related Specifications</b>, extension is defined by ISO/IEC 9075-14:2003.  SQL/XML specifies SQL-based extensions for using XML in conjunction with SQL.  The XML data type is introduced, as well as several routines, functions, and XML-to-SQL data type mappings to support manipulation and storage of XML in an SQL database.</p>
<p>

The SQL/PSM, or <b>Persistent Stored Modules</b>, extension is defined by ISO/IEC 9075-4:2003.  SQL/PSM standardizes procedural extensions for SQL, including flow of control, condition handling, statement condition signals and resignals, cursors and local variables, and assignment of expressions to variables and parameters.  In addition, SQL/PSM formalizes declaration and maintenance of persistent database language routines (e.g., "stored procedures").</p>

</ss1>
</sec>
<sec>
<st>
 Language elements </st>
<p>

<image width="275px" src="SQL_ANATOMY_wiki.svg" type="thumb">
<caption>

This chart shows several of the SQL language elements that compose a single statement.
</caption>
</image>
</p>
<p>

The SQL language is sub-divided into several language elements, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 <it>Statements</it> which may have a persistent effect on schemas and data, or which may control transactions, program flow, connections, sessions, or diagnostics.</entry>
<entry level="1" type="bullet">

 <it>Queries</it> which retrieve data based on specific criteria.</entry>
<entry level="1" type="bullet">

 <it>Expressions</it> which can produce either <link xlink:type="simple" xlink:href="../475/5565475.xml">
scalar</link> values or <link xlink:type="simple" xlink:href="../163/1701163.xml">
tables</link> consisting of <link xlink:type="simple" xlink:href="../167/1041167.xml">
columns</link> and <link xlink:type="simple" xlink:href="../142/1041142.xml">
rows</link> of data.</entry>
<entry level="1" type="bullet">

 <it>Predicates</it> which specify conditions that can be evaluated to SQL <link xlink:type="simple" xlink:href="../904/249904.xml">
three-valued logic (3VL)</link> Boolean truth values and which are used to limit the effects of statements and queries, or to change program flow.</entry>
<entry level="1" type="bullet">

 <it>Clauses</it>, which are in some cases optional, constituent components of statements and queries.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../700/2956700.xml">
Whitespace</link> is generally ignored in SQL statements and queries, making it easier to format SQL code for readability.</entry>
<entry level="1" type="bullet">

 SQL statements also include the <link xlink:type="simple" xlink:href="../351/59351.xml">
semicolon</link> (";") statement terminator.  Though not required on every platform, it is defined as a standard part of the SQL grammar.</entry>
</list>
</p>

<ss1>
<st>
 Queries </st>

<p>

The most common operation in SQL databases is the query, which is performed with the declarative <link xlink:type="simple" xlink:href="../285/665285.xml">
SELECT</link> keyword.  SELECT retrieves data from a specified <link xlink:type="simple" xlink:href="../163/1701163.xml">
table</link>, or multiple related tables, in a database.  While often grouped with <link xlink:type="simple" xlink:href="../347/975347.xml">
Data Manipulation Language (DML)</link> statements, the standard SELECT query is considered separate from SQL DML, as it has no persistent effects on the data stored in a database.  Note that there are some platform-specific variations of SELECT that can persist their effects in a database, such as the SELECT INTO syntax that exists in some databases.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></p>
<p>

SQL queries allow the user to specify a description of the desired result set, but it is left to the devices of the <link xlink:type="simple" xlink:href="../513/8513.xml">
database management system (DBMS)</link> to <link xlink:type="simple" xlink:href="../792/1710792.xml">
plan</link>, <link xlink:type="simple" xlink:href="../441/1732441.xml">
optimize</link>, and perform the physical operations necessary to produce that result set in as efficient a manner as possible.  An SQL query includes a list of columns to be included in the final result immediately following the SELECT keyword.  An asterisk ("*") can also be used as a "wildcard" indicator to specify that all available columns of a table (or multiple tables) are to be returned.  SELECT is the most complex statement in SQL, with several optional keywords and clauses, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../849/14277849.xml">
FROM</link> clause which indicates the source table or tables from which the data is to be retrieved. The FROM clause can include optional <link xlink:type="simple" xlink:href="../204/665204.xml">
JOIN</link> clauses to join related tables to one another based on user-specified criteria.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../014/3844014.xml">
WHERE</link> clause includes a comparison predicate, which is used to restrict the number of rows returned by the query.  The WHERE clause is applied before the GROUP BY clause.  The WHERE clause eliminates all rows from the result set where the comparison predicate does not evaluate to True.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../926/7079926.xml">
GROUP BY</link> clause is used to combine, or group, rows with related values into elements of a smaller set of rows.  GROUP BY is often used in conjunction with SQL aggregate functions or to eliminate duplicate rows from a result set.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../627/7079627.xml">
HAVING</link> clause includes a comparison predicate used to eliminate rows after the GROUP BY clause is applied to the result set.  Because it acts on the results of the GROUP BY clause, aggregate functions can be used in the HAVING clause predicate.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../377/7080377.xml">
ORDER BY</link> clause is used to identify which columns are used to sort the resulting data, and in which order they should be sorted (options are ascending or descending).  The order of rows returned by an SQL query is never guaranteed unless an ORDER BY clause is specified.</entry>
</list>
</p>
<p>

The following is an example of a SELECT query that returns a list of expensive books.  The query retrieves all rows from the <it>Book</it> table in which the <it>price</it> column contains a value greater than 100.00.  The result is sorted in ascending order by <it>title</it>.  The asterisk (*) in the <it>select list</it> indicates that all columns of the <it>Book</it> table should be included in the result set.</p>
<p>

SELECT * 
FROM Book
WHERE price &amp;gt; 100.00
ORDER BY title;</p>

<p>

The example below demonstrates the use of multiple tables in a join, grouping, and aggregation in an SQL query, by returning a list of books and the number of authors associated with each book.  </p>
<p>

SELECT Book.title, count(*) AS Authors
FROM Book
JOIN Book_author ON Book.isbn = Book_author.isbn
GROUP BY Book.title;</p>
<p>

Example output might resemble the following:</p>
<p>

Title                   Authors
----------------------  -------
SQL Examples and Guide     3
The Joy of SQL             1
How to use Wikipedia       2
Pitfalls of SQL            1</p>
<p>

Under the precondition that <it><link xlink:type="simple" xlink:href="../919/14919.xml">
isbn</link></it> is the only common column name of the two tables and that a column named <it>title</it> only exists in the <it>Books</it> table, the above query could be rewritten in the following form:</p>

<p>

SELECT title, count(*) AS Authors
FROM Book 
NATURAL JOIN Book_author 
GROUP BY title;</p>

<p>

However, many vendors either do not support this approach, or it requires certain column naming conventions. Thus, it is less common in practice.</p>
<p>

Data retrieval is very often combined with <link xlink:type="simple" xlink:href="../833/2702833.xml">
data projection</link> when the user is looking for calculated values and not just the verbatim data stored in <link xlink:type="simple" xlink:href="../491/333491.xml">
primitive data types</link>, or when the data needs to be expressed in a form that is different from how it's stored.  SQL allows the use of expressions in the <it>select list</it> to project data, as in the following example which returns a list of books that cost more than 100.00 with an additional <it>sales_tax</it> column containing a sales tax figure calculated at 6% of the <it>price</it>.</p>

<p>

SELECT isbn, title, price, price * 0.06 AS sales_tax
FROM Book
WHERE price &amp;gt; 100.00
ORDER BY title;</p>

<p>

Some modern day SQL queries may include extra WHERE statements that are conditional to each other. They may look like this example:</p>

<p>

SELECT isbn, title, price, date 
FROM Book
WHERE price &amp;gt; 100.00
AND (date = '16042004' or date = '16042005')
ORDER BY title;</p>

<p>

<link xlink:type="simple" xlink:href="../174/76174.xml">
Universal quantification</link> is not explicitly supported by sql, and must be worked out as a negated <link xlink:type="simple" xlink:href="../420/91420.xml">
existential quantification</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></p>

</ss1>
<ss1>
<st>
 Data manipulation </st>

<p>

First, there are the standard Data Manipulation Language (DML) elements. DML is the subset of the language used to add, update and delete data:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../237/903237.xml">
INSERT</link> is used to add rows (formally <link xlink:type="simple" xlink:href="../729/132729.xml">
tuple</link>s) to an existing table, for example:</entry>
</list>
</p>
<p>

INSERT INTO My_table (field1, field2, field3) VALUES ('test', 'N', NULL);</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../573/1220573.xml">
UPDATE</link> is used to modify the values of a set of existing table rows, eg:</entry>
</list>
</p>
<p>

UPDATE My_table SET field1 = 'updated value' WHERE field2 = 'N';</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../216/1701216.xml">
DELETE</link> removes zero or more existing rows from a table, eg:</entry>
</list>
</p>
<p>

DELETE FROM My_table WHERE field2 = 'N';</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../931/4347931.xml">
MERGE</link> is used to combine the data of multiple tables. It is something of a combination of the INSERT and UPDATE elements. It is defined in the SQL:2003 standard; prior to that, some databases provided similar functionality via different syntax, sometimes called an "<link xlink:type="simple" xlink:href="../046/1868046.xml">
upsert</link>".</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Transaction controls </st>

<p>

Transactions, if available, can be used to wrap around the DML operations:</p>
<p>

<list>
<entry level="1" type="bullet">

 START TRANSACTION (or <link xlink:type="simple" xlink:href="../953/233953.xml">
BEGIN WORK</link>, or BEGIN TRANSACTION, depending on SQL dialect) can be used to mark the start of a <link xlink:type="simple" xlink:href="../953/233953.xml">
database transaction</link>, which either completes entirely or not at all.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../958/1626958.xml">
COMMIT</link> causes all data changes in a transaction to be made permanent.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../240/1015240.xml">
ROLLBACK</link> causes all data changes since the last COMMIT or ROLLBACK to be discarded, so that the state of the data is "rolled back" to the way it was prior to those changes being requested.</entry>
</list>
</p>
<p>

Once the COMMIT statement has been executed, the changes <it>cannot</it> be rolled back. In other words, its meaningless to have ROLLBACK executed after COMMIT statement and vice versa.</p>
<p>

COMMIT and ROLLBACK interact with areas such as transaction control and locking. Strictly, both terminate any open transaction and release any locks held on data. In the absence of a START TRANSACTION or similar statement, the semantics of SQL are implementation-dependent.
Example:  <it>A classic bank transfer of funds transaction.</it></p>

<p>

START TRANSACTION;
UPDATE Account SET amount=amount-200 WHERE account_number=1234;
UPDATE Account SET amount=amount+200 WHERE account_number=2345;
IF ERRORS=0 COMMIT;
IF ERRORS&amp;gt;0 ROLLBACK;</p>


</ss1>
<ss1>
<st>
 Data definition </st>

<p>

The second group of keywords is the <link xlink:type="simple" xlink:href="../018/452018.xml">
Data Definition Language</link> (DDL). DDL allows the user to define new tables and associated elements. Most commercial SQL databases have proprietary extensions in their DDL, which allow control over nonstandard features of the database system.
The most basic items of DDL are the CREATE, ALTER, RENAME, TRUNCATE and DROP statements:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../018/452018.xml">
CREATE</link> causes an object (a table, for example) to be created within the database.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../018/452018.xml">
DROP</link> causes an existing object within the database to be deleted, usually irretrievably.</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../664/2554664.xml">
TRUNCATE</link> deletes all data from a table (non-standard, but common SQL statement).</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../018/452018.xml">
ALTER</link> statement permits the user to modify an existing object in various ways -- for example, adding a column to an existing table.</entry>
</list>

Example:</p>
<p>

CREATE TABLE My_table (
my_field1   INT,
my_field2   VARCHAR (50),
my_field3   DATE         NOT NULL,
PRIMARY KEY (my_field1, my_field2) 
);</p>


</ss1>
<ss1>
<st>
 Data control </st>

<p>

The third group of SQL keywords is the <link xlink:type="simple" xlink:href="../732/1180732.xml">
Data Control Language</link> (DCL). DCL handles the authorization aspects of data and permits the user to control who has access to see or manipulate data within the database.
Its two main keywords are:</p>
<p>

<list>
<entry level="1" type="bullet">

 GRANT authorizes one or more users to perform an operation or a set of operations on an object.</entry>
<entry level="1" type="bullet">

 REVOKE removes or restricts the capability of a user to perform an operation or a set of operations.</entry>
</list>

Example:</p>
<p>

GRANT SELECT, UPDATE ON My_table TO some_user, another_user;</p>


</ss1>
<ss1>
<st>
 Other </st>

<p>

<list>
<entry level="1" type="bullet">

 ANSI-standard SQL supports double dash, --, as a single line <link xlink:type="simple" xlink:href="../308/8592308.xml">
comment</link> identifier (some extensions also support curly brackets or C style /* comments */ for multi-line comments).</entry>
</list>

Example:</p>
<p>

SELECT * FROM Inventory -- Retrieve everything from inventory table</p>
<p>

<list>
<entry level="1" type="bullet">

 Some SQL servers allow <link xlink:type="simple" xlink:href="../665/1712665.xml">
user-defined function</link>s</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 Criticisms of SQL </st>

<p>

Technically, SQL is a <link xlink:type="simple" xlink:href="../648/210648.xml">
declarative computer language</link> for use with "SQL databases". Theorists and some practitioners note that many of the original SQL features were inspired by, but violated, the <link xlink:type="simple" xlink:href="../220/26220.xml">
relational model</link> for database management and its <link xlink:type="simple" xlink:href="../286/175286.xml">
tuple calculus</link> realization. Recent extensions to SQL achieved relational completeness, but have worsened the violations, as documented in <it><system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/84481.xml">
The Third Manifesto</link></instrumentality>
</artifact>
</system>
</it>. </p>
<p>

In addition, there are also some criticisms about the practical use of SQL:</p>
<p>

<list>
<entry level="1" type="bullet">

 Implementations are inconsistent and, usually, incompatible between vendors. In particular date and time syntax, string concatenation, nulls, and comparison case sensitivity often vary from vendor to vendor.</entry>
<entry level="1" type="bullet">

 The language makes it too easy to do a <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../795/5795.xml">
Cartesian</link></concept>
</idea>
 join (joining all possible combinations), which results in "run-away" result sets when WHERE clauses are mistyped. Cartesian joins are so rarely used in practice that requiring an explicit CARTESIAN keyword may be warranted. <it>SQL 1992</it> introduced the CROSS JOIN keyword that allows the user to make clear that a cartesian join is intended, but the shorthand "comma-join" with no predicate is still acceptable syntax.</entry>
<entry level="1" type="bullet">

 It is also possible to misconstruct a WHERE on an update or delete, thereby affecting more rows in a table than desired.</entry>
<entry level="1" type="bullet">

 The grammar of SQL is perhaps unnecessarily complex, borrowing a <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>-like keyword approach, when a function-influenced syntax could result in more re-use of fewer grammar and syntax rules. This is perhaps due to IBM's early goal of making the language more English-like so that it is more approachable to those without a mathematical or programming background. (Predecessors to SQL were more mathematical.)</entry>
</list>
</p>

<ss1>
<st>
 Reasons for lack of portability </st>

<p>

Popular implementations of SQL commonly omit support for basic features of Standard SQL, such as the DATE or TIME data types, preferring variations of their own. As a result, SQL code can rarely be ported between database systems without modifications. </p>
<p>

There are several reasons for this lack of portability between database systems:</p>
<p>

<list>
<entry level="1" type="bullet">

 The complexity and size of the SQL standard means that most databases do not implement the entire standard.</entry>
<entry level="1" type="bullet">

 The standard does not specify database behavior in several important areas (e.g. <link xlink:type="simple" xlink:href="../076/1711076.xml">
indexes</link>, file storage...), leaving it up to implementations of the database to decide how to behave.</entry>
<entry level="1" type="bullet">

 The SQL standard precisely specifies the syntax that a conforming database system must implement. However, the standard's specification of the semantics of language constructs is less well-defined, leading to areas of ambiguity.</entry>
<entry level="1" type="bullet">

 Many database vendors have large existing customer bases; where the SQL standard conflicts with the prior behavior of the vendor's database, the vendor may be unwilling to break <link xlink:type="simple" xlink:href="../459/4459.xml">
backward compatibility</link>.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 Alternatives to SQL </st>

<p>

A distinction should be made between alternatives to relational query languages and alternatives to SQL. The list below are proposed alternatives to SQL, but are still (nominally) relational. See <link xlink:type="simple" xlink:href="../805/622805.xml">
navigational database</link> for alternatives to entity:</p>
<p>

<list>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../393/84393.xml">
IBM Business System 12</link></instrumentality>
</artifact>
</system>
 (IBM BS12)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../431/3077431.xml#xpointer(//*[./st=%22Tutorial+D%22])">
Tutorial D</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../457/16020457.xml">
Hibernate Query Language</link> (HQL) - A Java-based tool that uses modified SQL</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../140/10344140.xml">
Quel</link></instrumentality>
</artifact>
</system>
 introduced in 1974 by the U.C. Berkeley Ingres project.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../558/4674558.xml">
Object Query Language</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../357/968357.xml">
Datalog</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<information wordnetid="105816287" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<datum wordnetid="105816622" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../140/11537140.xml">
.QL</link></database>
</datum>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</information>
</message>
 - object-oriented Datalog</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../337/13706337.xml">
LINQ</link></entry>
<entry level="1" type="bullet">

 <link>
QLC</link> - Query Interface to Mnesia, ETS, Dets, etc (<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../646/9646.xml">
Erlang</link></programming_language>
 programming language)</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../117/1347117.xml">
4D Query Language</link></instrumentality>
</artifact>
</system>
 (4D QL)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../084/2271084.xml">
QBE (Query By Example)</link> created by Moshè Zloof, IBM 1977</entry>
<entry level="1" type="bullet">

 <link>
Aldat Relational Algebra</link> and <link>
Domain algebra</link></entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../146/144146.xml">
Alphabetical list of programming languages</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../431/3077431.xml">
D (data language specification)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../560/2984560.xml">
D4 (programming language)</link> (an implementation of D)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../036/1569036.xml">
Comparison of relational database management systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../534/1593534.xml">
Comparison of object-relational database management systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../820/1568820.xml">
List of relational database management systems</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../075/247075.xml">
Hierarchical model</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../723/19723.xml">
MUMPS</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>



<p>

<reflist>
<entry id="1">
Chapple, Mike.&#32;"<weblink xlink:type="simple" xlink:href="http://databases.about.com/od/sql/a/sqlfundamentals.htm?terms=SQL">
SQL Fundamentals</weblink>"&#32;(HTML).&#32;<it>About.com: Databases</it>.&#32;  About.com.&#32;Retrieved on <link>
2007-06-10</link>.</entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://publib.boulder.ibm.com/infocenter/db2luw/v9/index.jsp?topic=/com.ibm.db2.udb.admin.doc/doc/c0004100.htm">
Structured Query Language (SQL)</weblink>"&#32;(HTML).&#32;  International Business Machines&#32;(October 27, 2006).&#32;Retrieved on <link>
2007-06-10</link>.</entry>
<entry id="3">
 <cite style="font-style:normal">Codd, E.F.&#32;(June 1970).&#32;"<weblink xlink:type="simple" xlink:href="http://www.acm.org/classics/nov95/toc.html">
A Relational Model of Data for Large Shared Data Banks</weblink>". <it>Communications of the ACM</it>&#32;<b>13</b>&#32;(No. 6): pp. 377–387.&#32;Association for Computing Machinery. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F362384.362685">
10.1145/362384.362685</weblink>. Retrieved on <link>
2007-06-09</link>.</cite>&nbsp;</entry>
<entry id="4">
 <cite style="font-style:normal">Chamberlin, Donald D.; Boyce, Raymond F.&#32;(1974).&#32;"<weblink xlink:type="simple" xlink:href="http://www.almaden.ibm.com/cs/people/chamberlin/sequel-1974.pdf">
SEQUEL: A Structured English Query Language</weblink>". <it>Proceedings of the 1974 ACM SIGFIDET Workshop on Data Description, Access and Control</it>: pp. 249–264.&#32;Association for Computing Machinery. Retrieved on <link>
2007-06-09</link>.</cite>&nbsp;</entry>
<entry id="5">
 <cite style="font-style:normal" class="book">Oppel, Andy&#32;(March 1, 2004). <weblink xlink:type="simple" xlink:href="http://www.mhprofessional.com/product.php?cat=112&amp;isbn=0072253649">
Databases Demystified</weblink>.&#32;<link xlink:type="simple" xlink:href="../728/49728.xml">
San Francisco, CA</link>:&#32;McGraw-Hill Osborne Media,&#32;pp. 90-91. ISBN 0-07-225364-9.</cite>&nbsp;</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://www-03.ibm.com/ibm/history/history/year_1978.html">
History of IBM, 1978</weblink>"&#32;(HTML).&#32;<it>IBM Archives</it>.&#32;  IBM.&#32;Retrieved on <link>
2007-06-09</link>.</entry>
<entry id="7">
Chapple, Mike&#32;(?).&#32;"<weblink xlink:type="simple" xlink:href="http://databases.about.com/od/sql/a/sqlfundamentals.htm">
SQL Fundamentals</weblink>"&#32;(HTML).&#32;<it>About.com</it>.&#32;  About.com, A New York Times Company.&#32;Retrieved on <link>
2007-08-30</link>.</entry>
<entry id="8">
 <cite id="Reference-Melton-1993" style="font-style:normal" class="book">Melton, Jim;&#32;Alan R Simon&#32;(1993). Understanding the New SQL: A Complete Guide.&#32;Morgan Kaufmann,&#32;536. ISBN 1558602453.&nbsp;"chapter 1.2 What is SQL? SQL (correctly pronounced "ess cue ell," instead of the somewhat common "sequel"), is a..."</cite>&nbsp;</entry>
<entry id="9">
"<weblink xlink:type="simple" xlink:href="http://www.faqs.org/docs/ppbook/c1164.htm">
Understand SQL</weblink>".&#32;  www.faqs.org/docs/.</entry>
<entry id="10">
Doll, Shelley&#32;(June 19, 2002).&#32;"<weblink xlink:type="simple" xlink:href="http://builder.com.com/5100-6388-1046268.html">
Is SQL a Standard Anymore?</weblink>"&#32;(HTML).&#32;<it>TechRepublic's Builder.com</it>.&#32;  TechRepublic.&#32;Retrieved on <link>
2007-06-09</link>.</entry>
<entry id="11">
http://archives.postgresql.org/pgsql-hackers/2008-09/msg00071.php</entry>
<entry id="12">
 <cite id="CITEREF2003" style="font-style:normal"><it>ISO/IEC 9075-11:2003: Information and Definition Schemas (SQL/Schemata)</it>, 2003, pp. p. 1</cite>&nbsp;</entry>
<entry id="13">
ANSI/ISO/IEC International Standard (IS). Database Language SQL—Part 2: Foundation (SQL/Foundation). 1999</entry>
<entry id="14">
"<weblink xlink:type="simple" xlink:href="http://msdn2.microsoft.com/en-us/library/ms188029(SQL.90).aspx">
INTO Clause (Transact-SQL)</weblink>"&#32;(HTML).&#32;<it>SQL Server 2005 Books Online</it>.&#32;  Microsoft&#32;(2007).&#32;Retrieved on <link xlink:type="simple" xlink:href="../798/15798.xml">
2007-06-17</link>.</entry>
<entry id="15">
M. Negri, G. Pelagatti, L. Sbattella (1989) <it><weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=63224.68822&amp;coll=GUIDE&amp;dl=GUIDE">
Semantics and problems of universal quantification in SQL</weblink>''</it></entry>
<entry id="17">
Jalal Kawash <it><weblink xlink:type="simple" xlink:href="http://www.thefreelibrary.com/Complex+quantification+in+Structured+Query+Language+(SQL):+a+tutorial...-a0119901477">
Complex quantification in Structured Query Language (SQL): a tutorial using relational calculus</weblink></it> - Journal of Computers in Mathematics and Science Teaching ISSN 0731-9258 Volume 23, Issue 2, 2004 AACE  Norfolk, VA </entry>
<entry id="16">
Claudio Fratarcangeli (1991) <it><weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=126482.126484&amp;coll=GUIDE&amp;dl=GUIDE&amp;CFID=5934371&amp;CFTOKEN=55309005">
Technique for universal quantification in SQL</weblink>''</it></entry>
<entry id="18">
http://archives.postgresql.org/pgsql-hackers/2008-09/msg00071.php</entry>
</reflist>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.acm.org/classics/nov95/toc.html">
"A Relational Model of Data for Large Shared Data Banks"</weblink> E. F. Codd, Communications of the ACM, Vol. 13, No. 6, June 1970, pp. 377-387.</entry>
<entry level="1" type="bullet">

 (C2 wiki)</entry>
</list>
</p>


</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.mcjones.org/System_R/SQL_Reunion_95/sqlr95.html">
<it>The 1995 SQL Reunion: People, Projects, and Politics</it>, by Paul McJones (ed.)</weblink>: transcript of a reunion meeting devoted to the personal history of relational databases and SQL</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cbi.umn.edu/oh/display.phtml?id=317">
Oral history interview with Donald D. Chamberlin</weblink> <link xlink:type="simple" xlink:href="../248/2469248.xml">
Charles Babbage Institute</link>  In this oral history Chamberlin recounts his early life, his education at Harvey Mudd College and Stanford University, and his work on relational database technology. Chamberlin was a member of the System R research team and, with <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../574/9805574.xml">
Raymond F. Boyce</link></scientist>
, developed the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/29004.xml">
SQL</link></programming_language>
 database language. Chamberlin also briefly discusses his more recent research on XML query languages.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://special.lib.umn.edu/findaid/xml/cbi00168.xml">
American National Standards Institute. X3H2 Records, 1978-1995</weblink> <link xlink:type="simple" xlink:href="../248/2469248.xml">
Charles Babbage Institute</link>  Collection documents the H2 committee’s development of the NDL and SQL standards.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sql.info.pl">
SQL PORTAL in Polish Language</weblink> </entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://dbtips.wordpress.com">
SQL Weaknesses</weblink> </entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../513/8513.xml">
Database management system</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../520/10973520.xml">
Database models</link></instrumentality>
</artifact>
</system>

&nbsp;·  <relationship wordnetid="113928668" confidence="0.8">
<confinement wordnetid="113998576" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<subjugation wordnetid="113996300" confidence="0.8">
<constraint wordnetid="113998781" confidence="0.8">
<link xlink:type="simple" xlink:href="../640/8640.xml">
Database normalization</link></constraint>
</subjugation>
</state>
</confinement>
</relationship>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../365/10983365.xml">
Database storage</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../515/1990515.xml">
Distributed DBMS</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../718/445718.xml">
Referential integrity</link>&nbsp;·  <link xlink:type="simple" xlink:href="../285/175285.xml">
Relational algebra</link>&nbsp;·  <link xlink:type="simple" xlink:href="../769/175769.xml">
Relational calculus</link>&nbsp;·  <link xlink:type="simple" xlink:href="../873/25873.xml">
Relational database</link>&nbsp;·  <link xlink:type="simple" xlink:href="../743/98743.xml">
Relational DBMS</link>&nbsp;·  <link xlink:type="simple" xlink:href="../220/26220.xml">
Relational model</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../960/68960.xml">
Object-relational database</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../409/212409.xml">
Transaction processing</link></col>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
Concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../377/8377.xml">
Database</link>&nbsp;·  <link xlink:type="simple" xlink:href="../776/60776.xml">
ACID</link>&nbsp;·  <link xlink:type="simple" xlink:href="../180/287180.xml">
CRUD</link>&nbsp;·  <link xlink:type="simple" xlink:href="../540/2002540.xml">
Null</link>&nbsp;·  <link xlink:type="simple" xlink:href="../975/336975.xml">
Candidate key</link>&nbsp;·  <link xlink:type="simple" xlink:href="../065/259065.xml">
Foreign key</link>&nbsp;·  <link xlink:type="simple" xlink:href="../099/6850099.xml">
Primary key</link>&nbsp;·  <link xlink:type="simple" xlink:href="../952/1137952.xml">
Superkey</link>&nbsp;·  <link xlink:type="simple" xlink:href="../950/472950.xml">
Surrogate key</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Objects</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../316/1384316.xml">
Trigger</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/1960226.xml">
View</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../163/1701163.xml">
Table</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../836/2104836.xml">
Cursor</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../974/245974.xml">
Log</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../953/233953.xml">
Transaction</link>&nbsp;·  <link xlink:type="simple" xlink:href="../076/1711076.xml">
Index</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../251/277251.xml">
Stored procedure</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../101/1983101.xml">
Partition</link></instrumentality>
</artifact>
</system>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../004/29004.xml">
SQL</link></programming_language>
</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../285/665285.xml">
Select</link>&nbsp;·  <link xlink:type="simple" xlink:href="../237/903237.xml">
Insert</link>&nbsp;·  <link xlink:type="simple" xlink:href="../573/1220573.xml">
Update</link>&nbsp;·  <link xlink:type="simple" xlink:href="../931/4347931.xml">
Merge</link>&nbsp;·  <link xlink:type="simple" xlink:href="../216/1701216.xml">
Delete</link>&nbsp;·  <link xlink:type="simple" xlink:href="../204/665204.xml">
Join</link>&nbsp;·  <link xlink:type="simple" xlink:href="../258/11308258.xml">
Union</link>&nbsp;·  <link xlink:type="simple" xlink:href="../018/452018.xml">
Create</link>&nbsp;·  <link xlink:type="simple" xlink:href="../018/452018.xml">
Drop</link>&nbsp;·  <link xlink:type="simple" xlink:href="../953/233953.xml#xpointer(//*[./st=%22In+SQL%22])">
Begin work</link>&nbsp;·  <link xlink:type="simple" xlink:href="../958/1626958.xml">
Commit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../240/1015240.xml">
Rollback</link>&nbsp;·  <link xlink:type="simple" xlink:href="../664/2554664.xml">
Truncate</link>&nbsp;·  <link xlink:type="simple" xlink:href="../018/452018.xml">
Alter</link>&nbsp;·  <link xlink:type="simple" xlink:href="../499/19041499.xml">
XSQL</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Implementations</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../873/25873.xml">
Relational</link>&nbsp;·  <link xlink:type="simple" xlink:href="../973/573973.xml">
Flat file</link>&nbsp;·  <link xlink:type="simple" xlink:href="../069/1971069.xml">
Deductive</link>&nbsp;·  <link xlink:type="simple" xlink:href="../079/12321079.xml">
Dimensional</link>&nbsp;·  <link xlink:type="simple" xlink:href="../075/247075.xml">
Hierarchical</link>&nbsp;·  <link xlink:type="simple" xlink:href="../098/185098.xml">
Network</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../414/15002414.xml">
Document-oriented</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../826/22826.xml">
Object-oriented</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../960/68960.xml">
Object-relational</link></instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../471/1252471.xml">
Temporal</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../351/1442351.xml">
XML data stores</link>&nbsp;·  <link xlink:type="simple" xlink:href="../386/16727386.xml">
Triple stores</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../356/217356.xml">
Concurrency control</link>&nbsp;·  <link xlink:type="simple" xlink:href="../139/645139.xml">
Data dictionary</link>&nbsp;·  <link xlink:type="simple" xlink:href="../755/42755.xml">
JDBC</link>&nbsp;·  <link xlink:type="simple" xlink:href="../701/168701.xml">
ODBC</link>&nbsp;·  <link xlink:type="simple" xlink:href="../528/494528.xml">
Query language</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../441/1732441.xml">
Query optimizer</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</instrumentality>
</artifact>
</system>
&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../792/1710792.xml">
Query plan</link></instrumentality>
</artifact>
</system>
</col>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<b>Database products:</b> <link xlink:type="simple" xlink:href="../860/1568860.xml">
Object-oriented</link> (<link xlink:type="simple" xlink:href="../534/1593534.xml">
comparison</link>)
&nbsp;·  <link xlink:type="simple" xlink:href="../820/1568820.xml">
Relational</link> (<link xlink:type="simple" xlink:href="../036/1569036.xml">
comparison</link>)&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../414/15002414.xml">
Document-oriented</link></instrumentality>
</artifact>
</system>
</col>
</row>
</table>
</col>
</row>
</table>

</p>


</sec>
</bdy>
</datum>
</entity>
</programming_language>
</system>
</article>
