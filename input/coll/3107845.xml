<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:10:43[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Klee&apos;s measure problem</title>
<id>3107845</id>
<revision>
<id>223412442</id>
<timestamp>2008-07-03T23:34:49Z</timestamp>
<contributor>
<username>Mike Christie</username>
<id>1239045</id>
</contributor>
</revision>
<categories>
<category>Geometric algorithms</category>
<category>Measure theory</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../927/176927.xml">
computational geometry</link>, <b>Klee's measure problem</b> is the problem of determining how efficiently the <link xlink:type="simple" xlink:href="../873/19873.xml">
measure</link> of a <link xlink:type="simple" xlink:href="../949/47949.xml">
union</link> of (<link xlink:type="simple" xlink:href="../398/8398.xml">
multidimensional</link>) rectangular ranges can be computed. Here, a <it>d</it>-dimensional rectangular range is defined to be a <link xlink:type="simple" xlink:href="../795/5795.xml">
cartesian product</link> of <it>d</it> <link xlink:type="simple" xlink:href="../172/49172.xml">
intervals</link> of <link xlink:type="simple" xlink:href="../491/19725491.xml">
real number</link>s, which is a <link xlink:type="simple" xlink:href="../631/27631.xml">
subset</link> of <b>R</b><it>d</it>.<p>

The problem is named after <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../262/11585262.xml">
Victor Klee</link></associate>
</mathematician>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
, who gave an algorithm for computing the length of a union of <link xlink:type="simple" xlink:href="../879/14879.xml">
interval</link>s (the case <it>d</it> = 1) which was later shown to be optimally efficient in the sense of <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>. The computational complexity of computing the area of a union of 2-dimensional rectangular ranges is now also known, but the case <it>d</it> ≥ 3 remains an <link xlink:type="simple" xlink:href="../335/1333335.xml">
open problem</link>.</p>

<sec>
<st>
History and algorithms</st>

<p>

In 1977, <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../262/11585262.xml">
Victor Klee</link></associate>
</mathematician>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
 considered the following problem: given a collection of <it>n</it> <link xlink:type="simple" xlink:href="../172/49172.xml">
intervals</link> in the <link xlink:type="simple" xlink:href="../580/52580.xml">
real line</link>, compute the length of their union.  He then presented an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> to solve this problem with <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity</link> (or "running time") <math>O(n \log n)</math> &mdash; see <link xlink:type="simple" xlink:href="../578/44578.xml">
Big O notation</link> for the meaning of this statement. This algorithm, based on sorting the intervals, was later shown by Michael Fredman and Bruce Weide (1978) to be optimal.</p>
<p>

Later in 1977, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../316/3635316.xml">
Jon Bentley</link></scientist>
</causal_agent>
</person>
</physical_entity>
 considered a 2-dimensional analogue of this problem: given a collection of <it>n</it> <link xlink:type="simple" xlink:href="../048/70048.xml">
rectangle</link>s, find the <link xlink:type="simple" xlink:href="../209/1209.xml">
area</link> of their union.  He also obtained a complexity <math>O(n \log n)</math> algorithm, now known as <b>Bentley's algorithm</b>, based on reducing the problem to <it>n</it> <it>1</it>-dimensional problems: this is done by sweeping a vertical line across the area. Using this method, the area of the union can be computed without explicitly constructing the union itself. Bentley's algorithm is now also known to be optimal (in the <it>2</it>-dimensional case), and is used in <link xlink:type="simple" xlink:href="../210/18567210.xml">
computer graphics</link>, among other areas.</p>
<p>

These two problems are the 1- and 2-dimensional cases of a more general question: given a collection of <it>n</it> <it>d</it>-dimensional rectangular ranges, compute the measure of their union. This general problem is Klee's measure problem.</p>
<p>

When generalized to the <it>d</it>-dimensional case, Bentley's algorithm has a running time of <math>O(n^{d-1} \log n)</math>.  This turns out <it>not</it> to be optimal, because it only decomposes the <it>d</it>-dimensional problem into <it>n</it> (<it>d-1</it>)-dimensional problems, and does not further decompose those subproblems.  In 1981, Jan van Leeuwen and Derek Wood improved the running time of this algorithm to <math>O(n^{d-1})</math> for <it>d</it> ≥ 3 by using dynamic <link xlink:type="simple" xlink:href="../097/577097.xml">
quadtree</link>s.</p>
<p>

In 1988, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../516/1177516.xml">
Mark Overmars</link></research_worker>
</scientist>
</causal_agent>
</person>
</physical_entity>
 and Chee Yap proposed an <math>O(n^{d/2} \log n)</math> algorithm for <it>d</it> ≥ 3 which is the fastest known algorithm to date.  Their algorithm uses a particular data structure similar to a <link xlink:type="simple" xlink:href="../725/1676725.xml">
kd-tree</link> to decompose the problem into 2-dimensional components and aggregate those components efficiently; the 2-dimensional problems themselves are solved efficiently using a <link xlink:type="simple" xlink:href="../799/648799.xml">
trellis</link> structure.  Although asymptotically faster than Bentley's algorithm, its data structures use significantly more space, so it is only used in problems where either <it>n</it> or <it>d</it> is large.  In 1998, Bogdan Chlebus proposed a simpler algorithm with the same asymptotic running time for the common special cases where <it>d</it> is 3 or 4.</p>

</sec>
<sec>
<st>
Current status</st>

<p>

The only known <link xlink:type="simple" xlink:href="../693/42693.xml">
lower bound</link> for any <it>d</it> is <math>\Omega(n \log n)</math>.  The Overmars&ndash;Yap algorithm provides an upper bound of <math>O(n^{d/2} \log n)</math>, so for <it>d</it> ≥ 3, it remains an open question whether faster algorithms are possible, or alternatively whether tighter lower bounds can be proven.  In particular, it remains open whether the algorithm's running time must depend on <it>d</it>.  In addition, the question of whether there are faster algorithms that can deal with special cases (for example, when there is a bound on the scale of the ranges) remains open.</p>

</sec>
<sec>
<st>
References and further reading</st>

<ss1>
<st>
Important papers</st>
<p>

<list>
<entry level="1" type="bullet">

Victor Klee (1977).  Can the measure of <math>\cup[a_i, b_i]</math> be computed in less than <math>O(n \log n)</math> steps?  <it>American Mathematical Monthly</it> 84: 284-285.</entry>
<entry level="1" type="bullet">

Jon L. Bentley (1977). Algorithms for Klee's rectangle problems.  Unpublished notes, Computer Science Department, Carnegie Mellon University.</entry>
<entry level="1" type="bullet">

Michael L. Fredman and Bruce Weide (1978).  The complexity of computing the measure of <math>\cup[a_i, b_i]</math>.  <it>Communications of the ACM</it> 21: 540-544.</entry>
<entry level="1" type="bullet">

Jan van Leeuwen and Derick Wood (1981).  The measure problem for rectangular ranges in <it>d</it>-space.  <it>Journal of Algorithms</it> 2: 282-300.</entry>
<entry level="1" type="bullet">

Mark H. Overmars and Chee-Keng Yap (1988).  New upper bounds in Klee's measure problem.  Extended abstract. Rijksuniversiteit Utrecht Technical Report RUU-CS-88-22.  Full version published in <it>SIAM Journal of Computing</it> 20(6): 1034-1045 (1991). (<weblink xlink:type="simple" xlink:href="http://archive.cs.uu.nl/pub/RUU/CS/techreps/CS-1989/1989-28.pdf">
PDF of the tech report version</weblink>.)</entry>
<entry level="1" type="bullet">

Bogdan S. Chlebus (1998). On the Klee's measure problem in small dimensions. In <it>Proceedings of the 25th Conference on Current Trends in Theory and Practice of Informatics (SOFSEM-98)</it> (Jasná, Slovakia, November 21-27, 1998). Also published in <it>Springer Lecture Notes in Computer Science</it> 1521 (Springer-Verlag, Berlin, 1998).</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Secondary literature</st>
<p>

<list>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../906/9597906.xml">
Franco P. Preparata</link></associate>
</research_worker>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
 and Michael I. Shamos (1985). <it>Computational Geometry</it> (Springer-Verlag, Berlin).</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://compgeom.cs.uiuc.edu/~jeffe/open/klee.html">
Klee's Measure Problem</weblink>, from Professor Jeff Erickson's <weblink xlink:type="simple" xlink:href="http://compgeom.cs.uiuc.edu/~jeffe/open/">
list of open problems</weblink> in computational geometry. (Accessed <link xlink:type="simple" xlink:href="../759/21759.xml">
November 8</link>, <link xlink:type="simple" xlink:href="../984/35984.xml">
2005</link>, when the last update was <link xlink:type="simple" xlink:href="../439/18679439.xml">
July 31</link>, <link xlink:type="simple" xlink:href="../647/34647.xml">
1998</link>.)</entry>
</list>
</p>

</ss1>
</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
