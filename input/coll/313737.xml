<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:47:43[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Anti-spam techniques (e-mail)</title>
<id>313737</id>
<revision>
<id>243541859</id>
<timestamp>2008-10-06T23:25:08Z</timestamp>
<contributor>
<username>Amatulic</username>
<id>524544</id>
</contributor>
</revision>
<categories>
<category>Anti-spam</category>
<category>Spam filtering</category>
<category>Spamming</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article may be .</b>
Please  this issue on the talk page; if necessary, split the content into subarticles and keep this article in a .</col>
</row>
</table>

<p>

To prevent <link xlink:type="simple" xlink:href="../847/459847.xml">
e-mail spam</link>, both end users and administrators of e-mail systems use various <b>anti-spam techniques</b>.  Some of these techniques have been embedded in products, services and software to ease the burden on users and administrators. No one technique is a complete solution to the spam problem, and each has trade-offs between incorrectly rejecting legitimate e-mail vs. not rejecting all spam, and the associated costs in time and effort.</p>
<p>

Anti-spam techniques can be broken into four broad categories: those that require actions by individuals, those that can be automated by the email administrator, those that can be automated by e-mail senders and those employed by researchers and law enforcement officials.</p>

<sec>
<st>
 Detecting spam </st>

<p>

Detecting spam based on the content of the e-mail, either by detecting keywords such as "viagra" or by statistical means, is very popular.  Such methods can be very accurate when they are correctly tuned to the types of legitimate email that an individual gets, but they can also make mistakes such as detecting the keyword "cialis" in the word "specialist".  The content also doesn't determine whether the email was either unsolicited or bulk, the two key features of spam.  So, if a friend sends you a joke that mentions "viagra", content filters can easily mark it as being spam even though it is neither unsolicited nor sent in bulk.</p>
<p>

The most popular <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>s (DNS Blacklists) are lists of IP addresses of known spammers, open relays, zombie spammers etc. </p>
<p>

<link xlink:type="simple" xlink:href="../912/4228912.xml">
Spamtrap</link>s are often email addresses that were never valid or have been invalid for a long time that are used to collect spam. An effective spamtrap is not announced and is only found by <link xlink:type="simple" xlink:href="../785/53785.xml">
dictionary attack</link>s or by pulling addresses off hidden webpages. For a spamtrap to remain effective the address must never be given to anyone. Some black lists, such as spamcop, use spamtraps to catch spammers and blacklist them.</p>
<p>

Enforcing technical requirements of the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml">
Simple Mail Transfer Protocol</link></rule>
</direction>
</protocol>
</message>
 (SMTP) can be used to block mail coming from systems that are not compliant with the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml#xpointer(//*[./st=%22Related+Requests+For+Comments+(RFCs)%22])">
RFC standards</link></rule>
</direction>
</protocol>
</message>
. A lot of spammers use poorly written software or are unable to comply with the standards because they do not have legitimate control of the computer sending spam (<link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>).  So by setting restrictions on the <link xlink:type="simple" xlink:href="../624/20624.xml">
mail transfer agent</link> (MTA) a mail administrator can reduce spam significantly. In many situations, simply requiring a valid <link xlink:type="simple" xlink:href="../155/706155.xml">
fully qualified domain name</link> (FQDN) in the SMTP's EHLO (extended hello) statement is enough to block 25% of incoming spam.  Similarly, enforcing the correct fall back of Mail eXchange (MX) records in the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
Domain Name System</link></rule>
</direction>
</protocol>
</message>
, or the correct handling of delays  (<link xlink:type="simple" xlink:href="../034/224034.xml">
Teergrube</link>) can be effective.</p>

</sec>
<sec>
<st>
 End-user techniques </st>

<p>

There are a number of techniques that individuals can use to restrict the availability of their e-mail addresses, reducing or preventing their attractiveness to spam.</p>

<ss1>
<st>
 Address munging </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../353/527353.xml">
Address munging</link></it>
</indent>

Posting anonymously, or with a fake name and address, is one way to avoid "address harvesting," but users should ensure that the fake address is not valid. Users who want to receive legitimate email regarding their posts or Web sites can alter their addresses so humans can figure out but spammers cannot. For instance, joe@example.net might post as joeNOS@PAM.example.net.invalid.  Address munging, however, can cause legitimate replies to be lost. If it's not the user's valid address, it has to be truly invalid, otherwise someone or some server will still get the spam for it.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
Other ways use <link xlink:type="simple" xlink:href="../353/527353.xml#xpointer(//*[./st=%22Alternatives%22])">
transparent address munging</link> to avoid this by allowing users to see the actual address but obfuscate it from automated email harvesters with methods such as displaying all or part of the e-mail address on a web page as an image, a text logo shrunken to normal size using in-line <link xlink:type="simple" xlink:href="../013/164013.xml">
CSS</link>, or as jumbled text with the order of characters restored using CSS.</p>

<ss2>
<st>
 Hindering legitimate contact </st>

<p>

One should keep in mind that often those  attempting contact will give up at the slightest hindrance, unbeknownst to the intended recipient.</p>
<p>

In addition, one's assumption that one never gets any legitimate mail from country X anyway, and thus blocks it, might actually trigger a <link xlink:type="simple" xlink:href="../242/384242.xml">
vicious circle</link>.</p>

</ss2>
</ss1>
<ss1>
<st>
 Avoid responding to spam </st>

<p>

Spammers often regard responses to their messages&mdash;even responses like "Don't spam me"&mdash;as confirmation that an email address is valid. Likewise, many spam messages contain Web links or addresses which the user is directed to follow to be removed from the spammer's mailing list. In several cases, spam-fighters have tested these links, confirming they do not lead to the recipient address's removal&mdash;if anything, they lead to more spam.</p>
<p>

Sender addresses are often forged in spam messages, including using the recipient's own address as the forged sender address, so that responding to spam may result in failed deliveries or may reach innocent e-mail users whose addresses have been abused. In many countries providing a false identity in that way is a criminal offense. <it>Criminal</it> spammers sometimes send their messages from purposely compromised computers in order to hide their real identity. <it>Benign</it> spammers reveal their identity, allowing recipients to respond.</p>
<p>

In <work wordnetid="100575741" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<community wordnetid="108223802" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<gathering wordnetid="107975026" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/18588994.xml">
Usenet</link></activity>
</psychological_feature>
</group>
</act>
</service>
</gathering>
</rule>
</event>
</social_group>
</message>
</system_of_measurement>
</community>
</direction>
</standard>
</protocol>
</work>
, it is widely considered even more important to avoid responding to spam. Many ISPs have software that seek and destroy duplicate messages. Someone may see a spam and respond to it before it is cancelled by their server, which can have the effect of reposting the spam for them; since it is not a duplicate, the reposted copy will last longer.</p>
<p>

See also the <b><link>
Boulder Pledge</link></b>.</p>

</ss1>
<ss1>
<st>
 Contact forms </st>

<p>

Contact forms allow users to send email by filling out forms in a web browser.  The web server takes the form data, forwarding it to an email address.  The user never sees the email address.  Contact forms have the drawback that they require a website that supports server side scripts.  They are also inconvenient to the message sender as they are not able to use their preferred e-mail client.  Finally if the software used to run the contact forms is badly designed they can become spam tools in their own right. Additionally many spammers have taken to using contact forms to send spam to the intended recipient.</p>

</ss1>
<ss1>
<st>
 Disable HTML in e-mail </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../564/4142564.xml">
HTML e-mail</link></it>
</indent>

Many modern mail programs incorporate <link xlink:type="simple" xlink:href="../173/33173.xml">
Web browser</link> functionality, such as the display of <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../191/13191.xml">
HTML</link></format>
, URLs, and images. This can easily expose the user to offensive images in spam. In addition, spam written in HTML can contain <link xlink:type="simple" xlink:href="../430/1157430.xml">
web bug</link>s which allows spammers to see that the e-mail address is valid and that the message has not been caught in spam filters.  <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../845/9845.xml">
JavaScript</link></programming_language>
 programs can be used to direct the user's Web browser to an advertised page, or to make the spam message difficult to close or delete. Spam messages have contained attacks upon security vulnerabilities in the HTML renderer, using these holes to install <link xlink:type="simple" xlink:href="../951/28951.xml">
spyware</link>. (Some <link xlink:type="simple" xlink:href="../196/18994196.xml">
computer virus</link>es are borne by the same mechanisms.) </p>
<p>

Mail clients which do not automatically download and display HTML, images or attachments, have fewer risks, as do clients who have been configured to not display these by default.</p>

</ss1>
<ss1>
<st>
 Disposable e-mail addresses </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../908/1626908.xml">
Disposable e-mail address</link></it>
</indent>

Many email users sometimes need to give an address to a site without complete assurance that the site will not send out spam. One way to mitigate the risk is to provide a <it>disposable</it> email address&mdash;a temporary address which forwards email to a real account, which the user can disable or abandon. A number of services provide disposable address forwarding. Addresses can be manually disabled, can expire after a given time interval, or can expire after a certain number of messages have been forwarded.  Sites that fail to treat such addresses appropriately have found themselves in legal jeopardy.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

</ss1>
<ss1>
<st>
 Reporting spam </st>

<p>

Tracking down a spammer's ISP and reporting the offense can lead to the spammer's service being terminated. Unfortunately, it can be difficult to track down the spammer&mdash;and while there are some online tools to assist, they are not always accurate. Occasionally, spammers employ their own netblocks. In this case, the abuse contact for the netblock can be the spammer itself and can confirm your address.</p>
<p>

Examples of these online tools are <link xlink:type="simple" xlink:href="../427/1905427.xml">
SpamCop</link> and <link xlink:type="simple" xlink:href="../065/5200065.xml">
Network Abuse Clearinghouse</link>. They provide automated or semi-automated means to report spam to ISPs. Some spam-fighters regard them as inaccurate compared to what an expert in the email system can do; however, most email users are not experts.</p>
<p>

A useful free tool that may be used in the reporting of spam is also available (<weblink xlink:type="simple" xlink:href="http://www.spamtrackers.eu/wiki/index.php?title=Complainterator">
Complainterator</weblink>). The Complainterator will send an automatically-generated complaint to the registrar of the spamming domain and the registrar of its name servers. </p>
<p>

Historically, reporting spam in this way has not seriously abated spam, since the spammers simply move their operation to another URL, ISP or network of IP addresses.</p>
<p>

Consumers may also forward "unwanted or deceptive spam" to an email address (<weblink xlink:type="simple" xlink:href="http://www.ftc.gov/opa/2004/07/newspamemail.htm">
 spam@uce.gov</weblink>) maintained by the FTC. The database collected is used to prosecute perpetrators of scam or deceptive advertising.</p>
<p>

An alternative to contacting ISPs is to contact the registrar of a domain name that has used in spam e-mail. Registrars, as ICANN-accredited administrative organizations, are obliged to uphold certain rules and regulations, and have the resources necessary for dealing with abuse complaints.</p>

</ss1>
<ss1>
<st>
 Responding to spam </st>

<p>

Some advocate responding aggressively to spam&mdash;in other words, "spamming the spammer".</p>
<p>

The basic idea is to make spamming less attractive to the spammer, by increasing the spammer's overhead. There are several ways to reach a spammer, but besides the caveats <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Responding+to+spam%22])">
above</link>, it may lead to retaliations by the spammer.</p>
<p>

<b>1. Replying directly to the spammer's email address.</b> <weblink xlink:type="simple" xlink:href="http://pcworld.about.com/news/Apr162004id115702.htm">
http://pcworld.about.com/news/Apr162004id115702.htm</weblink>
Just clicking "reply" will not work in the vast majority of cases, since most of the sender addresses are forged or made up. In some cases, however, spammers do provide valid addresses, as in the case of <link xlink:type="simple" xlink:href="../526/46526.xml">
Nigerian scams</link>. <weblink xlink:type="simple" xlink:href="http://www.419eater.com/">
http://www.419eater.com/</weblink></p>
<p>

<b>2. Targeting the computers used to send out spam.</b> 
In 2005, IBM announced a service to bounce spam directly to the computers that send out spam. <weblink xlink:type="simple" xlink:href="http://money.cnn.com/2005/03/22/technology/ibm_spam/index.htm">
http://money.cnn.com/2005/03/22/technology/ibm_spam/index.htm</weblink>
Because the IP addresses are identified in the headers of every message, it would be possible to target those computers directly, sidestepping the problem of forged email addresses.
In most cases, however, those computers do not belong to the real spammer, but to unsuspecting users with unsecured or outdated systems, hijacked through <link xlink:type="simple" xlink:href="../901/20901.xml">
malware</link> and controlled at distance by the spammer; these are known as <link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>s.</p>
<p>

<b>3. Leaving messages on the spamvertised site.</b>
Spammers selling their wares need a tangible point of contact so that customers can reach them.
Sometimes it is a telephone number, but most often is a web site containing <link xlink:type="simple" xlink:href="../674/3422674.xml">
web forms</link> through which customers can fill out orders or inquiries, or even "unsubscribe" requests.
Since positive response to spam is probably much less than 1/10,000, if just a tiny percentage of users visit spam sites just to leave negative messages, the negative messages could easily outnumber positive ones, incurring costs for spammers to sort them out, not mentioning the cost in bandwidth.</p>

</ss1>
</sec>
<sec>
<st>
 Automated techniques for e-mail administrators </st>

<p>

There are a number of appliances, services and software systems that e-mail administrators can use to reduce the load of spam on their systems and mailboxes. Some of these depend upon rejecting email from Internet sites known or likely to send spam. Others rely on automatically analyzing the content of email messages and weeding out those which resemble spam. These two approaches are sometimes termed <it>blocking</it> and <it>filtering.</it></p>
<p>

There is an increasing trend of integration of anti-spam techniques into MTAs whereby the mail systems themselves also perform various measures that are generally referred to as filtering, ultimately resulting in spam messages being rejected before delivery (or <it>blocked</it>).</p>
<p>

Many filtering systems take advantage of <link xlink:type="simple" xlink:href="../488/233488.xml">
machine learning</link> techniques, which improve their accuracy over manual methods. However, some people find filtering intrusive to privacy, and many e-mail administrators prefer blocking to deny access to their systems from sites tolerant of spammers.</p>

<ss1>
<st>
 Authentication and Reputation </st>


<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../388/1497388.xml">
E-mail authentication</link>, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../458/973458.xml">
DomainKeys</link></rule>
</direction>
</protocol>
</message>
, and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../928/555928.xml">
Sender Policy Framework</link></rule>
</direction>
</protocol>
</message>
</it>
</indent>

A number of systems have been proposed to allow acceptance of email from servers which have authenticated in some fashion as senders of only legitimate email. Many of these systems use the DNS, as do DNSBLs; but rather than being used to list nonconformant sites, the DNS is used to list sites authorized to send email, and (sometimes) to determine the reputation of those sites.  Other methods of identifying ham (non-spam email) and spam are still used.</p>
<p>

Authentication systems cannot detect whether a message is spam. Rather, they allow a site to express trust that an authenticated site will not send spam. Thus, a recipient site may choose to skip expensive spam-filtering methods for messages from authenticated sites.</p>

</ss1>
<ss1>
<st>
 Challenge/response systems </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../442/4791442.xml">
Challenge-response spam filtering</link></it>
</indent>

Another method which may be used by internet service providers, by specialized services or enterprises to combat spam is to require unknown senders to pass various tests before their messages are delivered. These strategies are termed <b>challenge/response systems</b> or <b>C/R</b>. Some view their use as being as bad as spam since they place the burden of spam fighting on legitimate email senders -- who it should be noted will often indeed give up at the slightest hindrance.</p>

</ss1>
<ss1>
<st>
 Checksum-based filtering </st>

<p>

<it>Checksum-based filter</it> exploits the fact that the messages are sent in bulk, that is that they will be identical with small variations. Checksum-based filters strip out everything that might vary between messages, reduce what remains to a <link xlink:type="simple" xlink:href="../538/7538.xml">
checksum</link>, and look that checksum up in a database which collects the checksums of messages that email recipients consider to be spam (some people have a button on their email client which they can click to nominate a message as being spam); if the checksum is in the database, the message is likely to be spam.</p>
<p>

The advantage of this type of filtering is that it lets ordinary users help identify spam, and not just administrators, thus vastly increasing the pool of spam fighters.  The disadvantage is that spammers can insert unique invisible gibberish&mdash;known as <it><link xlink:type="simple" xlink:href="../294/3933294.xml">
hashbusters</link></it>&mdash;into the middle of each of their messages, thus making each message unique and having a different checksum.  This leads to an <link xlink:type="simple" xlink:href="../600/212600.xml">
arms race</link> between the developers of the checksum software and the developers of the spam-generating software.</p>
<p>

Checksum based filtering methods include:
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../053/2036053.xml">
Distributed Checksum Clearinghouse</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../879/457879.xml">
Vipul's Razor</link></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.commtouch.com/site/Products/technology.asp">
Recurrent Pattern Detection</weblink></entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Country-based filtering </st>

<p>

Some e-mail servers expect to never communicate with particular countries from which they receive a great deal of spam.  Therefore, they use country-based filtering - a technique that blocks e-mail from certain countries.  This technique is based on country of origin determined by the sender's IP address rather than any trait of the sender.</p>

</ss1>
<ss1>
<st>
 DNS-based Blacklists </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link></it>
</indent>

DNS-based Blacklists, or <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>s, are used for <link xlink:type="simple" xlink:href="../509/846509.xml">
heuristic</link> filtering and blocking. A site publishes lists (typically of IP addresses) via the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
DNS</link></rule>
</direction>
</protocol>
</message>
, in such a way that mail servers can easily be set to reject mail from those sources. There are literally scores of DNSBLs, each of which reflects different policies: some list sites known to emit spam; others list <link xlink:type="simple" xlink:href="../316/43316.xml">
open mail relay</link>s or proxies; others list ISPs known to support spam.</p>
<p>

Other DNS-based anti-spam systems list known good ("white") or bad ("black") IPs domains or URLs, including RHSBLs and URIBLs. </p>
<p>

For history, details, and examples of DNSBLs, see <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>.</p>

</ss1>
<ss1>
<st>
 Enforcing RFC standards </st>


<p>

<indent level="1">

<it>Further information: <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml#xpointer(//*[./st=%22Related+Requests+For+Comments+(RFCs)%22])">
SMTP RFC standards</link></rule>
</direction>
</protocol>
</message>
</it>
</indent>

Enforcing technical requirements of the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/27675.xml">
Simple Mail Transfer Protocol</link></rule>
</direction>
</protocol>
</message>
 (SMTP) can be used to block mail coming from systems that do not comply with the RFC standards. A lot of spammers use poorly written software or are unable to comply with the standards because they do not have legitimate control of the computer sending spam (<link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>).  By setting restrictions on the <link xlink:type="simple" xlink:href="../624/20624.xml">
MTA</link> a mail administrator can reduce spam significantly.</p>

<ss2>
<st>
 HELO/EHLO checking </st>

<p>

For example, spam can be greatly reduced by a number of simple checks confirming compliance with standard addressing and MTA operation.</p>
<p>

In many situations, simply requiring a valid <link xlink:type="simple" xlink:href="../155/706155.xml">
FQDN</link> in the SMTP EHLO statement is enough to block 25% of incoming spam.</p>
<p>

<list>
<entry level="1" type="bullet">

 Refusing connections from hosts that begin transmission prior to presentation of the receiving host's HELO banner</entry>
<entry level="1" type="bullet">

 Refusing connections from hosts that give an invalid HELO - for example, a HELO that is not an <link xlink:type="simple" xlink:href="../155/706155.xml">
FQDN</link> or is an IP address not surrounded by square brackets</entry>
</list>

<b><it>Invalid</it></b> HELO localhost
<b><it>Invalid</it></b> HELO 127.0.0.1
<b>Valid</b> HELO domain.tld
<b>Valid</b> HELO [127.0.0.1]  
<list>
<entry level="1" type="bullet">

 Refusing connections from hosts that give an obviously fraudulent HELO - for example, issuing a HELO using the FQDN or an IP address that doesn't match the IP address of the connecting host</entry>
</list>

<b><it>Fraudulent</it></b> HELO friend
<b><it>Fraudulent</it></b> HELO -232975332
<list>
<entry level="1" type="bullet">

 Refusing to accept email claiming to be from a hosted domain when the sending host has not authenticated</entry>
<entry level="1" type="bullet">

 Refusing to accept email whose HELO/EHLO argument does not resolve in DNS.  Unfortunately, some email system administrators ignore section 3.6 of RFC2821 and administer the MTA to use a nonresolvable argument to the HELO/EHLO command.</entry>
</list>
</p>
<p>

All of the examples above are fairly simple checks, all conform to existing standards and RFCs, and all are missing from most commercial <link xlink:type="simple" xlink:href="../624/20624.xml">
MTA</link> implementations available today.</p>

</ss2>
<ss2>
<st>
 Greylisting </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../849/685849.xml">
Greylisting</link></it>
</indent>

The <link>
SMTP</link> protocol allows for temporary rejection of incoming messages. Greylisting is the technique to temporarily reject messages from unknown sender mail servers. A temporary rejection is designated with a 4xx error code that is recognized by all normal MTAs, which then proceed to retry delivery later.</p>
<p>

Greylisting is based on the premise that spammers and spambots will not re-try their messages. Instead, they will move on to the next message and next address. This is effective since a re-try attempt means the message and state of the process must be stored inherently increasing the cost incurred by the spammer, but it is a standard component of any legitimate sender's server.</p>

</ss2>
<ss2>
<st>
 Nolisting </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../255/7958255.xml">
Nolisting</link></it>
</indent>

The <link>
SMTP</link> protocol requires that email servers for any given domain be provided in a prioritized list (namely, <link xlink:type="simple" xlink:href="../511/66511.xml">
MX record</link>s), and further specifies mandatory error-handling behavior when servers in that list cannot be contacted. Nolisting is a technique of purposely creating unreachable MX records, so that only senders who have implemented this error-handling behavior can successfully deliver mail.</p>

</ss2>
<ss2>
<st>
 Greeting delay </st>

<p>

A greeting delay is a deliberate pause introduced by an SMTP server before it sends the SMTP greeting banner to the client.  The client is required to wait until it has received this banner before it sends any data to the server. (per <weblink xlink:type="simple" xlink:href="http://rfc.net/rfc2821.html#s3.1">
RFC2821 3.1</weblink>).  Many spam-sending applications do not wait to receive this banner, and instead start sending data as soon as the TCP connection is established.  The server can detect this, and drop the connection.</p>
<p>

There are some legitimate sites that play "fast and loose" with the SMTP specifications, and may be caught by this mechanism.  It also has a tendency to interact badly with sites that perform <link xlink:type="simple" xlink:href="../697/8431697.xml">
callback verification</link>, as common callback verification systems have timeouts that are much shorter than those mandated by <weblink xlink:type="simple" xlink:href="http://rfc.net/rfc2821.html#s4.5.3.2">
RFC2821 4.5.3.2</weblink>.</p>

</ss2>
</ss1>
<ss1>
<st>
 Hybrid filtering </st>

<p>

<it>Hybrid filtering</it>, such as is implemented in the open source programs <link xlink:type="simple" xlink:href="../137/274137.xml">
SpamAssassin</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<agent wordnetid="109190918" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/4260249.xml">
Policyd-weight</link></agent>
</causal_agent>
</physical_entity>
, uses some or all of the various tests for spam, and assigns a numerical score to each test.  Each message is scanned for these patterns, and the applicable scores tallied up. If the total is above a fixed value, the message is rejected or flagged as spam. By ensuring that no single spam test by itself can flag a message as spam, the false positive rate can be greatly reduced. <weblink xlink:type="simple" xlink:href="http://www.spamassassin.org/">
http://www.spamassassin.org/</weblink></p>

</ss1>
<ss1>
<st>
 PTR/Reverse DNS checks </st>


<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../913/1286913.xml">
Reverse DNS lookup</link> and <link xlink:type="simple" xlink:href="../942/1609942.xml">
Forward Confirmed reverse DNS</link></it>
</indent>

The PTR DNS records in the reverse DNS can be used for a number of things, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 Most e-mail <link xlink:type="simple" xlink:href="../624/20624.xml">
Mail Transfer Agent</link>s (server software) use a FCrDNS verification and if there is a valid domain name, put it into the "Received:" trace header field.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Some e-mail <link xlink:type="simple" xlink:href="../624/20624.xml">
Mail Transfer Agent</link>s will perform FCrDNS verification on the domain name given on the SMTP HELO and EHLO commands.  This can violate RFC 2821 and so e-mail is usually not rejected by default.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 To check the domain names in the rDNS to see if they are likely from dial-up users, dynamically assigned addresses, or home-based broadband customers.  Since the vast majority, but by no means all, of e-mail that originates from these computers is spam, many mail servers also refuse e-mail with missing or "generic" rDNS names. <weblink xlink:type="simple" xlink:href="http://www.spamhaus.org/faq/answers.lasso?section=ISP%20Spam%20Issues#131">
http://www.spamhaus.org/faq/answers.lasso?section=ISP%20Spam%20Issues#131</weblink> <weblink xlink:type="simple" xlink:href="http://postmaster.aol.com/info/rdns.html">
http://postmaster.aol.com/info/rdns.html</weblink></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 A <link xlink:type="simple" xlink:href="../942/1609942.xml">
Forward Confirmed reverse DNS</link> (FCrDNS) verification can create a weak form of authentication that there is a valid relationship between the owner of a domain name and the owner of the network that has been given an IP address.  While weak, this authentication is strong enough that it can be used for <link xlink:type="simple" xlink:href="../369/182369.xml">
whitelist</link>ing purposes because <practice wordnetid="100410247" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../368/28368.xml">
spammers</link></activity>
</psychological_feature>
</act>
</event>
</practice>
 and <accomplishment wordnetid="100035189" confidence="0.8">
<occupation wordnetid="100582388" confidence="0.8">
<transgression wordnetid="100745005" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<crime wordnetid="100766234" confidence="0.8">
<wrongdoing wordnetid="100732746" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../364/428364.xml">
phishers</link></activity>
</feat>
</psychological_feature>
</act>
</action>
</wrongdoing>
</crime>
</event>
</transgression>
</occupation>
</accomplishment>
 cannot usually bypass this verification when they use <link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>s to forge the domains.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Rule-based filtering </st>


<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../001/1336001.xml">
E-mail filtering</link></it>
</indent>

Content filtering techniques relied on the specification of lists of words or <link xlink:type="simple" xlink:href="../717/25717.xml">
regular expression</link>s disallowed in mail messages. Thus, if a site receives spam advertising "herbal Viagra", the administrator might place these words in the filter configuration. The mail server would thence reject any message containing the phrase.</p>
<p>

Header filtering is the means of inspecting the header of the email, the part of the message that contains information about the message. Spammers will often <accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../209/503209.xml">
spoof</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
 fields in the header in order to hide their identities, or to try to make the email look more legitimate than it is; many of these spoofing methods can be detected. Also, headers that violate the RFC 2822 standard on how the email header is to be formed are frequently rejected.</p>
<p>

Disadvantages of filtering are threefold: First, it can be time-consuming to maintain. Second, it is prone to false positives. Third, these false positives are not equally distributed: since content filtering is prone to reject legitimate messages on topics related to products frequently advertised in spam. A system administrator who attempts to reject spam messages which advertise mortgage refinancing, credit or debt may inadvertently block legitimate e-mail on the same subject.</p>
<p>

Spammers frequently change the phrases and spellings they use. This can mean more work for the administrator.  However, it also has some advantages for the spam fighter.  If the spammer starts spelling "Viagra" as "V1agra" (see <link xlink:type="simple" xlink:href="../562/18562.xml">
leet</link>) or "Via_gra", it makes it harder for the spammer's intended audience to read their messages.  If they try to trip up the phrase detector, by, for example, inserting an invisible-to-the-user HTML <link xlink:type="simple" xlink:href="../880/5880.xml">
comment</link> in the middle of a word ("Viagra"), this sleight of hand is itself easily detectable, and is a good indication that the message is spam.  And if they send spam that consists entirely of images, so that anti-spam software can't analyze the words and phrases in the message, the fact that there <it>is</it> no readable text in the body can be detected, making that message a higher risk of being spam.</p>
<p>

Content filtering can also be implemented to examine the <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>s present (i.e. <link xlink:type="simple" xlink:href="../269/1064269.xml">
spamvertising</link>) in an email message.  This form of content filtering is much harder to disguise as the URLs must resolve to a valid domain name.  Extracting a list of such links and comparing them to published sources of spamvertised domains is a simple and reliable way to eliminate a large percentage of spam via content analysis.</p>

</ss1>
<ss1>
<st>
 Sender-supported whitelists and tags </st>

<p>

There are a small number of organizations which offer IP whitelisting and/or licensed tags that can be placed in email (for a fee) to assure recipients' systems that the messages thus tagged are not spam. This system relies on legal enforcement of the tag. The intent is for email administrators to whitelist messages bearing the licensed tag.</p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Habeas Safelist</link></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.senderscorecertified.com">
Return Path Sender Score Certified</weblink>.</entry>
</list>
</p>
<p>

A potential difficulty with such systems is that the licensing organization makes its money by licensing more senders to use the tag&mdash;not by strictly enforcing the rules upon licensees. A concern exists that senders whose messages are more likely to be considered spam would accrue a greater benefit by using such a tag. The concern is that these factors form a <link xlink:type="simple" xlink:href="../234/97234.xml">
perverse incentive</link> for licensing organizations to be lenient with licensees who have offended.  However, the value of a license would drop if it was not strictly enforced, and financial gains due to enforcement of a license itself can provide an additional incentive for strict enforcement. The Habeas mail classing system attempts to further address this issue by classing email according to origin, purpose, and permission. The purpose is to describe why the email is not likely spam, but permission based email.</p>

</ss1>
<ss1>
<st>
 SMTP callback verification </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../697/8431697.xml">
callback verification</link></it>
</indent>

Since a large percentage of spam has forged and invalid sender ("from") addresses, some spam can be detected by checking that this "from" address is valid.  A mail server can try to verify the sender address by making an SMTP connection back to the mail exchanger for the address, as if it was creating a bounce, but stopping just before any e-mail is sent.</p>
<p>

Callback verification can be compliant with SMTP RFCs, but it has various drawbacks.  Since nearly all spam has forged <link xlink:type="simple" xlink:href="../932/17291932.xml">
return address</link>es, nearly all callbacks are to innocent third party mail servers that are unrelated to the spam. At the same time, there will be numerous false negatives due to spammers abusing real addresses and some false positives.</p>

</ss1>
<ss1>
<st>
 Statistical content filtering </st>

<p>

<it>Statistical filtering</it> was first proposed in <link xlink:type="simple" xlink:href="../647/34647.xml">
1998</link> by <link>
Mehran Sahami</link> <it>et al.</it>, at Learning for Text Categorization Workshop in the fifteenth <link>
AAAI</link> conference (AAAI-98). A statistical filter is a kind of <link xlink:type="simple" xlink:href="../441/1331441.xml">
document classification</link> system, and a number of <link xlink:type="simple" xlink:href="../488/233488.xml">
machine learning</link> researchers have turned their attention to the problem. Statistical filtering was popularized by <person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<writer wordnetid="110794014" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../353/173353.xml">
Paul Graham</link></writer>
</programmer>
</person>
's influential <link xlink:type="simple" xlink:href="../502/35502.xml">
2002</link> article <it><weblink xlink:type="simple" xlink:href="http://www.paulgraham.com/antispam.html">
A Plan for Spam</weblink></it>, which proposed the use of <link xlink:type="simple" xlink:href="../339/87339.xml">
naive Bayes classifier</link>s to predict whether messages are spam or not &ndash; based on collections of spam and nonspam ("ham") email submitted by users.   <weblink xlink:type="simple" xlink:href="http://research.microsoft.com/~horvitz/junkfilter.htm">
http://research.microsoft.com/~horvitz/junkfilter.htm</weblink></p>
<p>

Statistical filtering, once set up, requires no maintenance per se: instead, users mark messages as spam or nonspam and the filtering software learns from these judgements. Thus, a statistical filter does not reflect the software author's or administrator's biases as to content, but it <it>does</it> reflect the <it>user's</it> biases as to content; a biochemist who is researching Viagra won't have messages containing the word "Viagra" flagged as spam, because "Viagra" will show up often in his or her legitimate messages. Spam emails containing the word "Viagra", however, do get filtered because of their unique content compared to legitimate messages. A statistical filter can also respond quickly to changes in spam content, without administrative intervention. Statistical filters should also look at message headers <weblink xlink:type="simple" xlink:href="http://www.paulgraham.com/better.html">
http://www.paulgraham.com/better.html</weblink>, thereby considering not just the content but also peculiarities of the transport mechanism of the email.</p>
<p>

Spammers have attempted to fight statistical filtering by inserting many random but valid "noise" words or sentences into their messages while attempting to hide them from view, making it more likely that the filter will classify the message as neutral. (See <link xlink:type="simple" xlink:href="../476/544476.xml">
word salad</link>)  Attempts to hide the noise words include setting them in tiny <link xlink:type="simple" xlink:href="../105/64105.xml">
font</link> or the same colour as the background. However, these noise countermeasures seem to have been largely ineffective.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Typical statistical filtering uses single words in the calculations to decide if a message should be classified as spam or not. A more powerful calculation can be made using groups of two or more words taken together. The random "noise" words can not be used as successfully to fool the filter.</p>
<p>

The body of the message should be "cleaned" before the calculations are performed. This cleaning should remove extra spaces and special characters such as ! and $ so these are not allowed to be used to "munge" the spam-type words.</p>
<p>

Software programs that implement statistical filtering include <link xlink:type="simple" xlink:href="../313/233313.xml">
Bogofilter</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../868/3531868.xml">
DSPAM</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../047/3085047.xml">
SpamBayes</link></software>
 the e-mail programs <link xlink:type="simple" xlink:href="../225/20225.xml">
Mozilla</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<collector wordnetid="109936620" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<client wordnetid="109985075" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<case wordnetid="109898892" confidence="0.8">
<link xlink:type="simple" xlink:href="../547/228547.xml">
Mozilla Thunderbird</link></case>
</causal_agent>
</client>
</person>
</collector>
</physical_entity>
, <link xlink:type="simple" xlink:href="../557/8564557.xml">
Mailwasher</link>, and later revisions of <link xlink:type="simple" xlink:href="../137/274137.xml">
SpamAssassin</link>. Another interesting project is <link xlink:type="simple" xlink:href="../949/463949.xml">
CRM114</link> which hashes phrases and does bayesian classification on the phrases.</p>
<p>

There is also the free mail filter <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../618/633618.xml">
POPFile</link></software>
 <weblink xlink:type="simple" xlink:href="http://popfile.sourceforge.net">
http://popfile.sourceforge.net</weblink> which sorts mail in as many categories as you want (family, friends, co-worker, spam, whatever) with bayesian filtering.</p>

</ss1>
<ss1>
<st>
 Tarpits </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../034/224034.xml">
Tarpit (networking)</link></it>
</indent>

A <it>tarpit</it> is any server software which intentionally responds pathologically slowly to client commands. By running a tarpit which treats acceptable mail normally and known spam slowly or which appears to be an open mail relay, a site can slow down the rate at which spammers can inject messages into the mail facility.  Many systems will simply disconnect if the server doesn't respond quickly, which will eliminate the spam.  However, a few legitimate e-mail systems will also not deal correctly with these delays.</p>

</ss1>
<ss1>
<st>
 Transparent SMTP proxy </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../996/8909996.xml">
Transparent SMTP proxy</link></it>
</indent>

Transparent SMTP proxies allow combating spam in real time, combining
sender's behavior controls, providing legitimate users immediate
feedback, eliminating a need for quarantine.</p>

</ss1>
</sec>
<sec>
<st>
 Automated techniques for e-mail senders </st>

<p>

There are a variety of techniques that e-mail senders use to try to make sure that they do not send spam.  Failure to control the amount of spam sent, as judge by e-mail receivers, can often cause even legitimate email to be blocked and for the sender to be put on <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>s.</p>

<ss1>
<st>
 Background checks on new users and customers </st>

<p>

Since spammers are frequently kicked off the network, they are constantly trying to create new accounts.  Many spammers are able to make even a few hours profitable for them and can cause many days of damage to reputation of the services they abused.  As a result, many ISPs and web -email providers use <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../834/230834.xml">
CAPTCHA</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
s on new accounts and try to  verify the credit cards are not stolen before accepting new customers, check <link xlink:type="simple" xlink:href="../954/1267954.xml">
the Spamhaus Project</link> ROKSO list and do other background checks.</p>

</ss1>
<ss1>
<st>
 Confirmed opt-in for mailing lists </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../984/3329984.xml">
Opt in e-mail</link></it>
</indent>

One difficulty occurs in implementing opt-in mailing lists: many means of gathering user e-mail addresses remain susceptible to forgery. For instance, if a company puts up a Web form to allow users to subscribe to a mailing list about its products, a malicious person can enter other people's e-mail addresses — to harass them, or to make the company appear to be spamming. (To most anti-spammers, if the company sends e-mail to these forgery victims, it <it>is</it> spamming, albeit inadvertently.)</p>
<p>

To prevent this abuse, MAPS and other anti-spam organizations encourage that all mailing lists use <b>confirmed opt-in</b> (also known as <it>verified opt-in</it> and (by spammers themselves) as <it>double opt-in</it>). That is, whenever an address is presented for subscription to the list, the list software should send a confirmation message to that address. The confirmation message contains no advertising content, so it is not construed to be spam itself — and the address is not added to the list unless the recipient responds to the confirmation message. See also the <link xlink:type="simple" xlink:href="../954/1267954.xml">
Spamhaus</link> <weblink xlink:type="simple" xlink:href="http://www.spamhaus.org/mailinglists.html">
Mailing Lists vs. Spam Lists</weblink> page.</p>
<p>

All modern mailing list management programs (such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../012/292012.xml">
GNU Mailman</link></software>
, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/504252.xml">
LISTSERV</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../471/2604471.xml">
Majordomo</link></software>
, and <link xlink:type="simple" xlink:href="../977/198977.xml">
qmail</link>'s ezmlm) support confirmed opt-in by default.</p>

</ss1>
<ss1>
<st>
 Egress spam filtering </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../278/2994278.xml">
Egress filtering</link></it>
</indent>

E-mail senders can do the same type of anti-spam checks on e-mail coming from their users and customers as can be done for e-mail coming from the rest of the Internet.</p>

</ss1>
<ss1>
<st>
 Limit e-mail backscatter </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../775/16836775.xml">
Backscatter (e-mail)</link></it>
</indent>

If any sort of <link xlink:type="simple" xlink:href="../353/869353.xml">
bounce message</link> or anti-virus warning gets sent to a forged email address, the result will be <link xlink:type="simple" xlink:href="../775/16836775.xml">
backscatter</link>.</p>
<p>

Problems with sending challenges to forged e-mail addresses can be greatly reduced by not creating a new message that contains the challenge.  Instead, the challenge can be placed in the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../353/869353.xml">
Bounce message</link></system_of_measurement>
</standard>
 when the receiving mail system gives a rejection-code during the <link>
SMTP</link> session.  When the receiving mail system rejects an e-mail this way, it is the sending system that actually creates the bounce message.  As a result, the bounce message will almost always be sent to the real sender, and it will be in a format and language that the sender will usually recognize.</p>

</ss1>
<ss1>
<st>
 Port 25 blocking </st>

<p>

<link xlink:type="simple" xlink:href="../296/1362296.xml">
Firewall</link>s and <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link>s can be programmed to not allow <link>
SMTP</link> traffic (TCP port 25) from machines that are not supposed to run <link xlink:type="simple" xlink:href="../624/20624.xml">
Mail Transfer Agent</link>s or send e-mail.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>  This practice is somewhat controversial when ISPs block home users, especially if the ISPs do not allow the blocking to be turned off upon request.  E-mail can still be sent from these computers to designated <link xlink:type="simple" xlink:href="../265/4046265.xml">
smart host</link>s via port 25 and to other smart hosts via the e-mail submission port 587.</p>

</ss1>
<ss1>
<st>
 Port 25 interception </st>

<p>

<link xlink:type="simple" xlink:href="../036/53036.xml">
Network address translation</link> can be used intercept all port 25 (SMTP) traffic and direct it to a mail server that enforces rate limiting and egress spam filtering.  This is commonly done in hotels<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>, but it can cause <link xlink:type="simple" xlink:href="../502/2405502.xml">
e-mail privacy</link> problems, as well making it impossible to use <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../104/1064104.xml">
STARTTLS</link></rule>
</direction>
</protocol>
</message>
 and <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../340/366340.xml">
SMTP-AUTH</link></system_of_measurement>
</standard>
 if the port 587 submission port isn't used.</p>

</ss1>
<ss1>
<st>
 Rate limiting </st>

<p>

Machines that suddenly start sending lots of e-mail may well have become <link xlink:type="simple" xlink:href="../566/531566.xml">
zombie computer</link>s.  By limiting the rate that e-mail can be sent around what is typical for the computer in question, legitimate e-mail can still be sent, but large spam runs can be slowed down until manual investigation can be done.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

</ss1>
<ss1>
<st>
 Spam report feedback loops </st>

<p>

By monitoring spam reports from places such as <link xlink:type="simple" xlink:href="../427/1905427.xml">
spamcop</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../397/1397.xml">
AOL</link></company>
's feedback loop, and <link xlink:type="simple" xlink:href="../065/5200065.xml">
Network Abuse Clearinghouse</link>, the domains abuse@ mailbox, etc., ISPs can often learn of problems before they seriously damage the ISP's reputation and have their mail servers blacklisted.  </p>

</ss1>
<ss1>
<st>
 Strong AUP and TOS agreements </st>

<p>

Most ISPs and <link xlink:type="simple" xlink:href="../887/75887.xml">
web e-mail</link> providers have either an <link xlink:type="simple" xlink:href="../069/85069.xml">
Acceptable use policy</link> (AUP) or a <link xlink:type="simple" xlink:href="../799/908799.xml">
Terms of Service</link> (TOS) agreement that discourages spammers from using their system and allows the spammer to be terminated quickly.</p>

</ss1>
</sec>
<sec>
<st>
 Techniques for researchers &amp; law enforcement </st>


<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../722/18817722.xml">
E-mail spam legislation by country</link></it>
</indent>

Increasingly, anti-spam efforts have required co-ordination between law enforcement, researchers, major consumer financial service companies and Internet service providers who need e-mail spam, <link xlink:type="simple" xlink:href="../609/180609.xml">
identity theft</link> and <link xlink:type="simple" xlink:href="../364/428364.xml">
phishing</link> evidence to track and monitor the risks and activities.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>

<ss1>
<st>
 Honeypots </st>


<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../952/287952.xml">
Honeypot (computing)</link></it>
</indent>

Another approach is simply an imitation MTA which gives the appearance of being an open mail relay, or an imitation TCP/IP proxy server which gives the appearance of being an open proxy. Spammers who probe systems for open relays/proxies will find such a host and attempt to send mail through it, wasting their time and potentially revealing information about themselves and the source of spam to the unexpected alert entity (in comparison to the anticipated careless or unskilled operator typically in charge of open relay MTA systems) that operates the honeypot. Such a system may simply discard the spam attempts, submit them to <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>s, or store them for analysis.</p>

</ss1>
<ss1>
<st>
 Analysis of Spamvertisements </st>

<p>

Checking out what site is being <link xlink:type="simple" xlink:href="../269/1064269.xml">
spamvertised</link> by a given piece of spam, often leads to questionable registrations of Internet domain names. Since registrars are required to maintain trustworthy <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/4315433.xml">
WHOIS</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 databases, digging into the registration details and complaining at the proper locations often results in site shutdowns. Uncoordinated activity may result quite ineffective, given today's volumes of spam and the rate at which those criminal organizations register new domains. However, a coordinated effort, implemented with adequate infrastructure, can obtain good results<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>.</p>

</ss1>
</sec>
<sec>
<st>
 New Solutions and Ongoing research </st>

<p>

Several approaches have been proposed to improve the e-mail system.</p>

<ss1>
<st>
 Ham passwords </st>

<p>

Another approach for countering spam is to use a "ham password".</p>
<p>

Systems that use ham passwords ask unrecognised senders to include in their email a password that demonstrates that the email message is a "ham" (not spam) message. Typically the email address and ham password would be described on a web page, and the ham password would be included in the "subject" line of an email address. Ham passwords are often combined with filtering systems, to counter the risk that a filtering system will accidentally identify a ham message as a spam message.</p>
<p>

The <link>
"plus addressing"</link> technique appends a password to the "username" part of the email address.</p>

</ss1>
<ss1>
<st>
 Cost-based systems </st>

<p>

Since spam occurs primarily because it is so cheap to send, a proposed set of solutions require that senders pay some cost in order to send spam, making it prohibitively expensive for spammers.</p>

<ss2>
<st>
 Stamps </st>


<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../806/4331806.xml">
Certified e-mail</link></it>
</indent>

Some gatekeeper would sell electronic stamps and keep the proceeds. Or a <link xlink:type="simple" xlink:href="../074/353074.xml">
micropayment</link>, such as <link xlink:type="simple" xlink:href="../244/66244.xml">
electronic money</link> would be paid by the sender to the recipient or their ISP, or some other gatekeeper.</p>

</ss2>
<ss2>
<st>
 Proof-of-work systems </st>

<p>

<link xlink:type="simple" xlink:href="../204/1560204.xml">
Proof-of-work system</link>s such as <link xlink:type="simple" xlink:href="../023/567023.xml">
hashcash</link> require that a sender pay a computational cost by performing a calculation that the receiver can later verify.  Verification must be much faster than performing the calculation, so that the computation slows down a sender but does not significantly impact a receiver. The point is to slow down machines that send most of spam&mdash;often millions and millions of them. While every user that wants to send email to a moderate number of recipients suffers just a few seconds' delay, sending millions of emails would take an unaffordable amount of time.  This approach suffers when sender maintains a computation farm of their own or from zombies.</p>

</ss2>
<ss2>
<st>
 Bonds or Sender-at-risk </st>

<p>

As a refinement to stamp systems is the method of requiring that a micropayment only be made (or some other form of penalty imposed) if the recipient considers the email to be abusive.  This addresses the principal objection to stamp systems: popular free legitimate mailing list hosts would be unable to continue to provide their services if they had to pay postage for every message they sent.</p>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../747/3747.xml">
Bill Gates</link></person>
 announced that <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 is working on a solution requiring so-called “unknown senders”, i.e. senders not on the Accepted List of the recipient to post “the electronic equivalent of a” stamp whose value would be lost to the sender only if the recipient disapproves of the email <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>.  Gates said that Microsoft favors other solutions in the short-term, but would rely on the contingent payment solution to solve the spam problem over the longer run. Microsoft, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../397/1397.xml">
AOL</link></company>
 as well as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../213/188213.xml">
Yahoo!</link></company>
 have recently introduced systems that allow commercial senders to avoid filters if they obtain a paid or pre-paid certificate or certification, which is lost to the sender if recipients complain.</p>
<p>

This approach suffers when a user initially signs up for a legitimate mailing list, but then later decides they do not want to receive the e-mail any further. Lazy users will simply click the "This is Spam" button on their e-mail client, rather than going through the formal unsubscription process that is detailed at the bottom of each message. The end-user gets the same effect either way, but without realizing the consequences that the list host may now face. However, companies now implementing the penalty approach when certifying (and withdrawing certification from) commercial senders have learned to account for this problem by setting appropriate complaint thresholds.  </p>
<p>

The intent of all such "sender-at-risk" solutions, which impose a significant cost to the sender only if the recipient rejects the message subsequent to receiving the email, is to deter spam by making it economically prohibitive to send unwanted email messages, while allowing legitimate emailers to send messages at little or no expense.</p>

</ss2>
</ss1>
<ss1>
<st>
 Other techniques </st>

<p>

There are a number of proposals for sideband protocols that will assist SMTP operation. The <link xlink:type="simple" xlink:href="../129/652129.xml">
Anti-Spam Research Group</link> (ASRG) of the <link xlink:type="simple" xlink:href="../820/184820.xml">
Internet Research Task Force</link> (IRTF) is working on a number of <link xlink:type="simple" xlink:href="../388/1497388.xml">
E-mail authentication</link> and other proposals for providing simple source authentication that is flexible, lightweight, and scalable. Recent <link xlink:type="simple" xlink:href="../285/15285.xml">
Internet Engineering Task Force</link> (IETF) activities include <link xlink:type="simple" xlink:href="../560/2156560.xml">
MARID</link> (2004) leading to two approved IETF experiments in 2005, and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../626/4928626.xml">
DomainKeys Identified Mail</link></rule>
</direction>
</protocol>
</message>
 in 2006.</p>

</ss1>
</sec>
<sec>
<st>
 Legislation and Enforcement </st>

<p>

Appropriate <weblink xlink:type="simple" xlink:href="http://web.archive.org/web/20070706211231/http://www.spamlaws.com/index.html">
legislation</weblink> and <weblink xlink:type="simple" xlink:href="http://www.spamlaws.com/cases/index.shtml">
enforcement</weblink> has a significant impact.</p>
<p>

The penalty provisions of the Australian Spam Act 2003 dropped Australia's ranking in the list of spam-relaying countries for e-mail spam from tenth to twenty-eighth.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

Legislation that provides mandates that bulk emailers must follow makes compliant spam easier to identify and filter out.</p>

</sec>
<sec>
<st>
 Research Conferences </st>

<p>

Spam is the subject of several research conferences, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../297/660297.xml">
Messaging Anti-Abuse Working Group</link></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../206/1897206.xml">
TREC</link></psychological_feature>
</contest>
</social_event>
</event>
 via the <weblink xlink:type="simple" xlink:href="http://plg.uwaterloo.ca/~gvcormac/spam/">
TREC 2007 Spam (and Email) Track</weblink> July 2007</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ceas.cc/">
Conference on Email and Anti-Spam</weblink> August 2007</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ftc.gov/bcp/workshops/spamsummit/index.shtml">
FTC Spam Summit</weblink> July 2007</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.spamconference.org/">
MIT Spam Conference</weblink> March 2007</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>


<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.2kevin.net/munging.html">
Newsgroup munging guide</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.securityfocus.com/news/11488">
Customers: TD Ameritrade failed to warn of breach</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.virusbtn.com/spambulletin/archive/2006/02/sb200602-poison">
Does Bayesian Poisoning Exist?</weblink> February 2006</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://www.eweek.com/c/a/Security/Shutting-Down-the-Highway-to-Internet-Hell/2/">
Shutting Down the Highway to Internet Hell</weblink>".&#32;  eWeek&#32;(2005-04-08).&#32;Retrieved on <link>
2008-05-31</link>.</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://ask-leo.com/why_cant_i_send_mail_from_my_hotel_room.html">
Why can't I send mail from my hotel room?</weblink> AskLeo!, December 2005</entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0,1895,1615494,00.asp">
Rate Limiting as an Anti-Spam Tool</weblink> eWeek, June 2004</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.crn.com/security/199800149">
Alleged Spam King Soloway Arrested</weblink> May 31, 2007</entry>
<entry id="8">
"<weblink xlink:type="simple" xlink:href="http://www.knujon.com/knujon.html">
Results: 54,357 site shutdowns (67,095 pending)</weblink>".&#32;<it><physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<registrar wordnetid="110517137" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<link xlink:type="simple" xlink:href="../288/17575288.xml">
KnujOn</link></employee>
</causal_agent>
</worker>
</registrar>
</person>
</physical_entity>
</it>.&#32;Retrieved on <link>
2008-05-23</link>.</entry>
<entry id="9">
Jo Best&#32;(2004-01-26).&#32;"<weblink xlink:type="simple" xlink:href="http://news.com.com/Gates+reveals+his+magic+solution+to+spam/2100-1028_3-5147491.html">
Gates reveals his magic solution to spam</weblink>".&#32;  <link xlink:type="simple" xlink:href="../836/385836.xml">
CNET</link>.</entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="http://www.cio.com.au/index.php/id;457480905">
CIO - Two companies fined for breaching the Spam Act</weblink></entry>
</reflist>
</p>


</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.spamlaws.com/">
Spam Laws</weblink> United States, European Union, and other countries' laws and pending legislation regarding unsolicited commercial email.</entry>
<entry level="1" type="bullet">

 The <weblink xlink:type="simple" xlink:href="http://www.ftc.gov/spam/">
anti-spam info &amp; resource page</weblink> of the US <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../215/182215.xml">
Federal Trade Commission</link></agency>
 (FTC)</entry>
<entry level="1" type="bullet">

 Yahoo's <weblink xlink:type="simple" xlink:href="http://antispam.yahoo.com/">
Anti-Spam Resource Center</weblink></entry>
<entry level="1" type="bullet">

 AOL's postmaster page describing the <weblink xlink:type="simple" xlink:href="http://postmaster.aol.com/asta/index.html">
Anti-Spam Technical Alliance (ASTA) Proposal</weblink></entry>
<entry level="1" type="bullet">

 The <it>Coalition Against Unsolicited Bulk Email, Australia</it> or <weblink xlink:type="simple" xlink:href="http://www.caube.org.au">
CAUBE.AU</weblink></entry>
<entry level="1" type="bullet">

 The <weblink xlink:type="simple" xlink:href="http://asrg.sp.am/">
home page</weblink> of the <link xlink:type="simple" xlink:href="../853/8329853.xml">
Anti Spam Research Group</link>. ASRG is part of the <link xlink:type="simple" xlink:href="../775/304775.xml">
IRTF</link>, and affiliated with the <link xlink:type="simple" xlink:href="../285/15285.xml">
IETF</link> </entry>
<entry level="1" type="bullet">

 An article about spam by the Scientific American : <weblink xlink:type="simple" xlink:href="http://www.sciam.com/article.cfm?chanID=sa006&amp;articleID=000F3A4B-BF70-1238-BF7083414B7FFE9F">
Stopping Spam</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.circleid.com/posts/anti_spam_virus_trench_warfare/">
Historical Development of Spam Fighting in Relation to Threat of Computer-Aware Criminals, and Public Safety</weblink> by Neil Schwartzman</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ciac.org/ciac/bulletins/i-005c.shtml">
Computer Incident Advisory Committee's suggestions: <it>E-Mail Spamming countermeasures: Detection and prevention of E-Mail spamming</it> (Shawn Hernan, with James R. Cutler and David Harris)</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://blog.anta.net/2007/04/18/composing-abuse-reports/">
Composing abuse reports</weblink> - what to send, how to send it, where to send it - and what not to send or do.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.techzoom.net/papers/mail_non_delivery_notice_attacks_2004.pdf">
Mail DDoS Attacks through Mail Non Delivery Messages and Backscatter</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<practice wordnetid="100410247" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../368/28368.xml">
Spamming</link></activity>
</psychological_feature>
</act>
</event>
</practice>
</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<link>
History</link>
&nbsp;·  <link xlink:type="simple" xlink:href="../065/5200065.xml">
Network Abuse Clearinghouse</link></col>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/630770.xml">
Protocol</link></rule>
</direction>
</protocol>
</message>
s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;font-weight:normal;;" class="navbox-group">
<link xlink:type="simple" xlink:href="../847/459847.xml">
E-mail</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.5em;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../353/527353.xml">
Address munging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../488/10748488.xml">
Bulk email software</link>&nbsp;·  <link xlink:type="simple" xlink:href="../478/4884478.xml">
Directory Harvest Attack</link>&nbsp;·  <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>&nbsp;·   <link xlink:type="simple" xlink:href="../663/1466663.xml">
Spambot</link>&nbsp;·  <link xlink:type="simple" xlink:href="../047/13497047.xml">
Pink contract</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;font-weight:normal;;" class="navbox-group">
Other</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.5em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../958/179958.xml">
Autodialer</link>&nbsp;·  <link xlink:type="simple" xlink:href="../563/2067563.xml">
Flyposting</link>&nbsp;·  <link xlink:type="simple" xlink:href="../475/712475.xml">
Junk fax</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/394592.xml">
Messaging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../616/394616.xml">
Mobile phone</link>&nbsp;·  <link xlink:type="simple" xlink:href="../596/394596.xml">
Newsgroup</link>&nbsp;·  <link xlink:type="simple" xlink:href="../180/162180.xml">
Telemarketing</link>&nbsp;·  <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/1017252.xml">
VoIP</link></concept>
</idea>
</col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../737/313737.xml">
Anti-spam</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../908/1626908.xml">
Disposable e-mail address</link>&nbsp;·  <link xlink:type="simple" xlink:href="../388/1497388.xml">
E-mail authentication</link>&nbsp;·  <link xlink:type="simple" xlink:href="../989/2064989.xml">
SORBS</link>&nbsp;·  <link xlink:type="simple" xlink:href="../427/1905427.xml">
SpamCop</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/1267954.xml">
Spamhaus</link>&nbsp;·  <link xlink:type="simple" xlink:href="../790/5718790.xml">
List poisoning</link>&nbsp;·  <link xlink:type="simple" xlink:href="../929/515929.xml">
Bayesian spam filtering</link>&nbsp;·  <link xlink:type="simple" xlink:href="../288/15252288.xml">
Policy block list</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../651/43651.xml">
Spamdexing</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../102/1789102.xml">
Keyword stuffing</link>&nbsp;·  <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../747/286747.xml">
Google bomb</link></method>
</know-how>
</technique>
&nbsp;·   <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<web_site wordnetid="106359193" confidence="0.8">
<link xlink:type="simple" xlink:href="../572/3152572.xml">
Scraper site</link></web_site>
</machine>
</device>
</instrumentality>
</artifact>
</computer>
&nbsp;·  <link xlink:type="simple" xlink:href="../213/270213.xml">
Link farm</link>&nbsp;·  <link xlink:type="simple" xlink:href="../684/714684.xml">
Webring</link>&nbsp;·  <link xlink:type="simple" xlink:href="../364/418364.xml">
Cloaking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../839/594839.xml">
Doorway page</link>&nbsp;·  <link xlink:type="simple" xlink:href="../686/636686.xml">
URL redirection</link>&nbsp;·   <link xlink:type="simple" xlink:href="../302/2501302.xml">
Spam blog</link>s&nbsp;·  <link xlink:type="simple" xlink:href="../084/2791084.xml">
Sping</link>&nbsp;·  <link xlink:type="simple" xlink:href="../822/4803822.xml">
Forum spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../830/528830.xml">
Blog spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../965/4927965.xml">
Social networking spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../814/1376814.xml">
Referer spam</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../626/805626.xml">
Internet fraud</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../526/46526.xml">
Advance fee fraud</link>&nbsp;·  <link xlink:type="simple" xlink:href="../010/1093010.xml">
Lottery scam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../858/17362858.xml">
Make Money Fast</link>&nbsp;·  <link xlink:type="simple" xlink:href="../849/12512849.xml">
Microcap stock fraud</link>&nbsp;·  <accomplishment wordnetid="100035189" confidence="0.8">
<occupation wordnetid="100582388" confidence="0.8">
<transgression wordnetid="100745005" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<crime wordnetid="100766234" confidence="0.8">
<wrongdoing wordnetid="100732746" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../364/428364.xml">
Phishing</link></activity>
</feat>
</psychological_feature>
</act>
</action>
</wrongdoing>
</crime>
</event>
</transgression>
</occupation>
</accomplishment>
&nbsp;·  <accomplishment wordnetid="100035189" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../126/6002126.xml">
Vishing</link></feat>
</psychological_feature>
</act>
</action>
</event>
</concept>
</idea>
</accomplishment>
</col>
</row>
</table>
</col>
</row>
</table>

</p>


</sec>
</bdy>
</article>
