<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:47:17[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<O  confidence="0.9508927676800064" wordnetid="106832680">
<header>
<title>RSTS/E</title>
<id>313899</id>
<revision>
<id>240465711</id>
<timestamp>2008-09-23T16:06:46Z</timestamp>
<contributor>
<username>ElrondPA</username>
<id>4496486</id>
</contributor>
</revision>
<categories>
<category>DEC Operating Systems</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox OS</name>
<parameters>
<ui>
<link xlink:type="simple" xlink:href="../707/6707.xml">
Command line interface</link>: <link xlink:type="simple" xlink:href="../369/532369.xml">
DCL (Digital Command Language)</link></ui>
<logo>
<image width="150px" src="Rsts_Spike.png">
</image>
</logo>
<prog_language>
<programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../453/1453.xml">
ALGOL-60</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../451/1451.xml">
APL</link></programming_language>
, <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml">
BASIC-PLUS</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
, <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml">
BASIC-PLUS-2</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>, <link xlink:type="simple" xlink:href="../310/2214310.xml">
Datatrieve</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../142/598142.xml">
DIBOL</link></programming_language>
, <link xlink:type="simple" xlink:href="../012/11012.xml">
Forth</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
, <link xlink:type="simple" xlink:href="../587/2864587.xml">
MACRO-11</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../241/632241.xml">
RPG II</link></programming_language>
, <link xlink:type="simple" xlink:href="../449/30449.xml">
TECO</link></prog_language>
<screenshot>
<image width="300px" src="Rsts_V10.1.png">
</image>
</screenshot>
<supported_platforms>
<link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link></supported_platforms>
<latest_release_version>
RSTS V10.1</latest_release_version>
<package_manager>
BACKUP</package_manager>
<programmed_in>
<link xlink:type="simple" xlink:href="../587/2864587.xml">
MACRO-11</link> assembly language, <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml">
BASIC-PLUS-2</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
, <link xlink:type="simple" xlink:href="../369/532369.xml">
DCL</link>, <link xlink:type="simple" xlink:href="../012/11012.xml">
Forth</link></programmed_in>
<caption>
Example text display via remote connection.</caption>
<latest_release_date>
September 1992 <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></latest_release_date>
<kernel_type>
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../958/30958.xml">
Time-sharing</link></instrumentality>
</artifact>
</system>
 <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s</kernel_type>
<working_state>
No development, still available</working_state>
<developer>
<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
 (now owned by Mentec Inc.)</developer>
<family>
DEC OS family</family>
<updatemodel>
Binary patches, complete binaries</updatemodel>
<name>
RSTS</name>
<source_model>
<link xlink:type="simple" xlink:href="../886/18934886.xml">
Closed Source</link></source_model>
<language>
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../916/8569916.xml">
English</link></language>
</language>
<license>
<link xlink:type="simple" xlink:href="../886/18934886.xml">
Proprietary</link></license>
</parameters>
</template>


<b>RSTS</b> (pronounced as "RIST-ess" or "RIST-uhs") is a <link xlink:type="simple" xlink:href="../751/39751.xml">
multi-user</link> <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>, developed by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
 ("DEC"), (now part of <link xlink:type="simple" xlink:href="../973/13973.xml">
Hewlett Packard</link>) for the <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link> series of <link xlink:type="simple" xlink:href="../535/64535.xml">
16-bit</link> <link xlink:type="simple" xlink:href="../272/20272.xml">
minicomputers</link>.  The first version of RSTS (RSTS-11, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Versions%22])">
Version 1</link>) was implemented in 1970 by DEC <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineers</link> that developed the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../318/12724318.xml">
TSS-8</link></O>
 time-sharing operating system for the <link xlink:type="simple" xlink:href="../364/24364.xml">
PDP-8</link>.  The last version of RSTS (RSTS/E, <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Versions%22])">
Version 10.1</link>) was released in September of 1992.  RSTS-11 and RSTS/E are usually referred to just as "RSTS" and this article will generally use the shorter form.
<sec>
<st>
Acronyms</st>
<p>

<list>
<entry level="1" type="bullet">

 <b>BTSS</b> (Basic Time Sharing System) -- (never marketed) -- The first name for RSTS.</entry>
<entry level="1" type="bullet">

 <b>CCL</b> (Concise Command Language)</entry>
<entry level="1" type="bullet">

 <b>CIL</b> (Core Image Library)</entry>
<entry level="1" type="bullet">

 <b>CILUS</b> (Core Image Library Update and Save)</entry>
<entry level="1" type="bullet">

 <b>CLI</b> (Command Line Interpreter)</entry>
<entry level="1" type="bullet">

 <b>CUSPs</b> (Commonly Used System Programs)</entry>
<entry level="1" type="bullet">

 <b>DCL</b> (Digital Command Language)</entry>
<entry level="1" type="bullet">

 <b>DMA</b> (Direct Memory Addressing)</entry>
<entry level="1" type="bullet">

 <b>DTR</b> (Datatrieve)</entry>
<entry level="1" type="bullet">

 <b>IOX</b> (Input Output eXecutive)</entry>
<entry level="1" type="bullet">

 <b>KBM</b> (Keyboard Monitor) -- Analogous to Command Line Interpreter.</entry>
<entry level="1" type="bullet">

 <b>LAT</b> (Local Area Transport)</entry>
<entry level="1" type="bullet">

 <b>PBS</b> (Print Batch Services)</entry>
<entry level="1" type="bullet">

 <b>PPN</b> (Project Programmer Number) -- Analogous to GID and UID in Unix.</entry>
<entry level="1" type="bullet">

 <b>RDC</b> (Remote Diagnostics Center)</entry>
<entry level="1" type="bullet">

 <b>ROSS/V</b> (RSTS/E Operating System Simulator for VAX) -- RSTS on the VAX by EG&amp;H.</entry>
<entry level="1" type="bullet">

 <b>RSTS-11</b> (Resource Sharing Time Sharing System) -- The first commercial product name for RSTS.</entry>
<entry level="1" type="bullet">

 <b>RSTS/E</b> (Resource Sharing Timesharing System Extended) -- The current implementation of RSTS.</entry>
<entry level="1" type="bullet">

 <b>RTS</b> (Run Time System)</entry>
<entry level="1" type="bullet">

 <b>RTSS</b> (Resource Time Sharing System) -- (never marketed) The second name for RSTS.</entry>
<entry level="1" type="bullet">

 <b>SATT</b> (Storage Allocation Truth Table)</entry>
<entry level="1" type="bullet">

 <b>SIL</b> (Saved Image Library)</entry>
<entry level="1" type="bullet">

 <b>SILUS</b> (Creates Save-Image Libraries)</entry>
</list>
</p>

</sec>
<sec>
<st>
Development</st>

<ss2>
<st>
The 70s</st>
<p>

The <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> of RSTS was <link xlink:type="simple" xlink:href="../311/5311.xml">
programmed</link> in the <link xlink:type="simple" xlink:href="../368/1368.xml">
assembly language</link> <link xlink:type="simple" xlink:href="../587/2864587.xml">
MACRO-11</link>, <link xlink:type="simple" xlink:href="../739/5739.xml">
compiled</link> and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../625/634625.xml">
installed</link></instrumentality>
</artifact>
</system>
 to a <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../777/13777.xml">
disk</link></medium>
</device>
</instrumentality>
</artifact>
 using the <b><link xlink:type="simple" xlink:href="../798/12513798.xml">
CILUS</link></b> <link xlink:type="simple" xlink:href="../783/5783.xml">
program</link>, running on a <link xlink:type="simple" xlink:href="../798/12513798.xml">
DOS-11</link> operating system.  RSTS <link xlink:type="simple" xlink:href="../909/40909.xml">
booted</link> into an extended version of the <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC programming language</link> which DEC called "<shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml">
BASIC-PLUS</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
."  All of the <link xlink:type="simple" xlink:href="../021/189021.xml">
system software</link> <b>CUSPS</b> for the operating system, including the programs for resource accounting, <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../372/9878372.xml">
login</link></method>
</know-how>
, logout and managing the system, were written using BASIC-PLUS.  From 1970 to 1973, RSTS ran in only <link xlink:type="simple" xlink:href="../794/16794.xml">
56K bytes</link> of <link xlink:type="simple" xlink:href="../029/78029.xml">
memory</link> (64K bytes including the <b><link xlink:type="simple" xlink:href="../717/57717.xml">
DMA</link></b> I/O space).  This would allow a system to have up to 16 <link xlink:type="simple" xlink:href="../402/249402.xml">
terminal</link>s with a maximum of 17 jobs.  The maximum program size was 16K bytes<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.  By the end of 1973 DEC estimated there were 150 <link xlink:type="simple" xlink:href="../412/40412.xml">
license</link>d systems running RSTS<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>
<p>

In 1973 <link xlink:type="simple" xlink:href="../924/66924.xml">
memory management</link> support was included in RSTS (now RSTS/E) for the newer DEC <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11/40</link> and <link>
PDP-11/45</link> minicomputers (the <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11/20</link> was only supported under RSTS-11).  The introduction of memory management in the newer PDP-11 computers not only meant these machines were able to address four (4) times the amount of memory (18bit addressing, 256K bytes), it also paved the way for the developers to separate <link xlink:type="simple" xlink:href="../467/93467.xml">
user mode</link> processes from the core of the kernel.</p>
<p>

In 1975 memory management support was again updated for the newer 22bit addressable <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11/70</link>.  RSTS systems could now be expanded to use as much as two <link xlink:type="simple" xlink:href="../918/19918.xml">
megabyte</link>s of memory running up to 63 jobs.  The <b><link xlink:type="simple" xlink:href="../840/2106840.xml">
RTS</link></b> and <b><O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../134/254134.xml#xpointer(//*[./st=%22The_Concise_Command_Language%22])">
CCL</link></O>
</b> concepts were introduced although they had to be compiled in during "SYSGEN".  Multi-terminal service was introduced which would allow a single job the ability to control multiple terminals (128 total).  Large-message send/receive and interprocess communication became very sophisticated and efficient.  By August there are 1,200 licensed systems<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>
<p>

In 1977 the installation process for RSTS was no longer dependent on DOS-11.  The RSTS kernel could now be compiled under the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../309/69309.xml">
RT-11</link></O>
 <b>RTS</b>, formatted as a <b>SIL</b> file with RT-11 <b>SILUS</b>, and <link xlink:type="simple" xlink:href="../960/387960.xml">
copied</link> to the system or other disks, while the <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link> was time-sharing.  The BASIC-PLUS <b>RTS</b> (as well as RT-11, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../342/62342.xml">
RSX-11</link></O>
, <link xlink:type="simple" xlink:href="../449/30449.xml">
TECO</link> and third party <b>RTS</b>s) all ran as user mode processes, independent of the RSTS kernel.  A <link xlink:type="simple" xlink:href="../985/154985.xml">
systems manager</link> could now decide during the bootstrap phase which <b>RTS</b> he/she wanted as the systems default <b><link xlink:type="simple" xlink:href="../915/71915.xml">
KBM</link></b>.  There are now 3,100 licensed systems<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>
<p>

In 1978 the final memory management update was included for all machines that could support 22bit addressing.  RSTS could now use the maximum amount of memory available to a PDP-11 (4 megabytes).  Support was also included for SUPERVISORY mode which made RSTS the first DEC operating system with this capability.  <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../926/77926.xml">
DECnet</link></rule>
</direction>
</protocol>
</message>
 was also supported as well as remote diagnostics from field service technicians at the <b>RDC</b> in <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../250/6250.xml">
Colorado Springs, Colorado</link></village>
 (a DEC subscription service).  By the end of the <link xlink:type="simple" xlink:href="../530/695530.xml">
decade</link>, there are over 5,000 licensed systems<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>

</ss2>
<ss2>
<st>
The 80s</st>
<p>

In 1981 support for separate Instruction &amp; Data space for users with <bus wordnetid="102924116" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../317/1300317.xml">
Unibus</link></bus>
 machines (<link xlink:type="simple" xlink:href="../399/2246399.xml">
PDP-11/44</link>, PDP-11/45, <link>
PDP-11/55</link> and PDP-11/70) provided an extension to the memory constraints of an individual program.  Compiling programs to use separate Instruction &amp; Data space would soon give a program up to 64k for instructions, and up to 64k for buffering data.  The <b><link xlink:type="simple" xlink:href="../369/532369.xml">
DCL</link></b> <b>RTS</b> is included as well as support for the newer revision of DECnet III.</p>
<p>

In 1983 RSTS/E V8.0-06 included support for the smallest 18-bit PDP-11 sold by DEC (the <link>
MicroPDP-11</link>). A pre-generated <b>SIL</b> and <b>CUSPS</b> were included in this distribution to make installation on the MicroPDP-11 easier. DEC sold the pre-generated version on the MicroPDP-11 as MicroRSTS at a reduced price, however users needed to purchase the full version if they had a need to generate their own kernel.  The file system was upgraded and given the designation RSTS Directory Structure 1 (RDS1)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>.  All previous versions of the RSTS file system are given the designation RDS0<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>.  The newer file system is designed to support more than 1700 user accounts<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>.  "It is now thought that there are well over 10,000 licensed users and at least an equal number of unlicensed users!"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>.</p>
<p>

From 1985 to 1989 RSTS became a mature product in the <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Versions%22])">
Version 9</link> revisions.  <b>DCL</b> was installed as the primary <b>RTS</b> and the file system was again upgraded (now RDS1.2) to support new user account features.  Passwords were now hashed instead of limited to six (6) characters stored in <link xlink:type="simple" xlink:href="../554/2183554.xml">
RADIX-50</link> format.  Before Version 9, there was a non-user system account in the project (group) zero (the designation is [0,1]), and all accounts in project number 1 were privileged (not unlike the root account on <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 systems).  After Version 9 was released, additional accounts could be created for project zero, and multiple privileges could be individually set for any account.  Support for the <b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../602/1917602.xml">
LAT</link></rule>
</direction>
</protocol>
</message>
</b> protocol was included as well as the ability to run the newest version of DECnet IV.  These network enhancements gave any user connected to a terminal through a <link xlink:type="simple" xlink:href="../881/3824881.xml">
DECserver</link> the ability to communicate with a RSTS machine, just as easily as they could with a <link xlink:type="simple" xlink:href="../517/32517.xml">
VAX</link> running <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
VMS</link></O>
.  The <b>DCL</b> command structure between DEC operating systems also contributed to the familiar look and feel:</p>
<p>

"This is not just another pseudo command file processor; it is based on VMS features.  The DCL command file processor is fully supported and integrated in RSTS through extensive changes to DCL and the monitor.  DCL executes command files as part of your job; therefore, no pseudo keyboard or forcing of commands to your keyboard is necessary (as with ATPK)."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

</ss2>
<ss2>
<st>
The 90s</st>
<p>

In 1994 DEC sold its PDP-11 software business to a company named Mentec <weblink xlink:type="simple" xlink:href="http://www.mentec.com/">
http://www.mentec.com/</weblink>, and DEC then essentially discontinued releases of RSTS in order to concentrate on their VAX series of minicomputers.</p>
<p>

Mentec would later publicly grant a no-cost license to anyone for non-commercial hobby purpose use of the operating system software developed for the PDP-11, and as the result of the release (for non-commercial use) of a PDP-11 emulator for the IBM-PC, as well as image copies of disk drives of RSTS which exist on the Internet, it is possible for a hobbyist to run RSTS/E on a personal computer in software emulation as fast or faster than it originally ran on the real hardware.</p>

</ss2>
</sec>
<sec>
<st>
Documentation</st>
<p>

The standard complement of documentation manuals that accompanies a RSTS distribution consists of at least 11 large 3-ring binders, 1 small 3-ring binder containing the RSTS/E Quick Reference Guide and 1 paperback copy of Introduction to BASIC AA-0155B-TK.  Each of the 11 3-ring binders contain:</p>
<p>

<image location="right" width="300px" src="RSTS_Docs.jpg" type="thumb">
<caption>

Example of a RSTS/E Document shelf
</caption>
</image>
</p>
<p>

Volume 1 General Information and Installation</p>
<p>

<list>
<entry level="1" type="bullet">

 Documentation Directory</entry>
<entry level="1" type="bullet">

 Release Notes</entry>
<entry level="1" type="bullet">

 Maintenance Notebook</entry>
<entry level="1" type="bullet">

 System Installation and Update Guide</entry>
</list>
</p>
<p>

Volume 2 System Management</p>
<p>

<list>
<entry level="1" type="bullet">

 System Manager's Guide</entry>
</list>
</p>
<p>

Volume 3 System Usage</p>
<p>

<list>
<entry level="1" type="bullet">

 System User's Guide</entry>
<entry level="1" type="bullet">

 Guide to Writing Command Procedures</entry>
</list>
</p>
<p>

Volume 4 Utilities</p>
<p>

<list>
<entry level="1" type="bullet">

 Utilities Reference Manual</entry>
<entry level="1" type="bullet">

 Introduction to the EDT Editor</entry>
<entry level="1" type="bullet">

 SORT/MERGE User's Guide</entry>
<entry level="1" type="bullet">

 RUNOFF User's Guide</entry>
</list>
</p>
<p>

Volume 4A Utilities</p>
<p>

<list>
<entry level="1" type="bullet">

 EDT Editor Manual</entry>
</list>
</p>
<p>

<image location="right" width="300px" src="MicroPDP-11_53wRSTSDocs.jpg" type="thumb">
<caption>

MicroPDP-11/53 with various RSTS/E Documents
</caption>
</image>
</p>
<p>

Volume 4B Utilities</p>
<p>

<list>
<entry level="1" type="bullet">

 Task Builder Reference Manual</entry>
<entry level="1" type="bullet">

 Programmer's Utilities Manual</entry>
<entry level="1" type="bullet">

 RT11 Utilities Manual</entry>
<entry level="1" type="bullet">

 TECO User's Guide</entry>
</list>
</p>
<p>

Volume 5 BASIC-PLUS</p>
<p>

<list>
<entry level="1" type="bullet">

 BASIC-PLUS Language Manual</entry>
</list>
</p>
<p>

Volume 6 System Programming</p>
<p>

<list>
<entry level="1" type="bullet">

 Programming Manual</entry>
</list>
</p>
<p>

Volume 7 MACRO Programming</p>
<p>

<list>
<entry level="1" type="bullet">

 System Directives Manual</entry>
<entry level="1" type="bullet">

 ODT Reference Manual</entry>
</list>
</p>
<p>

Volume 7A MACRO Programming</p>
<p>

<list>
<entry level="1" type="bullet">

 MACRO-11 Language Manual</entry>
<entry level="1" type="bullet">

 RMS-11 MACRO Programmer's Guide</entry>
</list>
</p>
<p>

Volume 8 RMS</p>
<p>

<list>
<entry level="1" type="bullet">

 RMS-11: An Introduction</entry>
<entry level="1" type="bullet">

 RMS11 User's Guide</entry>
<entry level="1" type="bullet">

 RMS-11 Utilities</entry>
</list>
</p>

</sec>
<sec>
<st>
Features</st>
<p>

The last Software Product Description from DEC, outlined the following topics as the major features of RSTS/E, Version 10.1:</p>
<p>

<list>
<entry level="1" type="bullet">

 Interactive timesharing.</entry>
<entry level="1" type="bullet">

 Dynamic allocation of system resources.</entry>
<entry level="1" type="bullet">

 DCL (Digital Command Language).</entry>
<entry level="1" type="bullet">

 DCL command file processing.</entry>
<entry level="1" type="bullet">

 Command line editing and command recall.</entry>
<entry level="1" type="bullet">

 CCL system manager defined command interface.</entry>
<entry level="1" type="bullet">

 User and system logical names for devices and/or accounts.</entry>
<entry level="1" type="bullet">

 System security features.</entry>
<entry level="1" type="bullet">

 User and job privileges and resource quotas allocated to accounts as required.</entry>
<entry level="1" type="bullet">

 Batch services provide centralized background execution of DCL command files.</entry>
<entry level="1" type="bullet">

 Print services provide centralized background printing on terminal printers, line printers, or Terminal Server printers.</entry>
<entry level="1" type="bullet">

 Operator/Message Services provide dispatching and logging of operator messages and requests sent from users or programs.</entry>
<entry level="1" type="bullet">

 Extensive file processing including file sharing, protection mechanisms, and virtual (memory) disk support.</entry>
<entry level="1" type="bullet">

 Integrated system and account management using DCL.</entry>
<entry level="1" type="bullet">

 Magnetic tape processing (single or multi-volume).</entry>
<entry level="1" type="bullet">

 Terminal handler designed for interactive environments.</entry>
<entry level="1" type="bullet">

 Shared common code.</entry>
<entry level="1" type="bullet">

 Software-maintained cache of frequently-accessed disk data.</entry>
<entry level="1" type="bullet">

 Intertask communication.</entry>
<entry level="1" type="bullet">

 Disk file and device backup and restore utilities with streaming support for streaming tape drives supported by RSTS/E.</entry>
<entry level="1" type="bullet">

 Support for the RQZX1 SCSI adapter on <link>
MicroPDP-11/53+</link>, <link>
MicroPDP-11/93</link>, and upgraded <link xlink:type="simple" xlink:href="../146/2105146.xml">
PDP-11/73</link> and <link>
PDP-11/83</link> systems. Also, support for a specific set of Digital SCSI devices (RZ23L and RZ24L hard disks)using the RQZX1 SCSI adapter.</entry>
<entry level="1" type="bullet">

 Disk-to-disk volume copying between disks of different sizes and types.</entry>
<entry level="1" type="bullet">

 System reliability and maintainability features.</entry>
<entry level="1" type="bullet">

 DCL, RT-11, RSX, and BASIC-PLUS run-time system support.</entry>
<entry level="1" type="bullet">

 Program Development Tools<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
History</st>

</sec>
<sec>
<st>
Operation</st>

<ss2>
<st>
Communication</st>
<p>

RSTS uses a <link xlink:type="simple" xlink:href="../114/194114.xml">
serial communication</link> connection to interact with the operator.  The connection might be a local <link xlink:type="simple" xlink:href="../402/249402.xml">
computer terminal</link> with a 20 <link xlink:type="simple" xlink:href="../772/772.xml">
mA</link> <link xlink:type="simple" xlink:href="../172/1174172.xml">
current loop</link> interface, an <link xlink:type="simple" xlink:href="../023/26023.xml">
RS-232</link> interface (either local <link xlink:type="simple" xlink:href="../359/77359.xml">
serial port</link> or remote connection via <link xlink:type="simple" xlink:href="../900/19443900.xml">
modem</link>), or by an <link xlink:type="simple" xlink:href="../499/9499.xml">
ethernet</link> connection utilizing DECnet or LAT.  As many as 128 terminals (using multi-terminal service) could be connected to a RSTS system, running under a maximum of 63 jobs (depending on the <link xlink:type="simple" xlink:href="../218/5218.xml">
processor</link> being used, the amount of memory and disk space, and the system load).  Most RSTS systems had nowhere near that many terminals.  Users could also submit jobs to be run in <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../030/15264030.xml">
batch</link></format>
 mode.  There was also a batch program called "ATPK" that allowed users to run a series of commands on an imaginary terminal (pseudo-terminal) in semi-interactive mode similar to batch commands in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
. </p>

</ss2>
<ss2>
<st>
Login [Project,Programmer]</st>
<p>

Users connected to the system by typing the <link xlink:type="simple" xlink:href="../372/9878372.xml">
LOGIN</link> command (or HELLO) at a logged-out terminal and pressing return.  Actually, typing any command at a logged-out terminal simply started the LOGIN program which then interpreted the command.  If it was one of the commands which were allowed to be used by a user that is not yet logged in ("Logged Out"), then the associated program for that command was CHAINed to, otherwise the message "Please say HELLO" was printed on the terminal.  Prior to Version 9, a user could also initiate a 1 line login, however this left your password on the screen for anyone behind you to view (examples follow):</p>
<p>

<image location="right" width="300px" src="rsts.png" type="thumb">
<caption>

RSTS/E login and logout with BASIC as default RTS
</caption>
</image>
</p>
<p>

Bye</p>
<p>

HELLO 1,2;SECRET</p>
<p>

Ready</p>
<p>

or</p>
<p>

I 1,2;SECRET</p>
<p>

Ready</p>
<p>

or</p>
<p>

LOGIN 1,2;SECRET</p>
<p>

Ready</p>
<p>

One could determine the status of a terminal from the command responses, printed by the command interpreter.  A logged-in user communicating with the BASIC-PLUS <b>KBM</b> was given the prompt "Ready" and a user who is logged out is given the prompt "Bye".</p>
<p>

A user would log in by supplying their <b>PPN</b> number and password.  User numbers consisted of a project number (this would be the equivalent of a group number in Unix), a comma, and a programmer number.  Both numbers were in the range of 0 to 254, with special exceptions.  When specifying an account, the project and programmer number were enclosed in brackets.  A typical user number could be [10,5] (project 10, programmer 5), [2,146], [254,31], or [200,220], etc.  When a user was running a system program while logged out (because the system manager had enabled it) their <b>PPN</b> number was [0,0], and would appear in the SYSTAT <b>CUSP</b> as **,**.  Thus that is not a valid account number.</p>

</ss2>
<ss2>
<st>
System and user accounts</st>
<p>

In every project, the programmer number 0 was usually reserved as a group account, as it could be referenced by the special symbol #.  If one's user number were [20,103], a reference to a file name beginning with "#" would refer to a file stored in the account of the user number [20,0].  This feature would be useful in educational environments, as programmer number 0 could be issued to the instructor of a class, and the individuals students given accounts with the same project number, and the instructor could store in his account files marked as shared only for that project number (which would be students in that class only, and no other).</p>
<p>

Two special classes of project numbers existed.  The project number 0 is generally reserved for system software, and prior to Version 9 there was only 1 project 0 account (named [0,1]).  Programmers in the project number 1 were privileged accounts, equivalent to the single account "root" on Unix systems, except that the account numbers [1,0] through [1,254] were all privileged accounts.  After Version 9 was released, any account could be granted specific privileges by the systems manager.</p>
<p>

The account [0,1] is used to store the operating system file itself, all run-time library systems, and certain system files relating to booting the system (author's comments appear on the right in bold):</p>
<p>

DIR [0,1]
Name .Ext    Size   Prot    Date       SY:[0,1]
BADB  .SYS       0P   63&amp;gt; 06-Jun-98         <b>List of bad blocks</b>
SATT  .SYS       3CP  63&amp;gt; 06-Jun-98         <b>Bitmap of allocated disk storage</b>   
INIT  .SYS     419P   40&amp;gt; 06-Jun-98         <b>Operating system loader program</b>
ERR   .ERR      16CP  40&amp;gt; 06-Jun-98         <b>System error messages</b>
RSTS  .SIL     307CP  60&amp;gt; 06-Jun-98         <b>Operating system itself</b>
BASIC .RTS      73CP  60&amp;gt; 06-Jun-98         <b>BASIC-PLUS run time system</b>
RT11  .RTS      20C   60&amp;gt; 06-Jun-98         <b>RT-11 run time system</b>
SWAP  .SYS    1024CP  63&amp;gt; 06-Jun-98         <b>System swap file</b>   
CRASH .SYS      35CP  63&amp;gt; 06-Jun-98         <b>System crash dump</b>
RSX   .RTS      16C   60&amp;gt; 23-Sep-79         <b>RSX-11 run-time system</b>
TECO  .RTS      39C   60&amp;gt; 24-Sep-79         <b>TECO text editor</b></p>
<p>

Total of 1952 blocks in 11 files in SY:[0,1]</p>
<p>

(<b>Editor's Note: This directory listing is previous to Version 9.</b>)</p>
<p>

The <b>DIR</b> command is an installed <b>CCL</b> equivalent to a RUN command for the DIRECT program.  [0,1] is the account number (and directory name) of the operating system storage account.  It would be referred to as "project number 0, programmer number 1".</p>
<p>

The numbers shown after each file represent its size in disk blocks, a block being 512 <link xlink:type="simple" xlink:href="../365/3365.xml">
byte</link>s or 1/2 kilobyte (K).  "C" indicates the file is contiguous (is stored as one file without being separated into pieces, similar to files on a <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> system after a drive has been <link xlink:type="simple" xlink:href="../369/3909369.xml">
defragmented</link>), while "P" indicates it is specially protected (cannot be deleted, even by a privileged user, unless the P bit is cleared by separate command).  The numbers in brackets (like " 40&amp;gt;") represent the protections for the file, which is always displayed in decimal.  Protections indicate if the file may be seen by any other user, by other users with the same programmer number, if the file is read only or if it may be altered by another user, and whether the file may be executed by an ordimary user giving them additional privileges.  These <link>
protection code</link>s are very similar to the r, w and x protections in <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 and similar operating systems such as <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
.  Code 60 is equivalent to a private file, code 63 is a private non-deletable file, and 40 is a public file.</p>
<p>

Library files are kept in account [1,1] and it is usually referenced by the logical name LB:.  The account [1,2] is the system startup account (much like a unix system starting up under root), and contains the system <b>CUSPS</b> that could be referenced by prefixing the <b>CUSP</b> name with a dollar sign ($). "!" is used for account [1,3], "%" for [1,4] and "&amp;" for [1,5].  The account [1,1] also had the special privilege of being the only account where a user logged in under that account is permitted to execute the POKE system call to put values into any memory in the system.  Thus the account number [1,1] is the closest equivalent to "root" on Unix-based systems.</p>

</ss2>
</sec>
<sec>
<st>
Run-Time environments</st>
<p>

One of the features of RSTS is the means for the execution of programs and the environment used to run them.  The various environments allowed for programming in BASIC-PLUS, the enhanced BASIC Plus 2, and in more traditional programming languages such as <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link> and <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link>.  These environments were separate from each other such that one could start a program from one environment and the system would switch to a different environment while running a different program, and then return the user to the original environment they started with.  These environments were referred to as an <b>RTS</b>.  The term for the <link xlink:type="simple" xlink:href="../707/6707.xml">
command line interface</link> that most of these <b>RTS</b>'s had was called the <b>KBM</b>.  Prior to Version 9, the systems manager needed to define which <b>RTS</b> the system would start under, and it had to be one that would execute compiled programs.</p>
<p>

A Systems Manager may also install special <b>CCL</b> commands, which take precedence over all <b>KBM</b> commands (with the exception of <b>DCL</b>).  A <b>CCL</b> is analogous to a shortcut to a program on a Windows system or a symbolic link on Unix-based systems. <b>CCL</b>'s are installed as a memory-resident command either during startup, or dynamically while the system is running by a system's manager (ie: it is not permanent like a disk file).</p>
<p>

When logged in, a user can "SWITCH" to any of these environments, type language statements in the BASIC-PLUS programming language, issue RUN commands to specific programs, or issue a special command called a <b>CCL</b> to execute a program with command options.
Most RSTS systems managers generated the kernel to include the "Control-T" one line status option which could tell you what program you were running, under what <b>RTS</b> the program was using, how much memory the program was taking, how much it could expand to, and how much memory the <b>RTS</b> was using.</p>

<ss2>
<st>
BASIC-PLUS</st>
<p>

Programs written in <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml">
BASIC-PLUS</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
 ran under the BASIC <b>RTS</b>, which allowed them up to 32K bytes of memory (out of 64K total).  The rest of the memory was used by the BASIC <b>RTS</b> itself.  If one wrote programs in a language that permitted true binary executables such as BASIC Plus 2, FORTRAN-IV or Macro Assembler, then the amount of memory available would be 56K (8K allocated to the <b>RTS</b>).  The standard BASIC-PLUS prompt is the "Ready" response (example):</p>
<p>

new
New file name--HWORLD</p>
<p>

Ready</p>
<p>

10 Print "Hello World"
20 Input "Press Control-T for 1 line status: ";a$
30 End
run
HWORLD  10:17 PM        01-Jan-08
Hello World
Press Control-T for 1 line status: ?
1       KB0     HWORLD+BASIC    KB(0R)  2(16)K+14K      0.2(+0.0) +0</p>

<p>

Ready</p>
<p>

save</p>
<p>

Ready</p>
<p>

compile</p>
<p>

Ready</p>
<p>

DIR HWORLD.*/na/ex/si/pr
SY:[1,2]
HWORLD.BAS       1    60&amp;gt;
HWORLD.BAC       7C  124&amp;gt;</p>
<p>

Total of 8 blocks in 2 files in SY:[1,2]</p>

<p>

Ready</p>

</ss2>
<ss2>
<st>
DCL</st>
<p>

Starting with Version 9, <b>DCL</b> became the primary startup <b>RTS</b> even though it does not have the ability to execute binary programs.  This became possible with the advent of the disappearing RSX <b>RTS</b> (see below).  <b>DCL</b> was incorporated into all of the recent versions of DEC's operating systems (RSX-11, RT-11, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
VMS</link></O>
 and later, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
) for compatibility.  The standard <b>DCL</b> prompt is the dollar "$" sign (example):</p>
<p>

$ write 0 "Hello World, it is "+F$TIME()
Hello World, it is 01-Jan-08 10:20 PM
$ inquire p1 "Press Control-T for 1 line status:"
Press Control-T for 1 line status:
1       KB0      DCL+DCL       KB(0R)       4(8)K+24K       0.1(+0.1) -8
$ set verify/debug/watch
$ show memory
(show memory)
(SYSTAT/C)</p>
<p>

Memory allocation table:
Start   End  Length  Permanent   Temporary
0K -   85K (  86K) MONITOR    
86K - 1737K (1652K)   (User)   
1738K - 1747K (  10K)   (User)    DAPRES LIB
1748K - 1751K (   4K)   (User)    RMSRES LIB
1752K - 2043K ( 292K) ** XBUF ** 
2044K -  *** END ***
$ </p>

</ss2>
<ss2>
<st>
RSX</st>
<p>

Programs that were written for the RSX <b>RTS</b> such as COBOL, Macro Assembler, or later releases of BASIC Plus 2, could utilize the maximum amount of memory available for a binary program (56K due to the requirements of an <b>RTS</b> needing the top 8K to use for itself).  RSTS Version 7 and later allowed the RSX <b>RTS</b> to be included in the kernel, making it completely "disappear" from the user address space, thus allowing 64K bytes of memory for user programs.  </p>
<p>

Programs got around the limitations of the amount of available memory by using libraries (when permissible), by complicated overlay strategies, or by calling other programs ("Chaining") and passing them commands in a shared memory area called "Core Common," among other practices.  When RSX is the default <b>KBM</b>, the standard RSX prompt (both logged in and logged out) is the "&amp;gt;" (or MCR "Monitor Console Routine") sign (example):</p>
<p>

&amp;gt;run
Please type HELLO
&amp;gt;HELLO 1,2;SECRET
&amp;gt;run
?What?
&amp;gt;help
Valid keyboard commands are:</p>
<p>

ASSIGN    DISMOUNT  HELP      RUN     UNSAVE
BYE       EXIT      MOUNT     SHUTUP
DEASSIGN  HELLO     REASSIGN  SWITCH</p>
<p>

&amp;gt;run CSPCOM
CSP&amp;gt;HWORLD=HWORLD
CSP&amp;gt;^Z
&amp;gt;RUN TKB
TKB&amp;gt;HWORLD=HWORLD,LB:CSPCOM.OLB/LB
TKB&amp;gt;//
&amp;gt;run HWORLD.TSK
Hello World
Press Control-T for 1 line status: ?
1       KB0     HWORLD+...RSX   KB(0R)  7(32)K+0K       0.8(+0.2) +0</p>
<p>

&amp;gt;DIR HWORLD.*/na/ex/si/pr
SY:[1,2]
HWORLD.BAS       1    60&amp;gt;
HWORLD.BAC       7C  124&amp;gt;
HWORLD.OBJ       2    60&amp;gt;
HWORLD.TSK      25C  124&amp;gt;</p>
<p>

Total of 35 blocks in 4 files in SY:[1,2]</p>
<p>

&amp;gt;</p>

</ss2>
<ss2>
<st>
RT-11</st>
<p>

The RT-11 <b>RTS</b> emulated the Single Job version of the RT-11 distribution.  Like the RSX emulation, RT-11 occupied the top 8K of memory, leaving the bottom 56K for <b>CUSPS</b>, programs written in FORTRAN-IV or Macro Assembler.  When RT-11 is the default <b>KBM</b>, the standard RT-11 prompt (both logged in and logged out) is the "." sign (example):</p>
<p>

.VERSION
Please type HELLO</p>
<p>

.HELLO 1,2;SECRET</p>
<p>

.VERSION
RT-11SJ V3-03; RSTS/E V8.0</p>
<p>

.R PIP
<list>
<entry level="1" type="bullet">

HWORLD.MAC=KB:</entry>
</list>

.MCALL .TTYIN,.PRINT,.EXIT
HWORLD: .ASCII /Hello World/15&amp;gt;12&amp;gt;
.ASCIZ /Press Control-T for 1 line status:/
.EVEN</p>
<p>

Start:  .PRINT #HWORLD
.TTYIN
.EXIT
.END    START
^Z
<list>
<entry level="1" type="bullet">

^Z</entry>
</list>
</p>
<p>

.R MACRO
HWORLD=HWORLD
<list>
<entry level="1" type="bullet">

^Z</entry>
</list>
</p>
<p>

.R LINK
<list>
<entry level="1" type="bullet">

HWORLD=HWORLD</entry>
<entry level="1" type="bullet">

^Z</entry>
</list>
</p>
<p>

.R HWORLD.SAV
Hello World
Press Control-T for 1 line status:
1       KB0     HWORLD+RT11     KB(0R)  2(28)K+4K       0.6(+0.2) +0</p>

<p>

..DIR HWORLD.*/na/ex/si/pr
SY:[1,2]
HWORLD.BAS       1    60&amp;gt;
HWORLD.BAC       7C  124&amp;gt;
HWORLD.TSK      25C  124&amp;gt;
HWORLD.MAC       1    60&amp;gt;
HWORLD.OBJ       1    60&amp;gt;
HWORLD.SAV       2C  124&amp;gt;</p>
<p>

Total of 37 blocks in 6 files in SY:[1,2]</p>

<p>

.</p>

</ss2>
<ss2>
<st>
TECO</st>
<p>

One of the most powerful text editors ever developed, the TECO editor, was itself implemented as an <b>RTS</b> to maximize the amount of memory available for the editing buffer, and also because it was first implemented in RSTS V5B, before the release of the general purpose runtime systems (RSX and RT11).  TECO was the only <b>RTS</b> distributed with RSTS that did not contain a built in <b>KBM</b>.  The user would startup TECO (like any other program) by running a TECO program (TECO.TEC).  Most RSTS systems used <b>CCL</b>'s to create a file (MAKE filespec), edit a file (TECO filespec), or run a TECO program (MUNG filespec,data).  The following program is an example of how TECO could be used to calculate <link xlink:type="simple" xlink:href="../601/23601.xml">
Pi</link> (currently set to 20 digits)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>:</p>

<p>

Ready</p>
<p>

run TECO
<list>
<entry level="1" type="bullet">

GZ0J\UNQN"E 20UN '</entry>
</list>

BUH BUV HK
QN J BUQ QN*10/3UI
QI \ +2*10+(QQ*QI)UA
B L K QI*2-1UJ QA/QJUQ
QA-(QQ*QJ)-2\ 10@I// -1%I &amp;gt;
QQ/10UT QH+QT+48UW QW-58"E 48UW %V ' QV"N QV^T '
QWUV QQ-(QT*10)UH &amp;gt;
QV^T @^A/
/HKEX$$
31415926535897932384</p>
<p>

Ready</p>

</ss2>
</sec>
<sec>
<st>
RSTS easter eggs</st>

<ss2>
<st>
PDP-11 console lights</st>
<p>

One of the nice features that a system manager could compile into the kernel was a rotating display pattern that gave the illusion of 2 snakes chasing each other around the console lights.  The normal kernel would give the illusion of 1 snake moving from right to left in the data lights across the bottom. If the system manager also compiled the "lights" object module you would see an additional snake moving from left to right in the address lights across the top.  This was accomplished by using supervisory mode in the versions prior to 9.0.  RSX also had a similar display pattern that would appear as if 2 snakes were playing chicken and would run into each other in the center of the console.</p>

</ss2>
<ss2>
<st>
Stardate</st>
<p>

Beginning with version 9.0, an undocumented feature would allow the system manager to change the display of the system date.  RSTS now became the first operating system that would display the system date as a set of numbers representing a "Star Date" as commonly known from the TV series <dish wordnetid="107557434" confidence="0.8">
<music wordnetid="107020895" confidence="0.8">
<music_genre wordnetid="107071942" confidence="0.8">
<snack_food wordnetid="107712382" confidence="0.8">
<classical_music wordnetid="107025900" confidence="0.8">
<substance wordnetid="100020090" confidence="0.8">
<sandwich wordnetid="107695965" confidence="0.8">
<auditory_communication wordnetid="107109019" confidence="0.8">
<food wordnetid="100021265" confidence="0.8">
<opera wordnetid="107026352" confidence="0.8">
<western wordnetid="107698672" confidence="0.8">
<nutriment wordnetid="107570720" confidence="0.8">
<expressive_style wordnetid="107066659" confidence="0.8">
<link xlink:type="simple" xlink:href="../886/17157886.xml">
Star Trek</link></expressive_style>
</nutriment>
</western>
</opera>
</food>
</auditory_communication>
</sandwich>
</substance>
</classical_music>
</snack_food>
</music_genre>
</music>
</dish>
.</p>

</ss2>
</sec>
<sec>
<st>
RSTS emulations</st>

<ss2>
<st>
Charon-11</st>

</ss2>
<ss2>
<st>
EG&amp;H</st>
<p>

In 1981 Evans Griffiths &amp; Hart would market the <b>ROSS/V</b> product.  <b>ROSS/V</b> would allow all user mode processes of RSTS (<b>CUSPS</b>, <b>RTS</b>s and user programs) the ability to run unmodified under VMS on the VAX-11 machines. The code for this emulation handled all of the kernel processes that would normally be handled by a RSTS.SIL running on a PDP-11.  The original BASIC-PLUS language that has carried through all versions of RSTS was subcontracted by Evans Griffiths &amp; Hart, Inc. for a fixed price of $10,500.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></p>

</ss2>
<ss2>
<st>
Ersatz-11</st>
<p>

Ersatz-11, a product of <weblink xlink:type="simple" xlink:href="http://www.dbit.com">
D-Bit</weblink>, emulates the PDP-11 instruction set running under Windows or Linux. It can be used to run RSTS or other PDP-11 operating systems.</p>

</ss2>
<ss2>
<st>
SimH</st>

</ss2>
</sec>
<sec>
<st>
RSTS mascot</st>

<ss2>
<st>
Spike and Albert</st>

</ss2>
</sec>
<sec>
<st>
Versions</st>

<ss1>
<st>
RSTS-11</st>
<p>

Following on the heels of TSS-8, the IOX code that would create the first time-sharing operating system for the PDP-11 is named BTSS. The name was again changed (from BTSS to RTSS) as a product with the name BTSS was currently marketed by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
. A simple typing mistake changes the name from RTSS to RSTS.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></p>
<p>

<table style="font-size: smaller;" class="wikitable">
<header>
Version</header>
<header>
Release date</header>
<header>
Notes</header>
<row>
<col>
1</col>
<col>
Never released</col>

</row>
<row>
<col>
2A-19</col>
<col>
1971</col>
<col>
Installed at Carleton College and Seattle Pacific College.</col>
</row>
<row>
<col>
2B</col>
<col>
June 1971</col>
<col>
Installed at the Delaware School Auxiliary Association.</col>
</row>
<row>
<col>
2C</col>
<col>
October 1971</col>
<col>
Enhanced software support (Record I/O).</col>
</row>
<row>
<col>
3A-19</col>
<col>
January 1972</col>

</row>
<row>
<col>
3B</col>
<col>
May 1972</col>

</row>
<row>
<col>
3C</col>
<col>
June 1972</col>
<col>
Enhanced software support (UPDATE mode).</col>
</row>
<row>
<col>
4A-12</col>
<col>
October 1972</col>
<col>
New hardware supported.</col>
</row>
<row>
<col>
4B</col>
<col>
July 1975</col>
<col>
A patched version of V4A with no new features.</col>
</row>
</table>
</p>

</ss1>
<ss1>
<st>
RSTS/E</st>
<p>

The addition of new memory management support and the ability to install more memory in the PDP-11/40 and PDP-11/45 create a name change.  RSTS-11 now becomes RSTS/E.</p>
<p>

<table style="font-size: smaller;" class="wikitable">
<header>
Version</header>
<header>
Release date</header>
<header>
Notes</header>
<row>
<col>
5A-21</col>
<col>
July 1973</col>
<col>
Memory management extensions from 64KB to 256KB.</col>
</row>
<row>
<col>
5B-24</col>
<col>
November 1974</col>
<col>
Multiple SWAP files, RTS and CCL introduced.</col>
</row>
<row>
<col>
5C-01</col>
<col>
March 1975</col>
<col>
A patched version of V5B with no new features.</col>
</row>
<row>
<col>
6A-02</col>
<col>
August 1975</col>
<col>
New hardware, 22 bit addressing (2 MB), 63 jobs.</col>
</row>
<row>
<col>
6B-02</col>
<col>
February 1977</col>
<col>
New hardware, SYSGEN under RT-11, CCL at runtime.</col>
</row>
<row>
<col>
6C-03</col>
<col>
February 1978</col>
<col>
DECnet Phase II, DTR, DIBOL supported. SUPERVISOR mode.</col>
</row>
<row>
<col>
7.0</col>
<col>
August 1978</col>
<col>
New hardware, (4 MB), RDC support.</col>
</row>
<row>
<col>
7.1</col>
<col>
February 1981</col>
<col>
Kernel mode Instruction &amp; Data space support, DECnet Phase III.</col>
</row>
<row>
<col>
7.2</col>
<col>
August 1982</col>
<col>
New hardware (UDA50 drives).</col>
</row>
<row>
<col>
8.0-06</col>
<col>
April 1983</col>
<col>
New hardware (MicroPDP-11).</col>
</row>
<row>
<col>
9.0-14</col>
<col>
May 1985</col>
<col>
New hardware, DCL default, PBS, multiple privs, hashed passwords, new Backup utility, and Stardate.</col>
</row>
<row>
<col>
9.1-05</col>
<col>
October 1985</col>
<col>
Enhanced hardware support, multi-threaded FIP, LOAD INDEX.</col>
</row>
<row>
<col>
9.2-10</col>
<col>
June 1986</col>
<col>
New hardware supported.</col>
</row>
<row>
<col>
9.3-20</col>
<col>
January 1987</col>
<col>
Enhanced hardware support, DECnet Phase IV.</col>
</row>
<row>
<col>
9.4</col>
<col>
July 1987</col>
<col>
New hardware, Scheduler and Terminal Service improvements.</col>
</row>
<row>
<col>
9.5-08</col>
<col>
December 1987</col>
<col>
Clustersize increased to 64, BACKUP/DIR added.</col>
</row>
<row>
<col>
9.6</col>
<col>
September 1988</col>
<col>
LAT support, HELP SPIKE.</col>
</row>
<row>
<col>
9.7</col>
<col>
July 1989</col>
<col>
New hardware, DV0: at runtime, ANSI PDP-11C available.</col>
</row>
<row>
<col>
10.0</col>
<col>
May 1990</col>
<col>
Command line history in TTDRV.</col>
</row>
<row>
<col>
10.1</col>
<col>
September 1992</col>

</row>
</table>
</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../236/1303236.xml">
Asynchronous System Trap</link></entry>
<entry level="1" type="bullet">

 <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../705/617705.xml#xpointer(//*[./st=%22BASIC+Plus+2%22])">
BASIC Plus 2</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
</entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../134/254134.xml#xpointer(//*[./st=%22The+Concise+Command+Language%22])">
Concise Command Language</link></O>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../310/2214310.xml">
Datatrieve</link></entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../926/77926.xml">
DECnet</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../390/4793390.xml">
Front panel</link></entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../934/77934.xml">
Kevin Mitnick</link></person>
</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../602/1917602.xml">
Local Area Transport</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../875/3979875.xml">
Octal Debugging Technique</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../203/1303203.xml">
QIO</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../168/752168.xml">
Record Management Services</link></entry>
<entry level="1" type="bullet">

 <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../840/2106840.xml">
Run-time system</link></horizontal_surface>
</surface>
</artifact>
</platform>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../220/2197220.xml">
SYSTAT</link></software>
</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../958/30958.xml">
Time-sharing</link></instrumentality>
</artifact>
</system>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../200/8341200.xml">
Time-sharing system evolution</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
Dick, P: "The History of RSTS: An Addendum", page 25. "The VAX/RSTS Professional Magazine" February 1, 1984, Vol 6, No 1, ISSN 0746-1909</entry>
<entry id="2">
PeterDick</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.rsts.org/internals/mayfieldRSTS8internals.pdf">
Mayfield, M: "RSTS/E Monitor Internals", page 1-9.</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://www.rsts.org/internals/mayfieldRSTS8internals.pdf">
Mayfield, M: "RSTS/E Monitor Internals", page 1-4.</weblink></entry>
<entry id="5">
Marbach, C: "RSTS and the Micro-11", page 50. "The VAX/RSTS Professional Magazine" August 1, 1983, Vol 5, No 4, ISSN 0745-2888</entry>
<entry id="6">
Romanello, G: "A Preview of RSTS/E Version 9.0", page 28. "The VAX/RSTS Professional Magazine" December 1, 1984, Vol 6, No 6, ISSN 0746-1909</entry>
<entry id="7">
Digital Software Product Description, SPD 13.01.37 "RSTS/E, Version 10.1", March 1995 AE-DE58L-TC.</entry>
<entry id="8">
Greenspon, M: "The RSTS Crystal Ball - Part 3", page 12. "The RSTS Professional Magazine" October 1, 1982, Vol 4, No 5</entry>
<entry id="9">
PeterDick</entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="http://www.oshistory.net/metadot/index.pl?id=2248">
OS history</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://elvira.stacken.kth.se/">
Elvira at The Royal Institute of Technology in Stockholm Sweden.</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.rsts.org/">
RSTS Hobbyist Site</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://simh.trailing-edge.com">
SimH web page</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.woffordwitch.com/">
Wofford Witch</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating systems</link> by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../798/12513798.xml">
DEC BATCH-11/DOS-11</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../134/254134.xml">
OS/8</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../899/313899.xml">
RSTS/E</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../342/62342.xml">
RSX-11</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../309/69309.xml">
RT-11</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../607/529607.xml">
TOPS-10</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../380/66380.xml">
TOPS-20</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../275/38275.xml">
Tru64 UNIX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../318/12724318.xml">
TSS-8</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../671/198671.xml">
Ultrix</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../285/2845285.xml">
VAXELN</link></O>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</O>
</article>
