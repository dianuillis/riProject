<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:47:40[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Local search (optimization)</title>
<id>313942</id>
<revision>
<id>244555339</id>
<timestamp>2008-10-11T12:05:09Z</timestamp>
<contributor>
<username>Diego Moya</username>
<id>124142</id>
</contributor>
</revision>
<categories>
<category>Optimization algorithms</category>
</categories>
</header>
<bdy>

This article is about algorithms for <link xlink:type="simple" xlink:href="../033/52033.xml">
optimization</link>. For the article about web search, see <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../161/2936161.xml">
Local search (Internet)</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
<p>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, <b>local search</b> is a <link xlink:type="simple" xlink:href="../458/774458.xml">
metaheuristic</link> for solving computationally hard <link xlink:type="simple" xlink:href="../033/52033.xml">
optimization</link> problems. Local search can be used on problems that can be formulated as finding a solution maximizing a criterion among a number of <link xlink:type="simple" xlink:href="../808/1556808.xml">
candidate solution</link>s. Local search algorithms move from solution to solution in the space of candidate solutions (the <it>search space</it>) until a solution deemed optimal is found or a time bound is elapsed. Some problems where local search has been applied are:</p>
<p>

<list>
<entry level="1" type="number">

 the <link xlink:type="simple" xlink:href="../382/391382.xml">
vertex cover problem</link>, in which a solution is a <link xlink:type="simple" xlink:href="../382/391382.xml">
vertex cover</link> of a <link xlink:type="simple" xlink:href="../806/325806.xml">
graph</link>, and the target is to find a solution with a minimal number of nodes;</entry>
<entry level="1" type="number">

 the <link xlink:type="simple" xlink:href="../248/31248.xml">
travelling salesman problem</link>, in which a solution is a <link xlink:type="simple" xlink:href="../609/168609.xml">
cycle</link> containing all nodes of the graph and the target is to minimize the total length of the cycle;</entry>
<entry level="1" type="number">

 the <link xlink:type="simple" xlink:href="../715/4715.xml">
boolean satisfiability problem</link>, in which a candidate solution is a truth assignment, and the target is to maximize the number of <link xlink:type="simple" xlink:href="../484/4638484.xml">
clauses</link> satisfied by the assignment; in this case, the final solution is of use only if it satisfies <it>all</it> clauses.</entry>
</list>
</p>
<p>

Most problems can be formulated in terms of search space and target in several different manners. For example, for the travelling salesman problem  a solution can be a cycle and the criterion to maximize is a combination of the number of nodes and the length of the cycle. But a solution can also be a path, and being a cycle is part of the target.</p>
<p>

A local search algorithm starts from a candidate solution and then <link xlink:type="simple" xlink:href="../237/15237.xml">
iteratively</link> moves to a <link xlink:type="simple" xlink:href="../485/1529485.xml">
neighbor</link> solution. This is only possible if a <link>
neighborhood relation</link> is defined on the search space. As an example, the neighborhood of a vertex cover is another vertex cover only differing by one node. For boolean satisfiability, the neighbors of a truth assignment are usually the truth assignments only differing from it by the evaluation of a variable. The same problem may have multiple different neighborhoods defined on it; local optimization with neighborhoods that involve changing up to <it>k</it> components of the solution is often referred to as <b>k-opt</b>.</p>
<p>

Typically, every candidate solution has more than one neighbor solution; the choice of which one to move to is taken using only information about the solutions in the <link xlink:type="simple" xlink:href="../193/177193.xml">
neighborhood</link> of the current one, hence the name <it>local</it> search. When the choice of the neighbor solution is done by taking the one locally maximizing the criterion, the metaheuristic takes the name <link xlink:type="simple" xlink:href="../002/364002.xml">
hill climbing</link>.</p>
<p>

Termination of local search can be based on a time bound. Another common choice is to terminate when the best solution found by the algorithm has not been improved in a given number of steps. Local search algorithms are typically <link>
incomplete algorithm</link>s, as the search may stop even if the best solution found by the algorithm is not optimal. This can happen even if termination is due to the impossibility of improving the solution, as the optimal solution can lie far from the neighborhood of the solutions crossed by the algorithms.</p>
<p>

Local search algorithms are widely applied to numerous hard computational problems, including problems from <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> (particularly <link xlink:type="simple" xlink:href="../164/1164.xml">
artificial intelligence</link>), <link xlink:type="simple" xlink:href="../831/18831.xml">
mathematics</link>, <link xlink:type="simple" xlink:href="../476/43476.xml">
operations research</link>, <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link>, and <link xlink:type="simple" xlink:href="../214/4214.xml">
bioinformatics</link>. Examples of local search algorithm are <link xlink:type="simple" xlink:href="../246/2853246.xml">
WalkSAT</link> and the <link xlink:type="simple" xlink:href="../504/8818504.xml">
2-opt algorithm for the TSP</link>.</p>

<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://paradiseo.gforge.inria.fr/">
ParadisEO</weblink>  </entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://iridia.ulb.ac.be/sls-forum/">
Metaheuristics/Stochastic Local Serch Forum</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.webanalyticsworld.net/2007/10/ultimate-local-search-optimization.html">
Resources for Local Search</weblink></entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
