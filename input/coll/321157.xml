<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:48:08[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<physical_entity  confidence="0.8" wordnetid="100001930">
<person  confidence="0.8" wordnetid="100007846">
<attendant  confidence="0.8" wordnetid="109821831">
<assistant  confidence="0.8" wordnetid="109815790">
<know-how  confidence="0.8" wordnetid="105616786">
<worker  confidence="0.8" wordnetid="109632518">
<method  confidence="0.8" wordnetid="105660268">
<causal_agent  confidence="0.8" wordnetid="100007347">
<checker  confidence="0.8" wordnetid="109913110">
<header>
<title>Model checking</title>
<id>321157</id>
<revision>
<id>243661557</id>
<timestamp>2008-10-07T14:42:22Z</timestamp>
<contributor>
<username>Hohenloh</username>
<id>7374882</id>
</contributor>
</revision>
<categories>
<category>Model theory</category>
<category>Logic in computer science</category>
<category>Model checkers</category>
<category>Formal methods</category>
</categories>
</header>
<bdy>

This article is about checking of models in computer science.&#32;&#32;For the checking of models in statistics, see <link xlink:type="simple" xlink:href="../860/15935860.xml">
statistical model validation</link>.&#32;&#32;
<b>Model checking</b> is the process of checking whether a given <link xlink:type="simple" xlink:href="../928/4055928.xml">
structure</link> is a model of a given logical formula. The concept is general and applies to all kinds of logics and suitable structures. A simple model-checking problem is verifying whether a given formula in the <link xlink:type="simple" xlink:href="../154/18154.xml">
propositional logic</link> is satisfied by a given structure.<p>

An important class of model checking methods have been 
developed to <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>ically <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../054/270054.xml">
verify</link></method>
</know-how>
 <link xlink:type="simple" xlink:href="../102/396102.xml">
formal system</link>s. This is achieved by verifying if the structure, often derived from a <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link> or <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link> design, satisfies a <link xlink:type="simple" xlink:href="../707/2567707.xml">
formal specification</link>, typically a <link xlink:type="simple" xlink:href="../481/321481.xml">
temporal logic</link> formula. Pioneering work in the model
checking of temporal logic formulae was done by <link xlink:type="simple" xlink:href="../926/15590926.xml">
E. M. Clarke</link> and  <link xlink:type="simple" xlink:href="../959/15590959.xml">
E. A. Emerson</link> in 1981 and by J. P. Queille and <link xlink:type="simple" xlink:href="../963/15590963.xml">
J. Sifakis</link> in 1982. Clarke, Emerson, and Sifakis shared the 2007 <symbol wordnetid="106806469" confidence="0.8">
<award wordnetid="106696483" confidence="0.8">
<signal wordnetid="106791372" confidence="0.8">
<link xlink:type="simple" xlink:href="../093/31093.xml">
Turing Award</link></signal>
</award>
</symbol>
 for their work on model checking.</p>
<p>

Model checking is most often applied to hardware designs.  For software, because of undecidability (see <link xlink:type="simple" xlink:href="../136/442136.xml">
Computability theory</link>) the approach cannot be fully algorithmic; typically it may fail to prove or disprove a given property.</p>
<p>

The structure is usually given as a source code description in an industrial <link xlink:type="simple" xlink:href="../554/74554.xml">
hardware description language</link> or a special-purpose language.  Such a program corresponds to a <link xlink:type="simple" xlink:href="../931/10931.xml">
finite state machine</link> (FSM), i.e., a <link xlink:type="simple" xlink:href="../986/19721986.xml">
directed graph</link> consisting of nodes (or <link xlink:type="simple" xlink:href="../899/638899.xml">
vertices</link>) and <link>
edges</link>.
A set of atomic <link xlink:type="simple" xlink:href="../154/18154.xml">
proposition</link>s is associated with each node, typically stating which memory elements are one.
The <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../074/998074.xml">
nodes</link></artifact>
</structure>
 represent states of a system, the edges represent possible transitions which may alter the state, while the atomic propositions represent the basic properties that hold at a point of execution.</p>
<p>

Formally, the problem can be stated as follows: given a desired property, expressed as a temporal logic formula <it>p</it>, and a structure <it>M</it> with initial state <it>s</it>, decide if <math>M,s \models p</math>.  If M is finite, as it is in hardware, model checking reduces to a graph search.</p>

<sec>
<st>
Model checking tools</st>

<p>

Model checking tools face a combinatorial blow up of the state-space, commonly known as the <link xlink:type="simple" xlink:href="../738/7835738.xml">
state explosion problem</link>, that must be addressed to solve most real-world problems.  There are several approaches to combat this problem.  </p>
<p>

<list>
<entry level="1" type="number">

 Symbolic algorithms avoid ever building the graph for the FSM; instead, they represent the graph implicitly using a formula in propositional logic.  The use of <link xlink:type="simple" xlink:href="../855/576855.xml">
binary decision diagram</link>s (BDDs) was made popular by the work of Ken McMillan (1992). </entry>
<entry level="1" type="number">

 Bounded model checking algorithms unroll the FSM for a fixed number of steps <math>k</math> and check whether a property violation can occur in <math>k</math> or fewer steps. This typically involves encoding the restricted model as an instance of <condition wordnetid="113920835" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../715/4715.xml">
SAT</link></difficulty>
</method>
</problem>
</state>
</know-how>
</condition>
. The process can be repeated with larger and larger values of <math>k</math> until all possible violations have been ruled out (cf. <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../326/433326.xml">
Iterative deepening depth-first search</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
).</entry>
<entry level="1" type="number">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../934/3073934.xml">
Partial order reduction</link></checker>
</causal_agent>
</method>
</worker>
</know-how>
</assistant>
</attendant>
</person>
</physical_entity>
 can be used (on explicitly represented graphs) to reduce the number of independent interleavings of concurrent processes that need to be considered. The basic idea is that if it does not matter, for the kind of things one intends to prove, whether A or B is executed first, then it is a waste of time to consider both the AB and the BA interleavings.</entry>
<entry level="1" type="number">

 <link xlink:type="simple" xlink:href="../490/60490.xml">
Abstraction</link> attempts to prove properties on a system by first simplifying it.  The simplified system usually does not satisfy exactly the same properties as the original one so that a process of refinement may be necessary. Generally, one requires the abstraction to be <it>sound</it> (the properties proved on the abstraction are true of the original system); however, most often, the abstraction is not <it>complete</it> (not all true properties of the original system are true of the abstraction). An example of abstraction is, on a program, to ignore the values of non boolean variables and to only consider boolean variables and the control flow of the program; such an abstraction, though it may appear coarse, may be in fact be sufficient to prove e.g. properties of <link xlink:type="simple" xlink:href="../827/36827.xml">
mutual exclusion</link>.</entry>
<entry level="1" type="number">

 Counter-example guided abstraction refinement (CEGAR) begins checking with a coarse (imprecise) abstraction and iteratively refines it. When a violation (counter-example) is found, the tool analyzes it for feasibility (i.e., is the violation genuine or the result of an incomplete abstraction?). If the violation is feasible, it is reported to the user; if it is not, the proof of infeasibility is used to refine the abstraction and checking begins again.</entry>
</list>
</p>
<p>

Model checking tools were initially developed to reason about the logical correctness of <link>
discrete state</link> systems, but have since been extended to deal with real-time and limited forms of <link xlink:type="simple" xlink:href="../719/564719.xml">
hybrid system</link>s.</p>

</sec>
<sec>
<st>
Some model checking tools</st>


<p>

<table summary="Contents" id="toc" align="center" class="toc">
<header>
Contents</header>
<row>
<col>
  <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%220=E2=80=939%22])">
0–9</link>  <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22A%22])">
A</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22B%22])">
B</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22C%22])">
C</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22D%22])">
D</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22E%22])">
E</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22F%22])">
F</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22G%22])">
G</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22H%22])">
H</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22I%22])">
I</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22J%22])">
J</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22K%22])">
K</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22L%22])">
L</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22M%22])">
M</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22N%22])">
N</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22O%22])">
O</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22P%22])">
P</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Q%22])">
Q</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22R%22])">
R</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22S%22])">
S</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22T%22])">
T</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22U%22])">
U</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22V%22])">
V</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22W%22])">
W</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22X%22])">
X</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Y%22])">
Y</link> <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Z%22])">
Z</link> &nbsp; <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22See+also%22])">
See also</link>&nbsp;</col>
</row>
</table>
__NOTOC__</p>
<p>

<table style="width:100%" cellpadding="1" class="wikitable sortable" border="1">
<header width="22%">
Tool</header>
<header width="15%">
Category</header>
<header width="15%">
Publisher(s)</header>
<header width="12%">
Specification Language 
<it>(Logic used to specify the system and properties, etc.)''</it></header>
<header width="6%">
Antecendants 
<it>(What the software is based on, other seminal products, etc.)''</it></header>
<header width="14%">
License 
<it>(Type of license - e.g. GPL, closed source, commercial, etc)''</it></header>
<header width="14%">
Notes 
<it>(Any notes on the software)''</it></header>
<header width="14%">
Link</header>
<row>
<col>
Cadence - Incisive Formal Verifier</col>
<col>
Type</col>
<col>
Cadence</col>




<col>
 <weblink xlink:type="simple" xlink:href="http://www.cadence.com/products/functional_ver/incisive_formal_verifier/index.aspx"></weblink></col>
</row>
<row>
<col>
 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../533/1211533.xml">
SPIN</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
</col>
<col>
Model checker for asynchronous process systems</col>
<col>
Bell Labs</col>
<col>
 <link xlink:type="simple" xlink:href="../307/710307.xml">
LTL</link></col>



<col>
 <weblink xlink:type="simple" xlink:href="http://spinroot.com">
http://spinroot.com</weblink></col>
</row>
<row>
<col>
KRONOS</col>
<col>
Timed model checker</col>
<col>
Verimag</col>
<col>
 <link>
TCTL</link></col>

<col>
 <link xlink:type="simple" xlink:href="../683/18938683.xml">
GPL</link></col>

<col>
 <weblink xlink:type="simple" xlink:href="http://www-verimag.imag.fr/TEMPORISE/kronos/">
http://www-verimag.imag.fr/TEMPORISE/kronos/</weblink></col>
</row>
<row>
<col>
UPPAAL</col>
<col>
Timed model checker</col>
<col>
Uppsala University and Aalborg University</col>
<col>
 Extended timed automata networks, subset of <link>
TCTL</link></col>

<col>
Free for research and education</col>
<col>
There are many extensions, e.g. for cost optimal scheduling and test generation</col>
<col>
 <weblink xlink:type="simple" xlink:href="http://www.uppaal.com/">
http://www.uppaal.com/</weblink></col>
</row>
<row>
<col>
0-In Formal Verification</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://www.mentor.com/products/fv/abv/0-in_fv/index.cfm">
http://www.mentor.com/products/fv/abv/0-in_fv/index.cfm</weblink></col>
</row>
<row>
<col>
Alloy language</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://alloy.mit.edu/">
http://alloy.mit.edu/</weblink></col>
</row>
<row>
<col>
 <link>
DiVinE</link></col>
<col>
Parallel model checker for asynchronous process systems</col>
<col>
Masaryk University, Brno</col>
<col>
 <link xlink:type="simple" xlink:href="../307/710307.xml">
LTL</link></col>

<col>
 <link xlink:type="simple" xlink:href="../683/18938683.xml">
GPL</link></col>

<col>
 <weblink xlink:type="simple" xlink:href="http://anna.fi.muni.cz/divine">
http://anna.fi.muni.cz/divine</weblink></col>
</row>
<row>
<col>
 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../892/16919892.xml">
CHESS</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
</col>
<col>
Preemption-bounded exploration of multithreaded programs</col>
<col>
Microsoft Research</col>



<col>
Binary release is available at http://research.microsoft.com/chess/</col>
<col>
 <weblink xlink:type="simple" xlink:href="http://research.microsoft.com/chess/">
http://research.microsoft.com/chess/</weblink></col>
</row>
<row>
<col>
Synopsys - Magellan</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://www.synopsys.com/products/magellan/magellan.html">
http://www.synopsys.com/products/magellan/magellan.html</weblink></col>
</row>
<row>
<col>
APMC</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://apmc.berbiqui.org/">
http://apmc.berbiqui.org/</weblink></col>
</row>
<row>
<col>
AcPeg - Access Control Systems verification tool through Model Checking</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://www.cs.bham.ac.uk/~mdr/research/projects/05-AccessControl/index.html">
http://www.cs.bham.ac.uk/~mdr/research/projects/05-AccessControl/index.html</weblink></col>
</row>
<row>
<col>
iLock - Formal Safety Verification of Rail Control Systems</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://www.prover.com/products/ilock">
http://www.prover.com/products/ilock</weblink></col>
</row>
<row>
<col>
 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../109/1044109.xml">
BLAST</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
- CEGAR-style model checker for C programs</col>







</row>
<row>
<col>
LoTREC</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://www.irit.fr/ACTIVITES/LILaC/Lotrec/modelchecking/index.htm">
http://www.irit.fr/ACTIVITES/LILaC/Lotrec/modelchecking/index.htm</weblink></col>
</row>
<row>
<col>
Bogor</col>






<col>
 <weblink xlink:type="simple" xlink:href="http://bogor.projects.cis.ksu.edu/">
http://bogor.projects.cis.ksu.edu/</weblink></col>
</row>
<row>
<col>
 <link>
BOOP Toolkit</link></col>







</row>
<row>
<col>
 <link>
Cadena</link></col>






<col>
 <weblink xlink:type="simple" xlink:href="http://cadena.projects.cis.ksu.edu/">
http://cadena.projects.cis.ksu.edu/</weblink></col>
</row>
</table>
</p>



<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.inrialpes.fr/vasy/cadp/">
CADP - Construction and Analysis of Distributed Processes</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~modelcheck/cbmc/">
CBMC</weblink> - a bounded model checker for C/C++ programs</entry>
<entry level="1" type="bullet">

<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../394/1910394.xml">
CHIC</link></implement>
</tool>
</instrumentality>
</artifact>
</entry>
<entry level="1" type="bullet">

<link>
COSPAN</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://anna.fi.muni.cz/divine/">
 DiVinE - Distributed Verification Environment</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.osc-es.de/index.php?lang=2&amp;idcat=18">
<b>EmbeddedValidator</b>, The Matlab/Simulink/Stateflow/Targetlink Formal Verification Environment</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dsi.uniroma1.it/~tronci/cached.murphi.html">
FHP-Murphi</weblink> - Finite Horizon Probabilistic Murphi</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://jabc.cs.uni-dortmund.de/modelchecking/">
GEAR</weblink>, a game based model checking tool capable of <link xlink:type="simple" xlink:href="../894/840894.xml">
CTL</link>, <link xlink:type="simple" xlink:href="../953/6158953.xml">
modal µ-calculus</link> and <weblink xlink:type="simple" xlink:href="http://patterns.projects.cis.ksu.edu/">
specification patterns</weblink>.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://helena.cnam.fr/">
Helena</weblink> — High Level Colored Petri Nets Analyzer</entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../583/2285583.xml">
Java Pathfinder</link></software>
 - open source model checker for Java programs</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.montefiore.ulg.ac.be/~boigelot/research/lash/">
LASH</weblink>, Liège Automata-based Symbolic Handler</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.doc.ic.ac.uk/ltsa/">
LTSA</weblink>, Labelled Transition System Analyser -- Imperial College, London</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../696/7613696.xml">
Markov Reward Model Checker (MRMC)</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-i11.informatik.rwth-aachen.de/mc_square.html">
[mc]square</weblink>, a model checker for microcontroller (ATMEL ATmega and Infineon XC167) assembly code</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.utwente.nl/~ruys/moonwalker/">
MoonWalker</weblink> - model checker for CIL bytecode, i.e. .NET programs</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.fmi.uni-stuttgart.de/szs/tools/moped/">
MOPED</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.berkeley.edu/~daw/mops/">
MOPS</weblink>, Modelchecking Programs for Security properties</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dsi.uniroma1.it/~tronci/cached.murphi.html">
CMurphi</weblink> Caching Murphi</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://homepages.cwi.nl/~mcrl/">
μCRL</weblink>, <link xlink:type="simple" xlink:href="../683/18938683.xml">
GPL</link>, Based on <link xlink:type="simple" xlink:href="../617/3502617.xml">
ACP</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.mcrl2.org/">
mCRL2 Toolset</weblink>, <link xlink:type="simple" xlink:href="../681/14977681.xml">
Boost Software License</link>, Based on <link xlink:type="simple" xlink:href="../617/3502617.xml">
ACP</link></entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../471/8989471.xml">
NuSMV</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
, a new symbolic model checker</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.stlab.dsi.unifi.it/oris/">
ORIS</weblink>, uses a <link xlink:type="simple" xlink:href="../894/840894.xml">
CTL</link>-like temporal logic with real-time bounds, action and state based.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ecs.soton.ac.uk/~mal/systems/prob.html">
ProB</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.bham.ac.uk/~dxp/prism/">
PRrobabilistIc Symbolic Model checker (PRISM)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.lemma-one.com/ProofPower/index/">
ProofPower</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.dcs.gla.ac.uk/prosper/">
PROSPER</weblink> - a formal design tool that incorporates model checking</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.prover.com/products/PPI">
Prover Plug-In commercial proof engines</weblink></entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<attendant wordnetid="109821831" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<checker wordnetid="109913110" confidence="0.8">
<link xlink:type="simple" xlink:href="../097/1044097.xml">
Rabbit</link></checker>
</causal_agent>
</worker>
</assistant>
</attendant>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-ti.informatik.uni-tuebingen.de/~fmg/raven/raven.html">
RAVEN (Real-Time Analysis and Verification Environment)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.haifa.il.ibm.com/projects/verification/RB_Homepage/">
RuleBase</weblink></entry>
<entry level="1" type="bullet">

<link>
SAL</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/slam/">
SLAM</weblink> and <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc/devtools/tools/SDV.mspx">
Static Driver Verifier (SDV)</weblink> - CEGAR-style model checking for systems code</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~modelcheck/smv.html">
Symbolic Model Checker (SMV)</weblink>, the original symbolic model checker</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.osc-es.de/index.php?lang=2&amp;idcat=19">
<b>Statemate ModelChecker</b>, Statemate Models Robustness Checking</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.osc-es.de/index.php?lang=2&amp;idcat=20">
<b>Statemate ModelCertifier</b>, Statemate Models Requirements Certification</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://statestep.com">
Statestep</weblink> Specification and modeling tool; checks that invalid states are not reachable.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://steam.cs.uni-dortmund.de/index.html">
StEAM (State Exploring Assemblylevel Model Checker)</weblink> Verification of concurrent C++ programs</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.veromodo.com/tempo/">
TEMPO</weblink> Modeling and verification environment for realtime and hybrid systems</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/users/lamport/tla/tlc.html">
TLC</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://cs.nyu.edu/acsys/tlv/index.html">
Temporal Logic Verifier (TLV)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/TERMINATOR">
Terminator</weblink> Verification of termination and other <link>
liveness</link> properties for the C programming language </entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.uppaal.com">
Uppaal Model Checker (UPPAAL)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~modelcheck/vcegar">
Model checker for Verilog based on CEGAR (VCEGAR)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://vlsi.colorado.edu/~vis/">
Verification Interacting with Synthesis (VIS)</weblink></entry>
</list>
</p>


</sec>
<sec>
<st>
See also</st>

<ss1>
<st>
 Articles </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.embedded.com/showArticle.jhtml?articleID=17603352">
<it>An Introduction to Model Checking''</it></weblink> at embedded.com</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Related techniques </st>
<p>

<list>
<entry level="1" type="bullet">

<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../490/60490.xml">
Abstract interpretation</link></method>
</know-how>
</entry>
<entry level="1" type="bullet">

<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../811/28811.xml">
Static code analysis</link></method>
</know-how>
</entry>
<entry level="1" type="bullet">

<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../546/2546.xml">
Automated theorem proving</link></method>
</know-how>
</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Research groups </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://uclid.eecs.berkeley.edu">
<it>UCLID group at UC Berkeley''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://sdg.csail.mit.edu/">
<it>Software Design Group at MIT''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.itc.it/irst/Renderer.aspx?targetID=252">
<it>Automated Reasoning Systems (SRA) -  at Bruno Kessler Foundation, Trento Italy''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.bham.ac.uk/research/labs/modelling_and_analysis_of_systems/">
<it>Modelling and Analysis of Complex Systems group at The University of Birmingham, England''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-i2.informatik.rwth-aachen.de">
<it>Software Modeling and Verification (MOVES) group  at RWTH Aachen University, Germany''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://fmt.cs.utwente.nl">
<it>Formal Methods &amp; Tools (FMT) group at The University of Twente, The Netherlands''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-2.cs.cmu.edu/~modelcheck/">
<it>Model Checking at Carnegie Mellon University''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://svvat.ece.utexas.edu/">
<it>Software Verification and Validation at UT Austin''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cis.ksu.edu/santos/">
<it>SAnToS Laboratory at K-State''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://ase.arc.nasa.gov/">
<it>Automated Software Engineering at Nasa Ames Research Center''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://eis.jpl.nasa.gov/lars/">
<it>NASA/JPL Laboratory for Reliable Software''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://vlsi.colorado.edu/">
<it>VLSI/CAD Research group — University of Colorado at Boulder''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.utah.edu/formal_verification/">
<it>Formal Methods Research Group, University of Utah ''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://vv.cs.byu.edu/">
<it>Verification and Validation — Brigham Young University, Provo, Utah''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.fi.muni.cz/paradise/">
<it>ParaDiSe Laboratory — Masaryk University in Brno''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.inrialpes.fr/vasy">
<it>VASY Research team — INRIA Rhône-Alpes, France''</it></weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://smv.unige.ch">
<it>Software Modeling and Verification (SMV) group — University of Geneva (Switzerland)''</it></weblink></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Other</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://anna.fi.muni.cz/yahoda/">
Database of Verification and Model Checking Tools</weblink> (Yahoda)</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../959/15590959.xml">
E. Allen Emerson</link></recipient>
</acquirer>
</causal_agent>
</laureate>
</honoree>
</person>
</physical_entity>
, Edmund M. Clarke: <weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?coll=GUIDE&amp;dl=GUIDE&amp;id=682526">
"Characterizing Correctness Properties of Parallel Programs Using Fixpoints"</weblink>. ICALP 1980: 169-181.</entry>
<entry level="1" type="bullet">

 Edmund M. Clarke, E. Allen Emerson: <weblink xlink:type="simple" xlink:href="http://portal.acm.org/citation.cfm?id=747438&amp;dl=">
"Design and Synthesis of Synchronization Skeletons Using Branching-Time Temporal Logic"</weblink>. Logic of Programs 1981: 52-71.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://doi.acm.org/10.1145/5397.5399">
<it>Automatic verification of finite state concurrent systems using temporal logic''</it></weblink>,  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../926/15590926.xml">
E.M. Clarke</link></recipient>
</scholar>
</acquirer>
</causal_agent>
</alumnus>
</intellectual>
</laureate>
</honoree>
</person>
</physical_entity>
, E.A. Emerson, and A.P. Sistla, <organization wordnetid="108008335" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/30th_century.xml">
ACM</link></organization>
 Trans. on Programming Languages and Systems, 8(2), pp. 244&ndash;263, <link xlink:type="simple" xlink:href="../761/34761.xml">
1986</link>.</entry>
<entry level="1" type="bullet">

 <it>Symbolic Model Checking</it>, Kenneth L. McMillan, Kluwer, ISBN 0-7923-9380-5, <weblink xlink:type="simple" xlink:href="http://www.kenmcmil.com/thesis.html">
also online</weblink>.</entry>
<entry level="1" type="bullet">

 <it>Model Checking</it>, Edmund M. Clarke, Jr., Orna Grumberg and Doron A. Peled, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../601/719601.xml">
MIT Press</link></company>
, <link xlink:type="simple" xlink:href="../553/34553.xml">
1999</link>, ISBN 0-262-03270-8.</entry>
<entry level="1" type="bullet">

 <it>Systems and Software Verification: Model-Checking Techniques and Tools</it>, B. Berard, M. Bidoit, A. Finkel, F. Laroussinie, A. Petit, L. Petrucci, P. Schnoebelen, ISBN 3540415238</entry>
<entry level="1" type="bullet">

 <it>Logic in Computer Science: Modelling and Reasoning About Systems</it>, Michael Huth and Mark Ryan, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../199/73199.xml">
Cambridge University Press</link></company>
, <link xlink:type="simple" xlink:href="../524/35524.xml">
2004</link>.  <weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.2277/052154310X">
DOI</weblink>.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://spinroot.com/spin/Doc/Book_extras/">
<it>The Spin Model Checker: Primer and Reference Manual''</it></weblink>, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../843/2795843.xml">
Gerard J. Holzmann</link></scientist>
</causal_agent>
</person>
</physical_entity>
, Addison-Wesley, ISBN 0-321-22862-6.</entry>
<entry level="1" type="bullet">

 Julian Bradfield and Colin Stirling, Modal logics and mu-calculi, <weblink xlink:type="simple" xlink:href="http://homepages.inf.ed.ac.uk/jcb/Research/bradfield-stirling-HPA-mu-intro.ps.gz">
http://homepages.inf.ed.ac.uk/jcb/Research/bradfield-stirling-HPA-mu-intro.ps.gz</weblink></entry>
<entry level="1" type="bullet">

 Müller-Olm, M., Schmidt, D.A. and Steffen, B. <weblink xlink:type="simple" xlink:href="http://people.cis.ksu.edu/~schmidt/papers/sas99.ps.gz">
<it>Model checking: a tutorial introduction.''</it></weblink> Proc. 6th Static Analysis Symposium, G. File and A. Cortesi, eds., Springer LNCS 1694, 1999, pp. 330-354.</entry>
</list>
</p>
<p>

<it>This article was originally based on material from the <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<wordbook wordnetid="106418693" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<dictionary wordnetid="106418901" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/11324.xml">
Free On-line Dictionary of Computing</link></publication>
</reference_book>
</dictionary>
</book>
</wordbook>
</artifact>
</creation>
</product>
</work>
, which is  under the <link xlink:type="simple" xlink:href="../782/18938782.xml">
GFDL</link>.</it></p>


</sec>
</bdy>
</checker>
</causal_agent>
</method>
</worker>
</know-how>
</assistant>
</attendant>
</person>
</physical_entity>
</article>
