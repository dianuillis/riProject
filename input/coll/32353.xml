<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:37:20[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<machine  confidence="0.9511911446218017" wordnetid="103699975">
<header>
<title>Virtual machine</title>
<id>32353</id>
<revision>
<id>244377043</id>
<timestamp>2008-10-10T14:35:08Z</timestamp>
<contributor>
<username>SF007</username>
<id>6059244</id>
</contributor>
</revision>
<categories>
<category>Virtual machines</category>
<category>Wikipedia articles needing clarification</category>
<category>Operating system technology</category>
<category>Programming language implementation</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, a <b>virtual machine</b> (VM) is a <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link> implementation of a machine (computer) that executes programs like a real machine.
<sec>
<st>
Definitions</st>

<p>

A virtual machine was originally defined by <link xlink:type="simple" xlink:href="../085/957085.xml">
Popek and Goldberg</link> as "an efficient, isolated duplicate of a real machine". Current use includes virtual machines which have no direct correspondence to any real hardware.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

<b>Example</b>:
A program written in <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 receives services from the <link xlink:type="simple" xlink:href="../389/16389.xml">
Java Runtime Environment</link> software by issuing commands from which the expected result is returned by the Java software. By providing these services to the program, the Java software is acting as a "virtual machine", taking the place of the operating system or hardware for which the program would ordinarily have had to have been specifically written.</p>
<p>

Virtual machines are separated into two major categories, based on their use and degree of correspondence to any real machine. A <b>system virtual machine</b> provides a complete <link xlink:type="simple" xlink:href="../196/81196.xml">
system platform</link> which supports the execution of a complete <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> (OS). In contrast, a <b>process virtual machine</b> is designed to run a single <link xlink:type="simple" xlink:href="../783/5783.xml">
program</link>, which means that it supports a single <link xlink:type="simple" xlink:href="../178/45178.xml">
process</link>. An essential characteristic of a virtual machine is that the software running inside is limited to the resources and abstractions provided by the virtual machine -- it cannot break out of its virtual world.</p>

<ss1>
<st>
System virtual machines</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link>&nbsp;and <link xlink:type="simple" xlink:href="../833/1582833.xml">
Comparison of virtual machines</link></it>
</indent>

System virtual machines (sometimes called <b>hardware virtual machines</b>) allow the sharing of the underlying physical machine resources between different virtual machines, each running its own operating system. The software layer providing the virtualization is called a <b>virtual machine monitor</b> or <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>. A hypervisor can run on bare hardware (<b>Type 1</b> or <b>native</b>  VM) or on top of an operating system (<b>Type 2</b> or <b>hosted</b> VM).</p>
<p>

The main advantages of system VMs are:
<list>
<entry level="1" type="bullet">

 multiple OS environments can co-exist on the same computer, in strong isolation from each other</entry>
<entry level="1" type="bullet">

 the virtual machine can provide an <link xlink:type="simple" xlink:href="../772/47772.xml">
instruction set</link> architecture (ISA) that is somewhat different from that of the real machine</entry>
</list>
</p>
<p>

Multiple VMs each running their own operating system (called <b>guest operating system</b>) are  frequently used in <b>server consolidation</b>, where different services that used to run on individual machines in order to avoid interference are instead run in separate VMs on the same physical machine. This use is frequently called <b>quality-of-service isolation</b> (QoS isolation).</p>
<p>

The desire to run multiple operating systems was the original motivation for virtual machines, as it allowed time-sharing a single computer between several single-tasking OSes.</p>
<p>

The guest OSes do not have to be all the same, making it possible to run different OSes on the same computer (e.g., <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, or older versions of an OS in order to support software that has not yet been ported to the latest version). The use of virtual machines to support different guest OSes is becoming popular in <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded systems</link>; a typical use is to support a <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time operating system</link> at the same time as a high-level OS such as Linux or Windows.</p>
<p>

Another use is to <link xlink:type="simple" xlink:href="../848/6063848.xml">
sandbox</link> an OS that is not trusted, possibly because it is a system under development. Virtual machines have other advantages for OS development, including better debugging access and faster reboots.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

Alternative techniques such as <link xlink:type="simple" xlink:href="../334/5097334.xml">
Solaris Zones</link> provides a level of isolation within a <it>single</it> operating system. This does not have isolation as complete as a VM, as kernel exploits in a single zone affect all zones, whereas kernel exploits in a VM do not affect other VMs on the host. Zones are not virtual machines, but an example of "operating-system virtualization". This includes other "virtual environments" (also called "virtual servers") such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2143664.xml">
Virtuozzo</link></software>
, <link xlink:type="simple" xlink:href="../109/2469109.xml">
FreeBSD Jail</link>s, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../526/1191526.xml">
Linux-VServer</link></software>
, <link xlink:type="simple" xlink:href="../308/585308.xml">
chroot jail</link>, and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../089/5211089.xml">
OpenVZ</link></software>
. These provide some form of encapsulation of processes within an operating system. These technologies have the advantage of being more resource-efficient than full virtualization; the disadvantage is that they can only run a single operating system and a single version/patch level of that operating system - so, for example, they cannot be used to run two applications, one of which only supports a newer OS version and the other only supporting an older OS version on the same hardware.</p>

</ss1>
<ss1>
<st>
Process virtual machine</st>


<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link>&nbsp;and <link xlink:type="simple" xlink:href="../069/4256069.xml">
Comparison of application virtual machines</link></it>
</indent>

A process VM, sometimes called an <b>application virtual machine</b>, runs as a normal application inside an OS and supports a single process. It is created when that process is started and destroyed when it exits. Its purpose is to provide a <link xlink:type="simple" xlink:href="../196/81196.xml">
platform</link>-independent programming environment that abstracts away details of the underlying hardware or operating system, and allows a program to execute in the same way on any platform.</p>
<p>

A process VM provides a high-level abstraction â€” that of a <link xlink:type="simple" xlink:href="../842/189842.xml">
high-level programming language</link> (compared to the low-level ISA abstraction of the system VM). Process VMs are implemented using an <link xlink:type="simple" xlink:href="../868/59868.xml">
interpreter</link>; performance comparable to compiled programming languages is achieved by the use of <link xlink:type="simple" xlink:href="../632/220632.xml">
just-in-time compilation</link>.</p>
<p>

This type of VM has become popular with the <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java programming language</link></request>
</message>
, which is implemented using the <link xlink:type="simple" xlink:href="../389/16389.xml">
Java virtual machine</link>. Another example is the <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../402/60402.xml">
.NET Framework</link></implement>
</horizontal_surface>
</tool>
</instrumentality>
</surface>
</artifact>
</platform>
, which runs on a VM called the <link xlink:type="simple" xlink:href="../003/46003.xml">
Common Language Runtime</link>. </p>
<p>

A special case of process VMs are systems that abstract over the communication mechanisms of a (potentially heterogeneous) <link xlink:type="simple" xlink:href="../896/18949896.xml">
computer cluster</link>. Such a VM does not consist of a single process, but one process per physical machine in the cluster. They are designed to ease the task of programming parallel applications by letting the programmer focus on algorithms rather than the communication mechanisms provided by the interconnect and the OS. They do not hide the fact that communication takes place, and as such do not attempt to present the cluster as a single parallel machine.</p>
<p>

Unlike other process VMs, these systems do not provide a specific programming language, but are embedded in an existing language; typically such a system provides bindings for several languages (e.g., <link xlink:type="simple" xlink:href="../021/6021.xml">
C</link> and <link xlink:type="simple" xlink:href="../168/11168.xml">
FORTRAN</link>). Examples are PVM (<link xlink:type="simple" xlink:href="../470/221470.xml">
Parallel Virtual Machine</link>) and MPI (<link xlink:type="simple" xlink:href="../466/221466.xml">
Message Passing Interface</link>). They are not strictly virtual machines, as the applications running on top still have access to all OS services, and are therefore not confined to the system model provided by the "VM".</p>

</ss1>
</sec>
<sec>
<st>
Techniques</st>

<ss1>
<st>
Emulation of the underlying raw hardware (native execution) </st>
<p>

<image location="right" width="260px" src="VMware_Workstation.png" type="thumb">
</image>

This approach is described as <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link> of the hardware, and can be implemented using a Type 1 or Type 2 <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>. (A Type 1 hypervisor runs directly on the hardware; a Type 2 hypervisor runs on another operating system, such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
). Each virtual machine can run any operating system supported by the underlying hardware. Users can thus run two or more different "guest" operating systems simultaneously, in separate "private" virtual computers.</p>
<p>

The pioneer system using this concept was IBM's <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>, the first (1967) version of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 (1967-1972) and the precursor to IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM family</link></O>
 (1972-present). With the VM architecture, most users run a relatively simple <link xlink:type="simple" xlink:href="../251/1623251.xml">
interactive computing</link> single-user operating system, <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/154805.xml">
CMS</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
, as a "guest" on top of the VM control program (<link xlink:type="simple" xlink:href="../321/8375321.xml">
VM-CP</link>). This approach kept the CMS design simple, as if it were running alone; the control program quietly provides multitasking and resource management services "behind the scenes". In addition to CMS, VM users can run any of the other IBM operating systems, such as <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link> or <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>. <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link> is the current version of VM, and is used to support hundreds or thousands of virtual machines on a given mainframe. Some installations use <link xlink:type="simple" xlink:href="../604/1266604.xml">
Linux for zSeries</link> to run <link xlink:type="simple" xlink:href="../455/33455.xml">
Web server</link>s, where <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 runs as the operating system within many virtual machines.</p>
<p>

Full virtualization is particularly helpful in operating system development, when experimental new code can be run at the same time as older, more stable, versions, each in a separate virtual machine. The process can even be <link xlink:type="simple" xlink:href="../407/25407.xml#xpointer(//*[./st=%22Recursion+in+computing%22])">
recursive</link>: <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 debugged new versions of its virtual machine operating system, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
, in a virtual machine running under an older version of VM, and even used this technique to simulate new hardware.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

The standard <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> <link xlink:type="simple" xlink:href="../597/7597.xml">
processor architecture</link> as used in modern PCs does not actually meet the <link xlink:type="simple" xlink:href="../085/957085.xml">
Popek and Goldberg virtualization requirements</link>. Notably, there is no execution mode where all sensitive machine instructions always trap, which would allow per-instruction virtualization. </p>
<p>

Despite these limitations, several software packages have managed to provide <link xlink:type="simple" xlink:href="../179/996179.xml">
virtualization on the x86 architecture</link>, even though <link xlink:type="simple" xlink:href="../417/175417.xml">
dynamic recompilation</link> of privileged code, as first implemented by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
, incurs some performance overhead as compared to a VM running on a natively virtualizable architecture such as the IBM System/370 or <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../302/20302.xml">
Motorola MC68020</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
. By now, several other software packages such as <link xlink:type="simple" xlink:href="../850/2786850.xml">
Virtual PC</link>, <link xlink:type="simple" xlink:href="../260/8934260.xml">
VirtualBox</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
 and <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8890242.xml">
Virtual Iron</link></institution>
</company>
 manage to implement virtualization on x86 hardware.</p>
<p>

<link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> and <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
AMD</link> have introduced features to their x86 processors to enable virtualization in hardware.</p>

</ss1>
<ss1>
<st>
Emulation of a non-native system</st>
<p>

Virtual machines can also perform the role of an <link xlink:type="simple" xlink:href="../937/18943937.xml">
emulator</link>, allowing software applications and <link xlink:type="simple" xlink:href="../194/22194.xml">
operating systems</link> written for another <link xlink:type="simple" xlink:href="../218/5218.xml">
computer processor</link> architecture to be run.</p>
<p>

Some virtual machines emulate hardware that only exists as a detailed specification. For example:</p>
<p>

<list>
<entry level="1" type="bullet">

 One of the first was the <link xlink:type="simple" xlink:href="../722/24722.xml">
p-code machine</link> specification, which allowed programmers to write <link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link> <link xlink:type="simple" xlink:href="../783/5783.xml">
programs</link> that would run on any computer running virtual machine software that correctly implemented the specification.</entry>
<entry level="1" type="bullet">

 The specification of the <link xlink:type="simple" xlink:href="../389/16389.xml">
Java virtual machine</link>.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../237/7237.xml">
Common Language Infrastructure</link> virtual machine at the heart of the <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../402/60402.xml">
Microsoft .NET</link></implement>
</horizontal_surface>
</tool>
</instrumentality>
</surface>
</artifact>
</platform>
 initiative.</entry>
<entry level="1" type="bullet">

 <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/209452.xml">
Open Firmware</link></system_of_measurement>
</standard>
 allows plug-in hardware to include boot-time diagnostics, configuration code, and device drivers that will run on any kind of CPU.</entry>
</list>
</p>
<p>

This technique allows diverse computers to run any software written to that specification; only the virtual machine software itself must be written separately for each type of computer on which it runs.</p>

</ss1>
<ss1>
<st>
Operating system-level virtualization</st>

<p>

<it><link xlink:type="simple" xlink:href="../340/2770340.xml">
Operating System-level Virtualization</link></it> is a server <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> technology which virtualizes <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../116/42116.xml">
server</link></generic>
s on an <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> (kernel) layer. It can be thought of as partitioning: a single physical server is sliced into multiple small partitions (otherwise called virtual environments (VE), <link xlink:type="simple" xlink:href="../304/555304.xml">
virtual private server</link>s (VPS), guests, zones, etc.); each such partition looks and feels like a real server, from the point of view of its users.</p>
<p>

For example, Solaris Zones supports multiple guest OSes running under the same OS (such as Solaris 10). All guest OSes have to use the same kernel level and cannot run as different OS versions. Solaris Zones also requires that the host OS be a version of Solaris;  other OSes from other manufacturers are not supported.</p>
<p>

Another example is AIX, which provides the same technique under the name of <it>Micro Partitioning</it>.</p>
<p>

The operating system level architecture has low overhead that helps to maximize efficient use of server resources. The virtualization introduces only a negligible overhead and allows running hundreds of <link xlink:type="simple" xlink:href="../304/555304.xml">
virtual private server</link>s on a single physical server. In contrast, approaches such as <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualisation</link> (like <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
) and <link xlink:type="simple" xlink:href="../546/1441546.xml">
paravirtualization</link> (like <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
 or <link xlink:type="simple" xlink:href="../697/373697.xml">
UML</link>) cannot achieve such level of density, due to overhead of running multiple kernels. From the other side, operating system-level virtualization does not allow running different operating systems (i.e. different kernels), although different libraries, distributions etc. are possible.</p>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../340/2770340.xml">
operating system-level virtualization</link></it>
</indent>

</p>
</ss1>
</sec>
<sec>
<st>
List of hardware with virtual machine support</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../179/996179.xml">
AMD-V</link> (formerly code-named <link>
Pacifica</link>)</entry>
<entry level="1" type="bullet">

 <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../558/60558.xml">
ARM TrustZone</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
</entry>
<entry level="1" type="bullet">

 Boston Circuits gCore (grid-on-chip) with 16 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../241/1105241.xml">
ARC</link></company>
 750D cores and Time-machine hardware virtualization module.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../512/486512.xml">
Freescale</link> <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link> MPC8572 and MPC8641D</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>, <link xlink:type="simple" xlink:href="../266/1856266.xml">
System/390</link>, and <link xlink:type="simple" xlink:href="../088/3968088.xml">
zSeries</link> mainframes</entry>
<entry level="1" type="bullet">

 <link>
Intel VT</link> (formerly code-named <link>
Vanderpool</link>)</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
 sun4v (UltraSPARC <link xlink:type="simple" xlink:href="../615/2580615.xml">
T1</link> and <link xlink:type="simple" xlink:href="../717/4776717.xml">
T2</link>) -- utilized by <link xlink:type="simple" xlink:href="../832/10536832.xml">
Logical Domains</link></entry>
</list>
</p>
<p>

<indent level="1">

<it>See also: <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../179/996179.xml#xpointer(//*[./st=%22Hardware+support+in+x86+processors%22])">
X86 virtualization#Hardware support in x86 processors</link></machine>
</device>
</instrumentality>
</artifact>
</it>
</indent>
* <link xlink:type="simple" xlink:href="../973/13973.xml">
HP</link> vPAR and cell based nPAR
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../730/12730.xml">
GE</link> Project MAC then</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 Multics systems</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 200/2000 systems Liberator replacing IBM 14xx systems, Level 62/64/66 GCOS</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 System/360 Model 145 Hardware emulator for Honeywell 200/2000 systems</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../970/25970.xml">
RCA</link></company>
 Spectra/70 Series emulated IBM System/360</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../480/1171480.xml">
NAS</link> cpu's emulated IBM and Amdahl machines</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 Level 6 minicomputers emulated predecessor 316/516/716 minis</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../164/34164.xml">
Xerox</link> Sigma 6 cpu's were modified to emulate GE/Honeywell 600/6000 systems</entry>
</list>
</p>

</sec>
<sec>
<st>
List of virtual machine software</st>

<p>

<table style="background:transparent; width:100%;" cellpadding="0" class=" multicol" cellspacing="0">
<row>
<col align="left" width="50%" valign="top">
<list>
<entry level="1" type="definition">

Process (Application) virtual machine software</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../003/46003.xml">
Common Language Runtime</link> - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../196/2356196.xml">
C#</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../996/208996.xml">
Visual Basic .NET</link></programming_language>
, <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../765/419765.xml">
J#</link></implement>
</tool>
</instrumentality>
</artifact>
, <link xlink:type="simple" xlink:href="../859/1833859.xml">
Managed C++</link></entry>
<entry level="1" type="bullet">

 <environment wordnetid="113934596" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<situation wordnetid="113927383" confidence="0.8">
<link xlink:type="simple" xlink:href="../934/6443934.xml">
EiffelStudio</link></situation>
</state>
</environment>
 for the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../838/9838.xml">
Eiffel programming language</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <link>
Ejscript</link> - Javascript language and VM</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../646/9646.xml">
Erlang programming language</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../767/47767.xml">
Forth virtual machine</link> - <link xlink:type="simple" xlink:href="../012/11012.xml">
Forth</link></entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../523/471523.xml">
Glulx</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 - <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../523/471523.xml">
Glulx</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
, <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../505/34505.xml">
Z-code</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
</entry>
<entry level="1" type="bullet">

 Hec - <link xlink:type="simple" xlink:href="../997/89997.xml">
Hasm Assembler</link></entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../928/507928.xml">
Inferno</link></O>
 - <link xlink:type="simple" xlink:href="../298/236298.xml">
Limbo</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../389/16389.xml">
Java virtual machine</link> - <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
, <link xlink:type="simple" xlink:href="../856/294856.xml">
Nice</link>, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../858/25858.xml">
NetREXX</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <link>
Low Level Virtual Machine (LLVM)</link> - currently <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
, Stacker</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../150/46150.xml">
Lua</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../552/1713552.xml">
Macromedia Flash Player</link> - <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../915/676915.xml">
SWF</link></format>
</entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../799/20799.xml">
MMIX</link></machine>
</device>
</instrumentality>
</artifact>
 - <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../799/20799.xml">
MMIX</link></machine>
</device>
</instrumentality>
</artifact>
AL</entry>
<entry level="1" type="bullet">

 Neko virtual machine - currently Neko and <link xlink:type="simple" xlink:href="../935/5263935.xml">
haXe</link></entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../754/22754.xml">
O-code machine</link></machine>
</device>
</instrumentality>
</artifact>
</system>
 - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../052/4052.xml">
BCPL</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../722/24722.xml">
p-code machine</link> - <link xlink:type="simple" xlink:href="../773/23773.xml">
Pascal</link></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../511/60511.xml">
Parrot</link></machine>
</writer>
</causal_agent>
</compiler>
</device>
</instrumentality>
</artifact>
</person>
</communicator>
</physical_entity>
 - <link xlink:type="simple" xlink:href="../638/1146638.xml">
Perl 6</link></entry>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl virtual machine</link></programming_language>
 - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../484/638484.xml">
Portable.NET</link></software>
 - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../196/2356196.xml">
C#</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../996/208996.xml">
Visual Basic .NET</link></programming_language>
, <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../765/419765.xml">
J#</link></implement>
</tool>
</instrumentality>
</artifact>
, <link xlink:type="simple" xlink:href="../859/1833859.xml">
Managed C++</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../238/5227238.xml">
YARV</link></software>
 - <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../592/17227592.xml">
Ruby MRI</link></software>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../099/8339099.xml">
Rubinius</link></software>
 - <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link></causal_agent>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../074/208074.xml">
ScummVM</link></software>
 - <link xlink:type="simple" xlink:href="../729/36729.xml">
Scumm</link></entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../970/28970.xml">
SECD machine</link></machine>
</device>
</instrumentality>
</artifact>
 - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../385/233385.xml">
ISWIM</link></programming_language>
, <link xlink:type="simple" xlink:href="../332/670332.xml">
Lispkit Lisp</link></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../163/27163.xml">
Sed</link></writer>
</language>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
 the stream-editor can also be seen as a VM with 2 storage spaces.</entry>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/28319.xml">
Smalltalk virtual machine</link></programming_language>
 - <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/28319.xml">
Smalltalk</link></programming_language>
</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../884/244884.xml">
SQLite virtual machine</link></room>
</library>
</area>
</instrumentality>
</artifact>
</structure>
</system>
 - <system wordnetid="104377057" confidence="0.8">
<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../884/244884.xml">
SQLite opcodes</link></room>
</library>
</area>
</instrumentality>
</artifact>
</structure>
</system>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../426/37426.xml">
Squeak virtual machine</link> - <link xlink:type="simple" xlink:href="../426/37426.xml">
Squeak</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../544/1653544.xml">
SWEET16</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../219/7822219.xml">
Tamarin (JavaScript engine)</link></software>
 - ActionScript VM in Flash 9 </entry>
<entry level="1" type="bullet">

 <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../187/31187.xml">
TrueType virtual machine</link></format>
 - <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../187/31187.xml">
TrueType</link></format>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../412/428412.xml">
Valgrind</link> - checking of memory accesses and leaks in <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link>/<link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link> code under <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../250/6866250.xml">
Virtual Processor</link> (VP) from <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../273/6657273.xml">
Tao Group</link></company>
 (<autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
UK</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
).</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../863/3500863.xml">
VX32 virtual machine</link> - application-level virtualization for native code</entry>
<entry level="1" type="bullet">

 Waba - Virtual machine for small devices, similar to Java</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../318/171318.xml">
Warren Abstract Machine</link> - <link xlink:type="simple" xlink:href="../485/23485.xml">
Prolog</link>, <link xlink:type="simple" xlink:href="../343/450343.xml">
CSC</link> <link xlink:type="simple" xlink:href="../857/942857.xml">
GraphTalk</link></entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../505/34505.xml">
Z-machine</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 - <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../505/34505.xml">
Z-Code</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../691/206691.xml">
Zend Engine</link> - <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/24131.xml">
PHP</link></writer>
</language>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
</entry>
</list>
</col>
<col align="left" width="50%" valign="top">
<list>
<entry level="1" type="definition">

System (Hardware) virtual machine software&#91;&#93;</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../634/4671634.xml">
ATL</link> (A <link xlink:type="simple" xlink:href="../563/4773563.xml">
MTL</link> Virtual Machine)</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../072/362072.xml">
Bochs</link></causal_agent>
</copycat>
</person>
</physical_entity>
, portable open source x86 and AMD64 PCs emulator</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../286/594286.xml">
CoLinux</link> Open Source Linux inside Windows</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../699/754699.xml">
Denali</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
, uses paravirtualization of x86 for running para-virtualized PC operating systems.</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../877/590877.xml">
FAUmachine</link></machine>
</causal_agent>
</device>
</instrumentality>
</artifact>
</copycat>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../374/55374.xml">
Hercules emulator</link>, free System/370, ESA/390, z/Mainframe</entry>
<entry level="1" type="bullet">

 <link>
 Integrity Workstation</link> Green Hills Software<weblink xlink:type="simple" xlink:href="http://www.ghs.com/products/rtos/integrity_pc.html">
http://www.ghs.com/products/rtos/integrity_pc.html</weblink></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../133/8412133.xml">
KVM</link></software>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://lilyvm.sourceforge.net">
LilyVM is a lightweight virtual machine</weblink><weblink xlink:type="simple" xlink:href="http://www.infosecwriters.com/hhworld/hh8/vmsim.htm">
An introduction</weblink></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../832/10536832.xml">
Logical Domains</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../015/312015.xml">
Microsoft Virtual PC</link></software>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../391/2785391.xml">
Microsoft Virtual Server</link></software>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://okl4.org">
OKL4</weblink> from <weblink xlink:type="simple" xlink:href="http://www.ok-labs.com">
Open Kernel Labs</weblink></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../678/18613678.xml">
Oracle VM</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../738/19142738.xml">
OVPsim</link> <weblink xlink:type="simple" xlink:href="http://www.ovpworld2.org">
http://www.ovpworld2.org</weblink> is a freely available virtual platform simulator designed to simulate complex multiprocessor systems at very high speeds</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/2082892.xml">
Parallels Workstation</link></software>
, provides virtualization of x86 for running unmodified PC operating systems</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../788/8556788.xml">
Parallels Desktop for Mac</link></software>
, provides virtualization of x86 for running virtual machines on Mac OS X or higher</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../669/1465669.xml">
QEMU</link></causal_agent>
</copycat>
</person>
</physical_entity>
, is a simulator based on a virtual machine.</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../799/3818799.xml">
SheepShaver</link></causal_agent>
</copycat>
</person>
</physical_entity>
.</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../569/488569.xml">
Simics</link></institution>
</company>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../696/14629696.xml">
Sun xVM</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../034/2429034.xml">
SVISTA</link></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.trango-vp.com">
Trango Virtual Processors</weblink></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../957/2428957.xml">
twoOStwo</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../697/373697.xml">
User-mode Linux</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../260/8934260.xml">
VirtualBox</link></entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8890242.xml">
Virtual Iron</link></institution>
</company>
 (Virtual Iron 3.1)</entry>
<entry level="1" type="bullet">

 <link>
Virtual Operating System</link> from <link>
Star Virtual Machines</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link> from <link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
 (ESX Server, Fusion, Virtual Server, Workstation, Player and ACE)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.scalemp.com/products">
vSMP Foundation</weblink> (From <weblink xlink:type="simple" xlink:href="http://www.scalemp.com">
ScaleMP</weblink>)</entry>
<entry level="1" type="bullet">

 <link>
vThere</link> (From Sentillion, Inc. <weblink xlink:type="simple" xlink:href="http://www.sentillion.com/solutions/remote-access.html">
http://www.sentillion.com/solutions/remote-access.html</weblink>)</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
</entry>
<entry level="1" type="bullet">

 IBM POWER SYSTEMS</entry>
</list>
<p>

<list>
<entry level="1" type="definition">

 OS-level virtualization software</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../089/5211089.xml">
OpenVZ</link></software>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2143664.xml">
 Parallels Virtuozzo Containers</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../558/3753558.xml">
FreeVPS</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../526/1191526.xml">
Linux-VServer</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../109/2469109.xml">
FreeBSD Jail</link>s</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../334/5097334.xml">
Solaris Containers</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
AIX</link>Workload Partitions</entry>
</list>
</p>
</col>
</row>
</table>
</p>

<ss1>
<st>
Extended descriptions of selected virtualization software</st>

<p>

The following software products are able to virtualize  the hardware so that several operating systems can share it.</p>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../015/604015.xml">
Adeos</link> is a <link xlink:type="simple" xlink:href="../511/425511.xml">
Hardware Abstraction Layer</link> that can be loaded as a <link xlink:type="simple" xlink:href="../658/371658.xml">
Kernel Module</link> in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
.  It allows the loading of a real-time kernel as a module, at the same time as Linux but with higher priority.</entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../699/754699.xml">
Denali</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 uses <link xlink:type="simple" xlink:href="../546/1441546.xml">
paravirtualisation</link> to provide high-performance virtual machines on x86 computers.  Denali's virtual machines support specialised minimal OSs for Internet services.  The system can scale to thousands of virtual machines. Denali does not preserve the application binary interface (ABI), and so applications must be recompiled to run within a library operating system; in this sense it is similar to the <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
Exokernel</link></kernel>
</natural_object>
</plant_part>
.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://ok-labs.com">
OKL4</weblink> uses the open-source <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel</link> as a hypervisor to provide a high-performance virtualization solution for embedded systems.</entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../089/5211089.xml">
OpenVZ</link></software>
 - Operating System-level server virtualization solution, built on Linux.</entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../877/3483877.xml">
Parallels</link></company>
 provides virtualization of x86 for running unmodified PC operating systems.  It also uses a lightweight hypervisor technology in order to improve security and to increase the efficiency. Parallels has become popular for its ability to run Windows as a guest under <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> on the <link xlink:type="simple" xlink:href="../317/3698317.xml">
Apple-Intel architecture</link>.</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../669/1465669.xml">
QEMU</link></causal_agent>
</copycat>
</person>
</physical_entity>
 is a simulator based on a virtual machine, which gives it the ability to emulate a variety of guest CPU architectures on many different host platforms.</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8890242.xml">
Virtual Iron</link></institution>
</company>
 provides virtual machines for x86 that run unmodified operating systems, such as Windows, Red Hat and SUSE.  Virtual Iron open source virtualization technology implements <link xlink:type="simple" xlink:href="../927/4697927.xml">
native virtualization</link>, which delivers near-native performance for x86 operating systems.</entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2143664.xml">
Virtuozzo</link></software>
 replaces the hardware abstraction layer with a modified version enabling it to run with better performance of the OS, but forces all the VMs on a hardware box to all run the same OS, with some flexibility to support various Linux distributions on the same server. Currently they have a version for Windows 2003 and for Linux.  <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../089/5211089.xml">
OpenVZ</link></software>
 is a related open-source project providing similar functionality for Linux.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.scalemp.com/products">
vSMP Foundation</weblink> from <weblink xlink:type="simple" xlink:href="http://www.scalemp.com">
ScaleMP</weblink> aggregation platform enables the creation of high-end x86-based symmetric multiprocessor (SMP) systems, by running single VM acrooss multiple industry-standard x86 systems. </entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
 provides virtual machines for x86 that can run unmodified PC operating systems.  The technology involved in doing this is complex and also incurs (sometimes significant) performance overheads with hosted VMware products (VM Server and Workstation).  ESX server provides near-native performance and a fully virtualized option (along with para-virtualization of some hardware components).  Xen trades running of existing operating systems for running modified (paravirtualized) operating systems with improved performance. Virtual Iron provides full OS compatibility for existing or new OSes with near-native performance without the performance trade-offs between paravirualization and binary translation. </entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
 Virtualization system whose motivation differs from that of Denali in that it is intended to run a moderate number of full-featured operating systems, rather than a large number of specialised, lightweight ones.</entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../133/8412133.xml">
KVM</link></software>
 is a <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../510/18510.xml">
Linux kernel</link></software>
 module that enables a modified QEMU program to use hardware virtualization.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 Books </st>
<p>

<list>
<entry level="1" type="bullet">

 Jim, Jr. Smith, Ravi Nair, James E. Smith, Heath Potter, Virtual Machines: Versatile Platforms For Systems And Processes, Publisher Morgan Kaufmann Publishers, May 2005, ISBN 1-55860-910-5, 656 pages</entry>
<entry level="1" type="bullet">

 DostÃ¡l, J. <weblink xlink:type="simple" xlink:href="http://mict.upol.cz/vyuziti_virtualniho_pocitace_ve_vzdelavani.pdf">
Virtual Machines in education (VyuzitÃ­ virtuÃ¡lnÃ­ho pocÃ­tace ve vzdelÃ¡vÃ¡nÃ­).</weblink> Olomouc, EU: Votobia, 2008. 66 s. ISBN 978-80-7220-309-3.</entry>
<entry level="1" type="bullet">

 Craig, Iain D. Virtual Machines. Springer, 2006, ISBN 1-85233-969-1</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal">Smith, Daniel E.; Nair, Ravi&#32;(2005).&#32;"The Architecture of Virtual Machines". <it>Computer</it>&#32;<b>38</b>&#32;(5): 32â€“38.&#32;IEEE Computer Society. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1109%2FMC.2005.173">
10.1109/MC.2005.173</weblink>.</cite>&nbsp;</entry>
<entry id="2">
http://www.vmwarez.com/2006/05/super-fast-server-reboots-another.html</entry>
<entry id="3">
See <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link> for IBM's use of virtual machines for operating system development and simulation of new hardware</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../833/1582833.xml">
Comparison of virtual machines</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../069/4256069.xml">
Comparison of Application Virtual Machines</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../098/4540098.xml">
Virtual appliance</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../213/5213.xml">
Computing</link></entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../789/515789.xml">
ICL</link></institution>
</company>
's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../743/75743.xml">
VME</link></O>
 operating system</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../002/1267002.xml">
Gerrit Blaauw</link></scholar>
</employee>
</scientist>
</causal_agent>
</alumnus>
</worker>
</intellectual>
</person>
</physical_entity>
 (A significant designer of the IBM/360, an early virtual computing architecture)</entry>
<entry level="1" type="bullet">

<link>
LLVM</link> (The <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../695/384695.xml">
University of Illinois</link></university>
's Low Level Virtual Machine, a <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link> toolset)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../767/47767.xml">
Threaded code</link> (A common implementation technique for application virtual machines)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../148/4151148.xml">
Virtual keyboard</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../396/3922396.xml">
Leostream</link> (An easy to use P2V (Physical to Virtual) conversion utility)</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=168">
The Reincarnation of Virtual Machines, Article on ACM Queue by Mendel Rosenblum, Co-Founder, VMware</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.lri.fr/~quetier/papiers/EXPGRID.pdf">
Performances comparison between Xen, UML, Vserver and VMware</weblink></entry>
</list>
</p>


</sec>
</bdy>
</machine>
</article>
