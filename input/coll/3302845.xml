<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:17:38[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Multiprocessor scheduling</title>
<id>3302845</id>
<revision>
<id>238018099</id>
<timestamp>2008-09-12T21:32:03Z</timestamp>
<contributor>
<username>Gattom</username>
<id>1466054</id>
</contributor>
</revision>
<categories>
<category>Scheduling (computing)</category>
<category>Mathematical optimization</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, <b>multiprocessor scheduling</b> is an <link xlink:type="simple" xlink:href="../466/39466.xml">
NP-Complete</link> optimization problem.  The problem statement is: "Given a set <it>J</it> of jobs where job <it>ji</it> has length <it>li</it> and a number of processors <it>mi</it>, what is the minimum possible time required to schedule all jobs in <it>J</it> on <it>m</it> processors such that none overlap?"  The applications of this problem are numerous, but are, as suggested by the name of the problem, most strongly associated with the <link xlink:type="simple" xlink:href="../851/4941851.xml">
scheduling</link> of computational tasks in a <link xlink:type="simple" xlink:href="../020/64020.xml">
multiprocessor</link> environment. 
<sec>
<st>
Algorithms</st>
<p>

A simple often used algorithm is the LPT-Algorithm (Longest Processing Time) which sorts the jobs by its processing time and then assigns them to the machine with the first end time. This algorithm achieves a sharp bound of 4/3 - 1/(3m) OPT.</p>

</sec>
<sec>
<st>
Similar Problems</st>
<p>

Since multiprocessor scheduling is <link xlink:type="simple" xlink:href="../466/39466.xml">
NP-Complete</link>, it can be restated as any other NP-Complete problem.  One of the simplest restatements of the problem is as a linear <link xlink:type="simple" xlink:href="../015/287015.xml">
bin packing problem</link>, where each processor is a "bin", and each job is represented by an object to pack, whose length is proportional to the job's time.  Thus, the <link xlink:type="simple" xlink:href="../105/563105.xml">
approximation algorithm</link>s used with bin packing can easily be adapted to multiprocessor scheduling.</p>

</sec>
<sec>
<st>
Sources</st>
<p>

<list>
<entry level="1" type="bullet">

A compendium of NP optimization problems. Editors: Pierluigi Crescenzi, and Viggo Kann <weblink xlink:type="simple" xlink:href="http://www.ensta.fr/~diam/ro/online/viggo_wwwcompendium/node180.html">
http://www.ensta.fr/~diam/ro/online/viggo_wwwcompendium/node180.html</weblink></entry>
</list>
</p>

</sec>
</bdy>
</article>
