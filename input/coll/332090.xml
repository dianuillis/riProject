<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:48:58[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Recursively enumerable set</title>
<id>332090</id>
<revision>
<id>230737404</id>
<timestamp>2008-08-09T02:38:36Z</timestamp>
<contributor>
<username>Trovatore</username>
<id>310173</id>
</contributor>
</revision>
<categories>
<category>Theory of computation</category>
<category>Recursion theory</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../084/3244084.xml">
computability theory</link>, traditionally called <link xlink:type="simple" xlink:href="../414/155414.xml">
recursion theory</link>, a set <it>S</it> of <link xlink:type="simple" xlink:href="../474/21474.xml">
natural numbers</link> is called <b>recursively enumerable</b>, <b>computably enumerable</b>, <b>semidecidable</b>,  <b>provable</b> or <b>Turing-recognizable</b> if:<p>

<list>
<entry level="1" type="bullet">

There is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> that, when given an input number, eventually halts if and only if the input is an element of <it>S</it>.</entry>
</list>
</p>
<p>

Or, equivalently,</p>
<p>

<list>
<entry level="1" type="bullet">

There is an algorithm that <link xlink:type="simple" xlink:href="../115/212115.xml">
enumerates</link> the members of <it>S</it>.  That means that its output is simply a list of the members of <it>S</it>:  <it>s</it>1, <it>s</it>2, <it>s</it>3, ... .  If necessary, this algorithm may run forever.  </entry>
</list>
</p>
<p>

The first condition suggests why the term <it>semidecidable</it> is sometimes used; the second suggests why <it>computably enumerable</it> is used.    The abbreviations <b>r.e.</b> and <b>c.e.</b> are often used, even in print, instead of the full phrase.</p>
<p>

In <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>, the  <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link> containing all recursively enumerable sets is <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../703/3106703.xml">
RE</link></group>
</collection>
</class>
.  In <link xlink:type="simple" xlink:href="../414/155414.xml">
recursion theory</link>, the <link xlink:type="simple" xlink:href="../304/469304.xml">
lattice</link> of r.e. sets under inclusion is denoted <math>\mathcal{E}</math>.</p>

<sec>
<st>
 Formal definition </st>

<p>

A set <it>S</it> of natural numbers is called <b>recursively enumerable</b> if there is a <link xlink:type="simple" xlink:href="../338/1139338.xml">
partial recursive function</link> (synonymously, a partial computable function) whose <link xlink:type="simple" xlink:href="../263/50263.xml">
domain</link> is exactly <it>S</it>, meaning that the function is defined if and only if its input is a member of <it>S</it>.   </p>
<p>

The definition can be extended to an arbitrary countable set <it>A</it> by using <link>
Gödel number</link>s to represent elements of the set and declaring a subset of <it>A</it> to be recursively enumerable if the set of corresponding Gödel  numbers is recursively enumerable.</p>

</sec>
<sec>
<st>
Equivalent formulations</st>

<p>

The following are all equivalent properties of a set <it>S</it> of natural numbers:</p>
<p>

<indent level="1">

Semidecidability:
</indent>
:*The set <it>S</it> is recursively enumerable. That is, <it>S</it> is the domain (co-range) of a partial recursive function.
<list>
<entry level="2" type="bullet">

There is a partial recursive function <it>f</it> such that:</entry>
<entry level="2" type="indent">

<math>f(x) = 
\left\{\begin{matrix} 
0 &amp;\mbox{if}\ x \in S \\
\mbox{undefined/does not halt}\ &amp;\mbox{if}\ x \notin S
\end{matrix}\right.
</math></entry>
<entry level="1" type="indent">

Enumerability:</entry>
<entry level="2" type="bullet">

The set <it>S</it> is the range of a partial recursive function.</entry>
<entry level="2" type="bullet">

The set <it>S</it> is the range of a total recursive function or empty. If <it>S</it> is infinite, the function can be chosen to be <link xlink:type="simple" xlink:href="../196/45196.xml">
injective</link>.</entry>
<entry level="2" type="bullet">

The set <it>S</it> is the range of a <link xlink:type="simple" xlink:href="../829/24829.xml">
primitive recursive function</link> or empty. Even if <it>S</it> is infinite, repetition of values may be necessary in this case.</entry>
<entry level="1" type="indent">

Diophantine:</entry>
<entry level="2" type="bullet">

There is a polynomial <it>p</it> with integer coefficients and variables <it>x</it>, <it>a</it>, <it>b</it>, <it>c</it>, <it>d</it>, <it>e</it>, <it>f</it>, <it>g</it>, <it>h</it>, <it>i</it> ranging over the natural numbers such that</entry>
<entry level="2" type="indent">

<math>x \in S \Leftrightarrow \exists a,b,c,d,e,f,g,h,i \ ( p(x,a,b,c,d,e,f,g,h,i) = 0).</math></entry>
<entry level="2" type="bullet">

There is a polynomial from the integers to the integers such that the set <it>S</it> contains exactly the non-negative numbers in its range.</entry>
</list>
</p>
<p>

These last equivalences, while not as straightforward or intuitive as the first definitions, were found by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../712/2627712.xml">
Yuri Matiyasevich</link></scientist>
 as part of the negative solution to <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../851/101851.xml">
Hilbert's Tenth Problem</link></mathematical_statement>
</equation>
</message>
</statement>
. Diophantine sets predate recursion theory and are therefore historically the first way to describe these sets (although this equivalence was only remarked more than three decades after the introduction of recursively enumerable sets).
The number of bound variables in the above definition of the <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../700/101700.xml">
Diophantine set</link></mathematical_statement>
</difficulty>
</problem>
</state>
</condition>
</equation>
</message>
</statement>
 is the best known so far; it might be that a lower number can be used to define all diophantine sets.</p>

</sec>
<sec>
<st>
Examples</st>

<p>

<list>
<entry level="1" type="bullet">

 Every <link xlink:type="simple" xlink:href="../264/332264.xml">
recursive set</link> is recursively enumerable, but it is not true that every recursively enumerable set is recursive.</entry>
<entry level="1" type="bullet">

 A <link xlink:type="simple" xlink:href="../789/54789.xml">
recursively enumerable language</link> is a recursively enumerable subset of a <link xlink:type="simple" xlink:href="../939/10939.xml">
formal language</link>.</entry>
<entry level="1" type="bullet">

 The set of all provable sentences in an effectively presented axiomatic system is a recursively enumerable set.</entry>
<entry level="1" type="bullet">

 <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../853/101853.xml">
Matiyasevich's theorem</link></proposition>
</theorem>
</message>
</statement>
 states that every recursively enumerable set is a <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<equation wordnetid="106669864" confidence="0.8">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<mathematical_statement wordnetid="106732169" confidence="0.8">
<link xlink:type="simple" xlink:href="../700/101700.xml">
Diophantine set</link></mathematical_statement>
</difficulty>
</problem>
</state>
</condition>
</equation>
</message>
</statement>
 (the converse is trivially true).</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../294/2451294.xml">
simple set</link>s are recursively enumerable but not recursive.</entry>
<entry level="1" type="bullet">

 The <link xlink:type="simple" xlink:href="../797/2606797.xml">
creative set</link>s are recursively enumerable but not recursive.</entry>
<entry level="1" type="bullet">

 Any <link xlink:type="simple" xlink:href="../797/2606797.xml">
productive set</link> is <b>not</b> recursively enumerable.</entry>
<entry level="1" type="bullet">

 Given a <link>
Gödel numbering</link> <math>\phi</math> of the computable functions, the set <math>\{\langle i,x \rangle \mid \phi_i(x) \downarrow \}</math> (where <math>\langle i,x \rangle</math> is the <link xlink:type="simple" xlink:href="../848/1145848.xml">
Cantor pairing function</link>  and <math>\phi_i(x)\downarrow</math> indicates <math>\phi_i(x)</math> is defined) is recursively enumerable. This set encodes the <link xlink:type="simple" xlink:href="../668/13668.xml">
halting problem</link> as it describes  the input parameters for which each <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 halts.</entry>
<entry level="1" type="bullet">

 Given a Gödel numbering <math>\phi</math> of the computable functions, the set  <math>\lbrace \left \langle x, y, z \right \rangle \mid \phi_x(y)=z \rbrace</math> is recursively enumerable. This set encodes the problem of deciding a function value.</entry>
<entry level="1" type="bullet">

 Given a partial function <it>f</it> from the natural numbers into the natural numbers, <it>f</it> is a partial recursive function if and only if the graph of <it>f</it>,  that is, the set of all pairs <math>\langle x,f(x)\rangle</math> such that <it>f(x)</it> is defined, is recursively enumerable.</entry>
</list>
</p>

</sec>
<sec>
<st>
Properties</st>

<p>

If <it>A</it> and <it>B</it> are recursively enumerable sets then <it>A</it> ∩ <it>B</it>, <it>A</it> ∪ <it>B</it> and <it>A</it> × <it>B</it> (with the ordered pair of natural numbers mapped to a single natural number with the <link xlink:type="simple" xlink:href="../848/1145848.xml">
Cantor pairing function</link>) are recursively enumerable sets. The <link xlink:type="simple" xlink:href="../311/579311.xml">
preimage</link> of a recursively enumerable set under a partial recursive function is a recursively enumerable set.</p>
<p>

A set is recursively enumerable if and only if it is at level <math>\Sigma^0_1</math> of the <link xlink:type="simple" xlink:href="../475/186475.xml">
arithmetical hierarchy</link>.</p>
<p>

A set <math>T</math> is called <b>co-recursively enumerable</b> or <b>co-r.e.</b> if its <link xlink:type="simple" xlink:href="../347/54347.xml">
complement</link> <math>\mathbb{N} \setminus T</math> is recursively enumerable. Equivalently, a set is co-r.e. if and only if it is at level <math>\Pi^0_1</math> of the arithmetical hierarchy.</p>
<p>

A set <it>A</it> is <link xlink:type="simple" xlink:href="../264/332264.xml">
recursive</link> (synonym: computable) if and only if both <it>A</it> and the complement of <it>A</it> are recursively enumerable. A set is recursive if and only if it is either the range of an increasing total recursive function or finite.</p>
<p>

Some pairs of recursively enumerable sets are <link xlink:type="simple" xlink:href="../871/1405871.xml">
effectively separable</link> and some are not.</p>

</sec>
<sec>
<st>
 Remarks </st>

<p>

According to  the <link xlink:type="simple" xlink:href="../854/6854.xml">
Church-Turing thesis</link>, any effectively calculable function is calculable by a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
, and thus a set <it>S</it> is recursively enumerable if and only if there is some <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> which yields an enumeration of <it>S</it>.  This cannot be taken as a formal definition, however, because the Church-Turing thesis is an informal conjecture rather than a formal axiom.</p>
<p>

The definition of a recursively enumerable set as the <it>domain</it> of a partial function, rather than the <it>range</it> of a total recursive function, is common in contemporary texts.  This choice is motivated by the fact that in generalized recursion theories, such as <link xlink:type="simple" xlink:href="../116/12008116.xml">
α-recursion theory</link>, the definition corresponding to domains has been found to be more natural.  Other texts use the definition in terms of enumerations, which is equivalent for recursively enumerable sets.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 Rogers, H. <it>The Theory of Recursive Functions and Effective Computability</it>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../601/719601.xml">
MIT Press</link></company>
. ISBN 0-262-68052-1; ISBN 0-07-053522-1.</entry>
<entry level="1" type="bullet">

 Soare, R. Recursively enumerable sets and degrees. <it>Perspectives in Mathematical Logic.</it> <link xlink:type="simple" xlink:href="../949/1418949.xml">
Springer-Verlag</link>, Berlin, 1987. ISBN 3-540-15299-7.</entry>
<entry level="1" type="bullet">

 Soare, Robert I. Recursively enumerable sets and degrees. <it>Bull. Amer. Math. Soc.</it> 84 (1978), no. 6, 1149–1181.</entry>
</list>
</p>


</sec>
</bdy>
</article>
