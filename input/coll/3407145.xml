<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:21:28[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Out of memory</title>
<id>3407145</id>
<revision>
<id>240845935</id>
<timestamp>2008-09-25T07:07:31Z</timestamp>
<contributor>
<username>Tinucherian</username>
<id>1951636</id>
</contributor>
</revision>
<categories>
<category>Computer errors</category>
<category>Memory management</category>
</categories>
</header>
<bdy>

<b>Out of memory</b> (OOM) is an undesired state of computer operation where no additional memory can be allocated for use by programs or the operating system.  Such a system will be unable to load any additional programs and since many programs may load additional data into memory during execution, these will cease to function correctly. This occurs because all available memory, including disk <link xlink:type="simple" xlink:href="../938/472938.xml">
swap space</link>, has been allocated.<p>

Historically, the out of memory condition was more common than it is now - early computers (including <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computers</link>) and <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s were limited to small amounts of physical <link xlink:type="simple" xlink:href="../847/25847.xml">
Random Access Memory</link> due to the inability of early processors to address large amounts of memory, as well as cost considerations.  Since the advent of <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> opened the door for the usage of <link xlink:type="simple" xlink:href="../938/472938.xml">
swap space</link>, the condition is much more rare.</p>
<p>

Early operating systems lacked support for <link xlink:type="simple" xlink:href="../857/6857.xml">
 multitasking</link>, such as <link xlink:type="simple" xlink:href="../027/20027.xml">
Microsoft DOS</link>.  Programs were allocated physical memory that they could use as they needed.  Physical memory is often a scarce resource, and when it was used up by applications&nbsp;&mdash;  such as applications with <link xlink:type="simple" xlink:href="../741/69741.xml">
Terminate and Stay Resident</link> functionality&nbsp;&mdash;  no further applications could be started until running applications were closed.</p>
<p>

Modern operating systems provide virtual memory, in which processes are given a range of memory, but there is no guarantee that the memory corresponds to physical RAM.  Virtual memory can be backed by physical RAM, a file via <link xlink:type="simple" xlink:href="../709/608709.xml">
mmap</link>, or swap space, and the operating system can move virtual memory pages around as it needs.  Because virtual memory does not need to be backed by physical memory, exhaustion of it is rare, and usually there are other limits imposed by the operating system on resource consumption.</p>
<p>

Due to <link xlink:type="simple" xlink:href="../418/39418.xml">
Moore's law</link>, the amount of physical memory in all computers has grown almost exponentially, although this is offset to some degree by programs and files themselves becoming larger. It should be noted that, in most cases, a computer with virtual memory support where the majority of the loaded data resides on the hard disk would probably run so slowly due to excessive <link xlink:type="simple" xlink:href="../193/311193.xml">
paging</link> that it would be considered to have failed, prompting the user to close some programs or reboot. As such, an out of memory message is rarely encountered by applications with modern computers.</p>
<p>

The typical OOM case in modern computers is when the operating system is unable to create any more virtual memory, because all of its potential backing devices have been filled.  <link xlink:type="simple" xlink:href="../194/22194.xml">
Operating systems</link> such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 will attempt to recover from this type of OOM condition by terminating a low-priority process, a mechanism known as the <it>OOM Killer</it>.</p>

<sec>
<st>
 Per-process memory limits </st>

<p>

A system may limit the amount of memory each process may use.  This is usually a matter of policy but it can also happen when the OS has a larger address space than is available at the process level.  It is not uncommon for high-end 32-bit systems to come with 8GB or more of system memory, even though any single process can only access 4GB of it in a 32-bit <link xlink:type="simple" xlink:href="../937/450937.xml">
flat memory model</link>.</p>
<p>

A process that exceeds its per-process limit will have attempts to allocate further <link xlink:type="simple" xlink:href="../844/18844.xml">
memory</link>, for example with <link xlink:type="simple" xlink:href="../289/384289.xml">
malloc</link>(), return failure. A well-behaved application should handle this situation gracefully; however, many do not. An attempt to allocate memory without checking the result is known as an "unchecked malloc".</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../891/665891.xml">
Thrash (computer science)</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://linux-mm.org/OOM_Killer">
Linux OOM Killer</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.gnu.org/software/gss/manual/html_node/Out-of-Memory-handling.html">
Out of Memory handling</weblink></entry>
<entry level="1" type="bullet">

Article "<weblink xlink:type="simple" xlink:href="http://developers.sun.com/solaris/articles/subprocess/subprocess.html">
Minimizing Memory Usage for Creating Application Subprocesses</weblink>" by <link>
Greg Nakhimovsky</link></entry>
<entry level="1" type="bullet">

Article "<weblink xlink:type="simple" xlink:href="http://linuxdevcenter.com/pub/a/linux/2006/11/30/linux-out-of-memory.html">
When Linux Runs Out of Memory</weblink>" by <link>
Mulyadi Santosa</link></entry>
<entry level="1" type="bullet">

Paper "<weblink xlink:type="simple" xlink:href="http://www.cs.uwm.edu/~boyland/papers/memory-error.html">
Handling “Out Of Memory” Errors</weblink>" by <link>
John Boyland</link></entry>
</list>
</p>


</sec>
</bdy>
</article>
