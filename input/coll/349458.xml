<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:51:30[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Simplex algorithm</title>
<id>349458</id>
<revision>
<id>242550497</id>
<timestamp>2008-10-02T18:24:13Z</timestamp>
<contributor>
<username>Twri</username>
<id>7976492</id>
</contributor>
</revision>
<categories>
<category>Optimization algorithms</category>
<category>Operations research</category>
</categories>
</header>
<bdy>

In mathematical <link xlink:type="simple" xlink:href="../033/52033.xml">
optimization theory</link>, the <b>simplex algorithm</b>, created by the <body wordnetid="107965085" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<colony wordnetid="108374049" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../750/3434750.xml">
American</link></democracy>
</group>
</political_unit>
</state>
</colony>
</political_orientation>
</social_group>
</body>
 <link xlink:type="simple" xlink:href="../902/18902.xml">
mathematician</link> <physical_entity wordnetid="100001930" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<analyst wordnetid="109790482" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<statistician wordnetid="110653238" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../rry/Bill_B$erry.xml">
George Dantzig</link></research_worker>
</mathematician>
</scientist>
</causal_agent>
</statistician>
</person>
</analyst>
</expert>
</physical_entity>
 in <link xlink:type="simple" xlink:href="../584/34584.xml">
1947</link>, is a popular <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical</link> solution of the <link xlink:type="simple" xlink:href="../730/43730.xml">
linear programming</link> problem. The journal <it>Computing in Science and Engineering</it> listed it as one of the top 10 algorithms of the century.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><p>

An unrelated, but similarly named method is the <b><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../629/2492629.xml">
Nelder-Mead method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</b> or <b>downhill simplex method</b> due to Nelder &amp; Mead (1965) and is a <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical method</link> for optimising many-<link xlink:type="simple" xlink:href="../398/8398.xml">
dimension</link>al unconstrained problems, belonging to the more general class of <link xlink:type="simple" xlink:href="../249/28249.xml">
search algorithm</link>s.</p>
<p>

In both cases, the method uses the concept of a <link xlink:type="simple" xlink:href="../781/39781.xml">
simplex</link>, which is a <link xlink:type="simple" xlink:href="../471/23471.xml">
polytope</link> of <it>N</it>&nbsp;+&nbsp;1 vertices in <it>N</it> dimensions: a <link xlink:type="simple" xlink:href="../193/232193.xml">
line segment</link> in one dimension, a <link xlink:type="simple" xlink:href="../654/30654.xml">
triangle</link> in two dimensions, a <link xlink:type="simple" xlink:href="../606/30606.xml">
tetrahedron</link> in three-dimensional space and so forth.</p>

<sec>
<st>
 Description </st>

<p>

<indent level="1">

<it>Further information: <link xlink:type="simple" xlink:href="../730/43730.xml">
Linear programming</link></it>
</indent>
<image width="240px" src="Simplex_description.png" type="thumb">
<caption>

A <link xlink:type="simple" xlink:href="../563/19575563.xml">
system of linear inequalities</link> defines a <link xlink:type="simple" xlink:href="../471/23471.xml">
polytope</link> as a feasible region. The simplex algorithm begins at a starting <link xlink:type="simple" xlink:href="../417/11308417.xml">
vertex</link> and moves along the edges of the polytope until it reaches the vertex of the optimum solution.
</caption>
</image>
</p>
<p>

A linear programming problem consists of a collection of <link xlink:type="simple" xlink:href="../591/91591.xml">
linear</link> inequalities on a number of <link xlink:type="simple" xlink:href="../491/19725491.xml">
real</link> <link xlink:type="simple" xlink:href="../818/32818.xml">
variable</link>s and a given <link xlink:type="simple" xlink:href="../111/152111.xml">
linear function</link> (on these real variables) which is to be maximized or minimized.</p>
<p>

In geometric terms we are considering a <link xlink:type="simple" xlink:href="../279/47279.xml">
closed</link> <link xlink:type="simple" xlink:href="../292/6292.xml">
convex</link> <link xlink:type="simple" xlink:href="../471/23471.xml">
polytope</link>, <it>P</it>, defined by intersecting a number of <link xlink:type="simple" xlink:href="../297/647297.xml">
half-space</link>s in <it>n</it>-dimensional <link xlink:type="simple" xlink:href="../697/9697.xml">
Euclidean space</link>; each half-space is the area which lies on one side of a <link xlink:type="simple" xlink:href="../862/99862.xml">
hyperplane</link>. If the objective is to maximise a linear functional <it>L</it>(<it>x</it>), consider the hyperplanes <it>H</it>(<it>c</it>) defined by <math>L(x) = c</math>; as <it>c</it> increases, these form a parallel family. If the problem is well-posed, we want to find the largest value of <it>c</it> such that <it>H</it>(<it>c</it>) intersects <it>P</it> (if there is no such largest value of <it>c</it>, this isn't a reasonable question for optimization as it stands). In this case we can show that the optimum value of <it>c</it> is attained on the boundary of <it>P</it>. Methods for finding this optimum point on P work in several ways: some attempt to improve a possible point by moving through the interior of <it>P</it> (so-called <it><link xlink:type="simple" xlink:href="../862/1622862.xml">
interior point methods</link></it>); others start and remain on the boundary searching for an optimum.</p>
<p>

The simplex algorithm follows the latter method. The idea is to move along the facets of <it>P</it> in search of the optimum, from point to point. Note that, unless the optimum occurs on an edge or face that is parallel to <it>H</it>, the optimum will be unique and occur at a vertex of the polytope.  If an optimum is found on an edge or face that is parallel to <it>H</it> then the optimum is not unique and can be obtained at any point on the edge or face. Since the simplex algorithm is concerned only with finding a single optimal point (even if other equally-optimal points exist), it is possible to look solely at moves skirting the edge of a <link xlink:type="simple" xlink:href="../781/39781.xml">
simplex</link>, ignoring the interior. The algorithm specifies how this is to be done.</p>
<p>

We start at some vertex of the polytope, and at every iteration we choose an adjacent vertex such that the value of the objective function does not decrease. If no such vertex exists, we have found a solution to the problem. But usually, such an adjacent vertex is nonunique, and a <it>pivot rule</it> must be specified to determine which vertex to pick. Various pivot rules exist.</p>
<p>

In 1972, Klee and Minty<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> gave an example of a linear programming problem in which the <link xlink:type="simple" xlink:href="../471/23471.xml">
polytope</link> <it>P</it> is a distortion of an <it>n</it>-dimensional cube. They showed that the simplex method as formulated by Dantzig visits all 2<it>n</it> vertices before arriving at the optimal vertex. This shows that the worst-case complexity of the algorithm is <link xlink:type="simple" xlink:href="../581/44581.xml">
exponential time</link>. Similar examples have been found for other pivot rules. It is an open question if there is a pivot rule with <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial time</link> worst-case complexity.</p>
<p>

Nevertheless, the simplex method is remarkably efficient in practice. Attempts to explain this employ the notion of <link xlink:type="simple" xlink:href="../956/37956.xml">
average complexity</link> or (recently) <link>
smoothed complexity</link>.</p>
<p>

Other algorithms for solving linear programming problems are described in the <link xlink:type="simple" xlink:href="../730/43730.xml">
linear programming</link> article.</p>

</sec>
<sec>
<st>
 Problem input </st>
<p>

Consider a linear programming problem,
<indent level="1">

 maximize <math>\mathbf{c}^T \mathbf{x} </math>
</indent>
: subject to <math>\mathbf{A}\mathbf{x} \le \mathbf{b}, \, \mathbf{x} \ge 0. </math>
The simplex algorithm requires the linear programming problem to be in <link xlink:type="simple" xlink:href="../730/43730.xml#xpointer(//*[./st=%22Augmented+form+(slack+form)%22])">
augmented form</link>. The problem can then be written as follows in matrix form:
<indent level="1">

 Maximize <it>Z</it> in:
</indent>
: <math>
  \begin{bmatrix}
    1 &amp; -\mathbf{c}^T &amp; 0 \\
    0 &amp; \mathbf{A} &amp; \mathbf{I}
  \end{bmatrix}
  \begin{bmatrix}
    Z \\ \mathbf{x} \\ \mathbf{x}_s
  \end{bmatrix} = 
  \begin{bmatrix}
    0 \\ \mathbf{b}
  \end{bmatrix}
</math>
<indent level="1">

 <math> \mathbf{x}, \, \mathbf{x}_s \ge 0 </math>
</indent>
where <b>x</b> are the variables from the <it>standard form</it>, <b>x</b>s are the introduced slack variables from the augmentation process, <b>c</b> contains the optimization coefficients, <b>A</b> and <b>b</b> describe the system of constraint equations, and <it>Z</it> is the variable to be maximized.</p>
<p>

The system is typically <link xlink:type="simple" xlink:href="../087/113087.xml">
underdetermined</link>, since the number of variables exceeds the number of equations. The difference between the number of variables and the number of equations gives us the <it>degrees of freedom</it> associated with the problem. Any solution, optimal or not, will therefore include a number of variables of arbitrary value. The simplex algorithm uses zero as this arbitrary value, and the number of variables with value zero equals the degrees of freedom.</p>
<p>

Variables of nonzero value are called <it>basic variables</it>, and variables of zero value are called <it>nonbasic variables</it> in the simplex algorithm. [This definition is problematic, since basic variables can also take zero value.]</p>
<p>

This form simplifies finding the initial <it>basic feasible solution</it> (BF), since all variables from the <it>standard form</it> can be chosen to be nonbasic (zero), while all new variables introduced in the <it>augmented form</it> are basic (nonzero), since their value can be trivially calculated (<math>\mathbf{x}_{s\,i} = \mathbf{b}_{i}</math> for them, since the augmented problem matrix is diagonal on its right half).</p>

</sec>
<sec>
<st>
 Revised simplex algorithm </st>

<ss1>
<st>
 Matrix form of the simplex algorithm </st>
<p>

At any iteration of the simplex algorithm, the tableau will be of this form:
<indent level="1">

 <math>
  \begin{bmatrix}
    1 &amp; \mathbf{c}_B^T \mathbf{B}^{-1}\mathbf{A}  -\mathbf{c}^T &amp; \mathbf{c}_B^T \mathbf{B}^{-1} \\
    0 &amp; \mathbf{B}^{-1}\mathbf{A} &amp; \mathbf{B}^{-1}
  \end{bmatrix}
  \begin{bmatrix}
    Z \\ \mathbf{x} \\ \mathbf{x}_s
  \end{bmatrix} = 
  \begin{bmatrix}
    \mathbf{c}_B^T \mathbf{B}^{-1} \mathbf{b} \\ \mathbf{B}^{-1}\mathbf{b}
  \end{bmatrix}
</math>
</indent>
where <math>\mathbf{c}_B</math> are the coefficients of basic variables in the <b>c</b>-matrix; and <b>B</b> is the columns of <math>[\mathbf{A} \, \mathbf{I}]</math> corresponding to the basic variables.</p>
<p>

It is worth noting that <b>B</b> and <math>\mathbf{c}_B</math> are the only variables in this equation (except <it>Z</it> and <b>x</b> of course). Everything else is constant throughout the algorithm.</p>

</ss1>
<ss1>
<st>
 Algorithm </st>
<p>

<list>
<entry level="1" type="bullet">

 Choose a <it>basic feasible solution</it> (BF) as shown above</entry>
<entry level="1" type="indent">

 This implies that <b>B</b> is the identity matrix, and <math>\mathbf{c}_B</math> is a zero-vector.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 While nonoptimal solution:</entry>
<entry level="2" type="bullet">

 <b>Determine direction of highest gradient</b></entry>
<entry level="2" type="indent">

 Choose the variable associated with the coefficient in <math>\mathbf{c}_B^{T} \mathbf{B}^{-1}\mathbf{A}  -\mathbf{c}^{T}</math> that has the highest <it>negative</it> magnitude. This nonbasic variable, which we call the <it>entering basic</it>,  will be increased to help maximize the problem.</entry>
<entry level="2" type="bullet">

 <b>Determine maximum step length</b></entry>
<entry level="2" type="indent">

 Use the <math>\begin{bmatrix} \mathbf{B}^{-1}\mathbf{A} &amp; \mathbf{B}^{-1} \end{bmatrix} \begin{bmatrix} \mathbf{x} \\ \mathbf{x}_s \end{bmatrix} =  \mathbf{B}^{-1}\mathbf{b}</math> subequation to determine which basic variable reaches zero first when the <it>entering basic</it> is increased. This variable, which we call the <it>leaving basic</it> then becomes nonbasic. This operation only involves a single division for each basic variable, since the existing basic-variables occur diagonally in the tableau.</entry>
<entry level="2" type="bullet">

 <b>Rewrite problem</b></entry>
<entry level="2" type="indent">

 Modify <b>B</b> and <math>\mathbf{c}_B</math> to account for the new basic variables. This will automatically make the tableau diagonal for the existing and new basic variables.</entry>
<entry level="2" type="bullet">

 <b>Check for improvement</b></entry>
<entry level="2" type="indent">

 Repeat procedure until no further improvement is possible, meaning all the coefficients of <math>\mathbf{c}_B^{T} \mathbf{B}^{-1}\mathbf{A}  -\mathbf{c}^{T}</math> are positive. Procedure is also terminated if all coefficients are zero, and the algorithm has walked in a circle and revisited a previous state.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Common Implementations of The Revised Simplex Method</st>
<p>

<list>
<entry level="1" type="bullet">

 <link>
The Bartels-Golub Method</link></entry>
<entry level="1" type="bullet">

 <link>
The Sparse Bartels-Golub Method</link></entry>
<entry level="1" type="bullet">

 <link>
The Forrest-Tomlin Method</link></entry>
<entry level="1" type="bullet">

 <link>
Reid’s Method</link></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 See also </st>

<p>

<list>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../629/2492629.xml">
Nelder-Mead method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../671/9203671.xml">
Fourier-Motzkin elimination</link></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/14747415.xml">
Bland's anti-cycling rule</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../667/3736667.xml">
Karmarkar's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
<it>Computing in Science and Engineering</it>, volume 2, no. 1, 2000</entry>
<entry id="2">
Greenberg, cites: V. Klee and G.J. Minty. "How Good is the Simplex Algorithm?" In O. Shisha, editor, <it>Inequalities, III</it>, pages 159&ndash;175. Academic Press, New York, NY, 1972</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 Further reading </st>
<p>

<list>
<entry level="1" type="bullet">

 Greenberg, Harvey J., <it>Klee-Minty Polytope Shows Exponential Time Complexity of Simplex Method</it> University of Colorado at Denver (1997) <weblink xlink:type="simple" xlink:href="http://glossary.computing.society.informs.org/notes/Klee-Minty.pdf">
PDF download</weblink></entry>
<entry level="1" type="bullet">

 Frederick S. Hillier and Gerald J. Lieberman: <it>Introduction to Operations Research</it>, 8th edition. McGraw-Hill. ISBN 0-07-123828-X</entry>
<entry level="1" type="bullet">

 <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it>Introduction to Algorithms</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Section 29.3: The simplex algorithm, pp.790&ndash;804.</entry>
<entry level="1" type="bullet">

 Hamdy A. Taha: <it>Operations Research: An Introduction</it>, 8th ed., Prentice Hall, 2007. ISBN 0-13-188923-0</entry>
<entry level="1" type="bullet">

 Richard B. Darst: <it>Introduction to Linear Programming: Applications and Extensions''</it></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.isye.gatech.edu/~spyros/LP/LP.html">
An Introduction to Linear Programming and the Simplex Algorithm</weblink> by Spyros Reveliotis of the Georgia Institute of Technology.</entry>
<entry level="2" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www2.isye.gatech.edu/~spyros/Panagiotis/JAVAstuff/HTML/Sim.html">
A step-by-step simplex algorithm solver</weblink> Solve your own LP problem. <b><it>Note</it></b><it>: this does not work well. Sample problem: minimize z=x1+x2 subject to 2x1+3x2=6 and -x1+x2=1 should give 0 as answer. This applet gives the same answer for both maximize and minimize problem.''</it></entry>
<entry level="1" type="bullet">

Java-based <weblink xlink:type="simple" xlink:href="http://www-fp.mcs.anl.gov/otc/Guide/CaseStudies/simplex/">
interactive simplex tool</weblink> hosted by Argonne National Laboratory.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://people.hofstra.edu/faculty/Stefan_Waner/RealWorld/tutorialsf4/frames4_3.html">
Tutorial for The Simplex Method</weblink> by Stefan Waner,  hofstra.edu. Interactive worked example.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://learning.mazoo.net/archives/001240.html">
A simple example - step by step</weblink> by Mazoo's Learning Blog.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.math.cuhk.edu.hk/~wei/lpch3.pdf">
Simplex Method</weblink> A good tutorial for Simplex Method with examples (also two-phase and M-method).</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.phpsimplex.com/en/index.htm">
PHPSimplex</weblink> Other good tutorial for Simplex Method with the Two-Phase Simplex and Graphical methods, examples, and a tool to solve Simplex problems online.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://people.hofstra.edu/faculty/Stefan_Waner/RealWorld/simplex.html">
Simplex Method Tool</weblink> Quick-loading JavaScript-based web page that solves Simplex problems</entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
