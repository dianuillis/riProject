<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:31:36[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Portable application</title>
<id>3498830</id>
<revision>
<id>244229301</id>
<timestamp>2008-10-09T21:44:32Z</timestamp>
<contributor>
<username>Aldaden</username>
<id>696725</id>
</contributor>
</revision>
<categories>
<category>All articles needing style editing</category>
<category>Wikipedia articles needing style editing from July 2008</category>
<category>Portable software</category>
</categories>
</header>
<bdy>

"Portable Apps" redirects here. For the portable application launcher platform, see <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../210/13753210.xml">
PortableApps.com</link></company>
.
<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article or section is written like  and may require .</b>
Please <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Portable_application&amp;action=edit">
help improve it</weblink> by rewriting it in an . <it>(July 2008)''</it></col>
</row>
</table>


<image location="right" width="150px" src="USB_flash_drive.jpg" type="thumb">
<caption>

A <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../414/400414.xml">
USB drive</link></medium>
</device>
</instrumentality>
</artifact>
 can carry portable applications
</caption>
</image>
<p>

A <b>portable application</b>, or <b>portable app</b> for short, is a <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link> <link xlink:type="simple" xlink:href="../783/5783.xml">
software program</link> that does not need to be <link xlink:type="simple" xlink:href="../625/634625.xml">
installed</link> or copied onto a computer's <link xlink:type="simple" xlink:href="../719/455719.xml">
mass storage</link> device to be executed, running instead from a removable storage device such as a <recording wordnetid="104063868" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<sound_recording wordnetid="104262678" confidence="0.8">
<memory_device wordnetid="103744840" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<phonograph_record wordnetid="103924069" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../902/18959902.xml">
CD-ROM</link></medium>
</phonograph_record>
</device>
</memory_device>
</sound_recording>
</instrumentality>
</artifact>
</recording>
 drive, <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../414/400414.xml">
USB flash drive</link></medium>
</device>
</instrumentality>
</artifact>
, <link xlink:type="simple" xlink:href="../595/50595.xml">
flash card</link>, or <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link>. Portable applications can be run on any computer system with which they are compatible; they usually require a certain type of <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> (e.g., <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> XP or above, any Linux, etc). <it>Portable software</it> in this sense should not be confused with <it><link xlink:type="simple" xlink:href="../804/214804.xml">
software portability</link></it>, where software is designed in a way which allows its <link xlink:type="simple" xlink:href="../661/27661.xml">
source code</link> to be <link xlink:type="simple" xlink:href="../739/5739.xml">
compiled</link> for different <link xlink:type="simple" xlink:href="../196/81196.xml">
computing platform</link>s.</p>
<p>

Portable software is usually designed to be able to store its configuration information and data on the storage media containing its program files.</p>

<sec>
<st>
 Portable Windows applications </st>
<p>

Most software for <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> is not designed to be portable. The <link xlink:type="simple" xlink:href="../933/1164933.xml">
Windows registry</link> and the structure of the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/1158591.xml">
Windows Installer</link></software>
 both tie an installed program to the machine it has been installed on. Most Windows applications use the registry intensively, and store state information all over the file system, although software authoring guidelines suggest using the registry for settings and the user's profile (in the "My Documents" or "Documents and Settings" folders) for larger files dependent on a specific installation or the user's habits.</p>
<p>

In order to make properly portable applications, software applications must leave the computer they run on exactly as they found it when finished. This means that the application cannot use the <link xlink:type="simple" xlink:href="../933/1164933.xml">
registry</link>, nor store its files anywhere on the machine other than in the application's installation directory.
When installed to removable media, a program would need to store settings in an <message wordnetid="106598915" confidence="0.8">
<record wordnetid="106647206" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<file wordnetid="106508816" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../172/1908172.xml">
INI file</link></format>
</evidence>
</indication>
</file>
</information>
</record>
</message>
 (or similar configuration file) rather than in the registry.</p>
<p>

An alternative strategy for achieving application portability within Windows, without requiring application source code changes, is <link xlink:type="simple" xlink:href="../251/5299251.xml">
application virtualization</link>: an application is "sequenced" or "packaged" against a runtime layer that transparently intercepts its file system and registry calls, then redirects these to other persistent storage without the application's knowledge. This approach leaves the application itself unchanged, yet portable.</p>
<p>

The run-time layer can be embedded into an application on-the-fly by <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../924/5140924.xml">
injecting</link></room>
</framework>
</supporting_structure>
</library>
</window>
</area>
</artifact>
</structure>
 a <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../077/2701077.xml">
dynamic library</link></format>
 into a third party process to create individual per application wrapper <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. The wrapper is activated at the application startup and hooks/redirects file and registry related system calls to operate with portable (ex: flash) storage space only.</p>
<p>

The same approach <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> is used for individual applicationâ€™s components: <link xlink:type="simple" xlink:href="../238/473238.xml">
run-time libraries</link>, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../007/17058007.xml">
COM</link></part>
</causal_agent>
</worker>
</component>
</assistant>
</concept>
</idea>
</model>
</person>
</physical_entity>
 components or <link xlink:type="simple" xlink:href="../497/93497.xml">
ActiveX</link> , not for entire application only. As the result, the individual ported in such manner components are able to be: integrated into original portable applications, repeatedly instantiated (virtually installed) with different configurations/settings on the same <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> (OS) without mutual conflicts. As the ported components does not affect the OS protected related entities (registry and files), the components will not required administrative privileges for installation and management.</p>

</sec>
<sec>
<st>
 Portable Macintosh applications </st>

<p>

Many programs for <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> have an inherent degree of portability as they are packaged as "drag-install" <link xlink:type="simple" xlink:href="../670/2487670.xml">
application bundles</link>, rather than as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../997/1050997.xml">
Installer</link></software>
 packages. However, many applications' bundles are not truly portable as they store their preferences in files on the local disk where the OS is installed. Macintosh applications which are designed to be portable store their preferences in the drive they are being run from.</p>

</sec>
<sec>
<st>
 Portability on Linux and UNIX-like systems </st>
<p>

<it>See also: <link xlink:type="simple" xlink:href="../924/2760924.xml">
klik (packaging method)</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../009/743009.xml">
Zero Install</link></software>
, <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../640/1885640.xml">
Autopackage</link></format>
</instrumentality>
</artifact>
</system>
</information>
</message>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../887/18537887.xml">
SFS Technology</link></software>
</it></p>
<p>

Programs written with a Unix-like base in mind often do not make any assumptions. Whereas many Windows programs assume the user is an <link xlink:type="simple" xlink:href="../209/264209.xml">
administrator</link> â€” something very prevalent in the days of Windows 95/98/ME (and to some degree in Windows XP/2000 - though not in Windows Vista) â€” such would quickly result in "Permission denied" errors in Unix-like environments since users will be in an unprivileged state much more often. Programs are therefore generally designed around using the HOME environment variable to store settings (e.g. <it>$HOME</it>/.w3m for the <link xlink:type="simple" xlink:href="../116/34116.xml">
w3m</link> browser). The dynamic linker also provides an environment variable LD_LIBRARY_PATH so that libraries can be looked up in non-standard directories. This makes it particularly easy (from a technical point of view) to run a program off another spot. Assuming /mnt contains the portable programs and configuration, a command line may look like:</p>
<p>

HOME=/mnt/home/user LD_LIBRARY_PATH=/mnt/usr/lib /mnt/usr/bin/w3m en.wikipedia.org</p>
<p>

Not all programs honor this however â€” some completely ignore $HOME and instead do a user lookup in /etc/passwd to find the home directory, therefore thwarting portability.</p>

</sec>
<sec>
<st>
 Double portability </st>

<p>

There is a very restricted category of software that can support a sort of double portability, being both stand alone and cross-platform compatible, able to run on different hardware with little or no modifications, perhaps with minor restrictions. One such software is <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/6323226.xml">
SymbOS</link></O>
, whose main modules can in their present form be executed on both <computer wordnetid="103082979" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
Amstrad CPC</link></computer>
 and <computer wordnetid="103082979" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../210/156210.xml">
MSX</link></computer>
 machines without modification. Only some of its bundled applications are hardware-dependent. To a much lesser extent, Macintosh <link xlink:type="simple" xlink:href="../695/595695.xml">
fat binary</link> applications could be considered as cross-platform, but not always truly portable.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../262/3391262.xml">
List of portable software</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../610/5547610.xml">
List of portable computer games</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../251/5299251.xml">
Application Virtualization</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://sphinx-soft.com/Portable">
Portable Wrapper</weblink> </entry>
</reflist>
</p>


</sec>
</bdy>
</article>
