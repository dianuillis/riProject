<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 16:53:01[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<information  confidence="0.8" wordnetid="106634376">
<system  confidence="0.9511911446218017" wordnetid="104377057">
<electronic_database  confidence="0.8" wordnetid="106588511">
<lexical_database  confidence="0.8" wordnetid="106638868">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<wordnet  confidence="0.8" wordnetid="106639428">
<database  confidence="0.8" wordnetid="106637824">
<header>
<title>EROS (microkernel)</title>
<id>353077</id>
<revision>
<id>242084908</id>
<timestamp>2008-09-30T21:21:56Z</timestamp>
<contributor>
<username>Ghettoblaster</username>
<id>6603820</id>
</contributor>
</revision>
<categories>
<category>Operating systems</category>
<category>Microkernels</category>
<category>Capability systems</category>
</categories>
</header>
<bdy>

<b>EROS</b> (<b>The Extremely Reliable Operating System</b>) is an <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> developed by The EROS Group, LLC., the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../420/38420.xml">
Johns Hopkins University</link></university>
, and the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../793/31793.xml">
University of Pennsylvania</link></university>
. Interesting features include automatic data and process <link xlink:type="simple" xlink:href="../550/6025550.xml">
persistence</link>, some preliminary <link xlink:type="simple" xlink:href="../123/26123.xml">
real-time</link> support, and <link xlink:type="simple" xlink:href="../717/539717.xml">
capability-based security</link>. EROS is purely a research operating system, and was never deployed in real world use. <link xlink:type="simple" xlink:href="../251/891251.xml">
As of 2005</link>, development has stopped in favor of two successor systems, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../126/4578126.xml">
CapROS</link></O>
 and <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../689/3654689.xml">
Coyotos</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
. 
<sec>
<st>
Key concepts</st>
<p>

The overriding goal of the EROS system (and its relatives) is to provide strong support at the operating system level for the efficient restructuring of critical applications into small communicating components. Each component can communicate with the others only through protected interfaces, and is isolated from the rest of the system. A "protected interface", in this context, is one that is enforced by the lowest level part of the operating system (the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>). The kernel is the only portion of the system that can move information from one process to another. It also has complete control of the machine and (if properly constructed) cannot be bypassed. In EROS, the kernel-provided mechanism by which one component names and invokes the services of another is <link xlink:type="simple" xlink:href="../717/539717.xml#xpointer(//*[./st=%22Capability+(Key)%22])">
capabilities</link> using <link xlink:type="simple" xlink:href="../106/152106.xml">
inter-process communication</link> (IPC). By enforcing capability-protected interfaces, the kernel ensures that all communications to a process arrive via an intentionally exported interface. It also ensures that <it>no</it> invocation is possible unless the invoking component holds a valid capability to the invokee. Protection in capability systems is achieved by restricting the propagation of capabilities from one component to another, often through a security policy known as <link>
confinement</link>.</p>
<p>

Capability systems naturally promote component-based software structure. This organizational approach is similar to the programming language concept of <link xlink:type="simple" xlink:href="../757/22757.xml">
object-oriented programming</link>, but occurs at larger granularity and does not include the concept of <link xlink:type="simple" xlink:href="../746/2617746.xml">
inheritance</link>. When software is restructured in this way, several benefits emerge:</p>
<p>

<list>
<entry level="1" type="bullet">

The individual components are most naturally structured as <link xlink:type="simple" xlink:href="../599/62599.xml">
event loops</link>. Examples of systems that are commonly structured this way include <control wordnetid="105196375" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<accident wordnetid="107301336" confidence="0.8">
<happening wordnetid="107283608" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<trouble wordnetid="107289014" confidence="0.8">
<mishap wordnetid="107314427" confidence="0.8">
<misfortune wordnetid="107304852" confidence="0.8">
<software wordnetid="106566077" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<power wordnetid="105190804" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../058/703058.xml#xpointer(//*[./st=%22Digital%22])">
flight control systems</link></psychological_feature>
</coding_system>
</power>
</program>
</event>
</software>
</misfortune>
</mishap>
</trouble>
</code>
</writing>
</written_communication>
</happening>
</accident>
</application>
</control>
 (see also <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/2625968.xml">
DO-178B Software Considerations in Airborne Systems and Equipment Certification</link></system_of_measurement>
</standard>
), and telephone switching systems (see <point wordnetid="108620061" confidence="0.8">
<geographic_point wordnetid="108578706" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<workplace wordnetid="104602044" confidence="0.8">
<central wordnetid="102994858" confidence="0.8">
<link xlink:type="simple" xlink:href="../511/35511.xml">
5ESS switch</link></central>
</workplace>
</location>
</geographic_point>
</point>
). Event-driven programming is chosen for these systems primarily because of simplicity and robustness, which are essential attributes in life-critical and mission-critical systems.</entry>
<entry level="1" type="bullet">

Components become smaller and individually testable, which helps the implementor to more readily identify flaws and bugs.</entry>
<entry level="1" type="bullet">

The isolation of each component from the others limits the scope of the damage that may occur when something goes wrong or the software misbehaves.</entry>
</list>
</p>
<p>

Collectively, these benefits lead to measurably more robust and secure systems. The <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../953/1302953.xml">
SDS Sigma 7</link></institution>
</company>
 was a hardware-based capability system originally designed for use in telephony switches. A capability-based design was chosen specifically for reasons of robustness.</p>
<p>

In contrast to many earlier systems, capabilities are the <it>only</it> mechanism for naming and using resources in EROS. Such a system is sometimes referred to as a <it>pure</it> capability system. The IBM <link xlink:type="simple" xlink:href="../769/39769.xml">
AS/400</link> is an example of a commercially successful capability system, but it is not a pure capability system.</p>
<p>

Pure capability architectures are supported by well-tested and mature mathematical security models. These have been used to formally demonstrate that capability-based systems can be made secure if implemented correctly. The so-called "safety property" has been shown to be decidable for pure capability systems (see <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Lipton%22])">
Lipton</link>). Confinement, which is the fundamental building block of isolation, has been formally verified to be enforceable by pure capability systems,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> and is reduced to practical implementation by the EROS "constructor" and the KeyKOS "factory". No comparable verification exists for any other primitive protection mechanism. There is a fundamental result in the literature showing that "safety" is mathematically undecidable in the general case (see <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../649/5161649.xml">
HRU</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
, but note that it is of course provable for an unbounded set of restricted cases<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>). Of greater practical importance, safety has been shown to be <it>false</it> for all of the primitive protection mechanisms shipping in current commodity operating systems (see <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../649/5161649.xml">
HRU</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
). Safety is a necessary precondition to successful enforcement of <it>any</it> security policy. In practical terms, this result means that it is not possible <it>in principle</it> to secure current commodity systems, but it is potentially possible to secure capability-based systems <it>provided</it> they are implemented with sufficient care. Neither system has ever been successfully penetrated, and their isolation mechanisms have never been successfully defeated by any inside attacker, but it is not known whether the EROS or KeyKOS implementations was careful enough. One goal of the <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../689/3654689.xml">
Coyotos</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 project is to demonstrate that component isolation and security has been definitively achieved by apply software verification techniques.</p>
<p>

The L4.sec system, which is a successor to the <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel family</link>, is a capability-based system, and has been significantly influenced by the results of the EROS project. The influence is mutual, since the EROS work on high-performance invocation was motivated strongly by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../112/1623112.xml">
Jochen Liedtke</link></research_worker>
</scientist>
</causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
's successes with the <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel family</link>.</p>

</sec>
<sec>
<st>
History</st>
<p>

The primary developer of EROS was <link>
Jonathan S. Shapiro</link>. He is also the driving force behind <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../689/3654689.xml">
Coyotos</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
, which is a "evolutionary step"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> beyond the EROS operating system.</p>
<p>

The EROS project started in 1991 as a clean-room reconstruction of an earlier system, <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../009/1202009.xml">
KeyKOS</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
. KeyKOS was an operating system developed by Key Logic, Inc., and was a direct continuation of work on the earlier <b>GNOSIS</b> (Great New Operating System In the Sky) system created by Tymshare, Inc. The KeyKOS system offered a degree of security and reliability that remains unduplicated today (2006). The circumstances surrounding Key Logic's unfortunate demise in 1991 made licensing KeyKOS impractical. Since KeyKOS did not run on popular commodity processors in any case, the decision was made to reconstruct it from the publicly available documentation.</p>
<p>

By late 1992, it had become clear that processor architecture had changed significantly since the introduction of the capability idea, and it was no longer obvious that component-structured systems were practical. <link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>-based systems, which similarly favor large numbers of processes and IPC, were facing severe performance challenges, and it was uncertain if these could be successfully resolved. The <link xlink:type="simple" xlink:href="../198/34198.xml">
x86 architecture</link> was clearly emerging as the dominant architecture but the expensive user/supervisor transition latency on the <link xlink:type="simple" xlink:href="../783/42783.xml">
386</link> and <link xlink:type="simple" xlink:href="../728/35728.xml">
486</link> presented serious challenges for process-based isolation. The EROS project was turning into a research effort, and moved to the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../793/31793.xml">
University of Pennsylvania</link></university>
 to become the focus of Shapiro's dissertation research. By 1999, a high performance implementation for the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/24668.xml">
Pentium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 processor had been demonstrated that was directly performance competitive with the <link xlink:type="simple" xlink:href="../763/95763.xml">
L4 microkernel family</link>, which is known for its exceptional speed in IPC. The EROS confinement mechanism had been formally verified, in the process creating a general formal model for secure capability systems.</p>
<p>

In 2000, Shapiro joined the faculty of Computer Science at Johns Hopkins University. At Hopkins, the goal was to show how to <it>use</it> the facilities provided by the EROS kernel to construct secure and defensible servers at application level. Funded by the <link xlink:type="simple" xlink:href="../957/8957.xml">
Defense Advanced Research Projects Agency</link> and the <link xlink:type="simple" xlink:href="../257/764257.xml">
Air Force Research Laboratory</link>, EROS was used as the basis for a trusted window system,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> a high-performance, defensible network stack,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> and the beginnings of a secure web browser. It was also used to explore the effectiveness of lightweight static checking.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> In 2003, some very challenging security issues were discovered<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> that are intrinsic to <it>any</it> system architecture based on synchronous IPC primitives (notably including EROS and L4). Work on EROS halted in favor of Coyotos, which resolves these issues.</p>
<p>

<link xlink:type="simple" xlink:href="../458/1292458.xml">
As of 2006</link>, EROS and its successors are the only widely available capability systems that run on commodity hardware.</p>

</sec>
<sec>
<st>
Status</st>
<p>

Work on EROS by the original group has halted, but there are two successor systems. The CapROS system is building directly from the EROS code base, while the Coyotos system is a successor system that addresses some of the architectural deficiencies of <b>EROS,</b> and is exploring (as research) the possibility of a fully verified operating system. Both CapROS and Coyotos are expected to be released in various commercial deployments.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link>
Nanokernel</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.eros-os.org/papers/oakland2000.ps">
Verifying the EROS Confinement Mechanism</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.cs.cmu.edu/~petel/papers/pcc/">
Peter Lee: Proof-Carrying Code</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.coyotos.org/docs/misc/eros-comparison.html">
Differences Between Coyotos and EROS — A Quick Summary</weblink></entry>
<entry id="4">
http://www.eros-os.org/papers/usenix-sec2004.ps</entry>
<entry id="5">
http://www.eros-os.org/papers/usenix-net-2004.ps</entry>
<entry id="6">
http://www.eros-os.org/papers/ccs04.pdf</entry>
<entry id="7">
http://www.eros-os.org/papers/IPC-Assurance.ps</entry>
</reflist>
</p>

<ss1>
<st>
Journals</st>
<p>

<list>
<entry level="1" type="number">

R. J. Lipton and L. Snyder. "A Linear Time Algorithm for Deciding Subject Security." <b>Journal of the ACM<it>, </it></b><it>24</it>'(3):455--464, 1977.</entry>
<entry level="1" type="number">

M. A. Harrison, W. L. Ruzzo and J. D. Ullman. "Protection in Operating Systems". <it>Communications of ACM</it>. <b>19</b>(8):461--471, August 1976.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.coyotos.org/">
Coyotos home page</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.eros-os.org/">
EROS home page</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cis.upenn.edu/~KeyKOS/">
KeyKOS home page</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.coyotos.org/~shap/">
Jonathan Shapiro's homepage</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.capros.org">
CapROS</weblink></entry>
</list>
</p>


<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../123/26123.xml">
Real-time operating system</link>s (RTOS)</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../710/14415710.xml">
ChibiOS/RT</link></O>
&nbsp;·  <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<browser wordnetid="106571301" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../237/849237.xml">
Contiki</link></coding_system>
</code>
</writing>
</written_communication>
</browser>
</program>
</application>
</software>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../172/51172.xml">
DNIX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../524/7275524.xml">
DSOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../225/432225.xml">
eCos</link>&nbsp;·  <link xlink:type="simple" xlink:href="../204/1146204.xml">
Embedded Linux</link>&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../077/353077.xml">
EROS</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../217/2152217.xml">
FreeRTOS</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../980/867980.xml">
LynxOS</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../256/160256.xml">
MenuetOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../242/18921242.xml">
MERT</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../339/903339.xml">
Nucleus RTOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../001/16260001.xml">
Open AT OS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../093/39093.xml">
OS-9</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../503/431503.xml">
OSE</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../926/85926.xml">
pSOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../179/2161179.xml">
Prex</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/65184.xml">
QNX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../130/1209130.xml">
RMX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../342/62342.xml">
RSX-11</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../309/69309.xml">
RT-11</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../806/3673806.xml">
RTEMS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../232/419232.xml">
RTLinux</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../313/3302313.xml">
SINTRAN III</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../446/72446.xml">
Symbian OS</link></O>
&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../550/10735550.xml">
Talon DSP RTOS</link></O>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../766/1593766.xml">
THEOS</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../433/30433.xml">
TPF</link></O>
&nbsp;·  <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../483/519483.xml">
TRON</link></family>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../567/327567.xml">
VRTX</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../105/157105.xml">
VxWorks</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../360/230360.xml">
Windows CE</link></O>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</database>
</wordnet>
</entity>
</lexical_database>
</electronic_database>
</system>
</information>
</message>
</article>
