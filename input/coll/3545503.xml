<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:30:37[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<physical_entity  confidence="0.8" wordnetid="100001930">
<person  confidence="0.8" wordnetid="100007846">
<model  confidence="0.8" wordnetid="110324560">
<assistant  confidence="0.8" wordnetid="109815790">
<worker  confidence="0.8" wordnetid="109632518">
<causal_agent  confidence="0.8" wordnetid="100007347">
<header>
<title>VisSim</title>
<id>3545503</id>
<revision>
<id>227080143</id>
<timestamp>2008-07-21T21:40:39Z</timestamp>
<contributor>
<username>RockfangBot</username>
<id>7369635</id>
</contributor>
</revision>
<categories>
<category>Visual programming languages</category>
<category>Simulation programming languages</category>
<category>Numerical software</category>
<category>Specific models</category>
</categories>
</header>
<bdy>

This article is about the visual block diagram language.&#32;&#32;For other uses, see <link xlink:type="simple" xlink:href="../008/3549008.xml">
Vissim</link>.
<b>VisSim</b> is a visual block diagram language for modeling, simulating and analyzing dynamic systems. It is developed by Visual Solutions.<p>

VisSim is widely used in control system design and digital signal processing for multidomain simulation and design. It includes blocks for arithmetic, Boolean, and transcendental functions, as well as <link xlink:type="simple" xlink:href="../033/41033.xml">
digital filter</link>s, <link xlink:type="simple" xlink:href="../146/31146.xml">
transfer function</link>s, <link xlink:type="simple" xlink:href="../089/170089.xml">
numerical integration</link> and interactive plotting. The free <weblink xlink:type="simple" xlink:href="http://www.vissim.com/downloads/demos.html">
VisSim Viewer</weblink> lets anyone run VisSim diagrams. Coupled with VisSim/C-Code, an add-on product, VisSim performs code generation for real-time implementation of embedded systems. It can target small 16-bit fixed point systems like the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../768/47768.xml">
Texas Instruments</link></company>
 <link xlink:type="simple" xlink:href="../382/218382.xml">
MSP430</link> (using only 340 bytes flash and 64 bytes of RAM) as well as larger 32-bit floating point processors like <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../768/47768.xml">
Texas Instruments</link></company>
 C6713. This technique of simulating system performance off-line, and then generating code automatically from the simulated diagram to run on the embedded system is known as "model based development". Model based development is becoming widely adopted for production systems because it shortens development cycles.
VisSim Version 7 has introduced 3D plotting and interactive 3D VRML animation.</p>

<sec>
<st>
 VisSim add-ons include: </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../300/78300.xml">
Physical layer</link> communication system simulation</entry>
<entry level="1" type="bullet">

 Frequency domain analysis (<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<parameter wordnetid="105859071" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<constant wordnetid="105858936" confidence="0.8">
<quantity wordnetid="105855125" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<electronic_equipment wordnetid="103278248" confidence="0.8">
<amplifier wordnetid="102705944" confidence="0.8">
<link xlink:type="simple" xlink:href="../562/155562.xml">
Bode plot</link></amplifier>
</electronic_equipment>
</equipment>
</quantity>
</constant>
</instrumentality>
</parameter>
</artifact>
</concept>
</idea>
, <link xlink:type="simple" xlink:href="../703/383703.xml">
Root locus</link>, <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<parameter wordnetid="105859071" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<constant wordnetid="105858936" confidence="0.8">
<quantity wordnetid="105855125" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<electronic_equipment wordnetid="103278248" confidence="0.8">
<amplifier wordnetid="102705944" confidence="0.8">
<link xlink:type="simple" xlink:href="../067/158067.xml">
Nyquist plot</link></amplifier>
</electronic_equipment>
</equipment>
</quantity>
</constant>
</instrumentality>
</parameter>
</artifact>
</concept>
</idea>
)</entry>
<entry level="1" type="bullet">

 Interactive CAN (<link xlink:type="simple" xlink:href="../284/231284.xml">
Controller-area network</link>) packet read and write</entry>
<entry level="1" type="bullet">

 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C programming language</link></programming_language>
 <link xlink:type="simple" xlink:href="../858/9806858.xml">
code generation</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../542/1729542.xml">
Neural network</link>s</entry>
<entry level="1" type="bullet">

 OPC (<link xlink:type="simple" xlink:href="../046/847046.xml">
OLE for process control</link>) communication</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../854/563854.xml">
Global optimization</link> of system parameters</entry>
<entry level="1" type="bullet">

 Real-time <link xlink:type="simple" xlink:href="../993/993.xml">
analog signal</link> and digital I/O under Windows</entry>
<entry level="1" type="bullet">

 Bit true <link xlink:type="simple" xlink:href="../736/449736.xml">
fixed-point arithmetic</link> blockset for simulation and code generation</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../858/9806858.xml">
Code generation</link> for on-chip peripherals like serial ports, CAN, PWM, QEP, Event Capture, SPI, ADC, DAC, and digital I/O</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../086/76086.xml">
Electric motor</link> simulation library for AC induction, Brushless DC, Stepper and Brushless DC motors</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<weblink xlink:type="simple" xlink:href="http://www.vissim.com">
VisSim web site</weblink></p>

</sec>
</bdy>
</causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</article>
