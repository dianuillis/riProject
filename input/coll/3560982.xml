<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:35:10[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<header>
<title>Protocol spoofing</title>
<id>3560982</id>
<revision>
<id>96183472</id>
<timestamp>2006-12-23T23:38:13Z</timestamp>
<contributor>
<username>QEDquid</username>
<id>525074</id>
</contributor>
</revision>
<categories>
<category>Network protocols</category>
</categories>
</header>
<bdy>

<b>Protocol spoofing</b> is used in data communications to improve performance in situations where an existing <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/630770.xml">
protocol</link></rule>
</direction>
</protocol>
</message>
 is inadequate, for example due to long delays or high error rates.<p>

<b>Note:</b> In a <link xlink:type="simple" xlink:href="../398/7398.xml">
computer security</link> context, <it>spoofing</it> refers to various forms of falsification of data that are unrelated to the techniques discussed here. See <link xlink:type="simple" xlink:href="../209/503209.xml">
spoofing attack</link>.</p>

<sec>
<st>
Spoofing techniques</st>
<p>

In most applications of protocol spoofing, a communications device such as a <link xlink:type="simple" xlink:href="../900/19443900.xml">
modem</link> or <link xlink:type="simple" xlink:href="../748/25748.xml">
router</link> simulates ("spoofs") the remote endpoint of a connection to a locally attached host, while using a more appropriate protocol to communicate with a compatible remote device that performs the equivalent spoof at the other end of the communications link.</p>

<ss1>
<st>
File transfer spoofing</st>
<p>

Error correction and file transfer protocols typically work by calculating a <link xlink:type="simple" xlink:href="../538/7538.xml">
checksum</link> or <link xlink:type="simple" xlink:href="../832/38832.xml">
CRC</link> for a block of data known as a <it>packet</it>, and transmitting the resulting number at the end of the packet. At the other end the receiver re-calculates the number and compares it to what was sent from the remote machine. If the two match the packet was transmitted correctly, and the receiver sends an ACK to signal that it's ready to receive the next packet.</p>
<p>

The time to transmit the ACK back to the sender is a function of the phone lines, as opposed to the <link xlink:type="simple" xlink:href="../900/19443900.xml">
modem</link>'s speed, and is typically about 1/10th of a second. For a protocol using small packets, this delay can be larger than the time needed to send a packet. For instance, the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../231/173231.xml">
UUCP</link></rule>
</direction>
</protocol>
</message>
 "g" protocol and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../027/17027.xml">
Kermit</link></rule>
</direction>
</protocol>
</message>
 both use 64-byte packets, which on a 9600 bit/s link takes about 1/20th of a second to send. <link xlink:type="simple" xlink:href="../757/1117757.xml">
XModem</link> used a slightly larger 128 byte packet.</p>
<p>

In early high-speed modems, before the introduction of <link xlink:type="simple" xlink:href="../816/3980816.xml">
echo cancellation</link> in <link xlink:type="simple" xlink:href="../435/3450435.xml">
v.32</link> and later protocols, modems typically had a very slow "backchannel" for sending things like these ACKs back to the sender. On a ~18,000 bit/s <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<merchant wordnetid="110309896" confidence="0.8">
<businessperson wordnetid="109882716" confidence="0.8">
<capitalist wordnetid="109609232" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<seller wordnetid="110577284" confidence="0.8">
<link xlink:type="simple" xlink:href="../514/591514.xml">
TrailBlazer</link></seller>
</causal_agent>
</capitalist>
</businessperson>
</merchant>
</person>
</physical_entity>
, for instance, the modem could send as many as 35 UUCP packets a second, but the backchannel offered only 75 bit/s, not nearly enough for the 35 bytes (280 bits) of ACK messages to get back in time to keep the transfer going.</p>
<p>

Modems like TrailBlazer or <link>
Multi-Tech</link> series address this by sending ACKs back from the local modem immediately. This allows the sending machine to continue streaming constantly with no interruptions. The data is then sent to the remote modem using an error-free link which requires considerably less backchannel overhead, invisibly stripping it off again at the far end. Likewise, the remote modem discards the ACKs being sent by the receiver's software.</p>

</ss1>
<ss1>
<st>
<link xlink:type="simple" xlink:href="../538/30538.xml">
TCP</link> spoofing</st>
<p>

TCP connections may suffer from performance limitations due to insufficient window size for links with high <it><link xlink:type="simple" xlink:href="../063/3586063.xml">
bandwidth x delay product</link></it>, and on long-delay links such as those over <link xlink:type="simple" xlink:href="../210/41210.xml">
GEO</link> satellites, TCP's <link xlink:type="simple" xlink:href="../666/1977666.xml">
slow-start</link> algorithm significantly delays connection startup.  A spoofing router terminates the TCP connection locally and uses protocols tailored to long delays over the satellite link.</p>

</ss1>
<ss1>
<st>
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/43389.xml">
RIP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
/<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../570/3176570.xml">
SAP</link></rule>
</direction>
</protocol>
</message>
 spoofing</st>
<p>

SAP and RIP periodically broadcast network information even if routing/service tables are unchanged.  <link xlink:type="simple" xlink:href="../759/514759.xml">
dial-on-demand</link> WAN links in <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../078/15078.xml">
IPX</link></rule>
</direction>
</protocol>
</message>
 networks therefore never become idle and won't disconnect.  A spoofing router or modem will intercept the SAP and RIP broadcasts, and re-broadcast the advertisements from its own routing/service table that it only updates when the link is active for other reasons.</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../504/2256504.xml">
TCP Westwood</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../128/2584128.xml">
TCP tuning</link></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.faqs.org/faqs/uucp-internals/section-7.html">
UUCP `g' Protocol</weblink></entry>
<entry level="1" type="bullet">

Ishac, Joseph; Allman, Mark&#32;(2001).&#32;"<it><weblink xlink:type="simple" xlink:href="http://gltrs.grc.nasa.gov/reports/2001/TM-2001-211151.pdf">
On the Performance of TCP Spoofing in Satellite Networks</weblink></it>".</entry>
</list>
</p>



</sec>
</bdy>
</rule>
</direction>
</protocol>
</message>
</article>
