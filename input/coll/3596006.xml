<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:30:15[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<field  confidence="0.9511911446218017" wordnetid="108569998">
<curve  confidence="0.8" wordnetid="113867641">
<event  confidence="0.8" wordnetid="100029378">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<rule  confidence="0.8" wordnetid="105846932">
<line  confidence="0.8" wordnetid="113863771">
<shape  confidence="0.8" wordnetid="100027807">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Schoof&apos;s algorithm</title>
<id>3596006</id>
<revision>
<id>244170659</id>
<timestamp>2008-10-09T17:11:41Z</timestamp>
<contributor>
<username>Giftlite</username>
<id>37986</id>
</contributor>
</revision>
<categories>
<category>Group theory</category>
<category>Number theory</category>
<category>Elliptic curves</category>
<category>Cryptographic algorithms</category>
<category>Finite fields</category>
<category>Asymmetric-key cryptosystems</category>
</categories>
</header>
<bdy>

<b>Schoof's algorithm</b>, first described by <link>
R. Schoof</link> in <link xlink:type="simple" xlink:href="../846/34846.xml">
1985</link>, allows one to calculate the number of points on an <link xlink:type="simple" xlink:href="../225/10225.xml">
elliptic curve</link> over a finite field and is used mostly in <link xlink:type="simple" xlink:href="../966/9966.xml">
elliptic curve cryptography</link>.<p>

From <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../758/1108758.xml">
Hasse's theorem on elliptic curves</link></proposition>
</shape>
</line>
</theorem>
</curve>
</message>
</statement>
 the number of point on a curve is roughly known: </p>
<p>

<indent level="1">

<math>|\#E(\mathbb{F}_q) - (q+1)| \leq 2\sqrt{q},</math>
</indent>

so to find the exact number it is enough to find it modulo <math>R &amp;gt; 4 \sqrt{q}</math>. Schoof's algorithm calculates </p>
<p>

<indent level="1">

<math>q+1 - |E(\mathbb{F}_q)| \pmod{r_i}</math> 
</indent>

for several small primes <math>r_i</math>, where <math>\prod r_i = R</math>, and uses the <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../713/7713.xml">
Chinese remainder theorem</link></proposition>
</theorem>
</message>
</statement>
 to combine the results.</p>
<p>

The running time of the original algorithm is proportional to <math>(\log q)^8</math> and with several improvements can be reduced to <math>O((\log q)^6)</math>, which is adequate for <math>q &amp;lt; 2^{56}</math> on a <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computer</link>.</p>
<p>

The algorithm has been extended by <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/1136999.xml">
Noam Elkies</link></associate>
</scholar>
</mathematician>
</scientist>
</causal_agent>
</alumnus>
</colleague>
</intellectual>
</person>
</peer>
</physical_entity>
 and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../430/3721430.xml">
A. O. L. Atkin</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 to give the <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../018/3717018.xml">
Schoof-Elkies-Atkin algorithm</link></geographical_area>
</tract>
</location>
</field>
</region>
, which has only <math>O((\log q)^5)</math> time complexity and thus is asymptotically faster.</p>

<sec>
<st>
Implementations</st>
<p>

Several algorithms were implemented in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
 by Mike Scott and are available with <weblink xlink:type="simple" xlink:href="ftp://ftp.compapp.dcu.ie/pub/crypto/">
source code</weblink>. The implementations are free (no terms, no conditions), but they use <weblink xlink:type="simple" xlink:href="http://indigo.ie/~mscott/">
MIRACL</weblink> library which is only free for non-commercial use. Note that (unmodified) programs may be used to generate curves for commercial use. There are
<list>
<entry level="1" type="bullet">

 Schoof's algorithm <weblink xlink:type="simple" xlink:href="ftp://ftp.compapp.dcu.ie/pub/crypto/schoof.cpp">
implementation</weblink> for <math>E(\mathbb{F}_p)</math> with prime <math>p</math>.</entry>
<entry level="1" type="bullet">

 Schoof's algorithm <weblink xlink:type="simple" xlink:href="ftp://ftp.compapp.dcu.ie/pub/crypto/schoof2.cpp">
implementation</weblink> for <math>E(\mathbb{F}_{2^m})</math>.</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 R. Schoof, <it>Elliptic curves over finite fields and the computation of square roots mod p,</it> Mathematics of Computation, Volume 44, 1985.</entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</shape>
</line>
</rule>
</entity>
</event>
</curve>
</field>
</article>
