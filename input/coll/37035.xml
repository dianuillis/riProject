<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:39:30[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<idea  confidence="0.8" wordnetid="105833840">
<concept  confidence="0.8" wordnetid="105835747">
<rule  confidence="0.8" wordnetid="105846054">
<header>
<title>Conway&apos;s Game of Life</title>
<id>37035</id>
<revision>
<id>244545658</id>
<timestamp>2008-10-11T10:30:15Z</timestamp>
<contributor>
<username>ScAvenger</username>
<id>7206673</id>
</contributor>
</revision>
<categories>
<category>Cellular automaton rules</category>
<category>Self-organization</category>
</categories>
</header>
<bdy>
<p>

This article is about the cellular automaton.&#32;&#32;For the board game, see <game wordnetid="100456199" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../578/31578.xml">
The Game of Life</link></game>
.&#32;&#32;</p>
<p>

<indent level="1">

<it>"Conway game" can refer to games as defined by <link xlink:type="simple" xlink:href="../432/51432.xml">
surreal number</link>s, which Conway also developed.</it>
</indent>

<image location="right" width="150px" src="Gospers_glider_gun.gif" type="frame">
</image>

The <b>Game of Life</b> is a <link xlink:type="simple" xlink:href="../342/54342.xml">
cellular automaton</link> devised by the <autocracy wordnetid="108361001" confidence="0.8">
<system wordnetid="108435388" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<monarchy wordnetid="108363812" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<political_system wordnetid="108367880" confidence="0.8">
<economy wordnetid="108366753" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../717/31717.xml">
British</link></democracy>
</group>
</economy>
</political_system>
</political_unit>
</state>
</monarchy>
</political_orientation>
</social_group>
</system>
</autocracy>
 <link xlink:type="simple" xlink:href="../902/18902.xml">
mathematician</link> <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../807/15807.xml">
John Horton Conway</link></scientist>
</person>
 in 1970. It is the best-known example of a cellular automaton.</p>
<p>

The "game" is actually a <link xlink:type="simple" xlink:href="../463/233463.xml">
zero-player game</link>, meaning that its evolution is determined by its initial state, needing no input from human players. One interacts with the Game of Life by creating an initial configuration and observing how it evolves.</p>

<sec>
<st>
Rules</st>
<p>

The universe of the Game of Life is an infinite two-dimensional orthogonal grid of square <it>cells</it>, each of which is in one of two possible states, <it>live</it> or <it>dead</it>. Every cell interacts with its eight <it>neighbours</it>, which are the cells that are directly horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:
<list>
<entry level="1" type="number">

Any live cell with fewer than two live neighbours dies, as if by loneliness.</entry>
<entry level="1" type="number">

Any live cell with more than three live neighbours dies, as if by overcrowding.</entry>
<entry level="1" type="number">

Any live cell with two or three live neighbours lives, unchanged, to the next generation.</entry>
<entry level="1" type="number">

Any dead cell with exactly three live neighbours comes to life.</entry>
</list>
</p>
<p>

The initial pattern constitutes the 'seed' of the system. The first generation is created by applying the above rules simultaneously to every cell in the seed â€” births and deaths happen simultaneously, and the discrete moment at which this happens is sometimes called a <it>tick</it>. (In other words, each generation is a pure function of the one before.) The rules continue to be applied repeatedly to create further generations.</p>

</sec>
<sec>
<st>
Origins</st>
<p>

Conway was interested in a problem presented in the 1940s by renowned mathematician <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../942/15942.xml">
John von Neumann</link></scientist>
</person>
, who tried to find a hypothetical machine that could build copies of itself and succeeded when he found a mathematical model for such a machine with very complicated rules on a rectangular grid. Conway tried to simplify von Neumann's ideas and eventually succeeded. By coupling his previous success with <form wordnetid="106290637" confidence="0.8">
<word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../919/344919.xml">
Leech's problem</link></language_unit>
</group>
</part>
</word>
</form>
 in group theory with his interest in von Neumann's ideas concerning self-replicating machines, Conway devised the Game of Life.</p>
<p>

It made its first public appearance in the October 1970 issue of <it><periodical wordnetid="106593296" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../507/29507.xml">
Scientific American</link></periodical>
</it>, in <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../435/20435.xml">
Martin Gardner</link></person>
's "<link xlink:type="simple" xlink:href="../434/20434.xml">
Mathematical Games</link>" column. From a theoretical point of view, it is interesting because it has the power of a <link xlink:type="simple" xlink:href="../435/71435.xml">
universal Turing machine</link>: that is, anything that can be computed <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>ically can be computed within Conway's Game of Life. Gardner wrote:
The game made Conway instantly famous, but it also opened up a whole new field of mathematical research, the field of <link xlink:type="simple" xlink:href="../342/54342.xml">
cellular automata</link> ... Because of Life's analogies with the rise, fall and alterations of a society of living organisms, it belongs to a growing class of what are called 'simulation games' (games that resemble real life processes)</p>
<p>

Ever since its publication, Conway's Game of Life has attracted much interest because of the surprising ways in which the patterns can evolve. Life is an example of <link xlink:type="simple" xlink:href="../436/37436.xml">
emergence</link> and <link xlink:type="simple" xlink:href="../947/286947.xml">
self-organization</link>. It is interesting for <link xlink:type="simple" xlink:href="../939/22939.xml">
physicist</link>s, <link xlink:type="simple" xlink:href="../632/9127632.xml">
biologist</link>s, <link xlink:type="simple" xlink:href="../223/9223.xml">
economists</link>, <link xlink:type="simple" xlink:href="../831/18831.xml">
mathematician</link>s, <link xlink:type="simple" xlink:href="../155/13692155.xml">
philosophers</link>, <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../441/1003441.xml">
generative scientists</link></geographical_area>
</tract>
</location>
</field>
</region>
 and others to observe the way that complex patterns can emerge from the implementation of very simple rules. The game can also serve as a didactic <link xlink:type="simple" xlink:href="../533/103533.xml">
analogy</link>, used to convey the somewhat counterintuitive notion that "design" and "organization" can spontaneously emerge in the absence of a designer. For example, philosopher and cognitive scientist <link xlink:type="simple" xlink:href="../756/8756.xml">
Daniel C. Dennett</link> has used the analog of Conway's Life "universe" extensively to illustrate the possible evolution of complex philosophical constructs, such as <link xlink:type="simple" xlink:href="../664/5664.xml">
consciousness</link> and <link xlink:type="simple" xlink:href="../921/47921.xml">
free will</link>, from the relatively simple set of deterministic physical laws governing our own universe.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

The popularity of Conway's Life was helped by the fact that it came into being just in time for a new generation of inexpensive <link xlink:type="simple" xlink:href="../272/20272.xml">
minicomputer</link>s which were being released into the market, meaning that the game could be run for hours on these machines which were otherwise unused at night. In this respect it foreshadowed the later popularity of computer-generated <link xlink:type="simple" xlink:href="../913/10913.xml">
fractals</link>. For many, Life was simply a programming challenge, a fun way to waste <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link> cycles. For some, however, Life had more philosophical connotations. It developed a cult following through the 1970s and beyond; current developments have gone so far as to create theoretic emulations of computer systems within the confines of a Life board.</p>
<p>

Conway chose his rules carefully, after considerable experimentation, to meet three criteria:
<list>
<entry level="1" type="number">

There should be no initial pattern for which there is a simple proof that the population can grow without limit.</entry>
<entry level="1" type="number">

There should be initial patterns that apparently do grow without limit.</entry>
<entry level="1" type="number">

There should be simple initial patterns that grow and change for a considerable period of time before coming to an end in the following possible ways:</entry>
<entry level="3" type="bullet">

Fading away completely (from overcrowding or from becoming too sparse); or</entry>
<entry level="3" type="bullet">

Settling into a stable configuration that remains unchanged thereafter, or entering an oscillating phase in which they repeat an endless cycle of two or more periods.</entry>
</list>
</p>

</sec>
<sec>
<st>
Examples of patterns</st>
<p>

<image location="right" width="150px" src="Game_of_life_animated_glider.gif" type="frame">
<caption>

The evolution and movement of a glider.
</caption>
</image>

<image location="right" width="150px" src="Game_of_life_animated_LWSS.gif" type="frame">
<caption>

The evolution and movement of a LWSS.
</caption>
</image>
</p>
<p>

Many different types of patterns occur in the Game of Life, including static patterns ("<link xlink:type="simple" xlink:href="../362/3132362.xml">
still life</link>s"), repeating patterns ("<link xlink:type="simple" xlink:href="../941/1001941.xml">
oscillator</link>s" â€“ a superset of still lifes), and patterns that translate themselves across the board ("<link xlink:type="simple" xlink:href="../233/796233.xml">
spaceship</link>s"). Common examples of these three classes are shown below, with live cells shown in black, and dead cells shown in white.</p>
<p>

<table cellpadding="5" border="1">
<row>
<col>
Block (still life)</col>
<col>
 <image width="150px" src="Game_of_life_block.svg">
<caption>

Game of life block.svg
</caption>
</image>
</col>
</row>
<row>
<col>
Boat (still life)</col>
<col>
 <image width="150px" src="game_of_life_boat.png">
<caption>

game of life boat.png
</caption>
</image>
</col>
</row>
<row>
<col>
Blinker (two-phase oscillator)</col>
<col>
 <image width="150px" src="game_of_life_blinker.png">
<caption>

game of life blinker.png
</caption>
</image>
</col>
</row>
<row>
<col>
Toad (two-phase oscillator)</col>
<col>
 <image width="150px" src="game_of_life_toad.png">
<caption>

game of life toad.png
</caption>
</image>
</col>
</row>
<row>
<col>
Glider (spaceship)</col>
<col>
 <image width="150px" src="game_of_life_glider.png">
<caption>

game of life glider.png
</caption>
</image>
</col>
</row>
<row>
<col>
Lightweight spaceship (LWSS)</col>
<col>
 <image width="150px" src="game_of_life_lwss.png">
<caption>

game of life lwss.png
</caption>
</image>
</col>
</row>
<row>
<col>
Pulsar (three-phase oscillator)</col>
<col>
 <image width="150px" src="4demons.png">
<caption>

4demons.png
</caption>
</image>
</col>
</row>
</table>
</p>
<p>

The "pulsar"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>  is the most common period 3 oscillator.  The great majority of naturally occurring oscillators are period 2, like the blinker and the toad, but periods 4, 8, 14, 15, 30, and a few others have been seen on rare occasions.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> </p>
<p>

Patterns called "<link xlink:type="simple" xlink:href="../483/1492483.xml">
Methuselah</link>s" can evolve for long periods before repeating. "Diehard" is a pattern that eventually disappears after 130 generations, or steps. "Acorn" takes 5206 generations to generate at least 25 gliders and stabilise as many oscillators.</p>


<p>

<table>
<row>
<col align="center">
&nbsp;<image width="150px" src="game_of_life_diehard.png">
<caption>

game of life diehard.png
</caption>
</image>
&nbsp;</col>
<col align="center">
&nbsp;<image width="150px" src="game_of_life_methuselah.png">
<caption>

game of life methuselah.png
</caption>
</image>
&nbsp;</col>
</row>
<row>
<col align="center">
Diehard</col>
<col align="center">
Acorn</col>
</row>
</table>
</p>


<p>

Conway originally conjectured that no pattern can grow indefinitely â€“ i.e., that for any initial configuration with a finite number of living cells, the population cannot grow beyond some finite upper limit.  In the game's original appearance in "<link xlink:type="simple" xlink:href="../434/20434.xml">
Mathematical Games</link>", Conway offered a $50 prize to the first person who could prove or disprove the conjecture before the end of 1970.  One way to disprove it would be to discover patterns that keep adding counters to the field: a "gun", which would be a configuration that repeatedly shoots out moving objects such as the "glider", or a "puffer train", which would be a configuration that moves but leaves behind a trail of persistent "smoke".</p>
<p>

The prize was won in November of the same year by a team from the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/18879.xml">
Massachusetts Institute of Technology</link></university>
, led by <person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../528/505528.xml">
Bill Gosper</link></programmer>
</person>
; the "Gosper gun" shown below produces its first glider on the 15th generation, and another glider every 30th generation from then on.  This first glider gun is still the smallest one known:</p>

<p>

<image width="150px" src="Game_of_life_glider_gun.png">
<caption>

Game of life glider gun.png
</caption>
</image>

Gosper Glider Gun</p>

<p>

Simpler patterns were later found that also exhibit infinite growth. All three of the following patterns grow indefinitely:  the first two create one "block-laying" switch engine each, while the third creates two. The first has only 10 live cells (which has been proven to be minimal).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> The second fits in a 5 Ã— 5 square. The third is only one cell high:</p>


<p>

<table>
<row>
<col align="center">
<image width="150px" src="game_of_life_infinite1.png">
<caption>

game of life infinite1.png
</caption>
</image>
 &nbsp;&nbsp;&nbsp;&nbsp;<image width="150px" src="game_of_life_infinite2.png">
<caption>

game of life infinite2.png
</caption>
</image>
</col>
</row>
<row>
<col align="center">
<image width="150px" src="game_of_life_infinite3.svg">
<caption>

game of life infinite3.svg
</caption>
</image>
</col>
</row>
</table>
</p>


<p>

Later discoveries included other "<link xlink:type="simple" xlink:href="../984/1158984.xml">
gun</link>s", which are stationary and shoot out gliders or other spaceships; "<link xlink:type="simple" xlink:href="../747/797747.xml">
puffer</link>s", which move along leaving behind a trail of debris; and "<link xlink:type="simple" xlink:href="../851/7030851.xml">
rake</link>s", which move and emit spaceships. Gosper also constructed the first pattern with an <link xlink:type="simple" xlink:href="../619/3287619.xml">
asymptotically optimal</link> <link xlink:type="simple" xlink:href="../246/9228246.xml">
quadratic growth rate</link>, called a "<link>
breeder</link>", or "lobster", which worked by leaving behind a trail of guns.</p>
<p>

It is possible for gliders to interact with other objects in interesting ways. For example, if two gliders are shot at a block in just the right way, the block will move closer to the source of the gliders. If three gliders are shot in just the right way, the block will move farther away. This "sliding block memory" can be used to simulate a <link xlink:type="simple" xlink:href="../647/7647.xml">
counter</link>. It is possible to construct <link xlink:type="simple" xlink:href="../168/18168.xml">
logic gate</link>s such as <it><link xlink:type="simple" xlink:href="../152/18152.xml">
AND</link></it>, <it><link xlink:type="simple" xlink:href="../962/7962.xml">
OR</link></it> and <it><link xlink:type="simple" xlink:href="../019/161019.xml">
NOT</link></it> using gliders. It is possible to build a pattern that acts like a <link xlink:type="simple" xlink:href="../931/10931.xml">
finite state machine</link> connected to two counters. This has the same computational power as a <link xlink:type="simple" xlink:href="../435/71435.xml">
universal Turing machine</link>, so the Game of Life is as powerful as any computer with unlimited memory: it is <link xlink:type="simple" xlink:href="../621/30621.xml">
Turing complete</link>. Furthermore, a pattern can contain a collection of guns that combine to construct new objects, including copies of the original pattern. A "universal constructor" can be built which contains a Turing complete computer, and which can build many types of complex objects, including more copies of itself.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>

</sec>
<sec>
<st>
Iteration</st>
<p>

From a random initial pattern of living cells on the grid, observers will find the population constantly changing as the generations tick by. The patterns that emerge from the simple rules may be considered a form of <link xlink:type="simple" xlink:href="../136/18974136.xml">
beauty</link>.  Small isolated subpatterns with no initial symmetry tend to become symmetrical.  Once this happens the symmetry may increase in richness, but it cannot be lost unless a nearby subpattern comes close enough to disturb it.  In a very few cases the society eventually dies out, with all living cells vanishing, though this may not happen for a great many generations.  Most initial patterns eventually "burn out", producing either stable figures or patterns that oscillate forever between two or more states; many also produce one or more gliders or spaceships that travel indefinitely away from the initial location.</p>

</sec>
<sec>
<st>
Algorithms</st>
<p>

<image location="right" width="150px" src="FPENTO.PNG" type="frame">
<caption>

Conway discovered that the F-<link xlink:type="simple" xlink:href="../712/23712.xml">
pentomino</link> failed to stabilise in a small number of generations. (1103 generations with 6 gliders)
</caption>
</image>

The earliest results in the Game of Life were obtained without the use of computers. The simplest still-lifes and oscillators were discovered while tracking the fates of various small starting configurations using graph paper, blackboards, physical game boards (such as <game wordnetid="100456199" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../971/64971.xml">
Go</link></game>
) and the like. During this early research, Conway discovered that the F-<link xlink:type="simple" xlink:href="../712/23712.xml">
pentomino</link> (which he called the "R-pentomino") failed to stabilise in a small number of generations.</p>
<p>

These discoveries inspired computer programmers over the world to write programs to track the evolution of Life patterns. Most of the early algorithms were similar. They represented Life patterns as two-dimensional arrays in computer memory. Typically two arrays are used, one to hold the current generation and one in which to calculate its successor.  Often 0 and 1 represent dead and live cells, respectively. A double loop considers each element of the current array in turn, counting the live neighbours of each cell to decide whether the corresponding element of the successor array should be 0 or 1. The successor array is displayed. For the next iteration the arrays swap roles so that the successor array in the last iteration becomes the current array in the next iteration.</p>
<p>

A variety of minor enhancements to this basic scheme are possible, and there are many ways to save unnecessary computation. A cell that did not change at the last time step, and none of whose neighbours changed, is guaranteed not to change at the current time step as well, so a program that keeps track of which areas are active can save time by not updating the inactive zones.</p>
<p>

In principle, the Life field is infinite, but computers have finite memory, and usually array sizes must be declared in advance. This leads to problems when the active area encroaches on the border of the array. Programmers have used several strategies to address these problems. The simplest strategy is simply to assume that every cell outside the array is dead. This is easy to program, but leads to inaccurate results when the active area crosses the boundary. A more sophisticated trick is to consider the left and right edges of the field to be stitched together, and the top and bottom edges also, yielding a <link xlink:type="simple" xlink:href="../800/74800.xml">
toroidal</link> array. The result is that active areas that move across a field edge reappear at the opposite edge. Inaccuracy can still result if the pattern grows too large, but at least there are no pathological edge effects. Techniques of dynamic storage allocation may also be used, creating ever-larger arrays to hold growing patterns.</p>
<p>

Alternatively, the programmer may abandon the notion of representing the Life field with a 2-dimensional array, and use a different data structure, like a vector of coordinate pairs representing live cells. This approach allows the pattern to move about the field unhindered, as long as the population does not exceed the size of the live-coordinate array. The drawback is that counting live neighbours becomes a search operation, slowing down simulation speed. With more sophisticated data structures this problem can also be largely solved.</p>
<p>

For exploring large patterns at great time depths, sophisticated algorithms like <physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../547/1095547.xml">
Hashlife</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
 may be useful.</p>

</sec>
<sec>
<st>
Variations on Life</st>

<p>

Since Life's original inception, new rules have been developed. The standard Game of Life, in which a cell is "born" if it has exactly 3 neighbours, stays alive if it has 2 or 3 living neighbours, and dies otherwise, is symbolised as "23/3". The first number, or list of numbers, is what is required for a cell to continue. The second set is the requirement for birth. Hence "16/6" means "a cell is born if there are 6 neighbours, and lives on if there are either 1 or 6 neighbours". <it><link xlink:type="simple" xlink:href="../836/642836.xml">
HighLife</link></it> is 23/36, because having 6 neighbours, in addition to the original game's 23/3 rule, causes a birth. HighLife is best known for its replicators. <physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/852481.xml">
Additional variations on Life</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
 exist, although the vast majority of these universes are either too chaotic or desolate.</p>
<p>

<image location="right" width="150px" src="Oscillator.gif" type="frame">
<caption>

A sample of a 48-step oscillator from a 2D hexagonal Game of Life (rule 34/2).
</caption>
</image>
</p>
<p>

Some variations modify the geometry of the universe as well as the rule. The above variations can be thought of as 2D Square, because the world is two-dimensional and laid out in a square grid. 3D Square and 1D Square variations have been developed, as have 2D Hexagonal variations where the grid is hexagonal or triangular instead of square.</p>
<p>

Conway's rules may also be generalized so that instead of two states (<it>live</it> and <it>dead</it>) there are three or more.  State transitions are then determined either by a weighting system or by a table specifying separate transition rules for each state; for example, <physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../529/18397529.xml">
Mirek's Cellebration</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
's multi-coloured "Rules Table" and "Weighted Life" rule families each include sample rules equivalent to Conway's Life.</p>
<p>

Patterns relating to fractals and fractal systems may also be observed in certain Life-like variations.  For example, the automaton 12/1 generates four very close approximations to the <link>
SierpiÅ„ski triangle</link> when applied to a single live cell.</p>
<p>

<it>Immigration</it> is a variation that is the same as the Game of Life, except that there are two ON states (often expressed as two different colours). Whenever a new cell is born, it takes on the ON state that is the majority in the three cells that gave it birth. This feature can be used to examine interactions between <link xlink:type="simple" xlink:href="../233/796233.xml">
spaceships</link> and other "objects" within the game.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> Another similar variation, called <it>QuadLife</it>, involves four different ON states. When a new cell is born from three different ON neighbours, it takes on the fourth value, and otherwise like Immigration it takes the majority value.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>  Except for the variation among ON cells, both of these variations act identically to Life.</p>

</sec>
<sec>
<st>
Games based upon Conway's Game of Life</st>

<p>

As with anything interesting in mathematics or science, recreational games can be created for learning and fun. One such game, for two players which each interact with the "game" once per tick, is based upon Conway's Game of Life. Live cells can have two colours and a player wins when all cells of the opponent's colour are eliminated. When a dead cell becomes live, its colour is determined by the dominating colour of its neighbour live cells (which are exactly three), like in the aforementioned <it>Immigration</it>. Start with a random or pre-chosen starting pattern with half the live cells of each colour.  After one iteration, the first player may add one cell of his colour and remove one cell of his opponent's colour. After the next iteration the other player can do the same, and so forth.</p>

</sec>
<sec>
<st>
 Notable Life programs </st>
<p>

The first Life program was written for the <link xlink:type="simple" xlink:href="../278/38278.xml">
PDP-7</link> by <link xlink:type="simple" xlink:href="../693/16480693.xml">
M. J. T. Guy</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<traveler wordnetid="109629752" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<exile wordnetid="110071332" confidence="0.8">
<absentee wordnetid="109757653" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../599/205599.xml">
S. R. Bourne </link></associate>
</absentee>
</exile>
</scientist>
</causal_agent>
</colleague>
</traveler>
</person>
</peer>
</physical_entity>
 in 1970. Without its help some discoveries about the game would have been difficult to make.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

There are now thousands of Life programs online, so a full list will not be provided here. The following is a selection of a small number of programs with some special claim to notability, such as popularity or unusual features. Most of these programs incorporate a graphical user interface for pattern editing and simulation, the capability for simulating multiple rules including Life, and a large library of interesting patterns in Life and other CA rules.
<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ibiblio.org/lifepatterns/">
Conway's Game of Life</weblink> by Alan Hensel. A pop-up Java web applet with fast simulation algorithms and a big library of interesting Life patterns.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://golly.sourceforge.net/">
Golly</weblink>. A cross-platform (Windows, Macintosh, and Linux) open-source Life simulation system by Andrew Trevorrow and Tomas Rokicki including the <link xlink:type="simple" xlink:href="../547/1095547.xml">
hashlife</link> algorithm for extremely fast generation and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../862/23862.xml">
Python</link></programming_language>
 scriptability for both editing and simulation.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.xs4all.nl/~jbontes/">
Life32</weblink>. Freeware for Windows machines includes powerful and scriptable pattern editing features.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.mirekw.com/ca/index.html">
Mirek's Cellebration</weblink>. Free 1-D and 2-D cellular automata viewer, explorer and editor for Windows. Includes powerful facilities for simulating and viewing a wide variety of CA rules including Life, and a scriptable editor.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.uni-bielefeld.de/~achim/xlife-3.5.tar.gz">
Xlife</weblink> A cellular-automaton laboratory by Jon Bennett. Long time the standard Linux Life simulation application, it has also been ported to Windows. Can handle cellular automaton rules with the same neighbourhood as Life and up to eight possible states per cell. See <weblink xlink:type="simple" xlink:href="http://linux.maruhn.com/sec/xlife.html">
http://linux.maruhn.com/sec/xlife.html</weblink> for many alternative versions.</entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<structure wordnetid="105726345" confidence="0.8">
<form wordnetid="105930736" confidence="0.8">
<link xlink:type="simple" xlink:href="../206/1144206.xml">
Garden of Eden pattern</link></form>
</structure>
</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../654/482654.xml">
Hacker Emblem</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
, depicting a glider</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../547/1095547.xml">
Hashlife</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/852481.xml">
Life-like cellular automaton</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
Dennett, D.C. (1991). <it>Consciousness Explained</it>. Boston: Back Bay Books. ISBN 0316180661</entry>
<entry id="2">
Dennett, D.C. (1995). <it>Darwin's Dangerous Idea: Evolution and the Meanings of Life</it>. New York: Simon &amp; Schuster. ISBN 068482471X</entry>
<entry id="3">
Dennett, D.C. (2003). <it>Freedom Evolves</it>. New York: Penguin Books. ISBN 0142003840</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://www.ericweisstein.com/encyclopedias/life/Pulsar.html">
Pulsar</weblink>".&#32;  Eric Weisstein's Treasure Trove of Life.&#32;Retrieved on <link>
2008-09-16</link>.</entry>
<entry id="5">
Achim Flammenkamp&#32;(2004-09-07).&#32;"<weblink xlink:type="simple" xlink:href="http://wwwhomes.uni-bielefeld.de/achim/freq_top_life.html">
Most seen natural occuring ash objects in Game of Life</weblink>".&#32;Retrieved on <link>
2008-09-16</link>.</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://www.ericweisstein.com/encyclopedias/life/InfiniteGrowth.html">
Infinite Growth</weblink>".&#32;  Eric Weisstein's Treasure Trove of Life.&#32;Retrieved on <link>
2008-09-16</link>.</entry>
<entry id="7">
Descriptions of these constructions are given in  <cite id="CITEREFBerlekampConwayGuy2004" style="font-style:normal"><link>
Berlekamp, E. R.</link>; &#32;&amp;&#32;<link>
Guy, R.K.</link>&#32;(2004),&#32;<it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../461/252461.xml">
Winning Ways for your Mathematical Plays</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>&#32;(2nd ed.), A K Peters Ltd, ISBN 978-1-56881-130-7; ISBN 156881142X; ISBN 1568811438; ISBN 1568811446</cite>&nbsp;.</entry>
<entry id="8">
"<weblink xlink:type="simple" xlink:href="http://www.ericweisstein.com/encyclopedias/life/Immigration.html">
Immigration</weblink>".&#32;  Eric Weisstein's Treasure Trove of Life.&#32;Retrieved on <link>
2008-09-16</link>.</entry>
<entry id="9">
"<weblink xlink:type="simple" xlink:href="http://www.ericweisstein.com/encyclopedias/life/QuadLife.html">
QuadLife</weblink>".&#32;  Eric Weisstein's Treasure Trove of Life.&#32;Retrieved on <link>
2008-09-16</link>.</entry>
<entry id="10">
 <cite id="CITEREFGardner1970" style="font-style:normal">Gardner, Martin&#32;(October 1970),&#32;"Mathematical Games: The fantastic combinations of John Conway's new solitaire game "Life"",&#32;<it>Scientific American</it>&#32;<b>223</b>:  120â€“123</cite>&nbsp;.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>



<p>

Many external links concerning the Game of Life can be found on <weblink xlink:type="simple" xlink:href="http://www.dmoz.org/Computers/Artificial_Life/Cellular_Automata/Conway%27s_Game_of_Life/">
Conway&#39;s Game of Life</weblink> at the <work wordnetid="100575741" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<company wordnetid="108058098" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<property wordnetid="113244109" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<subsidiary_company wordnetid="108003935" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/18949501.xml">
Open Directory Project</link></institution>
</subsidiary_company>
</activity>
</psychological_feature>
</act>
</property>
</undertaking>
</company>
</event>
</possession>
</work>
. In addition, <weblink xlink:type="simple" xlink:href="http://pentadecathlon.com/lifeNews/index.php">
Game of Life News</weblink> is a blog reporting on recent developments in the Game of Life by many individuals.</p>
<p>

Some additional links:
<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://cafaq.com/lifefaq/index.php">
Cellular Automata FAQ â€“ Conway's Game of Life</weblink> â€“ Answers to frequently asked questions.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://members.aol.com/life1ine/life/lifepage.htm">
Robert T. Wainwright's LIFEPAGE</weblink> â€“ From 1971 to 1973 Wainwright edited LIFELINE, an influential newsletter for enthusiasts. This site contains a downloadable copy of the first issue as well as an index.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://rendell-attic.org/gol/tm.htm">
A Turing Machine in Conway's Game of Life</weblink> â€“ Describes an implementation of a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 engineered from Game of Life pattern components.</entry>
</list>
</p>




</sec>
</bdy>
</rule>
</concept>
</idea>
</article>
