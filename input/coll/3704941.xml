<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:35:54[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Bairstow&apos;s method</title>
<id>3704941</id>
<revision>
<id>211204363</id>
<timestamp>2008-05-09T06:08:27Z</timestamp>
<contributor>
<username>Ironholds</username>
<id>6804626</id>
</contributor>
</revision>
<categories>
<category>Root-finding algorithms</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../506/21506.xml">
numerical analysis</link>, <b>Bairstow's method</b> is an efficient <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for finding the <link xlink:type="simple" xlink:href="../210/264210.xml">
root</link>s of a real <link xlink:type="simple" xlink:href="../000/23000.xml">
polynomial</link> of arbitrary degree.  The algorithm first appeared in the appendix of the 1920 book "Applied Aerodynamics" by <skilled_worker wordnetid="110605985" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<adult wordnetid="109605289" confidence="0.8">
<professional wordnetid="110480253" confidence="0.8">
<commanding_officer wordnetid="109941964" confidence="0.8">
<educator wordnetid="110045713" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<academician wordnetid="109759069" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../915/4304915.xml">
Leonard Bairstow</link></mathematician>
</causal_agent>
</academician>
</worker>
</military_officer>
</associate>
</educator>
</commanding_officer>
</professional>
</adult>
</scientist>
</serviceman>
</colleague>
</person>
</physical_entity>
</peer>
</skilled_worker>
.  The algorithm finds the roots in <link xlink:type="simple" xlink:href="../918/173918.xml">
complex conjugate</link> pairs using only real arithmetic.<p>

See <link xlink:type="simple" xlink:href="../299/153299.xml">
root-finding algorithm</link> for other algorithms.</p>

<sec>
<st>
Description of the method</st>

<p>

Bairstow's approach is to use <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/22145.xml">
Newton's method</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 to adjust the coefficients <it>u</it> and <it>v</it> in the <link xlink:type="simple" xlink:href="../240/187240.xml">
quadratic</link> <math>x^2 + ux + v</math> until its roots are also roots of the polynomial being solved.  The roots of the quadratic may then be determined, and the polynomial may be divided by the quadratic to eliminate those roots.  This process is then iterated until the polynomial becomes quadratic or linear, and all the roots have been determined.</p>
<p>

<link xlink:type="simple" xlink:href="../205/314205.xml">
Long division</link> of a polynomial 
<indent level="1">

<math>P(x)=\sum_{i=0}^n a_i x^i</math>  
</indent>
by <math>x^2 + ux + v</math> yields a quotient
<indent level="1">

<math>Q(x)=\sum_{i=0}^n b_i x^i</math> 
</indent>
and a remainder <math> cx+d </math> such that
<indent level="1">

<math>  P(x)=(x^2+ux+v)\left(\sum_{i=0}^n b_i x^i\right) + (cx+d). </math>
</indent>
The variables <math>c</math>, <math>d</math>, and the <math> \{b_i\} </math> are functions of <math>u</math> and <math>v</math>. They can be found recursively as follows.
<indent level="1">

<math>\,b_n = b_{n-1} = 0, </math>
</indent>
:<math>\,b_i=a_{i+2}-ub_{i+1}-vb_{i+2} \qquad (i=n-2,\ldots,0), </math>
<indent level="1">

<math>\,c=a_1-ub_0-vb_1,</math>
</indent>
:<math>\,d=a_0-vb_0.</math>
The quadratic evenly divides the polynomial when
<indent level="1">

<math>c(u,v)=d(u,v)=0. \,</math>
</indent>
Values of <math>u</math> and <math>v</math> for which this occurs can be discovered by picking starting values and iterating Newton's method in two dimensions
<indent level="1">

<math>\begin{bmatrix}
u\\
 v\end{bmatrix}  :=
\begin{bmatrix}
u\\
 v\end{bmatrix} - \begin{bmatrix}
\frac{\partial c}{\partial u}&amp;\frac{\partial c}{\partial v}\\[3pt]
\frac{\partial d}{\partial u} &amp;\frac{\partial d}{\partial v}\end{bmatrix}^{-1} 
\begin{bmatrix}
c\\
 d\end{bmatrix}
</math>
</indent>
until convergence occurs.</p>

</sec>
<sec>
<st>
Performance</st>
<p>

Bairstow's algorithm inherits the quadratic convergence of Newton's method, except in the case of quadratic factors of multiplicity higher than 1, when convergence can be rather slow.</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/BairstowsMethod.html">
Bairstow's Algorithm on Mathworld</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://library.lanl.gov/numerical/bookfpdf.html">
Numerical Recipes in Fortran 77 Online</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.savetman.com/roots.html">
Compute roots of polynomials interactively using Bairstow's Method on savetman.com</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.polarhome.com:793/~amate2/php/polysolver_en.php">
Determine the roots of polynomials (gr(P)= 10) using Bairstow's Method</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vtk.org/doc/nightly/html/classvtkMath.html">
LinBairstowSolve, an open-source C++ implementation of the Lin-Bairstow method is available as a method of the VTK library</weblink></entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
