<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:43:03[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<system  confidence="0.8" wordnetid="104377057">
<artifact  confidence="0.8" wordnetid="100021939">
<instrumentality  confidence="0.8" wordnetid="103575240">
<header>
<title>Word problem (mathematics)</title>
<id>3852079</id>
<revision>
<id>239000130</id>
<timestamp>2008-09-17T11:05:36Z</timestamp>
<contributor>
<username>NE2</username>
<id>1757249</id>
</contributor>
</revision>
<categories>
<category>Reduction systems</category>
<category>Theoretical computer science</category>
<category>Abstract algebra</category>
</categories>
</header>
<bdy>

This article is about algorithmic word problems in mathematics and computer science.&#32;&#32;For its completely different meaning in <link xlink:type="simple" xlink:href="../471/326471.xml">
mathematics education</link>, see <link xlink:type="simple" xlink:href="../013/297013.xml">
word problem (mathematics education)</link>.&#32;&#32;<p>

In <link xlink:type="simple" xlink:href="../831/18831.xml">
mathematics</link> and <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, a <b>word problem</b> for a set S with respect to a system of finite encodings of its elements, is the algorithmic problem of deciding whether two given representatives represent the same element of the set.</p>

<sec>
<st>
 Background and motivation </st>

<p>

Many occasions arise in mathematics where one wishes to use a finite amount of information to describe an element of a (typically infinite) set. This issue is particularly apparent in computational mathematics. Traditional models of computation (such as the <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
) have storage capacity which is unbounded, so it is in principle possible to perform computations with the elements of infinite sets. On the other hand, since the amount of storage space in use at any one time is finite, we need each element to have a finite  representation.</p>
<p>

For various reasons, it is not always possible or desirable to use a system of <it>unique</it> encodings, that is, one in which every element has a single encoding. When using an encoding system without uniqueness, the question naturally arises of whether there is an algorithm which, given as input two encodings, decides whether they represent the same element. Such an algorithm
is called a <it>solution to the word problem</it> for the encoding system.</p>

</sec>
<sec>
<st>
 The word problem in universal algebra </st>

<p>

In <link xlink:type="simple" xlink:href="../923/18716923.xml">
algebra</link>, one often studies infinite algebras which are generated (under the <link xlink:type="simple" xlink:href="../456/404456.xml">
finitary</link> operations of the algebra) by finitely many elements. In this case, the elements of the algebra have a natural system of finite encoding as expressions in terms of the generators and operations. The word problem here is thus to determine, given two such expressions, whether
they represent the same element of the algebra.</p>
<p>

The word problem occurs in the study of <link xlink:type="simple" xlink:href="../304/469304.xml">
lattices</link>; there it may be shown that the word problem has a solution, namely, the set of all equivalent words is the <link xlink:type="simple" xlink:href="../669/10361669.xml">
free lattice</link>. </p>
<p>

The most important and deeply studied case of the word problem is in the theory of <link xlink:type="simple" xlink:href="../799/27799.xml">
semigroup</link>s and <link xlink:type="simple" xlink:href="../447/19447.xml">
group</link>s. There are <link xlink:type="simple" xlink:href="../563/33563.xml">
many groups for which the word problem</link> is not solvable, in that there is no Turing machine that can determine the equivalence of <it>any</it> two words in a finite time. (There do exist, however, algorithms to determine the equivalence of given words; it is just that one might require an infinite number of algorithms to find all equivalences). </p>
<p>

The word problem on free <link xlink:type="simple" xlink:href="../343/309343.xml">
Heyting algebra</link>s is difficult<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.  The only known results are that the free Heyting algebra on one generator is infinite, and that the free <link xlink:type="simple" xlink:href="../751/650751.xml">
complete Heyting algebra</link> on one generator exists (and has one more element than the free Heyting algebra).</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Munn tree</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../563/33563.xml">
Word problem for groups</link></entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/614147.xml">
Knuth-Bendix completion algorithm</link></language>
</instrumentality>
</artifact>
</system>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
Peter T. Johnstone, <it>Stone Spaces</it>, (1982) Cambridge University Press, Cambridge, ISBN 0-521-23893-5. <it>(See chapter 1, paragraph 4.11)''</it></entry>
</reflist>
</p>

</sec>
</bdy>
</instrumentality>
</artifact>
</system>
</article>
