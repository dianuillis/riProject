<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:45:17[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Cryptovirology</title>
<id>3852459</id>
<revision>
<id>242289564</id>
<timestamp>2008-10-01T17:27:51Z</timestamp>
<contributor>
<username>Bogdangiusca</username>
<id>9475</id>
</contributor>
</revision>
<categories>
<category>Computer viruses</category>
<category>Cryptography</category>
</categories>
</header>
<bdy>

<b>Cryptovirology</b> is a field that studies how to use <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link> to design powerful <link xlink:type="simple" xlink:href="../901/20901.xml">
malicious software</link>. The field was born with the observation that public key cryptography can be used to break the symmetry between what an antivirus analyst sees regarding a virus and what the virus writer sees. The former only sees a public key whereas the latter sees a public key and corresponding private key. The first attack that was identified in the field is called "cryptoviral extortion"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. In this attack a <link xlink:type="simple" xlink:href="../196/18994196.xml">
virus</link>, <link xlink:type="simple" xlink:href="../010/6010.xml">
worm</link>, or <link xlink:type="simple" xlink:href="../056/30056.xml">
trojan</link> hybrid encrypts the victim's files and the user must pay the malware author to receive the needed session key (which is encrypted under the author's public key that is contained in the malware) if the user does not have backups and needs the files back.<p>

The field also encompasses covert attacks in which the attacker secretly steals private information such as private keys. An example of the latter type of attack are asymmetric <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../788/360788.xml">
backdoor</link></method>
</know-how>
</technique>
s. An <b>asymmetric backdoor</b> is a backdoor (e.g., in a cryptosystem) that can be used only by the attacker, even after it is found. This contrasts with the traditional backdoor that is symmetric, i.e., anyone that finds it can use it. <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../818/1660818.xml">
Kleptography</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
, a subfield of cryptovirology, is concerned with the study of asymmetric back doors in key generation algorithms, digital signature algorithms, key exchanges, and so on.</p>

<sec>
<st>
General information</st>

<p>

Cryptovirology was born in academia<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. However, practitioners have recently expanded the scope of the field to include the analysis of cryptographic algorithms used by malware writers, attacks on these algorithms using automated methods (such as X-raying<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>) and analysis
of viruses' and packers' encryptors. Also included is the study of cryptography-based techniques (such as "delayed code"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>) developed by malware writers to hamper malware analysis.</p>
<p>

A "questionable encryption scheme", which was introduced by Young and Yung, is an attack tool in cryptovirology. Informally speaking, a questionable encryption scheme is a <link xlink:type="simple" xlink:href="../222/24222.xml">
public key cryptosystem</link> (3-tuple of algorithms) with two supplementary algorithms, forming a 5-tuple of algorithms. It includes a deliberately bogus yet carefully designed key pair generation algorithm that produces a "fake" public key. The corresponding private key (witness of non-encryption) cannot be used to decipher data "encrypted" using the fake public key. By supplying the key pair to an efficient verification predicate (the 5th algorithm in the 5-tuple) it is proven whether the public key is real or fake. When the public key is fake, it follows that no one can decipher data "enciphered" using the fake public key. A questionable encryption scheme has the property that real public keys are computationally indistinguishable from fake public keys when the private key is not available. The private key forms a <link xlink:type="simple" xlink:href="../000/23000.xml">
poly-sized</link> witness of decipherability or indecipherability, whichever may be the case.</p>
<p>

An application of a questionable encryption scheme is a <link xlink:type="simple" xlink:href="../056/30056.xml">
trojan</link> that gathers <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link> from the host, "encrypts" it using the trojan's own public key (which may be real or fake), and then exfiltrates the resulting "ciphertext". In this attack it is thoroughly intractable to prove that data theft has occurred. This holds even when all core dumps of the trojan and all the information that it broadcasts is entered into evidence. An analyst that jumps to the conclusion that the trojan "encrypts" data risks being proven wrong by the malware author (e.g., anonymously).</p>
<p>

When the public key is fake, the attacker gets no plaintext from the trojan. So what's the use? A <link xlink:type="simple" xlink:href="../721/226721.xml">
spoofing</link> attack is possible in which some trojans are released that use real public keys and steal data and some trojans are released that use fake public keys and do not steal data. Many months after the trojans are discovered and analayzed, the attacker anonymously posts the witnesses of non-encryption for the fake public keys. This proves that those trojans never in fact exfiltrated data. This casts doubt on the true nature of future strains of malware that contain such "public keys", since the keys could be real or fake. This attack implies a fundamental limitation on proving data theft.</p>
<p>

There are many other attacks in the field of cryptovirology that are not mentioned here.</p>

</sec>
<sec>
<st>
Examples of viruses with cryptography and ransom capabilities</st>
<p>

While viruses in the wild have used cryptography in the past, the only purpose of such usage of cryptography was to avoid detection by <link xlink:type="simple" xlink:href="../622/268622.xml">
antivirus software</link>. For e.g., the tremor virus<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> used polymorphism as a defensive technique in an attempt to avoid detection by anti-virus software. Though cryptography does assist in such cases to enhance the longevity of a virus, the capabilities of cryptography are not used in the payload. The one-half virus<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> was amongst the first viruses known to have encrypted affected files. However, the one_half virus was not <link>
 ransomware</link>, that is it did not demand any ransom for decrypting the files that it has encrypted.
An example of a virus that informs the owner of the infected machine to pay a ransom is the virus nicknamed Tro_Ransom.A <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>. This virus asks the owner of the infected machine to send $10.99 to a given account through <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../207/193207.xml">
Western Union</link></company>
.
<link xlink:type="simple" xlink:href="../783/1948783.xml">
Virus.Win32.Gpcode.ag</link> is a classic cryptovirus <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>. This virus partially uses a version of 660-bit <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> and encrypts files with many different extensions. It instructs the owner of the machine to email a given mail ID if the owner desires the decryptor. If contacted by email, the user will be asked to pay a certain amount as ransom in return for the decryptor.</p>

</sec>
<sec>
<st>
Creation of cryptoviruses</st>
<p>

To successfully write a cryptovirus, a thorough knowledge of the various <link xlink:type="simple" xlink:href="../985/4928985.xml">
cryptographic primitive</link>s such as <link xlink:type="simple" xlink:href="../939/2736939.xml">
random number generator</link>s, proper recommended cipher text chaining modes etc are necessary. Wrong choices can lead to poor cryptographic strength. So, usage of preexisting routines would be ideal. <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
's <link xlink:type="simple" xlink:href="../413/3302413.xml">
Cryptographic API</link> (CAPI), is a possible tool for the same. It has been demonstrated that using just 8 different calls to this API, a cryptovirus can satisfy all its encryption needs<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>.</p>

</sec>
<sec>
<st>
Other uses of cryptography enabled malware</st>
<p>

Apart from cryptoviral extortion, there are a few other potential uses<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> of cryptoviruses. They are usage in deniable password snatching, usage in cryptocounters,
usage in private information retrieval and usage in secure communication between different instances of a distributed cryptovirus.</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal">A. Young, M. Yung. "Cryptovirology: Extortion-Based Security Threats and Countermeasures".&#32;<it>IEEE Symposium on Security &amp; Privacy, May 6-8, 1996</it>: 129 &ndash; 141.</cite>&nbsp; <weblink xlink:type="simple" xlink:href="http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=502676">
IEEEExplore: Cryptovirology: extortion-based security threats andcountermeasures</weblink></entry>
<entry id="2">
 <cite style="font-style:normal" class="book">A. Young, M. Yung&#32;(2004). Malicious Cryptography: Exposing Cryptovirology.&#32;Wiley. ISBN 0-7645-4975-8.</cite>&nbsp;</entry>
<entry id="3">
 <cite style="font-style:normal">F. Perriot, P. Ferrie&#32;(2004). "<weblink xlink:type="simple" xlink:href="http://pferrie.tripod.com/papers/x-raying.pdf">
Principles and Practise of X-Raying</weblink>".&#32;<it>Virus Bulletin Conference</it>.</cite>&nbsp;</entry>
<entry id="4">
 <cite style="font-style:normal">Z0mbie&#32;(2000). ""DELAYED CODE" technology (version 1.1)".&#32;<it>white paper</it>.</cite>&nbsp; <weblink xlink:type="simple" xlink:href="http://vx.netlux.org/lib/vzo23.html">
Netlux: Delayed code technology</weblink></entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.f-secure.com/v-descs/tremor.shtml">
F-Secure virus descriptions: Tremor</weblink></entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://www.symantec.com/security_response/writeup.jsp?docid=2000-121513-2517-99&amp;tabid=1">
Symantec security response: One_Half</weblink></entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.sophos.com/security/analyses/viruses-and-spyware/trojransoma.html">
Sophos security analyses: Troj_Ransom.A</weblink></entry>
<entry id="8">
<weblink xlink:type="simple" xlink:href="http://www.viruslist.com/en/viruses/encyclopedia?virusid=123921">
Virsulist: Virus.Win32.Gpcode.ag </weblink></entry>
<entry id="9">
 <cite style="font-style:normal">A. Young. "Cryptoviral Extortion Using Microsoft's Crypto API".&#32;<it>International Journal of Information Security, Volume 5, Issue 2, April 2006, pages=67-76</it>.</cite>&nbsp; <weblink xlink:type="simple" xlink:href="http://www.springerlink.com/content/t8m2v4w360025461">
SpringerLink: Cryptoviral extortion using Microsoft's Crypto API</weblink></entry>
</reflist>
</p>


</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cryptovirology.com">
Cryptovirology</weblink> - site maintained by Adam Young and Moti Yung</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://vx.netlux.org/lib/?index=CR&amp;lang=EN">
Cryptography and cryptovirology articles at VX Heavens</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0,1759,1937408,00.asp?kc=EWRSS03119TX1K0000594">
Cryzip Trojan Encrypts Files, Demands Ransom</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.evilbitz.com/2006/12/09/an-intriguer-virus/">
Can a virus lead an enterprise to court?</weblink></entry>
<entry level="1" type="bullet">

 A student report entitled <weblink xlink:type="simple" xlink:href="http://www.delectix.com/articles/malware/superworms-and-cryptovirology/">
Superworms and Cryptovirology</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.rosiello.org/archivio/Next_Virus_Generation.ppt">
Next Virus Generation: an Overview (cryptoviruses)</weblink> by <weblink xlink:type="simple" xlink:href="http://www.rosiello.org/">
Angelo P. E. Rosiello</weblink></entry>
</list>
</p>




<p>



ˌ</p>
</sec>
</bdy>
</article>
