<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:52:05[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>Multiple sequence alignment</title>
<id>4066308</id>
<revision>
<id>243256749</id>
<timestamp>2008-10-05T20:30:36Z</timestamp>
<contributor>
<username>Cyfal</username>
<id>4637213</id>
</contributor>
</revision>
<categories>
<category>Computational phylogenetics</category>
<category>Bioinformatics</category>
</categories>
</header>
<bdy>

<image location="right" width="300px" src="RPLP0_90_ClustalW_aln.gif" type="thumb">
<caption>

First 90 positions of a protein multiple sequence alignment of instances of the acidic ribosomal protein P0 (L10E) from several organisms. Generated with <link xlink:type="simple" xlink:href="../990/1976990.xml">
ClustalW</link>.
</caption>
</image>
<p>

A <b>multiple sequence alignment (MSA)</b> is a <link xlink:type="simple" xlink:href="../289/149289.xml">
sequence alignment</link> of three or more <link xlink:type="simple" xlink:href="../511/24511.xml">
biological sequence</link>s, generally <link xlink:type="simple" xlink:href="../634/23634.xml">
protein</link>, <link xlink:type="simple" xlink:href="../955/7955.xml">
DNA</link>, or <link xlink:type="simple" xlink:href="../758/25758.xml">
RNA</link>. In general, the input set of query sequences are assumed to have an <link xlink:type="simple" xlink:href="../236/9236.xml">
evolution</link>ary relationship by which they share a lineage and are descended from a common ancestor. From the resulting MSA, sequence <link xlink:type="simple" xlink:href="../431/142431.xml">
homology</link> can be inferred and <link xlink:type="simple" xlink:href="../544/149544.xml">
phylogenetic analysis</link> can be conducted to assess the sequences' shared evolutionary origins. Visual depictions of the alignment as in the image at right illustrate <link xlink:type="simple" xlink:href="../702/19702.xml">
mutation</link> events such as point mutations (single <link xlink:type="simple" xlink:href="../207/1207.xml">
amino acid</link> or <link xlink:type="simple" xlink:href="../505/21505.xml">
nucleotide</link> changes) that appear as differing characters in a single alignment column, and insertion or deletion mutations (<link xlink:type="simple" xlink:href="../711/1944711.xml">
indel</link>s or gaps) that appear as hyphens in one or more of the sequences in the alignment. Multiple sequence alignment is often used to assess sequence <link xlink:type="simple" xlink:href="../227/1333227.xml">
conservation</link> of <link xlink:type="simple" xlink:href="../725/10130725.xml">
protein domain</link>s, <link xlink:type="simple" xlink:href="../032/31032.xml">
tertiary</link> and <link xlink:type="simple" xlink:href="../691/28691.xml">
secondary</link> structures, and even individual amino acids or nucleotides.</p>
<p>

Multiple sequence alignment also refers to the process of aligning such a sequence set. Because three or more sequences of biologically relevant length can be difficult and are almost always time-consuming to align by hand, computational <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s are used to produce and analyze the alignments. MSAs require more sophisticated methodologies than <link xlink:type="simple" xlink:href="../289/149289.xml">
pairwise alignment</link> because they are more computationally complex (naively, <it>O(LengthNseqs</it>) to produce.  Most multiple sequence alignment programs use <link xlink:type="simple" xlink:href="../452/63452.xml">
heuristic</link> methods rather than <link xlink:type="simple" xlink:href="../854/563854.xml">
global optimization</link> because identifying the optimal alignment between more than a few sequences of moderate length is prohibitively computationally expensive. </p>

<sec>
<st>
Dynamic programming and computational complexity</st>
<p>

The most direct method for producing an MSA uses the <link xlink:type="simple" xlink:href="../297/125297.xml">
dynamic programming</link> technique to identify the globally optimal alignment solution. For proteins, this method usually involves two sets of parameters: a <link xlink:type="simple" xlink:href="../764/1004764.xml">
gap penalty</link> and a <link xlink:type="simple" xlink:href="../225/363225.xml">
substitution matrix</link> assigning scores or probabilities to the alignment of each possible pair of amino acids based on the similarity of the amino acids' chemical properties and the evolutionary probability of the mutation. For nucleotide sequences a similar gap penalty is used, but a much simpler substitution matrix, wherein only identical matches and mismatches are considered, is typical. The scores in the substitution matrix may be either all positive or a mix of positive and negative in the case of a global alignment, but must be both positive and negative, in the case of a local alignment.  In the latter case it is essential that the average score be less than 0.</p>
<p>

For <it>n</it> individual sequences, the naive method requires constructing the <it>n</it>-dimensional equivalent of the matrix formed in standard pairwise <link xlink:type="simple" xlink:href="../289/149289.xml">
sequence alignment</link>. The search space thus increases exponentially with increasing <it>n</it> and is also strongly dependent on sequence length. To find the global optimum for <it>n</it> sequences this way has been shown to be an <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/39466.xml">
NP-complete</link></group>
</collection>
</class>
 problem.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> in 1989, Altschul <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> introduced a practical method that uses pairwise alignments to constrain the n-dimensional search space.  In this approach pairwise dynamic programming alignments are preformed on each pair of sequences in the query set, and only the space near the n-dimensional intersection of these alignments is searched for the n-way alignment. The MSA program optimizes the sum of all of the pairs of characters at each position in the alignment (the so-called <it>sum of pair</it> score) and has been implemented in the <weblink xlink:type="simple" xlink:href="http://www.ncbi.nlm.nih.gov/CBBresearch/Schaffer/msa.html">
MSA</weblink> program. But MSA is still impractical for many multiple sequence alignment applications that require the simultaneous alignment of more than about 20 sequences.</p>

</sec>
<sec>
<st>
Progressive alignment construction</st>
<p>

The most widely used approach to multiple sequence alignments uses a heuristic search known as progressive technique (also known as the hierarchical or tree method), that builds up a final MSA by combining pairwise alignments beginning with the most simlar pair and progressing to the most distantly related.  All progressive alignment methods require two stages: a first stage in which the relationships between the sequences are represented as a <link xlink:type="simple" xlink:href="../326/149326.xml">
 tree</link>, called a <it>guide tree</it>, and a second step in which the MSA is built by adding the sequences sequentiallt to the growing MSA according to the guide tree.  The initial <it>guide tree</it> is determined by an efficient <link xlink:type="simple" xlink:href="../172/39172.xml">
clustering</link> method such as <link xlink:type="simple" xlink:href="../798/351798.xml">
neighbor-joining</link> or <link xlink:type="simple" xlink:href="../968/355968.xml">
UPGMA</link>, and may use distances based on the number of identical two letter sub-sequences (as in <link xlink:type="simple" xlink:href="../996/1009996.xml">
FASTA</link> rather than a dynamic programming alignment.  </p>
<p>

Progressive alignments cannot be globally optimal.  The primary problem is that when errors are made at any stage in growing the MSA, these errors are then propagated through to the final result.  Performance is also particularly bad when all of the sequences in the set are rather distantly related. Most modern progressive methods modify their scoring function with a secondary weighting function that assigns scaling factors to individual members of the query set in a nonlinear fashion based on their phylogenetic distance from their nearest neighbors. This corrects for non-random selection of the sequences given to the alignment program.  </p>
<p>

Progressive alignment methods are efficient enough to implement on a large scale for many (100s to 1000s) sequences.  Progressive alignment services   are commonly available on  publicly accessible web servers so users need not locally install the applications of interest. The most popular progressive alignment method has been the <link xlink:type="simple" xlink:href="../990/1976990.xml">
Clustal</link> family,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> especially the weighted variant ClustalW<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> to which access is provided by a large number of web portals including <weblink xlink:type="simple" xlink:href="http://align.genome.jp/">
GenomeNet</weblink>, <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/clustalw/">
EBI</weblink>, and <weblink xlink:type="simple" xlink:href="http://www.ch.embnet.org/software/ClustalW.html">
EMBNet</weblink>. Different portals or implementations can vary in user interface and make different parameters accessible to the user. ClustalW is used extensively for phylogenetic tree construction, in spite of the author's explicit warnings that unedited alignments should not be used in such studies,  and as input for <link xlink:type="simple" xlink:href="../769/306769.xml">
protein structure prediction</link> by homology modeling. </p>
<p>

Another common progressive alignment method called <link xlink:type="simple" xlink:href="../633/4344633.xml">
T-Coffee</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> is slower than Clustal and its derivatives but generally produces more accurate alignments for distantly related sequence sets. T-Coffee calculates pairwise alignments by combining the direct alignment of the pair with indirect alignments that aligns each sequence of the pair to a third sequence.  It uses the output from Clustal as well as another local alignment program LALIGN, which finds multiple regions of local alignment between two sequences. The resulting alignment and phylogenetic tree are used as a guide to produce new and more accurate weighting factors. </p>
<p>

Because progressive methods are heuristics that are not guaranteed to converge to a global optimum, alignment quality can be difficult to evaluate and their true biological significance can be obscure. A very recent semi-progressive method that improves alignment quality and does not use a lossy heuristic while still running in <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial time</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> has been implemented in the program <weblink xlink:type="simple" xlink:href="http://faculty.cs.tamu.edu/shsze/psalign">
PSAlign</weblink>.</p>

</sec>
<sec>
<st>
Iterative methods</st>
<p>

A set of methods to produce MSAs while reducing the errors inherent in progressive methods are classified as "iterative" because they work similarly to progressive methods but repeatedly realign the initial sequences as well as adding new sequences to the growing MSA. One reason progressive methods are so strongly dependent on a high-quality initial alignment is the fact that these alignments are always incorporated into the final result - that is, once a sequence has been aligned into the MSA, its alignment is not considered further. This approximation improves efficiency at the cost of accuracy. By contrast, iterative methods can return to previously calculated pairwise alignments or sub-MSAs incorporating subsets of the query sequence as a means of optimizing a general <link xlink:type="simple" xlink:href="../033/52033.xml">
objective function</link> such as finding a high-quality alignment score.</p>
<p>

A variety of subtly different iteration methods have been implemented and made available in software packages; reviews and comparisons have been useful but generally refrain from choosing a "best" technique.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> The software package <weblink xlink:type="simple" xlink:href="http://prrn.hgc.jp/">
PRRN/PRRP</weblink> uses a <link xlink:type="simple" xlink:href="../002/364002.xml">
hill-climbing algorithm</link> to optimize its MSA alignment score<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> and iteratively corrects both alignment weights and locally divergent or "gappy" regions of the growing MSA.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> PRRP performs best when refining an alignment previously constructed by a faster method.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

Another iterative program, DIALIGN, takes an unusual approach of focusing narrowly on local alignments between sub-segments or <link xlink:type="simple" xlink:href="../294/443294.xml">
sequence motif</link>s without introducing a gap penalty.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref> The alignment of individual motifs is then achieved with a matrix representation similar to a dot-matrix plot in a pairwise alignment. An alternative method that uses fast local alignments as anchor points or "seeds" for a slower global-alignment procedure is implemented in the <weblink xlink:type="simple" xlink:href="http://dialign.gobics.de/chaos-dialign-submission">
CHAOS/DIALIGN</weblink> suite.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></p>
<p>

A third popular iteration-based method called <weblink xlink:type="simple" xlink:href="http://www.drive5.com/muscle/">
MUSCLE</weblink> (multiple sequence alignment by log-expectation) improves on progressive methods with a more accurate distance measure to assess the relatedness of two sequences.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref> The distance measure is updated between iteration stages (although, in its original form, MUSCLE contained only 2-3 iterations depending on whether refinement was enabled).</p>

</sec>
<sec>
<st>
Hidden Markov models</st>
<p>

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/98770.xml">
Hidden Markov model</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
s are probabilistic models that can assign likelihoods to all possible combinations of gaps, matches, and mismatches to determine the most likely MSA or set of possible MSAs. HMMs can produce a single highest-scoring output but can also generate a family of possible alignments that can then be evaluated for biological significance. HMMs can produce both global and local alignments. Although HMM-based methods have been developed relatively recently, they offer significant improvements in computational speed, especially for sequences that contain overlapping regions.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

Typical HMM-based methods work by representing an MSA as a form of <link xlink:type="simple" xlink:href="../002/204002.xml">
directed acyclic graph</link> known as a partial-order graph, which consists of a series of nodes representing possible entries in the columns of an MSA. In this representation a column that is absolutely conserved (that is, that all the sequences in the MSA share a particular character at a particular position) is coded as a single node with as many outgoing connections as there are possible characters in the next column of the alignment. In the terms of a typical hidden Markov model, the observed states are the individual alignment columns and the "hidden" states represent the presumed ancestral sequence from which the sequences in the query set are hypothesized to have descended. An efficient search variant of the dynamic programming method, known as the <link xlink:type="simple" xlink:href="../015/228015.xml">
Viterbi algorithm</link>, is generally used to successively align the growing MSA to the next sequence in the query set to produce a new MSA.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref> This is distinct from progressive alignment methods because the alignment of prior sequences is updated at each new sequence addition. However, like progressive methods, this technique can be influenced by the order in which the sequences in the query set are integrated into the alignment, especially when the sequences are distantly related.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

Several software programs are available in which variants of HMM-based methods have been implemented and which are noted for their scalability and efficiency, although properly using an HMM method is more complex than using more common progressive methods. The simplest is <weblink xlink:type="simple" xlink:href="http://sourceforge.net/project/showfiles.php?group_id=168080">
POA</weblink> (Partial-Order Alignment)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>; a similar but more generalized method is implemented in the package <weblink xlink:type="simple" xlink:href="http://www.cse.ucsc.edu/compbio/sam.html">
SAM</weblink> (Sequence Alignment and Modeling System).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref> SAM has been used as a source of alignments for <link xlink:type="simple" xlink:href="../769/306769.xml">
protein structure prediction</link> to participate in the <link xlink:type="simple" xlink:href="../517/461517.xml">
CASP</link> structure prediction experiment and to develop a database of predicted proteins in the <link xlink:type="simple" xlink:href="../385/34385.xml">
yeast</link> species <it><link xlink:type="simple" xlink:href="../704/237704.xml">
S. cerevisiae</link></it>. HMM methods can also be used for database search with <link xlink:type="simple" xlink:href="../600/19535600.xml">
HMMER</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref></p>

</sec>
<sec>
<st>
Genetic algorithms and simulated annealing</st>
<p>

Standard optimization techniques in computer science - both of which were inspired by, but do not directly reproduce, physical processes - have also been used in an attempt to more efficiently produce quality MSAs. One such technique, <link xlink:type="simple" xlink:href="../254/40254.xml">
genetic algorithm</link>s, has been used for MSA production in an attempt to broadly simulate the hypothesized evolutionary process that gave rise to the divergence in the query set. The method works by breaking a series of possible MSAs into fragments and repeatedly rearranging those fragments with the introduction of gaps at varying positions. A general <link xlink:type="simple" xlink:href="../033/52033.xml">
objective function</link> is optimized during the simulation, most generally the "sum of pairs" maximization function introduced in dynamic programming-based MSA methods. A technique for protein sequences has been implemented in the software program SAGA (Sequence Alignment by Genetic Algorithm)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref> and its equivalent in RNA is called RAGA.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></p>
<p>

The technique of <link xlink:type="simple" xlink:href="../244/172244.xml">
simulated annealing</link>, by which an existing MSA produced by another method is refined by a series of rearrangements designed to find more optimal regions of alignment space than the one the input alignment already occupies. Like the genetic algorithm method, simulated annealing maximizes an objective function like the sum-of-pairs function. Simulated annealing uses a metaphorical "temperature factor" that determines the rate at which rearrangements proceed and the likelihood of each rearrangement; typical usage alternates periods of high rearrangement rates with relatively low likelihood (to explore more distant regions of alignment space) with periods of lower rates and higher likelihoods to more thoroughly explore local minima near the newly "colonized" regions. This approach has been implemented in the program MSASA (Multiple Sequence Alignment by Simulated Annealing).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></p>

</sec>
<sec>
<st>
Motif finding</st>
<p>

<image location="right" width="500px" src="Caspase-motif-alignment.png" type="thumb">
<caption>

Alignment of the seven <link xlink:type="simple" xlink:href="../032/9032.xml">
Drosophila</link> <link xlink:type="simple" xlink:href="../111/291111.xml">
caspase</link>s colored by motifs as identified by MEME. When motif positions and sequence alignments are generated independently, they often correlate well but not perfectly, as in this example.
</caption>
</image>

Motif finding, also known as profile analysis, is a method of locating <link xlink:type="simple" xlink:href="../294/443294.xml">
sequence motif</link>s in global MSAs that is both a means of producing a better MSA and a means of producing a scoring matrix for use in searching other sequences for similar motifs. A variety of methods for isolating the motifs have been developed, but all are based on identifying short highly conserved patterns within the larger alignment and constructing a matrix similar to a substitution matrix that reflects the amino acid or nucleotide composition of each position in the putative motif. The alignment can then be refined using these matrices. In standard profile analysis, the matrix includes entries for each possible character as well as entries for gaps.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> Alternatively, statistical pattern-finding algorithms can identify motifs as a precursor to an MSA rather than as a derivation. In many cases when the query set contains only a small number of sequences or contains only highly related sequences, <link xlink:type="simple" xlink:href="../598/2045598.xml">
pseudocount</link>s are added to normalize the distribution reflected in the scoring matrix. In particular, this corrects zero-probability entries in the matrix to values that are small but nonzero.</p>
<p>

Blocks analysis is a method of motif finding that restricts motifs to ungapped regions in the alignment. Blocks can be generated from an MSA or they can be extracted from unaligned sequences using a precalculated set of common motifs previously generated from known gene families.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref> Block scoring generally relies on the spacing of high-frequency characters rather than on the calculation of an explicit substitution matrix. The <weblink xlink:type="simple" xlink:href="http://blocks.fhcrc.org/">
BLOCKS</weblink> server provides an interactive method to locate such motifs in unaligned sequences.</p>
<p>

Statistical pattern-matching has been implemented using both the <link xlink:type="simple" xlink:href="../752/470752.xml">
expectation-maximization algorithm</link> and the <link xlink:type="simple" xlink:href="../709/509709.xml">
Gibbs sampler</link>. One of the most common motif-finding tools, known as MEME, uses expectation maximization and hidden Markov methods to generate motifs that are then used as search tools by its companion MAST in the combined suite <weblink xlink:type="simple" xlink:href="http://meme.sdsc.edu/meme/intro.html">
MEME/MAST</weblink>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref></p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../376/5376.xml">
Cladistics</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../962/23962.xml">
Phylogenetics</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../900/5806900.xml">
Sequence alignment software</link></entry>
<entry level="1" type="bullet">

<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../908/474908.xml">
Structural alignment</link></method>
</know-how>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
Wang L, Jiang T. (1994) On the complexity of multiple sequence alignment. <it>J Comput Biol</it> 1:337-348.</entry>
<entry id="2">
Just W. (2001). Computational complexity of multiple sequence alignment with SP-score. <it>J Comput Biol</it> 8(6):615-23.</entry>
<entry id="3">
Lipman DJ, Altschul SF, Kececioglu JD.(1989) A tool for multiple sequence alignment. Proc Natl Acad Sci U S A. 86, 4412-4415.  </entry>
<entry id="4">
Higgins DG, Sharp PM. (1988). CLUSTAL: a package for performing multiple sequence alignment on a microcomputer. <it>Gene</it> 73(1):237-44.</entry>
<entry id="5">
Thompson JD, Higgins DG, Gibson TJ. (1994). CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, positions-specific gap penalties and weight matrix choice. <it>Nucleic Acids Res</it> 22:4673-4680.</entry>
<entry id="6">
Notredame C, Higgins DG, Heringa J. (2000). T-Coffee: A novel method for fast and accurate multiple sequence alignment. <it>J Mol Biol</it> 302(1):205-17.</entry>
<entry id="7">
Sze SH, Lu Y, Yang Q. (2006). A polynomial time solvable formulation of multiple sequence alignment. <it>J Comput Biol</it> 13(2):309-19.</entry>
<entry id="8">
Hirosawa M, Totoki Y, Hoshida M, Ishikawa M. (1995). Comprehensive study on iterative algorithms of multiple sequence alignment. <it>Comput Appl Biosci</it> 11:13-18.</entry>
<entry id="9">
Gotoh O. (1996). Significant improvement in accuracy of multiple protein sequence alignments by iterative refinement as assessed by reference to structural alignments. <it>J Mol Biol</it> 264(4):823-38.</entry>
<entry id="10">
Mount DM. (2004). Bioinformatics: Sequence and Genome Analysis 2nd ed. Cold Spring Harbor Laboratory Press: Cold Spring Harbor, NY.</entry>
<entry id="11">
Brudno M, Chapman M, Göttgens B, Batzoglou S, Morgenstern B. (2003)  Fast and sensitive multiple alignment of large genomic sequences <it>BMC Bioinformatics</it> 4:66.</entry>
<entry id="12">
Edgar RC. (2004), MUSCLE: multiple sequence alignment with high accuracy and high throughput. <it>Nucleic Acids Research</it> 32(5), 1792-97.</entry>
<entry id="13">
Hughey R, Krogh A. SAM: Sequence alignment and modeling software system. Technical Report UCSC-CRL-96-22, University of California, Santa Cruz, CA, September 1996.</entry>
<entry id="14">
Grasso C, Lee C. (2004). Combining partial order alignment and progressive multiple sequence alignment increases alignment speed and scalability to very large alignment problems. <it>Bioinformatics</it> 20(10):1546-56.</entry>
<entry id="15">
Durbin R, Eddy S, Krogh A, Mitchison G. (1998). Biological sequence analysis: probabilistic models of proteins and nucleic acids, Cambridge University Press, 1998.</entry>
<entry id="17">
Notredame C, O'Brien EA, Higgins DG. (1997). RAGA: RNA sequence alignment by genetic algorithm. <it>Nucleic Acids Res</it> 25(22):4570-80.</entry>
<entry id="16">
Notredame C, Higgins DG. (1996). SAGA: sequence alignment by genetic algorithm. <it>Nucleic Acids Res</it> 24(8):1515-24.</entry>
<entry id="19">
Henikoff S, Henikoff JG. (1991). Automated assembly of protein blocks for database searching. <it>Nucleic Acids Res</it> 19:6565-72.</entry>
<entry id="18">
Kim J, Pramanik S, Chung MJ. (1994). Multiple sequence alignment using simulated annealing. <it>Comput Appl Biosci</it> 10(4):419-26.</entry>
<entry id="21">
Bailey TL, Gribskov M. (1998). Combining evidence using p-values: application to sequence homology searches. <it>Bioinformatics</it>14:48-54.</entry>
<entry id="20">
 Bailey TL, Elkan C.(1994). Fitting a mixture model by expectation maximization to discover motifs in biopolymers. Proceedings of the Second International Conference on Intelligent Systems for Molecular Biology, pp. 28-36, AAAI Press, Menlo Park, California.</entry>
</reflist>

</p>
<ss1>
<st>
 Survey articles </st>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="Reference-Duret-2000" style="font-style:normal" class="book">Duret, L.;&#32;S. Abdeddaim&#32;(2000).&#32;"Multiple alignment for structural functional or phylogenetic analyses of homologous sequences",&#32;in D. Higgins and W. Taylor: Bioinformatics sequence structure and databanks.&#32;Oxford:&#32;Oxford University Press.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Notredame, C.&#32;(2002).&#32;"Recent progresses in multiple sequence alignment: a survey". <it>Pharmacogenomics</it>&#32;<b>31</b>&#32;(1): 131 -- 144. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1517%2F14622416.3.1.131">
10.1517/14622416.3.1.131</weblink>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Thompson, J. D.; F. Plewniak and O. Poch&#32;(1999).&#32;"A comprehensive comparison of multiple sequence alignment programs". <it>Nucleic Acids Research</it>&#32;<b>27</b>&#32;(13): 12682--2690. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1093%2Fnar%2F27.13.2682">
10.1093/nar/27.13.2682</weblink>. PMID 10373585.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Wallace, I.M.; Blackshields G and Higgins DG.&#32;(2005).&#32;"Multiple sequence alignments". <it>Curr Opin Struct Biol</it>&#32;<b>15</b>&#32;(3): 261–6.. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2Fj.sbi.2005.04.002">
10.1016/j.sbi.2005.04.002</weblink>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Notredame, C&#32;(2007).&#32;"Recent evolutions of multiple sequence alignment algorithms". <it>PLOS Computational Biology</it>&#32;<b>8</b>&#32;(3): e123.. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1371%2Fjournal.pcbi.0030123">
10.1371/journal.pcbi.0030123</weblink>.</cite>&nbsp;</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.expasy.org/tools/#align">
ExPASy sequence alignment tools</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.techfak.uni-bielefeld.de/bcd/Curric/MulAli/welcome.html">
Multiple Alignment Resource Page</weblink> from the Virtual School of Natural Sciences</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://pbil.univ-lyon1.fr/alignment.html">
Tools for Multiple Alignments</weblink> from Pôle Bioinformatique Lyonnais</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://cmb.molgen.mpg.de/">
Multiple sequence alignment lectures</weblink> from the Max Planck Institute for Molecular Genetics</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.clustal.org/">
An entry point to clustal servers and information</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.tcoffee.org/">
An entry point to the main T-Coffee servers</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/Tools/Clustalw2">
ClustalW2 server at the EBI</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/Tools/muscle">
Muscle server at the EBI</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/Tools/t-coffee">
T-coffee  server at the EBI</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/Tools/mafft">
MAFFT server at the EBI</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ebi.ac.uk/Tools/kalign">
KALIGN server at the EBI</weblink></entry>
</list>
</p>


</sec>
</bdy>
</entity>
</article>
