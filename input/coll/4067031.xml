<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 20:54:21[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Ukkonen&apos;s algorithm</title>
<id>4067031</id>
<revision>
<id>202138252</id>
<timestamp>2008-03-30T20:54:18Z</timestamp>
<contributor>
<username>Andreas Kaufmann</username>
<id>72502</id>
</contributor>
</revision>
<categories>
<category>Bioinformatics algorithms</category>
<category>Algorithms on strings</category>
</categories>
</header>
<bdy>

In 1995, <link>
Esko Ukkonen</link> proposed a linear-time, <link xlink:type="simple" xlink:href="../716/22716.xml">
online</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for constructing <link xlink:type="simple" xlink:href="../679/794679.xml">
suffix tree</link>s that has come to be known as <b>Ukkonen's algorithm</b>.<p>

The algorithm begins with an implicit suffix tree containing the first character of the string. Then it steps through the string adding successive characters until the tree is complete. This order addition of characters gives Ukkonen's algorithm its "on-line" property; earlier algorithms proceeded backward from the last character. The naive implementation of this algorithm requires <it>O</it>(<it>n</it>2) or even <it>O</it>(<it>n</it>3) time (see <link xlink:type="simple" xlink:href="../578/44578.xml">
Big-O notation</link>), where <it>n</it> is the number of characters in the string, but by exploiting a number of algorithmic techniques this can be reduced to <it>O</it>(<it>n</it>) (linear) time. </p>

<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 E. Ukkonen. (1995). On-line construction of suffix trees. <it>Algorithmica</it> <b>14</b>(3):249-260. <weblink xlink:type="simple" xlink:href="http://www.cs.helsinki.fi/u/ukkonen/SuffixT1.pdf">
PDF</weblink> | <weblink xlink:type="simple" xlink:href="http://www.cs.helsinki.fi/u/ukkonen/SuffixT1withFigs.pdf">
PDF with figures</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://marknelson.us/1996/08/01/suffix-trees/">
Fast String Searching With Suffix Trees</weblink>  Mark Nelson's excellent tutorial.  Has an implementation example written with C++.</entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
