<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:41:16[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Data integrity</title>
<id>40995</id>
<revision>
<id>242295637</id>
<timestamp>2008-10-01T17:56:28Z</timestamp>
<contributor>
<username>Tee Owe</username>
<id>877065</id>
</contributor>
</revision>
<categories>
<category>Transaction processing</category>
<category>Applied sciences</category>
</categories>
</header>
<bdy>

<b>Data integrity</b> is a term used in <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> and <link xlink:type="simple" xlink:href="../322/30322.xml">
telecommunication</link>s that can mean ensuring data is "whole" or complete, the condition in which data are identically maintained during any operation (such as transfer, storage or retrieval), the preservation of data for their intended use, or, relative to specified operations, the <link xlink:type="simple" xlink:href="../166/48166.xml">
a priori</link> expectation of <link xlink:type="simple" xlink:href="../808/1609808.xml">
data quality</link>. Put simply, data integrity is the assurance that data is consistent and correct.<p>

Often such integrity is ensured by use of a number referred to as a <link xlink:type="simple" xlink:href="../523/567523.xml">
Message Integrity Code</link> (MIC) or <link xlink:type="simple" xlink:href="../523/567523.xml">
Message Authentication Code</link> (MAC).</p>
<p>

In <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link> and <link xlink:type="simple" xlink:href="../036/15036.xml">
information security</link> in general, integrity refers to the validity of data. Integrity can be compromised through:
<list>
<entry level="1" type="bullet">

Malicious altering, such as an attacker altering an account number in a bank transaction, or <link xlink:type="simple" xlink:href="../312/62312.xml">
forgery</link> of an identity document</entry>
<entry level="1" type="bullet">

Accidental altering, such as a <link xlink:type="simple" xlink:href="../168/42168.xml">
transmission</link> error, or a hard <link xlink:type="simple" xlink:href="../076/844076.xml">
disk crash</link></entry>
</list>
</p>
<p>

In terms of a <link xlink:type="simple" xlink:href="../377/8377.xml">
database</link> data integrity refers to the process of ensuring that a database remains an accurate reflection of the universe of discourse it is modelling or representing. In other words there is a close correspondence between the facts  stored in the database and the real world it models <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.</p>
<p>

Data integrity is normally enforced in a <link xlink:type="simple" xlink:href="../571/244571.xml">
database system</link> by a series of integrity constraints or rules. Three types of integrity constraints are an inherent part of the relational data model: entity integrity, referential integrity and domain integrity.</p>
<p>

Entity integrity concerns the concept of a <link xlink:type="simple" xlink:href="../099/6850099.xml">
primary key</link>. Entity integrity is an integrity rule which states that every table must have a primary key and that the column or columns chosen to be the primary key should be unique and not null.</p>
<p>

Referential integrity concerns the concept of a <link xlink:type="simple" xlink:href="../065/259065.xml">
foreign key</link>. The referential integrity rule states that any foreign key value can only be in one of two states. The usual state of affairs is that the foreign key value refers to a primary key value of some table in the database. Occasionally, and this will depend on the rules of the business, a foreign key value can be null. In this case we are explicitly saying that either there is no relationship between the objects represented in the database or that this relationship is unknown.</p>
<p>

Domain integrity specifies that all columns in relational database must be declared upon a defined domain. The primary unit of data in the relational data model is the data item. Such data items are said to be non-decomposable or atomic. A domain is a set of values of the same type. Domains are therefore pools of values from which actual values appearing in the columns of a table are drawn. </p>
<p>

An example of a data integrity mechanism in cryptography is the use of <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
 hash values. These blocks of bytes function as a numeric summation of the content of a data item. Should the data change, the MD5 hash would yield a different result.</p>

<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
Beynon-Davies P. (2004). Database Systems 3rd Edition. Palgrave, Basingstoke, UK. ISBN: 1-4039-1601-2</entry>
</reflist>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<glossary wordnetid="106420781" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<wordbook wordnetid="106418693" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../310/37310.xml">
Federal Standard 1037C</link></publication>
</reference_book>
</book>
</wordbook>
</artifact>
</glossary>
</creation>
</product>
</work>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../882/41882.xml">
MIL-STD-188</link> </entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../395/1011395.xml">
National Information Systems Security Glossary</link></entry>
</list>
</p>







</sec>
</bdy>
</article>
