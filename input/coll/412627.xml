<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:00:33[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<header>
<title>Challenge-response authentication</title>
<id>412627</id>
<revision>
<id>241709907</id>
<timestamp>2008-09-29T05:56:05Z</timestamp>
<contributor>
<username>GCarty</username>
<id>10379</id>
</contributor>
</revision>
<categories>
<category>Cryptographic protocols</category>
</categories>
</header>
<bdy>

For the spam-filtering technique, see <link xlink:type="simple" xlink:href="../442/4791442.xml">
Challenge-response spam filtering</link>.
For other uses, see <link xlink:type="simple" xlink:href="../530/2229530.xml">
CRAM</link>.<p>

In <link xlink:type="simple" xlink:href="../398/7398.xml">
computer security</link>, <b>challenge-response authentication</b> is a family of protocols in which one party presents a question ("challenge") and another party must provide a valid answer ("response") to be <link xlink:type="simple" xlink:href="../967/47967.xml">
authenticated</link>.</p>
<p>

The simplest example of a challenge-response protocol is <link xlink:type="simple" xlink:href="../304/24304.xml">
password</link> authentication, where the challenge is asking for the password and the valid response is the correct password.</p>
<p>

Clearly an adversary that can eavesdrop on a password authentication can then authenticate itself in the same way. One solution is to issue multiple passwords, each of them marked with an identifier. The verifier can pick any of the identifiers, and the prover must have the correct password for that identifier. Assuming that the passwords are chosen independently, an adversary who intercepts one challenge-response message pair has no more chance of responding correctly to a different challenge than an adversary who has intercepted nothing.</p>
<p>

For example, when other <link xlink:type="simple" xlink:href="../922/40922.xml">
communications security</link> methods are unavailable, the <body wordnetid="107965085" confidence="0.8">
<social_group wordnetid="107950920" confidence="0.8">
<political_orientation wordnetid="106212839" confidence="0.8">
<colony wordnetid="108374049" confidence="0.8">
<state wordnetid="108168978" confidence="0.8">
<political_unit wordnetid="108359949" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<democracy wordnetid="106217103" confidence="0.8">
<link xlink:type="simple" xlink:href="../750/3434750.xml">
U.S.</link></democracy>
</group>
</political_unit>
</state>
</colony>
</political_orientation>
</social_group>
</body>
 military uses the <link>
AKAC-1553</link> TRIAD numeral cipher to authenticate and encrypt some communications.  TRIAD includes a list of three-letter challenge codes, which the verifier is supposed to choose randomly from, and random three-letter responses to them.  For added security, each set of codes is only valid for a particular time period which is ordinarily 24 hours.</p>
<p>

Software in the 1980s and 1990s often used a similar method for <link xlink:type="simple" xlink:href="../210/219210.xml">
copy protection</link>: challenges would be questions like "What is the second word in the third paragraph on page 418 of the manual?". The security assumption was that copying the manual was more difficult than copying the software disk.</p>

<ss1>
<st>
Other non-cryptographic protocols</st>

<p>

Challenge-response protocols are also used to assert things other than knowledge of a secret value. <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../834/230834.xml">
CAPTCHA</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
s, for example, are a sort of variant on the <link xlink:type="simple" xlink:href="../840/43840.xml">
Turing test</link>, meant to determine whether a viewer of a <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
Web</link></invention>
 application is a real person.  The challenge sent to the viewer is a distorted image of some text, and the viewer responds by typing in that text.  The distortion is designed to make automated <link xlink:type="simple" xlink:href="../091/49091.xml">
optical character recognition</link> (OCR) difficult and preventing a computer program from passing as a human.</p>

</ss1>
<sec>
<st>
Cryptographic techniques</st>

<p>

Non-cryptographic authentication was generally adequate in the days before the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link>, when the user could be sure that the system asking for the password was really the system they were trying to access, and that nobody was likely to be eavesdropping on the <link xlink:type="simple" xlink:href="../700/156700.xml">
communication channel</link> to observe the password being entered.  To address the insecure channel problem, a more sophisticated approach is necessary. Many cryptographic solutions involve <it>two-way authentication</it>, where both the user and the system must each convince the other that they know the <link xlink:type="simple" xlink:href="../246/7111246.xml">
shared secret</link> (the password), without this secret ever being transmitted <link xlink:type="simple" xlink:href="../791/600791.xml">
in the clear</link> over the communication channel, where <link xlink:type="simple" xlink:href="../656/372656.xml">
eavesdropper</link>s might be lurking.</p>
<p>

One way this is done involves using the password as the <link xlink:type="simple" xlink:href="../294/10294.xml">
encryption</link> key to transmit some randomly-generated information as the <it>challenge</it>, whereupon the other end must return as its <it>response</it> a similarly-encrypted value which is some predetermined function of the originally-offered information, thus proving that it was able to decrypt the challenge. For instance, in <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../947/16947.xml">
Kerberos</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
, the challenge is an encrypted integer <it>N</it>, while the response is the encrypted integer <it>N + 1</it>, proving that the other end was able to decrypt the integer <it>N</it>. In other variations, a hash function operates on a password and a random challenge value to create a response value.</p>
<p>

Such encrypted or hashed exchanges do not directly reveal the password to an eavesdropper. However, they may supply enough information to allow an eavesdropper to deduce what the password is, using a <link xlink:type="simple" xlink:href="../785/53785.xml">
dictionary attack</link> or <link xlink:type="simple" xlink:href="../784/53784.xml">
brute-force attack</link>. The use of information which is randomly generated on each exchange (and where the response is different from the challenge) guards against the possibility of a <link xlink:type="simple" xlink:href="../094/614094.xml">
replay attack</link>, where a malicious intermediary simply records the exchanged data and retransmits it at a later time to fool one end into thinking it has authenticated a new connection attempt from the other.</p>
<p>

Authentication protocols usually employ a <link xlink:type="simple" xlink:href="../390/6988390.xml">
cryptographic nonce</link> as the challenge to ensure that every challenge-response sequence is unique. This protects against a <link xlink:type="simple" xlink:href="../676/144676.xml">
man-in-the-middle attack</link> and subsequent <link xlink:type="simple" xlink:href="../094/614094.xml">
replay attack</link>. If it is impractical to implement a true nonce, a strong <link xlink:type="simple" xlink:href="../249/182249.xml">
cryptographically secure pseudorandom number generator</link> and <link xlink:type="simple" xlink:href="../526/439526.xml">
cryptographic hash function</link> can generate challenges that are highly unlikely to occur more than once. It is important not to use time-based nonces, as these can weaken servers in different time zones and servers with inaccurate clocks.</p>
<p>

<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../285/3064285.xml">
Mutual authentication</link></method>
</know-how>
</instrumentality>
</artifact>
</system>
 is performed using a challenge-response handshake in both directions; the server ensures that the client knows the secret, and the client <it>also</it> ensures that the server knows the secret, which protects against a rogue server impersonating the real server.</p>
<p>

Challenge-response authentication can help solve the problem of exchanging session keys for encryption. Using a <link xlink:type="simple" xlink:href="../781/449781.xml">
key derivation function</link>, the challenge value and the secret may be combined to generate an unpredictable encryption key for the session. This is particularly effective against a man-in-the-middle attack, because the attacker will not be able to derive the session key from the challenge without knowing the secret, and therefore will not be able to decrypt the data stream.</p>

</sec>
<sec>
<st>
Simple Example mutual authentication sequence</st>
<p>

<list>
<entry level="1" type="bullet">

Server sends a unique challenge value <b><it>sc</it></b> to the client</entry>
<entry level="1" type="bullet">

Client generates unique challenge value <b><it>cc</it></b></entry>
<entry level="1" type="bullet">

Client computes <b><it>cr</it></b> = hash(cc + sc + secret)</entry>
<entry level="1" type="bullet">

Client sends <b><it>cr</it></b> and <b><it>cc</it></b> to the server</entry>
<entry level="1" type="bullet">

Server calculates the expected value of <b><it>cr</it></b> and ensures the client responded correctly</entry>
<entry level="1" type="bullet">

Server computes <b><it>sr</it></b> = hash(sc + cc + secret)</entry>
<entry level="1" type="bullet">

Server sends <b><it>sr</it></b></entry>
<entry level="1" type="bullet">

Client calculates the expected value of <b><it>sr</it></b> and ensures the server responded correctly</entry>
</list>

where
<list>
<entry level="1" type="bullet">

<b><it>sc</it></b> is the server generated challenge</entry>
<entry level="1" type="bullet">

<b><it>cc</it></b> is the client generated challenge</entry>
<entry level="1" type="bullet">

<b><it>cr</it></b> is the client response</entry>
<entry level="1" type="bullet">

<b><it>sr</it></b> is the server response</entry>
</list>
</p>



</sec>
<sec>
<st>
Password storage</st>
<p>

To avoid storage of passwords, some operating systems (e.g. <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
-type) store a <link xlink:type="simple" xlink:href="../304/24304.xml#xpointer(//*[./st=%22Form+of+stored+passwords%22])">
hash of the password</link> rather than storing the password itself. During authentication, the system need only verify that the hash of the password entered matches the hash stored in the password database. This makes it more difficult for an intruder to get the passwords, since the password itself is not stored, and it is very difficult to determine a password that matches a given hash. However, this presents a problem for challenge-response algorithms, which require both the client and the server to have a shared secret. Since the password itself is not stored, a challenge-response algorithm will usually have to use the hash of the password as the secret instead of the password itself. In this case, an intruder can use the actual hash, rather than the password, which makes the stored hashes just as sensitive as the actual passwords.</p>

</sec>
<sec>
<st>
Examples</st>
<p>

Examples of more sophisticated challenge-response <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s are <link xlink:type="simple" xlink:href="../316/2152316.xml">
zero-knowledge password proof</link> and key agreement systems (such as <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../670/1306670.xml">
Secure Remote Password (SRP)</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
), <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../914/3217914.xml">
CRAM-MD5</link></system_of_measurement>
</method>
</rule>
</direction>
</know-how>
</standard>
</protocol>
</message>
, and <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/28814.xml">
ssh</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
's challenge-response system based on <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> <weblink xlink:type="simple" xlink:href="http://www.cag.lcs.mit.edu/~rugina/ssh-procedures/">
http://www.cag.lcs.mit.edu/~rugina/ssh-procedures/</weblink>.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../649/71649.xml">
Challenge-handshake authentication protocol</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../914/3217914.xml">
CRAM-MD5</link></system_of_measurement>
</method>
</rule>
</direction>
</know-how>
</standard>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../526/439526.xml">
Cryptographic hash function</link></primitive>
</causal_agent>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../390/6988390.xml">
Cryptographic nonce</link></entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../947/16947.xml">
Kerberos</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../009/433009.xml">
Otway-Rees</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../989/432989.xml">
Needham-Schroeder</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../034/433034.xml">
Wide Mouth Frog</link></entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../676/2152676.xml">
Password-authenticated key agreement</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../834/230834.xml">
CAPTCHA</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
</entry>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../361/9293361.xml">
Distance-bounding protocol</link></rule>
</direction>
</protocol>
</message>
</entry>
<entry level="1" type="bullet">

<accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../256/1024256.xml">
Reflection attack</link></feat>
</psychological_feature>
</act>
</action>
</event>
</accomplishment>
</entry>
<entry level="1" type="bullet">

<operation wordnetid="100955060" confidence="0.8">
<accomplishment wordnetid="100035189" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<attack wordnetid="100972621" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../094/614094.xml">
Replay attack</link></activity>
</feat>
</psychological_feature>
</act>
</attack>
</action>
</event>
</accomplishment>
</operation>
</entry>
<entry level="1" type="bullet">

<operation wordnetid="100955060" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<attack wordnetid="100972621" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../676/144676.xml">
Man-in-the-middle attack</link></activity>
</psychological_feature>
</act>
</attack>
</event>
</operation>
</entry>
</list>
</p>


</sec>
</bdy>
</rule>
</direction>
</protocol>
</message>
</article>
