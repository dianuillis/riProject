<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:00:38[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<system  confidence="0.8" wordnetid="104377057">
<artifact  confidence="0.8" wordnetid="100021939">
<instrumentality  confidence="0.8" wordnetid="103575240">
<header>
<title>Inference engine</title>
<id>418609</id>
<revision>
<id>243841344</id>
<timestamp>2008-10-08T07:57:52Z</timestamp>
<contributor>
<username>WhisperToMe</username>
<id>15708</id>
</contributor>
</revision>
<categories>
<category>Wikipedia external links cleanup</category>
<category>Wikipedia articles needing context</category>
<category>Wikipedia introduction cleanup</category>
<category>Expert systems</category>
<category>Articles to be merged&amp;#32;since December 2007</category>
<category>All articles to be merged</category>
<category>Decision theory</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 The introduction to this article provides <b>insufficient context</b> for those unfamiliar with the subject.
Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Inference_engine&amp;action=edit">
improve the article</weblink> with a .</col>
</row>
</table>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="150px" src="Merge-arrows.svg">
<caption>

Merge arrows
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that this article or section be  with . ()</col>
</row>
</table>

</p>
<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="150px" src="Merge-arrows.svg">
<caption>

Merge arrows
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that this article or section be  with . ()</col>
</row>
</table>

</p>
<p>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, and specifically the branches of <link xlink:type="simple" xlink:href="../499/458499.xml">
knowledge engineering</link> and <link xlink:type="simple" xlink:href="../164/1164.xml">
artificial intelligence</link>, an <b>inference engine</b> is a <link xlink:type="simple" xlink:href="../783/5783.xml">
computer program</link> that tries to derive <link xlink:type="simple" xlink:href="../642/642.xml">
answer</link>s from a <link xlink:type="simple" xlink:href="../497/239497.xml">
knowledge base</link>. It is the "brain" that <link xlink:type="simple" xlink:href="../136/10136.xml">
expert systems</link> use to reason about the information in the knowledge base for the ultimate purpose of formulating new conclusions. Inference engines are considered to be a special case of <link xlink:type="simple" xlink:href="../810/13536810.xml">
reasoning engine</link>s, which can use more general methods of reasoning.</p>

<sec>
<st>
Architecture</st>
<p>

The separation of inference engines as a distinct software component stems from the typical <link xlink:type="simple" xlink:href="../457/3157457.xml">
production system</link> architecture.  This architecture relies on a data store, or <link xlink:type="simple" xlink:href="../912/33912.xml">
working memory</link>, serving as a global database of symbols representing facts or assertions about the problem; on a set of rules which constitute the program, stored in a rule memory of production memory; and on an inference engine, required to execute the rules. (Executing rules is also referred to as firing rules.) The inference engine must determine which rules are relevant to a given data store configuration and choose which one(s) to apply. The control strategy used to select rules is often called conflict resolution.</p>
<p>

An inference engine has three main elements. They are:</p>
<p>

<list>
<entry level="1" type="number">

An interpreter. The interpreter executes the chosen agenda items by applying the corresponding base rules.</entry>
<entry level="1" type="number">

A scheduler. The scheduler maintains control over the agenda by estimating the effects of applying inference rules in light of item priorities or other criteria on the agenda.</entry>
<entry level="1" type="number">

A consistency enforcer. The consistency enforcer attempts to maintain a consistent representation of the emerging solution.</entry>
</list>
</p>

</sec>
<sec>
<st>
 The recognize-act cycle </st>
<p>

The inference engine can be described as a form of <link xlink:type="simple" xlink:href="../931/10931.xml">
finite state machine</link> with a cycle consisting of three action states: <it>match rules</it>, <it>select rules</it>, and <it>execute rules</it>.</p>
<p>

In the first state, match rules, the inference engine finds all of the rules that are satisfied by the current contents of the data store.  When rules are in the typical <it>condition-action</it> form, this means testing the conditions against the working memory.  The rule matchings that are found are all candidates for execution: they are collectively referred to as the <it>conflict set</it>.  Note that the same rule may appear several times in the conflict set if it matches different subsets of data items.  The pair of a rule and a subset of matching data items is called an <it>instantiation</it> of the rule.</p>
<p>

In many applications, where large volume of data are concerned and/or when performance time considerations are critical, the computation of the conflict set is a non-trivial problem.  Earlier research work on inference engines focused on better algorithms for matching rules to data.  The <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../566/172566.xml">
Rete algorithm</link></instrumentality>
</artifact>
</system>
, developed by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../022/476022.xml">
Charles Forgy</link></scholar>
</scientist>
</causal_agent>
</alumnus>
</intellectual>
</person>
</physical_entity>
, is an example of such a matching algorithm; it was used in the  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../829/475829.xml">
OPS series</link></language>
</instrumentality>
</artifact>
</system>
 of production system languages.  Daniel P. Miranker later improved on Rete with another algorithm, TREAT, which combined it with optimization techniques derived from relational database systems.</p>
<p>

The inference engine then passes along the conflict set to the second state, select rules.  In this state, the inference engine applies some selection strategy to determine which rules will actually be executed.  The selection strategy can be hard-coded into the engine or may be specified as part of the model.  In the larger context of AI, these selection strategies as often referred to as <link xlink:type="simple" xlink:href="../509/846509.xml">
heuristics</link> following <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../300/287300.xml">
Allen Newell</link></scientist>
</person>
's <link xlink:type="simple" xlink:href="../053/1804053.xml">
Unified theory of cognition</link>.</p>
<p>

In <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../829/475829.xml">
OPS5</link></language>
</instrumentality>
</artifact>
</system>
, for instance, a choice of two conflict resolution strategies is presented to the programmer.  The LEX strategy orders instantiations on the basis of recency of the time tags attached to their data items.  Instantiations with data items having recently matched rules in previous cycles are considered with higher priority.  Within this ordering, instantiations are further sorted on the complexity of the conditions in the rule.  The other strategy, MEA, puts special emphasis on the recency of working memory elements that match the first condition of the rule.  (The latter heuristic is heavily used in <link xlink:type="simple" xlink:href="../094/6278094.xml">
means-ends analysis</link>.)</p>
<p>

Finally the selected instantiations are passed over to the third state, execute rules.  The inference engine executes or fires the selected rules, with the instantiation's data items as parameters.  Usually the actions in the right-hand side of a rule change the data store, but they may also trigger further processing outside of the inference engine (interacting with users through a graphical user interface or calling local or remote programs, for instance).  Since the data store is usually updated by firing rules, a different set of rules will match during the next cycle  after these actions are performed.</p>
<p>

The inference engine then cycles back to the first state and is ready to start over again.  This control mechanism is referred to as the <it>recognize-act cycle</it>.  The inference engine stops either on a given number of cycles, controlled by the operator, or on a <it>quiescent</it> state of the data store when no rules match the data.</p>

</sec>
<sec>
<st>
 Data-driven computation versus procedural control </st>
<p>

The inference engine control is based on the frequent reevaluation of the data store states, not on any static control structure of the program.  The computation is often qualified as <it>data-driven</it> or <it>pattern-directed</it> in contrast to the more traditional procedural control.  Rules can communicate with one another only by way of the data, whereas in traditional programming languages procedures and functions explicitly call one another.  Unlike instructions, rules are not executed sequentially and it is not always possible to determine through inspection of a set of rules which rule will be executed first or cause the inference engine to terminate.</p>
<p>

In contrast to a procedural computation, in which knowledge about the problem domain is mixed in with instructions about the flow of control—although <link xlink:type="simple" xlink:href="../757/22757.xml">
object-oriented programming</link> languages mitigate this entanglement—the inference engine model allows a more complete separation of the knowledge (in the rules) from the control (the inference engine).</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../373/5033373.xml">
Action selection mechanism</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../312/4880312.xml">
F-Logic</link></entry>
</list>
</p>

</sec>
<sec>
<st>
List of Engines</st>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>The external links in this article may not follow Wikipedia's  or .</b>
Please <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Inference_engine&amp;action=edit">
improve this article</weblink> by removing excessive or inappropriate external links. </col>
</row>
</table>
</p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.jessrules.com/">
Jess, the Programmer's Rule Engine for the Java Platform</weblink>, (<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.eturner.net/omcsnetcpp/">
OMCSNetCPP - Open source C++ inference engine using the OMCSNet data</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.haley.com/products/HaleyRules.html">
HaleyRules - Business Rules Engine for Java, .NET and XML</weblink>, (<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.visual-rules.com?utm_source=Wiki-inference&amp;utm_campaign=Wiki-inference/">
Visual Rules - Graphical Buisness Rules Management System</weblink>,(<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.yasutech.com/downloads/quickrulesbrms/index.htm">
YASU's - Business Rules Engine for Java, .NET</weblink>, (<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.nimtoth.com/kadviser.html">
NIMTOTH Kadviser</weblink> - Business Workshop for <link xlink:type="simple" xlink:href="../181/3030181.xml">
Knowledge-based engineering</link>, (<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://rools.rubyforge.org/">
Ruby Rools</weblink>, (<it>RubyGems library, written in <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link>, BSD License</it>)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://homepage.ntlworld.com/peterhi/sie.html">
SIE</weblink> (<it>Simple Inference Engine, written in <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link>, open source</it>)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://genie.sis.pitt.edu/">
SMILE, the Structural Modeling, Inference, and Learning Engine</weblink> (<it>C++ shareware libraries, from the University of Pittsburgh </it>)</entry>
<entry level="1" type="bullet">

 Listing of <weblink xlink:type="simple" xlink:href="http://www.dmoz.org/Computers/Artificial_Intelligence//">
Artificial Intelligence</weblink> at the <work wordnetid="100575741" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<company wordnetid="108058098" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<property wordnetid="113244109" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<subsidiary_company wordnetid="108003935" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../501/18949501.xml">
Open Directory Project</link></institution>
</subsidiary_company>
</activity>
</psychological_feature>
</act>
</property>
</undertaking>
</company>
</event>
</possession>
</work>
</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../729/14176729.xml">
ILOG</link></institution>
</company>
 <weblink xlink:type="simple" xlink:href="http://www.ilog.com/products/businessrules">
Business Rule Management System</weblink>, (<it>commercial product</it>)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.jboss.org/drools/">
JBoss Drools</weblink> (formerly <weblink xlink:type="simple" xlink:href="http://labs.jboss.com/drools/">
Drools</weblink>; open source RETE engine)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ruleby.org">
Ruleby</weblink> (open source Rete engine for Ruby)</entry>
</list>
</p>


</sec>
</bdy>
</instrumentality>
</artifact>
</system>
</article>
