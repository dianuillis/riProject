<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:22:18[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<kind  confidence="0.9511911446218017" wordnetid="105839024">
<algorithm  confidence="0.9508927676800064" wordnetid="105847438">
<header>
<title>Bubble sort</title>
<id>4255</id>
<revision>
<id>243354958</id>
<timestamp>2008-10-06T04:11:43Z</timestamp>
<contributor>
<username>Phatom87</username>
<id>1204118</id>
</contributor>
</revision>
<categories>
<category>Stable sorts</category>
<category>Articles with example pseudocode</category>
<category>Comparison sorts</category>
<category>Sorting algorithms</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox Algorithm</name>
<parameters>

<image width="150px" src="">

</image>
<time>
<it>О(n²)''</it></time>
<data>
<link xlink:type="simple" xlink:href="../052/2052.xml">
Array</link></data>
<class>
<link xlink:type="simple" xlink:href="../442/28442.xml">
Sorting algorithm</link></class>
<optimal>
No</optimal>
<space>
<it>О(n)</it> total, <it>O(1)</it> auxiliary</space>
</parameters>
</template>


<b>Bubble sort</b> is a simple <link xlink:type="simple" xlink:href="../442/28442.xml">
sorting algorithm</link>. It works by repeatedly stepping through the list to be sorted, comparing two items at a time and <link xlink:type="simple" xlink:href="../112/401112.xml">
swap</link>ping them if they are in the wrong order.  The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted. The algorithm gets its name from the way smaller elements "bubble" to the top of the list. Because it only uses comparisons to operate on elements, it is a <link xlink:type="simple" xlink:href="../304/3189304.xml">
comparison sort</link>.
<sec>
<st>
Analysis</st>


<ss1>
<st>
Performance</st>
<p>

Bubble sort has worst-case complexity <it>О(n²)</it>, where <it>n</it> is the number of items being sorted. There exist many other sorting algorithms with substantially better worst-case complexity <it>O(n log n)</it>, meaning that bubble sort should not be used when <it>n</it> is large.</p>

</ss1>
<ss1>
<st>
Rabbits and turtles</st>
<p>

The positions of the elements in bubble sort will play a large part in determining its performance. Large elements at the beginning of the list do not pose a problem, as they are quickly swapped. Small elements towards the end, however, move to the beginning extremely slowly. This has led to these types of elements being named rabbits and turtles, respectively.</p>
<p>

Various efforts have been made to eliminate turtles to improve upon the speed of bubble sort. <algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../482/159482.xml">
Cocktail sort</link></algorithm>
 does pretty well, but it still retains <it>O(n2)</it> worst-case complexity. <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../439/159439.xml">
Comb sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 compares elements large gaps apart and can move turtles extremely quickly, before proceeding to smaller and smaller gaps to smooth out the list. Its average speed is comparable to faster algorithms like <algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../249/3268249.xml">
Quicksort</link></algorithm>
.</p>

</ss1>
<ss1>
<st>
Step-by-step example</st>

<p>

Let us take the array of numbers "5 1 4 2 8", and sort the array from lowest number to greatest number using bubble sort algorithm. In each step, elements written in <b>bold</b> are being compared.</p>
<p>

<b>First Pass:</b>
( <b>5</b> <b>1</b> 4 2 8 ) <math>\to</math> ( <b>1</b> <b>5</b> 4 2 8 ) Here, algorithm compares the first two elements, and swaps them.
( 1 <b>5</b> <b>4</b> 2 8 ) <math>\to</math> ( 1 <b>4</b> <b>5</b> 2 8 )
( 1 4 <b>5</b> <b>2</b> 8 ) <math>\to</math> ( 1 4 <b>2</b> <b>5</b> 8 )
( 1 4 2 <b>5</b> <b>8</b> ) <math>\to</math> ( 1 4 2 <b>5</b> <b>8</b> ) Now, since these elements are already in order, algorithm does not swap them.
<b>Second Pass:</b>
( <b>1</b> <b>4</b> 2 5 8 ) <math>\to</math> ( <b>1</b> <b>4</b> 2 5 8 )
( 1 <b>4</b> <b>2</b> 5 8 ) <math>\to</math> ( 1 <b>2</b> <b>4</b> 5 8 )
( 1 2 <b>4</b> <b>5</b> 8 ) <math>\to</math> ( 1 2 <b>4</b> <b>5</b> 8 )
( 1 2 4 <b>5</b> <b>8</b> ) <math>\to</math> ( 1 2 4 <b>5</b> <b>8</b> )
Now, the array is already sorted, but our algorithm does not know if it is completed. Algorithm needs one <b>whole</b> pass without <b>any</b> swap to know it is sorted.
<b>Third Pass:</b>
( <b>1</b> <b>2</b> 4 5 8 ) <math>\to</math> ( <b>1</b> <b>2</b> 4 5 8 )
( 1 <b>2</b> <b>4</b> 5 8 ) <math>\to</math> ( 1 <b>2</b> <b>4</b> 5 8 )
( 1 2 <b>4</b> <b>5</b> 8 ) <math>\to</math> ( 1 2 <b>4</b> <b>5</b> 8 )
( 1 2 4 <b>5</b> <b>8</b> ) <math>\to</math> ( 1 2 4 <b>5</b> <b>8</b> )
Finally, the array is sorted, and the algorithm can terminate.</p>

</ss1>
<ss1>
<st>
Pseudocode implementation</st>
<p>

A simple way to express bubble sort in <link xlink:type="simple" xlink:href="../185/24185.xml">
pseudocode</link> is as follows:</p>
<p>

<b>procedure</b> bubbleSort( A <b>:</b> list of sortable items ) <b>defined as:</b>
<b>do</b>
swapped := false
<b>for each</b> i <b>in</b> 0 <b>to</b> length( A ) - 1 <b>do:</b>
<b>if</b> A[ i ] &amp;gt; A[ i + 1 ] <b>then</b>
swap( A[ i ], A[ i + 1 ] )
swapped := true
<b>end if</b>
<b>end for</b>
<b>while</b> swapped
<b>end procedure</b></p>
<p>

The algorithm can also be expressed as:</p>
<p>

<b>procedure</b> bubbleSort( A <b>:</b> list of sortable items ) <b>defined as:</b>
<b>for each</b> i <b>in</b> 1 <b>to</b> length(A) <b>do:</b>
<b>for each</b> j <b>in</b> length(A) <b>downto</b> i + 1 <b>do:</b>
<b>if</b> A[ j -1  ] &amp;gt; A[ j ] <b>then</b>
swap( A[ j - 1],  A[ j ] )
<b>end if</b>
<b>end for</b>
<b>end for</b>
<b>end procedure</b></p>


<p>

The difference between this and the first pseudocode implementation is discussed <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Alternative+implementations%22])">
later in the article</link>.</p>

</ss1>
<ss1>
<st>
Alternative implementations</st>
<p>

One way to optimize bubblesort is to note that, after each pass, the largest element will always move down to the end. During each comparison, it is clear that the largest element will move downwards. Given a list of size <it>n</it>, the <it>nth</it> element will be guaranteed to be in its proper place. Thus it suffices to sort the remaining <it>n - 1</it> elements. Again, after this pass, the <it>n - 1th</it> element will be in its final place.</p>
<p>

In <link xlink:type="simple" xlink:href="../185/24185.xml">
pseudocode</link>, this will cause the following change:</p>
<p>

<b>procedure</b> bubbleSort( A <b>:</b> list of sortable items ) <b>defined as:</b>
n := length( A )
<b>do</b>
swapped := false
n := n - 1
<b>for each</b> i <b>in</b> 0 <b>to</b> n  <b>do:</b>
<b>if</b> A[ i ] &amp;gt; A[ i + 1 ] <b>then</b>
swap( A[ i ], A[ i + 1 ] )
swapped := true
<b>end if</b>
<b>end for</b>
<b>while</b> swapped
<b>end procedure</b></p>
<p>

We can then do bubbling passes over increasingly smaller parts of the list. More precisely, instead of doing <it>n2</it> comparisons (and swaps), we can use only <it>(n-1) + (n-2) + ... + 1</it> comparisons. This <link xlink:type="simple" xlink:href="../389/168389.xml">
sums</link> up to <it>n(n - 1) / 2</it>, which is still <it>O(n2)</it>, but which can be considerably faster in practice.</p>

</ss1>
</sec>
<sec>
<st>
In practice</st>
<p>

Although bubble sort is one of the simplest sorting algorithms to understand and implement, its <it>O(n2)</it> complexity means it is far too inefficient for use on lists having more than a few elements. Even among simple <it>O(n2)</it> sorting algorithms, algorithms like <link xlink:type="simple" xlink:href="../205/15205.xml">
insertion sort</link> are usually considerably more efficient, unless the data is already in nearly sorted order.</p>
<p>

Due to its simplicity, bubble sort is often used to introduce the concept of an algorithm, or a sorting algorithm, to introductory <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> students. However, some researchers such as Owen Astrachan have gone to great lengths to disparage bubble sort and its continued popularity in computer science education, recommending that it no longer even be taught.<weblink xlink:type="simple" xlink:href="http://www.cs.duke.edu/~ola/papers/bubble.pdf">
http://www.cs.duke.edu/~ola/papers/bubble.pdf</weblink></p>
<p>

The <link xlink:type="simple" xlink:href="../054/16054.xml">
Jargon file</link>, which famously calls <link xlink:type="simple" xlink:href="../870/99870.xml">
bogosort</link> "the archetypical perversely awful algorithm", also calls bubble sort "the generic <b>bad</b> algorithm".<weblink xlink:type="simple" xlink:href="http://www.jargon.net/jargonfile/b/bogo-sort.html">
http://www.jargon.net/jargonfile/b/bogo-sort.html</weblink> <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Donald Knuth</link></scientist>
</person>
, in his famous <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../358/31358.xml">
The Art of Computer Programming</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, concluded that "the bubble sort seems to have nothing to recommend it, except a catchy name and the fact that it leads to some interesting theoretical problems", some of which he discusses therein.</p>
<p>

Bubble sort is <link xlink:type="simple" xlink:href="../578/44578.xml">
asymptotically</link> equivalent in running time to <link xlink:type="simple" xlink:href="../205/15205.xml">
insertion sort</link> in the worst case, but the two algorithms differ greatly in the number of swaps necessary. Experimental results such as those of Astrachan have also shown that insertion sort performs considerably better even on random lists. For these reasons many modern algorithm textbooks avoid using the bubble sort algorithm in favor of insertion sort.</p>
<p>

Bubble sort also interacts poorly with modern CPU hardware. It requires at least twice as many writes as insertion sort, twice as many cache misses, and asymptotically more <link xlink:type="simple" xlink:href="../129/416129.xml">
branch mispredictions</link>. Experiments by Astrachan sorting strings in Java show bubble sort to be roughly 5 times slower than <link xlink:type="simple" xlink:href="../205/15205.xml">
insertion sort</link> and 40% slower than <link xlink:type="simple" xlink:href="../352/29352.xml">
selection sort</link>.</p>

</sec>
<sec>
<st>
 Variations </st>
<p>

<list>
<entry level="1" type="bullet">

<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../945/10807945.xml">
Odd-even sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 is a parallel version of bubble sort, for message passing systems.</entry>
<entry level="1" type="bullet">

In some cases, the sort works from right to left (the opposite direction), which is more appropriate for partially sorted lists, or lists with unsorted items added to the end.</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Donald Knuth</link></scientist>
</person>
. <it>The Art of Computer Programming</it>, Volume 3: <it>Sorting and Searching</it>, Third Edition. Addison-Wesley, 1997. ISBN 0-201-89685-0. Pages 106&ndash;110 of section 5.2.2: Sorting by Exchanging.</entry>
<entry level="1" type="bullet">

 <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Problem 2-2, pg.38.</entry>
<entry level="1" type="bullet">

 [https://www.cs.tcd.ie/publications/tech-reports/reports.05/TCD-CS-2005-57.pdf Sorting in the Presence of Branch Prediction and Caches]</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links</st>


<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ndsu.nodak.edu/instruct/juell/vp/cs1and2/sortdemo/BubbleSortDemo_ny.html">
Bubble Sort Demo</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://web.engr.oregonstate.edu/~minoura/cs261/javaProgs/sort/BubbleSort.html">
Bubble Sort Demonstration</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://lecture.ecc.u-tokyo.ac.jp/~ueda/JavaApplet/BubbleSort.html">
Lafore's Bubble Sort</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cs.pitt.edu/~kirk/cs1501/animations/Sort3.html">
Sorting Applets in C++</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.paked.net/subject_pages/computer_science/prog2.htm">
C++ Program - Bubble Sort </weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://tide4javascript.com/?s=Bubble">
Analyze Bubble Sort in an online Javascript IDE</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://vision.bc.edu/~dmartin/teaching/sorting/anim-html/bubble.html">
A graphical demonstration and discussion of bubble sort</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://coderaptors.com/?BubbleSort">
A colored graphical Java applet</weblink> which allows experimentation with initial state and shows statistics</entry>
</list>
</p>


<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="3" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../442/28442.xml">
Sorting algorithm</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
Theory</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../543/7543.xml">
Computational complexity theory</link> | <link xlink:type="simple" xlink:href="../578/44578.xml">
Big O notation</link> | <link xlink:type="simple" xlink:href="../330/30330.xml">
Total order</link> | <link xlink:type="simple" xlink:href="../382/208382.xml">
Lists</link> | <link xlink:type="simple" xlink:href="../442/28442.xml#xpointer(//*[./st=%22Stability%22])">
Stability</link> | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../304/3189304.xml">
Comparison sort</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
</col>
<col style="width:0%;padding:0px 0px 0px 2px;" rowspan="15">
<image width="200px" src="SimpleSortingNetwork.svg">
</image>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Exchange sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../255/4255.xml">
Bubble sort</link></algorithm>
 | <algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../482/159482.xml">
Cocktail sort</link></algorithm>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../945/10807945.xml">
Odd-even sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../439/159439.xml">
Comb sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../127/522127.xml">
Gnome sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../249/3268249.xml">
Quicksort</link></algorithm>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Selection sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../352/29352.xml">
Selection sort</link></algorithm>
 | <algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../995/13995.xml">
Heapsort</link></algorithm>
 | <link xlink:type="simple" xlink:href="../450/100450.xml">
Smoothsort</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Insertion sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../205/15205.xml">
Insertion sort</link></algorithm>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../355/77355.xml">
Shell sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../027/6508027.xml">
Tree sort</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../633/2448633.xml">
Library sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<link xlink:type="simple" xlink:href="../256/1184256.xml">
Patience sorting</link></kind>
</psychological_feature>
</game>
</contest>
</social_event>
</event>
</category>
</concept>
</idea>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Merge sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../039/20039.xml">
Merge sort</link></algorithm>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../351/14083351.xml">
Strand sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Non-comparison sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/25980.xml">
Radix sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../592/97592.xml">
Bucket sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../864/99864.xml">
Counting sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/24681.xml">
Pigeonhole sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../302/11517302.xml">
Burstsort</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Others</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<link xlink:type="simple" xlink:href="../064/897064.xml">
Topological sorting</link></procedure>
</activity>
</psychological_feature>
</wordnet>
</act>
</rule>
</event>
</message>
</algorithm>
</database>
</lexical_database>
</electronic_database>
</information>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../061/562061.xml">
Sorting network</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../090/2713090.xml">
Bitonic sorter</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Ineffective/jokeful sorts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<algorithm wordnetid="105847438" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../870/99870.xml">
Bogosort</link></algorithm>
 | <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../662/563662.xml">
Stooge sort</link></database>
</kind>
</wordnet>
</lexical_database>
</category>
</concept>
</electronic_database>
</idea>
</information>
</message>
</col>
</row>
</table>
</col>
</row>
</table>
</p>


</sec>
</bdy>
</algorithm>
</kind>
</article>
