<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:03:15[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Software agent</title>
<id>430106</id>
<revision>
<id>243215050</id>
<timestamp>2008-10-05T17:16:04Z</timestamp>
<contributor>
<username>CharlesGillingham</username>
<id>4604963</id>
</contributor>
</revision>
<categories>
<category>Software</category>
<category>Artificial intelligence</category>
<category>Uncategorized pages needing expert attention</category>
<category>Pages needing expert attention</category>
</categories>
</header>
<bdy>


<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article or section is in need of attention from an expert on the subject.</b>
Please help recruit one or <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Software_agent&amp;action=edit">
improve this article</weblink> yourself. See the  for details.Please consider using  to associate this request with a </col>
</row>
</table>

</p>
<p>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>, a <b>software agent</b> is a piece of software that acts for a user or other program in a relationship of <link xlink:type="simple" xlink:href="../568/52568.xml">
agency</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. Such "action on behalf of" implies the <link xlink:type="simple" xlink:href="../653/170653.xml">
authority</link> to decide which (and if) action is appropriate. The idea is that <link xlink:type="simple" xlink:href="../568/52568.xml">
agent</link>s are not strictly invoked for a task, but activate themselves.</p>
<p>

Related and derived concepts include <it><link xlink:type="simple" xlink:href="../317/2711317.xml">
Intelligent agent</link>s</it> (in particular exhibiting some aspect of <link>
Artificial Intelligence</link>, such as <link xlink:type="simple" xlink:href="../403/183403.xml">
learning</link> and <link xlink:type="simple" xlink:href="../755/89755.xml">
reasoning</link>), <it><link xlink:type="simple" xlink:href="../145/191145.xml">
autonomous</link></it> agents (capable of modifying the way in which they achieve their objectives), <it>distributed</it> agents (being executed on physically distinct computers), <it>multi-agent systems</it> (distributed agents that do not have the capabilities to achieve an objective alone and thus must communicate), and <it>mobile</it> agents (agents that can relocate their execution onto different processors).</p>

<sec>
<st>
Definition</st>
<p>

<image location="right" width="300px" src="Ch1-Nwanna.gif" type="thumb">
<caption>

Nwana's Category of Software Agent
</caption>
</image>

The term "agent" describes a software <link xlink:type="simple" xlink:href="../ury/30th_century.xml">
abstraction</link>, an idea, or a concept, similar to <link xlink:type="simple" xlink:href="../757/22757.xml">
OOP</link> terms such as methods, <link xlink:type="simple" xlink:href="../223/11774223.xml">
function</link>s, and objects. The concept of an agent provides a convenient and powerful way to describe a complex software entity that is capable of acting with a certain degree of <link xlink:type="simple" xlink:href="../145/191145.xml">
autonomy</link> in order to accomplish  tasks on behalf of its user. But unlike objects, which are defined in terms of <it>methods</it> and <it>attributes</it>, an agent is defined in terms of its behavior.</p>
<p>

Various authors have proposed different definitions of agents, these commonly include concepts such as 
<list>
<entry level="1" type="bullet">

 <it>persistence</it> (code is not executed on demand but runs continuously and decides for itself when it should perform some activity)</entry>
<entry level="1" type="bullet">

 <it>autonomy</it> (agents have capabilities of task selection, prioritization, goal-directed behaviour, decision-making without human intervention)</entry>
<entry level="1" type="bullet">

 <it>social ability</it> (agents are able to engage other components through some sort of communication and coordination, they may collaborate on a task)</entry>
<entry level="1" type="bullet">

 <it>reactivity</it> (agents perceive the context in which they operate and react to it appropriately).</entry>
</list>
</p>
<p>

The <it>Agent</it> concept is most useful as a tool to analyze systems, not as a prescription. The concepts mentioned above often relate well to the way we naturally think about complex tasks and thus  agents can be useful to model such tasks</p>

<ss1>
<st>
Intelligent software agents</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../317/2711317.xml">
intelligent agent</link></it>
</indent>

The design of <link xlink:type="simple" xlink:href="../317/2711317.xml">
intelligent agent</link>s (or intelligent software agents) is a branch of <link xlink:type="simple" xlink:href="../164/1164.xml">
artificial intelligence</link> research. Capabilities of <link xlink:type="simple" xlink:href="../317/2711317.xml">
intelligent agent</link>s include:
<list>
<entry level="1" type="bullet">

 ability to <it>adapt''</it></entry>
<entry level="2" type="indent">

Adaptation implies sensing the environment and reconfiguring in response. This can be achieved through the choice of alternative problem-solving-rules or algorithms, or through the discovery of problem solving strategies. Adaptation may also include other aspects of an agent's internal construction, such as recruiting processor or storage resources.</entry>
<entry level="1" type="bullet">

 ability to <it>learn</it> </entry>
<entry level="2" type="indent">

Learning may proceed through trial-and-error, then it implies a capability of introspection and analysis of behaviour and success. Alternatively, learning may proceed by example and generalization, then it implies a capacity to abstract and generalize.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Autonomous agents</st>
<p>

<link xlink:type="simple" xlink:href="../626/1456626.xml">
Autonomous agent</link>s are software agents that claim to be , being self-contained and capable of making independent decisions, and taking actions to satisfy internal <link xlink:type="simple" xlink:href="../094/14850094.xml">
goal</link>s based upon their perceived <link xlink:type="simple" xlink:href="../263/192263.xml">
environment</link>.  All software agents in important applications are closely supervised by people who start them up, monitor and continually modify their behavior, and shut them down when necessary. The <link xlink:type="simple" xlink:href="../085/957085.xml">
Popek and Goldberg virtualization requirements</link> is a hardware solution to the supervision problem, which in principle prevents the execution of critical instructions without entering a suitable mode (such as System or Super-user mode).</p>

</ss1>
<ss1>
<st>
Distributed agents</st>
<p>

Since agents are well suited to include their required resources in their description, they can be designed to be very loosely coupled and it becomes easy to have them executed as independent threads and on distributed processors. Thus they become <it>distributed agents</it> and the considerations of <link xlink:type="simple" xlink:href="../501/8501.xml">
distributed computing</link> apply. Agent code is particularly easy to implement in a distributed fashion and should scale well.</p>

</ss1>
<ss1>
<st>
Multi-agent systems</st>
<p>

When several agents (inter)act they may form a <link xlink:type="simple" xlink:href="../833/938833.xml">
multi-agent system</link> a.k.a. <link xlink:type="simple" xlink:href="../619/985619.xml">
multiple-agent system</link>. Characteristically such agents will not have all data or all methods available to achieve an objective (this can be referred to as "limited viewpoint") and thus will have to collaborate with other agents. Also, there may be little or no global control and thus such systems are sometimes referred to as <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../988/762988.xml">
swarm systems</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</instrumentality>
</artifact>
</system>
. As with distributed agents, data is decentralized and execution is asynchronous. Earlier, related fields include <link xlink:type="simple" xlink:href="../629/237629.xml">
Distributed Artificial Intelligence</link> (DAI) and distributed problem solving (DPS).</p>

</ss1>
<ss1>
<st>
Mobile agents</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../699/661699.xml">
mobile agent</link></it>
</indent>
Agent code that moves itself, including its execution state, on to another processor, to continue execution there. This is also referred to as mobile code. Agents can be used to gather system information, taking back-up of files by copying them in client-server paradigm, monitoring network throughput or to check resources availability and moderating the resource utilization of system by checking the services running on system.
<image width="150px" src="Network_monitor_agent.JPG" type="thumb">
<caption>

analysis of packets
</caption>
</image>
</p>

</ss1>
<ss1>
<st>
Fuzzy agents</st>
<p>

In <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> a <link xlink:type="simple" xlink:href="../755/2710755.xml">
fuzzy agent</link> is a software agent that implements <link xlink:type="simple" xlink:href="../180/49180.xml">
fuzzy logic</link>. This software entity interacts with its environment through an adaptive rule-base and can therefore be considered as a type of <link xlink:type="simple" xlink:href="../317/2711317.xml">
intelligent agent</link>.</p>

</ss1>
</sec>
<sec>
<st>
What an agent is not</st>
<p>

It is not useful to prescribe what is, and what is not an agent. However contrasting the term with related concepts may help clarify its meaning:</p>

<ss2>
<st>
Distinguishing agents from <link xlink:type="simple" xlink:href="../783/5783.xml">
programs</link></st>
<p>

<weblink xlink:type="simple" xlink:href="http://www.msci.memphis.edu/~franklin/AgentProg.html">
Fanklin &amp; Graesser (1997)</weblink> discuss four key notions that distinguish agents from arbitrary programs: reaction to the environment, autonomy, goal-orientation and persistence.</p>

</ss2>
<ss2>
<st>
Intuitive distinguishing agents from objects</st>
<p>

<list>
<entry level="1" type="bullet">

 Agents are more autonomous than <link xlink:type="simple" xlink:href="../665/169665.xml">
objects</link>.</entry>
<entry level="1" type="bullet">

 Agents have flexible behaviour, <link xlink:type="simple" xlink:href="../050/1290050.xml">
reactive</link>, <link xlink:type="simple" xlink:href="../145/3038145.xml">
proactive</link>, social.</entry>
<entry level="1" type="bullet">

 Agents have at least one <link xlink:type="simple" xlink:href="../300/45300.xml">
thread</link> of control but may have more.</entry>
<entry level="1" type="indent">

 (Wooldridge, 2002)</entry>
</list>
</p>

</ss2>
<ss2>
<st>
Distinguishing agents from expert systems</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../136/10136.xml">
Expert system</link>s are not coupled to their environment;</entry>
<entry level="1" type="bullet">

 Expert systems are not designed for reactive, proactive behavior.</entry>
<entry level="1" type="bullet">

 Expert systems do not consider social ability</entry>
<entry level="1" type="indent">

 (Wooldridge, 2002)</entry>
</list>
</p>

</ss2>
</sec>
<sec>
<st>
History</st>
<p>

The concept of an agent can be traced back to Hewitt's Actor Model (Hewitt, 1977) - "A self-contained, interactive and concurrently-executing object, possessing internal state and communication capability." </p>
<p>

To be more academic, software agent systems are a direct evolution from Multi-Agent Systems (MAS). MAS evolved from Distributed Artificial Intelligence (DAI), Distributed Problem Solving (DPS) and Parallel AI (PAI), thus inheriting all characteristics (good and bad) from DAI and <link xlink:type="simple" xlink:href="../268/1268.xml">
AI</link>.</p>
<p>

<celebrity wordnetid="109903153" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../270/183270.xml">
John Sculley</link></celebrity>
’s 1987 “<link xlink:type="simple" xlink:href="../049/444049.xml">
Knowledge Navigator</link>” video portrayed an image of a relationship between end-users and agents. Being an ideal first, this field experienced a series of unsuccessful top-down implementations, instead of a piece-by-piece, bottom-up approach. The range of agent types is now (from 1990) broad: WWW, search engines, etc.</p>

</sec>
<sec>
<st>
Examples</st>

<ss1>
<st>
Intelligent software agents</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../317/2711317.xml">
Intelligent agent</link></it> 
</indent>

<link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFHaag2006%22])">
Haag (2006)</link> suggests that there are only four essential types of intelligent software agents:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>
<list>
<entry level="1" type="number">

 Buyer agents or shopping bots</entry>
<entry level="1" type="number">

 User or personal agents</entry>
<entry level="1" type="number">

 Monitoring-and-surveillance agents</entry>
<entry level="1" type="number">

 Data Mining agents</entry>
</list>
</p>

<ss2>
<st>
Buyer agents (shopping bots)</st>
<p>

Buyer agents travel around a network (i.e. the internet) retrieving information about goods and services. These agents, also known as 'shopping bots', work very efficiently for commodity products such as CDs, books, electronic components, and other one-size-fits-all products.  <it>Amazon.com</it> is a good example of a shopping bot. The website will offer you a list of books that you might like to buy on the basis of what you're buying now and what you have bought in the past. </p>
<p>

Another example is used on <link xlink:type="simple" xlink:href="../495/130495.xml">
eBay</link>. At the bottom of the page there is a list of similar products that other customers who did the same search looked at. This is because it is assumed the user tastes are relatively similar and they will be interested in the same products. This technology is known as <link xlink:type="simple" xlink:href="../289/480289.xml">
collaborative filtering</link>.</p>

</ss2>
<ss2>
<st>
User agents (personal agents)</st>
<p>

User agents, or personal agents, are intelligent agents that take action on your behalf.  In this category belong those intelligent agents that already perform, or will shortly perform, the following tasks:
<list>
<entry level="1" type="bullet">

 Check your e-mail, sort it according to the user's order of preference, and alert you when important emails arrive.</entry>
<entry level="1" type="bullet">

 Play computer games as your opponent or patrol game areas for you.</entry>
<entry level="1" type="bullet">

 Assemble customized news reports for you. There are several versions of these, including <weblink xlink:type="simple" xlink:href="http://www.newshub.com">
newshub</weblink> and CNN.</entry>
<entry level="1" type="bullet">

 Find information for you on the subject of your choice.</entry>
<entry level="1" type="bullet">

 Fill out forms on the Web automatically for you, storing your information for future reference (e.g. <weblink xlink:type="simple" xlink:href="http://www.newshub.com">
newshub</weblink>).</entry>
<entry level="1" type="bullet">

 Scan Web pages looking for and highlighting text that constitutes the "important" part of the information there</entry>
<entry level="1" type="bullet">

 "Discuss" topics with you ranging from your deepest fears to sports</entry>
</list>
</p>

</ss2>
<ss2>
<st>
Monitoring-and-surveillance (predictive) agents</st>
<p>

<link xlink:type="simple" xlink:href="../076/5559076.xml">
Monitoring and Surveillance Agents</link> are used to observe and report on equipment, usually computer systems. The agents may keep track of company inventory levels, observe competitors' prices and relay them back to the company, watch stock manipulation by <link xlink:type="simple" xlink:href="../368/15368.xml">
insider trading</link> and rumors, etc.
<image width="150px" src="Resource_monitoring.JPG" type="thumb">
<caption>

service monitoring
</caption>
</image>
</p>
<p>

For example, NASA's Jet Propulsion Laboratory has an agent that monitors inventory, planning, and scheduling equipment ordering to keep costs down, as well as food storage facilities. These agents usually monitor complex computer networks that can keep track of the configuration of each computer connected to the network.</p>

</ss2>
<ss2>
<st>
Data mining agents</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../868/5721868.xml">
Data mining agents</link></it>
</indent>
This agent uses information technology to find trends and patterns in an abundance of information from many different sources. The user can sort through this information in order to find whatever information they are seeking. </p>
<p>

A data mining agent operates in a data warehouse discovering information.  A 'data warehouse' brings together information from lots of different sources. "Data mining" is the process of looking through the data warehouse to find information that you can use to take action, such as ways to increase sales or keep customers who are considering defecting. </p>
<p>

'Classification' is one of the most common types of data mining, which finds patterns in information and categorizes them into different classes.  Data mining agents can also detect major shifts in trends or a key indicator and can detect the presence of new information and alert you to it.  For example, the agent may detect a decline in the construction industry for an economy; based on this relayed information construction companies will be able to make intelligent decisions regarding the hiring/firing of employees or the purchase/lease of equipment in order to best suit their firm.</p>

</ss2>
</ss1>
<ss1>
<st>
Other examples</st>
<p>

Some other examples of current <link xlink:type="simple" xlink:href="../317/2711317.xml">
Intelligent agent</link>s include some <link xlink:type="simple" xlink:href="../847/459847.xml">
spam</link> filters, game <link xlink:type="simple" xlink:href="../583/1839583.xml">
bots</link>, and server monitoring tools. <link xlink:type="simple" xlink:href="../023/4059023.xml">
Search engine</link> indexing bots also qualify as intelligent agents.</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../303/487303.xml">
User agent</link> - for browsing the World Wide Web</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../624/20624.xml">
Mail transfer agent</link> - For serving E-mail, such as <it>Microsoft Outlook</it>. Why? It communicates with the POP3 mail server, without users having to understand <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/23062.xml">
POP3</link></rule>
</direction>
</protocol>
</message>
 command protocols.  It even has rule sets that filter mail for the user, thus sparing them the trouble of having to do it themselves. </entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../710/41710.xml">
SNMP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 agent  </entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../832/53832.xml">
DAML</link> (DARPA Agent Markup Language)</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../527/5229527.xml">
3APL</link></instrumentality>
</artifact>
</system>
 (Artificial Autonomous Agents Programming Language)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../001/248001.xml">
Web Ontology Language</link> (OWL)</entry>
<entry level="1" type="bullet">

 <it><link xlink:type="simple" xlink:href="../986/458986.xml">
daemon</link>s</it> in <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 systems. </entry>
<entry level="1" type="bullet">

 In Unix-style networking servers, <it><link xlink:type="simple" xlink:href="../697/170697.xml">
httpd</link></it> is an HTTP daemon which implements the <link xlink:type="simple" xlink:href="../443/13443.xml">
HyperText Transfer Protocol</link> at the root of the <invention wordnetid="105633385" confidence="0.8">
<link xlink:type="simple" xlink:href="../139/33139.xml">
World Wide Web</link></invention>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../765/917765.xml">
Management agent</link>s used to manage telecom devices</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../876/886876.xml">
Crowd simulation</link> for safety planning or <process wordnetid="100029677" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<phenomenon wordnetid="100034213" confidence="0.8">
<consequence wordnetid="111410625" confidence="0.8">
<link xlink:type="simple" xlink:href="../073/10175073.xml">
3D computer graphics</link></consequence>
</phenomenon>
</physical_entity>
</process>
,</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
Design issues</st>
<p>

Interesting issues to consider in the development of agent-based systems include
<list>
<entry level="1" type="bullet">

 how tasks are scheduled and how synchronization of tasks is achieved</entry>
<entry level="1" type="bullet">

 how tasks are prioritized by agents</entry>
<entry level="1" type="bullet">

 how agents can collaborate, or recruit resources,</entry>
<entry level="1" type="bullet">

 how agents can be re-instantiated in different environments, and how their internal state can be stored,</entry>
<entry level="1" type="bullet">

 how the environment will be probed and how a change of environment leads to behavioral changes of the agents</entry>
<entry level="1" type="bullet">

 how messaging and communication can be achieved,</entry>
<entry level="1" type="bullet">

 what hierarchies of agents are useful (e.g. task execution agents, scheduling agents, resource providers ...).</entry>
</list>
</p>
<p>

For software agents to work together efficiently they must share <link xlink:type="simple" xlink:href="../107/29107.xml">
semantics</link> of their data elements.  This can be done by having computer systems publish their <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link>.</p>
<p>

The definition of <it>agent processing</it> can be approached from two interrelated directions:
<list>
<entry level="1" type="bullet">

 internal state processing and ontologies for representing knowledge</entry>
<entry level="1" type="bullet">

 interaction protocols - standards for specifying communication of tasks</entry>
</list>
</p>
<p>

Agent systems are used to model real world systems with <link xlink:type="simple" xlink:href="../467/928467.xml">
concurrency</link> or parallel processing.</p>
<p>

<list>
<entry level="1" type="bullet">

 Agent Machinery - Engines of various kinds, which support the varying degrees of intelligence</entry>
<entry level="1" type="bullet">

 Agent Content - Data employed by the machinery in Reasoning and Learning</entry>
<entry level="1" type="bullet">

 Agent Access - Methods to enable the machinery to perceive content and perform actions as outcomes of Reasoning</entry>
<entry level="1" type="bullet">

 Agent Security - Concerns related to distributed computing, augmented by a few special concerns related to agents</entry>
</list>
</p>
<p>

The agent uses its access methods to go out into local and remote databases to forage for content. These access methods may include setting up news stream delivery to the agent, or retrieval from bulletin boards, or using a spider to walk the Web. The content that is retrieved in this way is probably already partially filtered – by the selection of the newsfeed or the databases that are searched. The agent next may use its detailed searching or language-processing machinery to extract keywords or signatures from the body of the content that has been received or retrieved. This abstracted content (or event) is then passed to the agent’s Reasoning or inferencing machinery in order to decide what to do with the new content. This process combines the event content with the rule-based or knowledge content provided by the user. If this process finds a good hit or match in the new content, the agent may use another piece of its machinery to do a more detailed search on the content. Finally, the agent may decide to take an action based on the new content; for example, to notify the user that an important event has occurred. This action is verified by a security function and then given the authority of the user. The agent makes use of a user-access method to deliver that message to the user. If the user confirms that the event is important by acting quickly on the notification, the agent may also employ its learning machinery to increase its weighting for this kind of event.</p>

</sec>
<sec>
<st>
 Notes </st>

<p>

<reflist>
<entry id="1">
 From the Latin <it>agere</it> (to do): an agreement to act on one's behalf.</entry>
<entry id="2">
Stephen Haag. "Management Information Systems for the Information Age", 2006. Pages 224-228.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://agents.umbc.edu/introduction/ao/">
Software Agents: An Overview</weblink>, Hyacinth S. Nwana. <it><link>
Knowledge Engineering Review</link></it>, 11(3):1–40, September 1996. <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../199/73199.xml">
Cambridge University Press</link></company>
.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.fipa.org/">
FIPA</weblink> The Foundation for Intellligent Physical Agents</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://jade.tilab.com/">
JADE</weblink> Java Agent Developing Framework, an Open Source framework developed by Telecom Italia Labs</entry>
</list>


</p>

</sec>
</bdy>
</article>
