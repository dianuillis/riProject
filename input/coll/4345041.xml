<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:07:13[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<plant_part  confidence="0.8" wordnetid="113086908">
<natural_object  confidence="0.8" wordnetid="100019128">
<kernel  confidence="0.8" wordnetid="113137010">
<header>
<title>Hybrid kernel</title>
<id>4345041</id>
<revision>
<id>231936347</id>
<timestamp>2008-08-14T17:13:39Z</timestamp>
<contributor>
<username>Ary29</username>
<id>64395</id>
</contributor>
</revision>
<categories>
<category>Operating system technology</category>
<category>Operating system kernels</category>
</categories>
</header>
<bdy>
<p>

<image location="right" width="400px" src="OS-structure2.svg" type="thumb">
<caption>

Structure of monolithic kernel, microkernel and hybrid kernel-based operating systems
</caption>
</image>
</p>
<p>

<b>Hybrid kernel</b> is a <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> architecture based on combining aspects of <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link> and <link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic kernel</link> architectures used in <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link> <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s. The category is controversial due to the similarity to monolithic kernel; the term has been dismissed by some as just marketing. The usually accepted categories are <link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic kernel</link>s and <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link>s (with <link>
nanokernel</link>s and <link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link>s seen as more extreme versions of microkernels).</p>
<p>

The idea behind this quasi-category is to have a kernel structure similar to a microkernel, but implemented as a monolithic kernel. In contrast to a microkernel, all (or nearly all) services are in <link xlink:type="simple" xlink:href="../467/93467.xml">
kernel space</link>. As in a monolithic kernel, there is no performance overhead associated with microkernel message passing and context switching between kernel and user mode. Also, as with monolithic kernels, there are none of the benefits of having services in <link xlink:type="simple" xlink:href="../467/93467.xml">
user space</link>.</p>

<sec>
<st>
Controversy</st>

<p>

As mentioned above, a hybrid kernel is like a monolithic kernel in that there is no performance overhead associated with microkernel and there are none of the benefits of having services in user space.</p>
<p>

That leads to the controversy - does having a microkernel-like structure in a monolithic kernel make such a distinct difference that another category of kernels is needed?</p>

<ss1>
<st>
Proponents</st>
<p>

Microsoft normally uses the term "microkernel" and sometimes "modified microkernel", "modified microkernel or <link>
macrokernel</link>"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> when describing the kernel part of the <link xlink:type="simple" xlink:href="../523/1942523.xml">
architecture of the Windows NT operating system line</link>. The whole architecture is said to be composed of a "modified microkernel", drivers, <link xlink:type="simple" xlink:href="../523/1942523.xml#xpointer(//*[./st=%22Executive%22])">
Executive</link>, and <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link>, and <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<link xlink:type="simple" xlink:href="../625/144625.xml">
GDI/GDI+</link></framework>
</supporting_structure>
</window>
</artifact>
</structure>
 all in kernel space. There are user space APIs supporting different OS environments.</p>

</ss1>
<ss1>
<st>
Opponents</st>
<p>

Many operating systems and kernel experts have dismissed the label as meaningless, and just marketing:</p>
<p>

<celebrity wordnetid="109903153" confidence="0.9508927676800064">
<person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../618/17618.xml">
Linus Torvalds</link></programmer>
</person>
</celebrity>
 said of this issue:
"As to the whole 'hybrid kernel' thing - it's just marketing. It's 'oh, those microkernels had good PR, how can we try to get good PR for our working kernel? Oh, I know, let's use a cool name and try to imply that it has all the PR advantages that that other system has'."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

<link>
Sonny Rao</link> of the IBM LTC Kernel Performance File/IO team said:
"It's wrong...I think this talk ... was born from some kind of half-assed marketing game to try and make XXX kernel seem 'more advanced.' 'Micro' and 'hybrid' are always better/more advanced than 'Monolithic' right??"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</ss1>
</sec>
<sec>
<st>
Hybrid kernel examples</st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link> kernel</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../281/554281.xml">
Haiku</link></O>
 kernel</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../066/88066.xml">
Syllable</link></entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link></O>
-based</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../229/294229.xml">
DragonFly BSD</link></O>
 (first non-<link xlink:type="simple" xlink:href="../028/21028.xml">
Mach</link> BSD OS to use a hybrid kernel, concepts inspired by <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
)</entry>
<entry level="2" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../754/617754.xml">
XNU</link></software>
 kernel (core of <link xlink:type="simple" xlink:href="../076/53076.xml">
Darwin</link>, used in <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>)</entry>
<entry level="1" type="bullet">

 <link>
NetWare</link> kernel<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/24226.xml">
Plan 9</link></O>
 kernel</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../928/507928.xml">
Inferno</link></O>
 kernel</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../523/1942523.xml">
NT kernel</link> (used in Windows <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
NT</link></family>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
2000</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../068/208068.xml">
2003</link></version>
; <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
XP</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Vista</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/2361042.xml">
2008</link></version>
)</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
 kernel</entry>
</list>
</p>

<ss1>
<st>
NT kernel</st>

<p>

<image width="275px" src="Windows_2000_architecture.svg" type="thumb">
<caption>

The Windows NT operating system family's architecture consists of two layers (<link xlink:type="simple" xlink:href="../467/93467.xml">
user mode</link> and <link>
kernel mode</link>), with many different modules within both of these layers.
</caption>
</image>

The best known example of a hybrid kernel is the <link xlink:type="simple" xlink:href="../523/1942523.xml">
NT kernel</link> inside <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../068/208068.xml">
Windows Server 2003</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/2361042.xml">
Windows Server 2008</link></version>
. NT-based Windows is classified as a hybrid kernel (or a macrokernel<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>) rather than a monolithic kernel because the emulation subsystems run in user-mode server processes, rather than in kernel mode as on a monolithic kernel, and further because of the large number of design goals which resemble design goals of Mach (in particular the separation of OS personalities from a general kernel design). Conversely, the reason NT is not a microkernel system is because most of the system components run in the same address space as the kernel, as would be the case with a monolithic design (in a traditional monolithic design, there would not be a microkernel per se, but the kernel would implement broadly similar functionality to NT's microkernel and kernel-mode subsystems).</p>

<ss2>
<st>
Description</st>
<p>

The Windows NT design included many of the same objectives as <link xlink:type="simple" xlink:href="../028/21028.xml">
Mach</link>, the archetypal microkernel system, one of the most important being its structure as a collection of modules which communicate via well-known interfaces, with a small microkernel limited to core functions such as first-level interrupt handling, thread scheduling and synchronization primitives. This allows for the possibility of using either direct procedure calls or <link xlink:type="simple" xlink:href="../106/152106.xml">
interprocess communication</link> (IPC) to communicate between modules, and hence for the potential location of modules in different address spaces (for example in either kernel space or server processes). Other design goals shared with Mach included support for diverse architectures, a kernel with abstractions general enough to allow multiple operating system personalities to be implemented on top of it and an object-oriented organisation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

The reason NT is not a microkernel system is that nearly all of the subsystems providing system services, including the entire Executive, run in kernel mode (in the same address space as the microkernel itself), rather than in user-mode server processes, as would be the case with a microkernel design. This is an attribute NT shares with early versions of Mach, as well as all commercial systems based on Mach, and stems from the superior performance offered by using direct procedure calls in a single memory space, rather than IPC, for communication amongst subsystems.</p>
<p>

In describing NT, the list of which subsystems do not run in kernel mode is far shorter than the list of those that do. The user-mode subsystems on NT include one or more emulation subsystems, each of which provides an operating system personality to applications, the <link xlink:type="simple" xlink:href="../138/5780138.xml">
Session Manager Subsystem</link> (smss.exe), which starts the emulation subsystems during system startup and the <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../227/632227.xml">
Local Security Authority Subsystem Service</link></method>
</know-how>
 (lsass.exe), which enforces security on the system. The subsystems are not written to a particular OS personality, but rather to the native NT API (or <link xlink:type="simple" xlink:href="../148/3750148.xml">
Native API</link>).</p>
<p>

The primary operating system personality on Windows is the <link xlink:type="simple" xlink:href="../601/81601.xml">
Windows API</link>, which is always present. The emulation subsystem which implements the Windows personality is called the <link xlink:type="simple" xlink:href="../139/6238139.xml">
Client/Server Runtime Subsystem</link> (csrss.exe). On versions of NT prior to 4.0, this subsystem process also contained the window manager, graphics device interface and graphics device drivers. For performance reasons, however, in version 4.0 and later, these modules (which are often implemented in user mode even on monolithic systems, especially those designed without internal graphics support) run as a kernel-mode subsystem.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

As of 2007, one other operating system personality, <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>, is offered as an optionally installed system component on certain versions of Windows Vista and Windows Server 2003 R2. The associated subsystem process is the Subsystem for UNIX-Based Applications (psxss.exe), which was formerly part of a Windows add-on called Windows <link xlink:type="simple" xlink:href="../926/1497926.xml">
Services for Unix</link>. An <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
 subsystem (os2ss.exe) was supported in older versions of Windows NT, as was a very limited <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../305/23305.xml">
POSIX</link></system_of_measurement>
</standard>
 subsystem (psxss.exe). The POSIX subsystem was supplanted by the UNIX subsystem, hence the identical executable name.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>
<p>

Applications that run on NT are written to one of the OS personalities, and not to the native NT API, which is largely undocumented (with the exception of routines used in device driver development). An OS personality is implemented via a set of user-mode DLLs (see <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../077/2701077.xml">
Dynamic-link library</link></format>
), which are mapped into application processes' address spaces as required, together with an emulation subsystem server process (as described previously). Applications access system services by calling into the OS personality DLLs mapped into their address spaces, which in turn call into the NT run-time library (ntdll.dll), also mapped into the process address space. The NT run-time library services these requests by trapping into kernel mode to either call kernel-mode Executive routines or make <link xlink:type="simple" xlink:href="../625/2714625.xml">
Local Procedure Call</link>s (LPCs) to the appropriate user-mode subsystem server processes, which in turn use the NT API to communicate with application processes, the kernel-mode subsystems and each other.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

</ss2>
</ss1>
<ss1>
<st>
Plan 9 kernel</st>

<ss2>
<st>
Description</st>
<p>

One of the main design goals is to represent all resources as files and use a single communication protocol for both local and remote resources. The <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../226/24226.xml">
Plan 9</link></O>
 kernel uses both in-kernel (kernel mode) but more commonly user mode servers. Communication with user mode servers - <link xlink:type="simple" xlink:href="../151/41151.xml">
fileservers</link> - uses <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/683452.xml">
9P</link></rule>
</direction>
</protocol>
</message>
. Kernel mode examples are device drivers and network interfaces (ethernet). Examples of user mode are networking (IP stack), environment, mailboxes, serial-console multiplexor, spam filter, CD interpreter, foreign filesystems and tapes, backup system, window system, and /proc. Because the interface to 'in-kernel' and 'user space' file servers is the same this also means that components can be moved (or reimplemented) inside and/or outside the kernel without making any changes to the system; for example there have been implementations of the ip stack and graphics systems of both kinds, and they can even coexists in the same running system thanks to the use of namespaces. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>.</p>

</ss2>
<ss2>
<st>
Classification</st>
<p>

Due to the extensive use of user mode fileservers together with some in-kernel systems, this is a simpler candidate for inclusion as a hybrid kernel.</p>

</ss2>
</ss1>
</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
Exokernel</link></kernel>
</natural_object>
</plant_part>
</entry>
<entry level="1" type="bullet">

<link>
Nanokernel</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../531/2968531.xml">
Single address space operating system</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/technet/archive/ntwrkstn/evaluate/featfunc/kernelwp.mspx?mfr=true">
MS Windows NT Kernel-mode User and GDI White Paper</weblink>".&#32;  Microsoft Corporation&#32;(2007).&#32;Retrieved on <link>
2007-03-01</link>.</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.realworldtech.com/forums/index.cfm?action=detail&amp;id=66630&amp;threadid=66595&amp;roomid=11">
Linus Torvalds, Real World Technologies Discussion Forum</weblink> (<link>
2006-05-09</link>)</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.realworldtech.com/forums/index.cfm?action=detail&amp;id=66596&amp;threadid=66595&amp;roomid=11">
Sonny Rao, Real World Technologies Discussion Forum</weblink> (<link>
2006-05-08</link>)</entry>
<entry id="4">
 <weblink xlink:type="simple" xlink:href="http://www.usenix.org/publications/library/proceedings/sf94/full_papers/minshall.a">
An Overview of the NetWare Operating System</weblink>(<link>
2007-02-07</link>)</entry>
<entry id="5">
 <cite style="font-style:normal" class="book">Silberschatz, Abraham;&#32;Peter Baer Galvin and Greg Gagne&#32;(2005). <weblink xlink:type="simple" xlink:href="http://higheredbcs.wiley.com/legacy/college/silberschatz/0471694665/appendices/appb.pdf">
Operating System Concepts; 7th Edition</weblink>.&#32;Hoboken, New Jersey:&#32;John Wiley &amp; Sons Inc. ISBN 978-0-471-69466-3.</cite>&nbsp;</entry>
<entry id="6">
Probert, Dave&#32;(2005).&#32;"<weblink xlink:type="simple" xlink:href="http://research.microsoft.com/ur/asia/curriculum/download/BeijingPresentation.ppt">
Overview of Windows Architecture</weblink>".&#32;<it>Using Projects Based on Internal NT APIs to Teach OS Principles</it>.&#32;  Microsoft Research/Asia - Beijing.&#32;Retrieved on <link>
2007-03-01</link>.</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.collyer.net/who/geoff/9book.pdf">
Why Plan 9 matters, Geoff Collyer </weblink>(<link>
2006-09-12</link>)</entry>
</reflist>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.realworldtech.com/forums/index.cfm?action=detail&amp;id=66630&amp;threadid=66595&amp;roomid=11">
Linus Torvalds on Real World Tech </weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.realworldtech.com/forums/index.cfm?action=detail&amp;id=66595&amp;threadid=66595&amp;roomid=11">
Hybrid Kernel category criticised </weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.sysinternals.com/Information/NativeApi.html">
Sysinternals article about the NT Native API</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</kernel>
</natural_object>
</plant_part>
</article>
