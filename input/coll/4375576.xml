<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:09:05[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Grammar induction</title>
<id>4375576</id>
<revision>
<id>233265685</id>
<timestamp>2008-08-21T05:49:02Z</timestamp>
<contributor>
<username>E dog95</username>
<id>1544984</id>
</contributor>
</revision>
<categories>
<category>Genetic programming</category>
<category>Natural language processing</category>
<category>Machine learning</category>
<category>Uncategorized pages needing expert attention</category>
<category>Pages needing expert attention</category>
<category>Computational linguistics</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article or section is in need of attention from an expert on the subject.</b>
Please help recruit one or <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Grammar_induction&amp;action=edit">
improve this article</weblink> yourself. See the  for details.Please consider using  to associate this request with a </col>
</row>
</table>


<b>Grammatical induction</b>, also known as  <b>grammatical inference</b> or <link xlink:type="simple" xlink:href="../850/6069850.xml">
syntactic pattern recognition</link>, refers to the process in <link xlink:type="simple" xlink:href="../488/233488.xml">
machine learning</link> of inducing a <link xlink:type="simple" xlink:href="../716/18020716.xml">
formal grammar</link> (usually in the form of <it>re-write rules</it> or <it><link xlink:type="simple" xlink:href="../904/12800904.xml">
productions</link></it>) from a set of observations, thus constructing a model which accounts for the characteristics of the observed objects. Grammatical inference is distinguished from traditional <link xlink:type="simple" xlink:href="../593/12769593.xml">
decision rules</link> and other such methods principally by the nature of the resulting model, which in the case of grammatical inference relies heavily on hierarchical substitutions. Whereas a traditional decision rule set is geared toward assessing object classification, a grammatical rule set is geared toward the generation of examples.  In this sense, the grammatical induction problem can be said to seek a <it>generative</it> model, while the decision rule problem seeks a <it>descriptive</it> model.  
<sec>
<st>
Methodologies</st>
<p>

There are a wide variety of methods for grammatical inference.  Two of the classic sources are <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFFu1977%22])">
Fu (1977)</link> and <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFFu1982%22])">
Fu (1982)</link>.  <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFDudaHartStork2001%22])">
Duda, Hart &amp; Stork (2001)</link> also devote a brief section to the problem, and cite a number of references.  The basic trial-and-error method they present is discussed below.</p>

<ss1>
<st>
Grammatical inference by trial-and-error </st>
<p>

The method proposed in Section 8.7 of <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFDudaHartStork2001%22])">
Duda, Hart &amp; Stork (2001)</link> suggests successively guessing grammar rules (productions) and testing them against positive and negative observations.  The rule set is expanded so as to be able to generate each positive example, but if a given rule set also generates a negative example, it must be discarded.  This particular approach can be characterized as "hypothesis testing" and bears some similarity to Mitchel's <link xlink:type="simple" xlink:href="../809/7578809.xml">
version space</link> algorithm. The <link xlink:type="simple" xlink:href="#xpointer(//cite[@id=%22CITEREFDudaHartStork2001%22])">
Duda, Hart &amp; Stork (2001)</link> text provide a simple example which nicely illustrates the process, but the feasibility of such an unguided trial-and-error approach for more substantial problems is dubious.  An evolutionary approach, such as that described below, is likely to yield much better results because .</p>

</ss1>
<ss1>
<st>
 Grammatical inference by genetic algorithms </st>
<p>

Grammatical Induction using <link xlink:type="simple" xlink:href="../837/190837.xml">
evolutionary algorithm</link>s is the process of evolving a representation of the grammar of a target language through some evolutionary process. <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../716/18020716.xml">
Formal grammar</link></language>
s can easily be represented as a tree structure of production rules that can be subjected to evolutionary operators. <link xlink:type="simple" xlink:href="../775/775.xml">
Algorithm</link>s of this sort stem from the <link xlink:type="simple" xlink:href="../424/12424.xml">
genetic programming</link> paradigm pioneered by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../867/147867.xml">
John Koza</link></scientist>
</causal_agent>
</person>
</physical_entity>
. Other early work on simple formal languages used the binary string representation of genetic algorithms, but the inherently hierarchical structure of grammars couched in the <link>
EBNF</link> language made <link xlink:type="simple" xlink:href="../806/30806.xml">
trees</link> a more flexible approach.</p>
<p>

Koza represented <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../016/18016.xml">
Lisp</link></programming_language>
 programs as <link xlink:type="simple" xlink:href="../806/30806.xml">
trees</link>. He was able to find analogues to the genetic operators within the standard set of tree operators. For example, swapping sub-trees is equivalent to the corresponding process of genetic crossover, where sub-strings of a genetic code are transplanted into an individual of the next generation. Fitness is measured by scoring the output from the <link xlink:type="simple" xlink:href="../395/2382395.xml">
functions</link> of the lisp code. Similar analogues between the tree structured lisp representation and the representation of grammars as trees, made the application of genetic programming techniques possible for grammar induction.</p>
<p>

In the case of Grammar Induction, the transplantation of sub-trees corresponds to the swapping of production rules that enable the parsing of phrases from some language. The fitness operator for the grammar is based upon some measure of how well it performed in parsing some group of sentences from the target language. In a tree representation of a grammar, a <link xlink:type="simple" xlink:href="../061/7689061.xml">
terminal symbol</link> (e.g. a <link xlink:type="simple" xlink:href="../495/37495.xml">
noun</link> or <link xlink:type="simple" xlink:href="../354/37354.xml">
verb</link> or some other <link xlink:type="simple" xlink:href="../059/45059.xml">
part of speech</link>) of a production rule corresponds to a leaf node of the tree. Its parent nodes corresponds to a non-terminal symbol (e.g. a <link xlink:type="simple" xlink:href="../958/64958.xml">
noun phrase</link> or a <link xlink:type="simple" xlink:href="../676/208676.xml">
verb phrase</link>) in the rule set. Ultimately, the root node might correspond to a sentence non-terminal.</p>

</ss1>
</sec>
<sec>
<st>
 Applications </st>
<p>

The principle of grammar induction has been applied to other aspects of <link xlink:type="simple" xlink:href="../652/21652.xml">
natural language processing</link>, and have been applied (among many other problems) to <link xlink:type="simple" xlink:href="../852/18852.xml">
morpheme</link> analysis, and even place name derivations.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../447/6352447.xml">
Artificial grammar learning</link></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../850/6069850.xml">
Syntactic pattern recognition</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../562/405562.xml">
Inductive inference</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

  <cite id="CITEREFDudaHartStork2001">Duda, Richard O.; Peter E. Hart&#32;&amp; David G. Stork&#32;(2001), written at <region wordnetid="108630985" confidence="0.8">
<administrative_district wordnetid="108491826" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<district wordnetid="108552138" confidence="0.8">
<country wordnetid="108544813" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/8210131.xml">
New York</link></country>
</district>
</location>
</administrative_district>
</region>
,&#32;<it><weblink xlink:type="simple" xlink:href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-0471056693.html">
Pattern Classification</weblink></it>&#32;(2 ed.), John Wiley &amp; Sons, </cite></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFFu1982">Fu, King Sun&#32;(1982), written at <link xlink:type="simple" xlink:href="../880/136880.xml">
Englewood Cliffs, NJ</link>,&#32;<it>Syntactic Pattern Recognition and Applications</it>, Prentice-Hall</cite></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFFu1977">Fu, King Sun&#32;(1977), written at <region wordnetid="108630985" confidence="0.8">
<administrative_district wordnetid="108491826" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<municipality wordnetid="108626283" confidence="0.8">
<settlement wordnetid="108672562" confidence="0.8">
<capital wordnetid="108518505" confidence="0.8">
<city wordnetid="108524735" confidence="0.8">
<country wordnetid="108544813" confidence="0.8">
<center wordnetid="108523483" confidence="0.8">
<area wordnetid="108497294" confidence="0.8">
<village wordnetid="108672738" confidence="0.8">
<seat wordnetid="108647945" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<district wordnetid="108552138" confidence="0.8">
<urban_area wordnetid="108675967" confidence="0.8">
<link xlink:type="simple" xlink:href="../354/3354.xml">
Berlin</link></urban_area>
</district>
</geographical_area>
</seat>
</village>
</area>
</center>
</country>
</city>
</capital>
</settlement>
</municipality>
</location>
</administrative_district>
</region>
,&#32;<it>Syntactic Pattern Recognition, Applications</it>, Springer-Verlag</cite></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFHorning1969">Horning, James Jay&#32;(1969), written at <link>
Stanford</link>,&#32;<it><weblink xlink:type="simple" xlink:href="http://proquest.umi.com/pqdlink?Ver=1&amp;Exp=05-16-2013&amp;FMT=7&amp;DID=757518381&amp;RQT=309&amp;attempt=1&amp;cfc=1">
A Study of Grammatical Inference</weblink></it>&#32;(Ph.D. Thesis ed.), Stanford University Computer Science Department, </cite></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFGold1967">Gold, E Mark&#32;(1967),&#32;<it>Language Identification in the Limit</it>, <link>
Information and Control</link></cite></entry>
</list>
</p>


</sec>
</bdy>
</article>
