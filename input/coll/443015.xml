<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:06:40[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Hardware abstraction</title>
<id>443015</id>
<revision>
<id>235035153</id>
<timestamp>2008-08-29T18:29:37Z</timestamp>
<contributor>
<username>Boleyn</username>
<id>6127189</id>
</contributor>
</revision>
<categories>
<category>Operating system technology</category>
<category>All articles to be merged</category>
<category>Articles to be merged&amp;#32;since July 2008</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-move" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="150px" src="Merge-arrows.svg">
<caption>

Merge arrows
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 It has been suggested that this article or section be  with . ()</col>
</row>
</table>


<b>Hardware abstractions</b> are sets of routines in <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link> that emulate some <link xlink:type="simple" xlink:href="../196/81196.xml">
platform</link>-specific details, giving programs direct access to the <link xlink:type="simple" xlink:href="../310/5310.xml">
hardware</link> resources.<p>

They often allow programmers to write <link xlink:type="simple" xlink:href="../310/5310.xml">
device</link>-independent, high performance applications by avoiding standard <link xlink:type="simple" xlink:href="../194/22194.xml">
Operating System</link> calls to hardware.  The process of abstracting pieces of hardware is often done from the perspective of a CPU.  Each type of CPU has a specific <link xlink:type="simple" xlink:href="../772/47772.xml">
instruction set architecture</link> or ISA.  The ISA represents the primitive operations of the machine that are available for use by assembly programmers and compiler writers.  One of the main functions of a <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link> is to allow a programmer to write an algorithm in a <link xlink:type="simple" xlink:href="../842/189842.xml">
high-level language</link> without having to care about CPU-specific instructions.  Then it is the job of the compiler to generate a CPU-specific executable.  The same type of abstraction is made in <link xlink:type="simple" xlink:href="../194/22194.xml">
operating systems</link>, but OS APIs now represent the primitive operations of the machine, rather than an ISA.  This allows a programmer to use OS-level operations (i.e. task creation/deletion) in their programs while still remaining <link xlink:type="simple" xlink:href="../492/5759492.xml">
portable</link> over a variety of different platforms.</p>
<p>

<b>See also</b>: <link xlink:type="simple" xlink:href="../511/425511.xml">
Hardware abstraction layer</link></p>




</bdy>
</article>
