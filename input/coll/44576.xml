<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:40:54[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Polynomial time</title>
<id>44576</id>
<revision>
<id>228821414</id>
<timestamp>2008-07-30T15:07:14Z</timestamp>
<contributor>
<username>Giftlite</username>
<id>37986</id>
</contributor>
</revision>
<categories>
<category>Computational complexity theory</category>
</categories>
</header>
<bdy>

"Cubic time" redirects here. For the pseudoscientific theory on time, see <link xlink:type="simple" xlink:href="../208/383208.xml">
Time Cube</link>.<p>

In <link xlink:type="simple" xlink:href="../543/7543.xml">
computational complexity theory</link>, <b>polynomial time</b> refers to the <link xlink:type="simple" xlink:href="../844/4627844.xml">
computation time</link> of a problem where the <link xlink:type="simple" xlink:href="../434/460434.xml">
run time</link>, <it>m</it>(<it>n</it>), is no greater than a <link>
polynomial function</link> of the <link xlink:type="simple" xlink:href="../299/89299.xml">
problem size</link>, <it>n</it>.
Written mathematically using <link xlink:type="simple" xlink:href="../578/44578.xml">
big O notation</link>, this states that <math>m(n) = O(n^k)</math> where <it>k</it> is some constant that may depend on the problem. For example, the <link xlink:type="simple" xlink:href="../249/3268249.xml">
quicksort</link> sorting algorithm on <it>n</it> integers performs at most <math>An^2</math> operations for some constant <math>A</math>. Thus it runs in time <math>O(n^2)</math> and is a polynomial time algorithm.</p>
<p>

Mathematicians sometimes use the notion of "polynomial time on the length of the input" as a definition of a "fast" or "feasible" computation (see <link xlink:type="simple" xlink:href="../179/3262179.xml">
Cobham's thesis</link>), as opposed to <link xlink:type="simple" xlink:href="../405/18643405.xml">
sub-exponential time</link> (also super-polynomial time), which is anything slower than that. <link xlink:type="simple" xlink:href="../581/44581.xml">
Exponential time</link> is one example of a sub-exponential time.</p>
<p>

The <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link> of <link xlink:type="simple" xlink:href="../336/8336.xml">
decision problem</link>s that can be solved on a deterministic sequential machine in polynomial time is known as <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../550/658550.xml">
P</link></group>
</collection>
</class>
</b>.  The class of decision problems that can be verified in polynomial time is known as <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../562/21562.xml">
NP</link></group>
</collection>
</class>
</b>. Equivalently, NP is the class of decision problems that can be solved in polynomial time on a <link xlink:type="simple" xlink:href="../935/21935.xml">
non-deterministic Turing machine</link> (NP stands for <b>N</b>ondeterministic <b>P</b>olynomial time).</p>
<p>

P is the smallest time-complexity class on a deterministic machine which is <link xlink:type="simple" xlink:href="../849/926849.xml#xpointer(//*[./st=%22Computer+Engineering%22])">
robust</link> in terms of machine model changes. (For example, a change from a single-tape <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 to a multi-tape machine can lead to a quadratic speedup, but any algorithm that runs in <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial time</link> under one model also does so on the other.)  P is also the smallest class closed under composition of subproblems. Any given <link xlink:type="simple" xlink:href="../492/60492.xml">
abstract machine</link> will have a <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link> corresponding to the problems which can be solved in <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial time</link> on that machine.</p>
<p>

Some texts use the term <b>weakly polynomial</b> <link xlink:type="simple" xlink:href="../434/460434.xml">
run time</link>. This means that <link xlink:type="simple" xlink:href="../434/460434.xml">
run time</link> is <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial</link> not in the size of the input, but in the numerical value of the input, which may be exponentially larger.  For example, the <link>
Euclidean Algorithm</link> is only weakly polynomial when implemented using subtraction.</p>
<p>

Similarly, running in <b>strongly polynomial</b> time means that the algorithm's <link xlink:type="simple" xlink:href="../434/460434.xml">
run time</link> is independent of the numerical data size and depends only on the inherent dimensions of the problem. For example, an algorithm which could sort <it>n</it> integers each less than <it>k</it> in time <math>O(n^2)</math> would be strongly polynomial, while an algorithm sorting them in time <math>O(nk)</math> would be weakly <link xlink:type="simple" xlink:href="../576/44576.xml">
polynomial</link> (because an integer less than <it>k</it> can be represented in size logarithmic in <it>k</it>).</p>

<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../550/5257550.xml">
Constant time</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../258/754258.xml">
Linear time</link></entry>
<entry level="1" type="bullet">

<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../115/6115.xml">
Complexity classes P and NP</link></group>
</collection>
</difficulty>
</problem>
</class>
</state>
</condition>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book">Christos Papadimitriou&#32;(1994). Computational Complexity.&#32;Addison Wesley.</cite>&nbsp;</entry>
</list>
</p>


</sec>
</bdy>
</article>
