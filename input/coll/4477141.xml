<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:07:46[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<structure  confidence="0.8" wordnetid="104341686">
<artifact  confidence="0.8" wordnetid="100021939">
<header>
<title>Propositional directed acyclic graph</title>
<id>4477141</id>
<revision>
<id>194200177</id>
<timestamp>2008-02-26T17:13:30Z</timestamp>
<contributor>
<username>Gdrbot</username>
<id>263608</id>
</contributor>
</revision>
<categories>
<category>Graph data structures</category>
</categories>
</header>
<bdy>

A <b>propositional directed acyclic graph (PDAG)</b> is a <link xlink:type="simple" xlink:href="../519/8519.xml">
data structure</link> that is used to represent a <link xlink:type="simple" xlink:href="../349/753349.xml">
Boolean function</link>.  A Boolean function can be represented as a rooted, <link xlink:type="simple" xlink:href="../002/204002.xml">
directed acyclic graph</link> of the following form:
<list>
<entry level="1" type="bullet">

 Leaves are labeled with <math>\top</math> (true), <math>\bot</math> (false), or a Boolean variable.</entry>
<entry level="1" type="bullet">

 Non-leaves are <math>\mathcal{4}</math> (logical and), <math>\mathcal{5}</math> (logical or) and <math>\Diamond</math> (logical not).</entry>
<entry level="1" type="bullet">

 <math>\mathcal{4}</math>- and <math>\mathcal{5}</math>-nodes have at least one child.</entry>
<entry level="1" type="bullet">

 <math>\Diamond</math>-nodes have exactly one child.</entry>
</list>
<p>

Leaves labeled with <math>\top</math> (<math>\bot</math>) represent the constant Boolean function which always evaluates to 1 (0). A leaf labeled with a Boolean variable <math>x</math> is interpreted as the assignment <math>x=1</math>, i.e. it represents the Boolean function which evaluates to 1 if and only if <math>x=1</math>. The Boolean function represented by a <math>\mathcal{4}</math>-node is the one that evaluates to 1, if and only if the Boolean function of all its children evaluate to 1. Similarly, a <math>\mathcal{5}</math>-node represents the Boolean function that evaluates to 1, if and only if the Boolean function of at least one child evaluates to 1. Finally, a <math>\Diamond</math>-node represents the complemenatary Boolean function its child, i.e. the one that evaluates to 1, if and only if the Boolean function of its child evaluates to 0.</p>

<sec>
<st>
 PDAG, BDD, and NNF </st>
<p>

Every <b><structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<link xlink:type="simple" xlink:href="../855/576855.xml">
binary decision diagram (BDD)</link></artifact>
</structure>
</b> and every <b><link xlink:type="simple" xlink:href="../622/554622.xml">
negation normal form (NNF)</link></b> is also a PDAG with some particular properties. The following pictures represent the Boolean function  <math>f(x1, x2, x3) = -x1 * -x2 * -x3  +  x1 * x2  +  x2 * x3</math>:</p>
<p>

<table align="center">
<row>
<col>
 <image width="189px" src="BDD_simple.svg" type="thumb">
<caption>

BDD for the function f
</caption>
</image>
</col>
<col>
 <image width="189px" src="BDD2pdag.png" type="thumb">
<caption>

PDAG for the function f obtained from the BDD
</caption>
</image>
</col>
<col>
 <image width="189px" src="BDD2pdag_simple.svg" type="thumb">
<caption>

PDAG for the function f
</caption>
</image>
</col>
</row>
</table>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../519/8519.xml">
Data structure</link></entry>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../715/4715.xml">
Boolean satisfiability problem</link></difficulty>
</method>
</problem>
</state>
</know-how>
</condition>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../094/81094.xml">
Proposition</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

  M. Wachter &amp; R. Haenni, "Propositional DAGs: a New Graph-Based Language for Representing Boolean Functions", KR'06, 10th International Conference on Principles of Knowledge Representation and Reasoning, Lake District, UK, 2006.</entry>
<entry level="1" type="bullet">

  M. Wachter &amp; R. Haenni, "Probabilistic Equivalence Checking with Propositional DAGs", Technical Report iam-2006-001, Institute of Computer Science and Applied Mathematics, University of Bern, Switzerland, 2006.</entry>
<entry level="1" type="bullet">

  M. Wachter, R. Haenni &amp; J. Jonczy,  "Reliability and Diagnostics of Modular Systems: a New Probabilistic Approach", DX'06, 18th International Workshop on Principles of Diagnosis, Pe√±aranda de Duero, Burgos, Spain, 2006.</entry>
</list>
</p>

</sec>
</bdy>
</artifact>
</structure>
</article>
