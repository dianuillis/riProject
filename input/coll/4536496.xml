<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:15:43[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<message  confidence="0.8" wordnetid="106598915">
<protocol  confidence="0.8" wordnetid="106665108">
<standard  confidence="0.8" wordnetid="107260623">
<direction  confidence="0.8" wordnetid="106786629">
<rule  confidence="0.8" wordnetid="106652242">
<system_of_measurement  confidence="0.8" wordnetid="113577171">
<header>
<title>TSIG</title>
<id>4536496</id>
<revision>
<id>218492745</id>
<timestamp>2008-06-10T22:00:36Z</timestamp>
<contributor>
<username>Jadedcrypto</username>
<id>2020677</id>
</contributor>
</revision>
<categories>
<category>Internet standards</category>
<category>Internet protocols</category>
<category>Domain name system</category>
</categories>
</header>
<bdy>

<b>TSIG (Transaction SIGnature)</b> is a computer networking protocol defined
in RFC 2845. It is used primarily by the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../339/8339.xml">
Domain Name System</link></rule>
</direction>
</protocol>
</message>
 (DNS) to provide a means of authenticating updates to a <link xlink:type="simple" xlink:href="../150/80150.xml">
Dynamic DNS</link> database. TSIG uses shared <link xlink:type="simple" xlink:href="../039/53039.xml">
secret key</link>s and <link xlink:type="simple" xlink:href="../890/363890.xml">
one-way hashing</link> to provide a cryptographically secure means of identifying each endpoint of a connection as being allowed to make or respond to a DNS update.<p>

Although queries to DNS may be made anonymously (but see <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/337389.xml">
DNSSEC</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
), updates to DNS must be authenticated since they make lasting changes to the structure of the Internet naming system.  The use of a key shared by the client making the update and the DNS server guarantees the authenticity of the update request.  However, the update request may be passing over an insecure channel (the Internet). A one-way hashing function is used to prevent malicious observers from learning the secret key and using it to make their own modifications.</p>
<p>

A timestamp is included in the TSIG protocol to prevent recorded responses from being reused, which would allow an attacker to breach the security of TSIG.  This places a requirement on dynamic DNS servers and TSIG clients to contain an accurate clock.  Since DNS servers are connected to a network, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../886/159886.xml">
Network Time Protocol</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 may be used to provide an accurate time source.</p>
<p>

DNS updates, like queries, normally are transported via <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../929/31929.xml">
UDP</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 since it requires lower overhead than <link xlink:type="simple" xlink:href="../538/30538.xml">
TCP</link>.  However, DNS servers support both UDP and TCP requests.</p>

<sec>
<st>
Implementation</st>
<p>

An update, as specified in RFC 2136, is a set of instructions to a DNS server.  These include a header, the zone to be updated, the prerequisites that must be satisfied, and the record(s) to be updated.  TSIG adds a final record, which includes a timestamp and the hash of the request.  It also includes the name of the secret key that was used to sign the request.  RFC 2535 has recommendations on the form of the name.</p>
<p>

The response to a successful TSIG update will also be signed with a TSIG record.  Failures are not signed to prevent an attacker from learning anything about the TSIG key using specially crafted update "probes".</p>
<p>

The <link xlink:type="simple" xlink:href="../880/3773880.xml">
nsupdate</link> program can use TSIG to do DNS updates.</p>
<p>

The TSIG record is in the same format as the other records in the update request. The meaning of the fields is described in RFC 1035.</p>
<p>

<table style="margin: 1em auto 1em auto" class="wikitable">
<caption>
<b>TSIG record fields</b></caption>
<row>
<header>
<b>Field</b></header>
<header>
<b>Bytes</b></header>
<header>
<b>Description</b></header>
</row>
<row>
<col>
NAME</col>
<col>
max 256</col>
<col>
Key name, which must be unique on client and server</col>
</row>
<row>
<col>
TYPE</col>
<col>
2</col>
<col>
TSIG (250)</col>
</row>
<row>
<col>
CLASS</col>
<col>
2</col>
<col>
ANY (255)</col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../449/31449.xml">
TTL</link></col>
<col>
4</col>
<col>
0 (since TSIG records must not be cached)</col>
</row>
<row>
<col>
RDLENGTH</col>
<col>
2</col>
<col>
Length of RDATA field</col>
</row>
<row>
<col>
RDATA</col>
<col>
variable</col>
<col>
Structure containing the timestamp, algorithm and hash data</col>
</row>
</table>
</p>

</sec>
<sec>
<st>
 Alternatives to TSIG </st>
<p>

Although TSIG is widely deployed, there are several problems with the protocol:</p>
<p>

<list>
<entry level="1" type="bullet">

 It requires distributing secret keys to each host which must make updates.</entry>
<entry level="1" type="bullet">

 The HMAC-MD5 digest is only 128 bits.</entry>
<entry level="1" type="bullet">

 There are no levels of authority.  Any host with the secret key may update any record.</entry>
</list>
</p>
<p>

As a result, a number of alternatives and extensions have been proposed.</p>
<p>

<list>
<entry level="1" type="bullet">

 RFC 2137 specifies an update method using a <link xlink:type="simple" xlink:href="../222/24222.xml">
public key</link> "SIG" DNS record.  A client holding the corresponding private key can sign the update request.  This method matches the <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../389/337389.xml">
DNSSEC</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 method for secure queries.  However, this method is deprecated by RFC 3007.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 In 2003, RFC 3645 proposed extending TSIG to allow the Generic Security Service (GSS) method of secure key exchange, eliminating the need for manually distributing keys to all TSIG clients. The method for distributing public keys as a DNS resource record (RR) is specified in RFC 2930, with GSS as one mode of this method. A modified GSS-TSIG - using the windows <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../947/16947.xml">
Kerberos</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
 server - was implemented by <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> <system wordnetid="104377057" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../807/2807.xml">
Active Directory</link></part>
</component>
</instrumentality>
</artifact>
</concept>
</idea>
</system>
 servers and clients called Secure Dynamic Update. In combination with poorly configured DNS (with no Reverse Lookup Zone) using RFC 1918 addressing, reverse DNS updates using this authentication scheme are forwarded en masse to the root DNS servers and increase the traffic to root DNS servers in the course of doing so<weblink xlink:type="simple" xlink:href="http://www.caida.org/outreach/papers/2003/dnsspectroscopy/">
http://www.caida.org/outreach/papers/2003/dnsspectroscopy/</weblink>. There is an <link xlink:type="simple" xlink:href="../545/387545.xml">
anycast</link> group which deals with this traffic to take it away from the root DNS servers<weblink xlink:type="simple" xlink:href="http://public.as112.net/">
http://public.as112.net/</weblink>.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 RFC 2845, which defines TSIG, specifies only one allowed hashing function <written_communication wordnetid="106349220" confidence="0.8">
<code wordnetid="106667317" confidence="0.8">
<link xlink:type="simple" xlink:href="../112/17112.xml">
HMAC-MD5</link></code>
</written_communication>
, which is no longer considered to be highly secure.  In 2006, proposals are being circulated to allow RFC 3174 Secure Hash Algorithm (SHA1) hashing to replace MD5.  The 160-bit digest generated by SHA1 should be more secure than the 128-bit digest generated by <function wordnetid="113783816" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../826/18826.xml">
MD5</link></function>
.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 RFC 2930, which defines <link xlink:type="simple" xlink:href="../792/11959792.xml">
TKEY</link>, a <link xlink:type="simple" xlink:href="../486/12886486.xml">
DNS Record</link> used to automatically distribute keys from a DNS server to DNS clients</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 RFC 3645, Which defines GSS-TSIG which uses gss-api and TKEY to automatically distribute keys in gss-api mode</entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../486/12886486.xml">
List of DNS record types</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

Broido, Nemeth, claffy. "Spectroscopy of DNS Update Traffic", CAIDA, 2002.</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 RFC 2136 Dynamic Updates in the Domain Name System (DNS UPDATE)</entry>
<entry level="1" type="bullet">

 RFC 2845 Secret Key Transaction Authentication for DNS (TSIG)</entry>
<entry level="1" type="bullet">

 RFC 2930 Secret Key Establishment for DNS (TKEY RR)</entry>
<entry level="1" type="bullet">

 RFC 3645 Generic Security Service Algorithm for Secret Key Transaction Authentication for DNS (GSS-TSIG)</entry>
<entry level="1" type="bullet">

 RFC 3174 US Secure Hash Algorithm 1</entry>
<entry level="1" type="bullet">

 RFC 4635 HMAC SHA TSIG Algorithm Identifiers</entry>
</list>
</p>


</sec>
</bdy>
</system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
</article>
