<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:41:45[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<system  confidence="0.9511911446218017" wordnetid="104377057">
<header>
<title>Package management system</title>
<id>47017</id>
<revision>
<id>244544084</id>
<timestamp>2008-10-11T10:13:42Z</timestamp>
<contributor>
<username>Rdunn</username>
<id>1034090</id>
</contributor>
</revision>
<categories>
<category>Package management systems</category>
</categories>
</header>
<bdy>

<image width="300px" src="Pms.svg" type="thumb">
<caption>

Illustration of a package management system being used to download new software. A typical manual action requested is <link>
restarting</link> the computer.
</caption>
</image>

<image width="300px" src="Synaptic_Package_Manager.png" type="thumb">
</image>

<image width="150px" src="Aptitude-resolves-dependencies.png" type="thumb">
<caption>

An example of a package management system, <link xlink:type="simple" xlink:href="../234/3663234.xml">
Aptitude</link>, resolving the dependencies of ldm, a package selected for installation, by selecting packages on which ldm depends.
</caption>
</image>
<p>

A <b>package management system</b> is a collection of tools to automate the process of installing, upgrading, configuring, and removing <link xlink:type="simple" xlink:href="../130/16656130.xml">
software packages</link> from a <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link>. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 and other <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 systems typically manage thousands of discrete packages.</p>
<p>

Packages are distributions of software and <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link> such as the software's full name, description of its purpose, version number, vendor, <link xlink:type="simple" xlink:href="../538/7538.xml">
checksum</link>, and a list of <link xlink:type="simple" xlink:href="../449/1425449.xml">
dependencies</link> necessary for the software to run properly.  Upon installation, metadata is stored in a local <it>package database</it>.</p>
<p>

A package management system provides a consistent method of installing software.  A package management system is sometimes incorrectly referred to be a same as package manager or a system install manager. </p>

<sec>
<st>
 History </st>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<programmer wordnetid="110481268" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../851/14851.xml">
Ian Murdock</link></programmer>
</person>
 has commented that package management is "the single biggest advancement <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 has brought to the industry", that it blurs the boundaries between operating system and applications, and that it makes it "easier to push new innovations [...] into the marketplace and [...] evolve the OS".<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

</sec>
<sec>
<st>
 Terminology </st>
<p>

A package management system is often called a "package manager" or "install manager".   This can
lead to confusion between a package management system and an <link xlink:type="simple" xlink:href="../625/634625.xml">
installer</link>.  The differences include:</p>
<p>

<table class="wikitable">
<header>
Package Management System</header>
<header>
Installer</header>
<row>
<col>
Typically part of the operating system.</col>
<col>
Each product comes bundled with its own installer.</col>
</row>
<row>
<col>
Uses a single installation database.</col>
<col>
Performs its own installation, sometimes recording information about that installation in a <link>
 registry</link>.</col>
</row>
<row>
<col>
Can verify and manage all packages on the system.</col>
<col>
Only works with its bundled product.</col>
</row>
<row>
<col>
Single package management system vendor.</col>
<col>
Multiple installer vendors.</col>
</row>
<row>
<col>
Single package format.</col>
<col>
Multiple installation formats.</col>
</row>
</table>
</p>
<p>

A package, for package managers, denotes a specific set of files bundled with the appropriate metadata
for use by a package manager.  This can be confusing, as a programming languages often use the word "package" as a specific form of a <link xlink:type="simple" xlink:href="../421/106421.xml">
software library</link>.   Furthermore, that software library is typically distributed in a package of files bundled for a package manager.</p>

</sec>
<sec>
<st>
 Functions </st>

<p>

Package management systems are charged with the task of organizing all of the packages installed on a system and maintaining their usability.  Typical functions of a package management system include:</p>
<p>

<list>
<entry level="1" type="bullet">

Verifying file checksums to ensure correct and complete packages.</entry>
<entry level="1" type="bullet">

Verifying digital signatures to authenticate the origin of packages.</entry>
<entry level="1" type="bullet">

Applying file archivers to manage encapsulated files.</entry>
<entry level="1" type="bullet">

Upgrading software with latest versions, typically from a software repository. </entry>
<entry level="1" type="bullet">

Grouping of packages by function to help eliminate user confusion.</entry>
<entry level="1" type="bullet">

Managing dependencies to ensure a package is installed with all packages it requires.</entry>
</list>
</p>
<p>

Some additional challenges are met by only a few package management systems.</p>

<ss1>
<st>
 Challenges with shared libraries </st>

<p>

Computer systems which rely on <link>
dynamic library</link> linking, instead of <link xlink:type="simple" xlink:href="../227/2692227.xml">
static library</link> linking, share executable libraries of machine instructions across packages
and applications.  In these systems, complex relationships between different packages requiring different versions of libraries results in a challenge colloquially known as "<link xlink:type="simple" xlink:href="../993/858993.xml">
dependency hell</link>."  On Microsoft Windows systems, this is also called "<structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<link xlink:type="simple" xlink:href="../441/59441.xml">
DLL hell</link></framework>
</supporting_structure>
</window>
</artifact>
</structure>
" when working with dynamically linked libraries.  Good package management systems become vital on these systems.</p>

</ss1>
<ss1>
<st>
 Front-ends for locally compiled packages </st>

<p>

System administrators may install and maintain software using tools other than package management software.  For example, a local administrator may download unpackaged source code, compile it, and install it.  This may cause the state of the local system to fall out of synchronization with the state of the package manager's database. The local administrator will be required to take additional measures, such as manually managing some dependencies or integrating the changes into the package manager.  </p>
<p>

There are tools available to ensure that locally compiled packages are integrated with the package management. For distributions based on .deb and .rpm files as well as Slackware Linux, there is <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../132/9814132.xml">
CheckInstall</link></software>
, and for recipe-based systems such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../419/94419.xml">
Gentoo Linux</link></O>
 and hybrid systems such as <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../891/674891.xml">
Arch Linux</link></distribution>
</arrangement>
</structure>
, it is possible to write a recipe first, which then ensures that the package fits into the local package database.</p>

</ss1>
<ss1>
<st>
 Maintenance of configuration </st>

<p>

Particularly troublesome with software upgrades are upgrades of configuration files. Since package management systems, at least on Unix systems, originated as extensions of <link xlink:type="simple" xlink:href="../ury/29th_century.xml">
file archiving utilities</link>, they can usually only either overwrite or retain configuration files, rather than applying rules to them. There are exceptions to this that usually apply to kernel configuration (which, if broken, will render the computer unusable after a restart). Problems can be caused if the format of configuration files changes. For instance, if the old configuration file does not explicitly disable new options that should be disabled. Some package management systems, such as <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8242.xml">
Debian</link></distribution>
</arrangement>
</structure>
's <link xlink:type="simple" xlink:href="../483/187483.xml">
dpkg</link>, allow configuration during installation. In other situations, it is desirable to install packages with the default configuration and then overwrite this configuration, for instance, in <link xlink:type="simple" xlink:href="../605/547605.xml">
headless</link> installations to a large number of computers. (This kind of pre-configured installation is also supported by <link xlink:type="simple" xlink:href="../483/187483.xml">
dpkg</link>.)</p>

</ss1>
<ss1>
<st>
 Repositories </st>

<p>

In order to give users easy control over the kinds of software that they are allowing to be installed on their system (and sometimes due to legal or convenience reasons on the distributors' side), software is often downloaded from a number of <link xlink:type="simple" xlink:href="../763/9570763.xml">
software repositories</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

</ss1>
<ss1>
<st>
 Upgrade suppression </st>

<p>

When a user interacts with the package management software to bring about an upgrade, it is customary to present the user with the list of things to be done (usually the list of packages to be upgraded, and possibly giving the old and new version numbers), and allow the user to either accept the upgrade in bulk, or select individual packages for upgrades. Many package management systems can be configured to never upgrade certain packages, or to upgrade them only when critical vulnerabilities or instabilities are found in the previous version, as defined by the packager of the software. This process is sometimes called <it>version pinning</it>.</p>
<p>

For instance:
<list>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link>
yum</link></software>
 supports this with the syntax <it>exclude=openoffice*</it>,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> pacman with <it>IgnorePkg = openoffice</it> (to suppress upgrading openoffice in both cases)</entry>
<entry level="1" type="bullet">

 dpkg and <link xlink:type="simple" xlink:href="../078/2663078.xml">
dselect</link> support this partially through the <it>hold</it> flag in package selections</entry>
<entry level="1" type="bullet">

 APT extends the <it>hold</it> flag through the complex "pinning" mechanism<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../234/3663234.xml">
aptitude</link> has "hold" and "forbid" flags</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../288/308288.xml">
portage</link> support this through package.mask configuration file</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Cascading package removal </st>

<p>

Some of the more advanced package management features offer "cascading package removal" <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>, in which all packages that depend on the target package and all packages that only the target package depends on, are also removed, respectively.</p>

</ss1>
</sec>
<sec>
<st>
 Common package management systems and formats </st>


<ss1>
<st>
 Package formats </st>

<p>

Each package manager relies on the format and metadata of the packages it can manage.  That is, package managers need groups of files to be bundled for the specific package manager along with appropriate metadata, such as dependencies.  Often, a core set of utilities manages the basic installation from these packages and multiple package managers use these utilities to provide additional functionality.</p>
<p>

For example, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../313/290313.xml">
yum</link></software>
 relies on <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/288236.xml">
rpm</link></software>
 as a backend.  Yum extends the functionality of the backend by adding features such as simple configuration for maintaining a network of systems.  As another example, the <link xlink:type="simple" xlink:href="../475/1254475.xml">
synaptic</link> package manager provides a graphical user interface by using the <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/187481.xml">
Advanced Packaging Tool (apt)</link></instrumentality>
</artifact>
</system>
 library, which, in turn, relies on <link xlink:type="simple" xlink:href="../483/187483.xml">
dpkg</link> for core functionality.</p>
<p>

<link xlink:type="simple" xlink:href="../204/1703204.xml">
Alien</link> is a program that converts between different <link xlink:type="simple" xlink:href="../967/5010967.xml">
Linux package formats</link>. It supports conversion between <link xlink:type="simple" xlink:href="../753/246753.xml">
Linux Standard Base</link>, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/288236.xml">
RPM</link></software>
, <link xlink:type="simple" xlink:href="../906/457906.xml">
deb</link>, Stampede (.slp) and <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../290/28290.xml">
Slackware</link></distribution>
</arrangement>
</structure>
 (<link xlink:type="simple" xlink:href="../694/151694.xml">
tgz</link>) packages.</p>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../967/5010967.xml">
Linux package formats</link></it>, as well as <link xlink:type="simple" xlink:href="../ury/29th_century.xml">
file archive</link> formats.
</indent>

</p>
</ss1>
<ss1>
<st>
 Free software systems </st>

<p>

By the nature of <link xlink:type="simple" xlink:href="../635/10635.xml">
free software</link>, packages under similar and compatible licenses are available for use on a number of operating systems.  These packages can be combined and distributed using configurable and internally complex packaging systems to handle many permutations of software and manage version-specific dependencies and conflicts.  Some packaging systems of free software are also themselves released as free software. One typical difference between package management in proprietary operating systems, such as Mac OS X and Windows, and those in free software, such as Linux, is that free software systems permit third-party packages to also be installed and upgraded through the same mechanism, whereas the PMS of Mac OS X and Windows will only upgrade software provided by Apple and Microsoft, respectively (with the exception of some third party drivers in Windows). The ability to continuously upgrade third party software is typically added by adding the <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link> of the corresponding repository to the package management's configuration file.</p>

<ss2>
<st>
For binary packages</st>


<ss3>
<st>
 Linux distributions </st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../483/187483.xml">
dpkg</link>, used originally by <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8242.xml">
Debian</link></distribution>
</arrangement>
</structure>
 and now by other systems, uses the <link xlink:type="simple" xlink:href="../906/457906.xml">
.deb format</link> and was the first to have a widely known dependency resolution tool (<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../481/187481.xml">
APT</link></instrumentality>
</artifact>
</system>
).</entry>
<entry level="1" type="bullet">

 The <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/288236.xml">
RPM Package Manager</link></software>
 was created by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../386/26386.xml">
Red Hat</link></company>
, and is now used by a number of other <link xlink:type="simple" xlink:href="../212/18212.xml">
Linux distribution</link>s. RPM is the <link xlink:type="simple" xlink:href="../753/246753.xml">
Linux Standard Base</link> packaging format and is the base of a large number of additional tools, including <link xlink:type="simple" xlink:href="../885/1065885.xml">
apt4rpm</link>; Red Hat's <link xlink:type="simple" xlink:href="../103/487103.xml">
up2date</link>; <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../647/705647.xml">
Mandriva</link></company>
's <link xlink:type="simple" xlink:href="../820/411820.xml">
urpmi</link>; <link xlink:type="simple" xlink:href="../620/2399620.xml">
openSUSE</link>'s <link xlink:type="simple" xlink:href="../382/58382.xml">
YaST</link>; and <link xlink:type="simple" xlink:href="../313/290313.xml">
YUM</link>, which is used by <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../070/9951070.xml">
Fedora</link></distribution>
</arrangement>
</structure>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../708/246708.xml">
Yellow Dog Linux</link></O>
.</entry>
<entry level="1" type="bullet">

 A simple <link xlink:type="simple" xlink:href="../694/151694.xml">
tgz</link> package system combines the standard <link xlink:type="simple" xlink:href="../694/151694.xml">
tar</link> and <link xlink:type="simple" xlink:href="../783/12783.xml">
gzip</link>. Used by <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../290/28290.xml">
Slackware</link></distribution>
</arrangement>
</structure>
 Linux there are a few higher-level tools that use the same tgz packaging format, including: <link xlink:type="simple" xlink:href="../108/1392108.xml">
slapt-get</link>, <link xlink:type="simple" xlink:href="../999/1754999.xml">
slackpkg</link> and <link xlink:type="simple" xlink:href="../069/491069.xml">
swaret</link>.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../638/1242638.xml">
Pacman</link> for <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../891/674891.xml">
Arch Linux</link></distribution>
</arrangement>
</structure>
 uses pre-compiled binaries distributed in a <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../694/151694.xml">
tgz</link></format>
</information>
</message>
 archive.</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../116/3606116.xml">
Smart Package Manager</link></instrumentality>
</artifact>
</system>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../956/8942956.xml">
ipkg</link>, a <link xlink:type="simple" xlink:href="../483/187483.xml">
dpkg</link>-inspired, very lightweight system targeted at storage-constrained Linux systems such as embedded devices and handheld computers</entry>
<entry level="1" type="bullet">

 <link>
pkgutils</link>, used by <link xlink:type="simple" xlink:href="../175/840175.xml">
CRUX</link> Linux</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../859/2555859.xml">
PISI</link>, used by <link xlink:type="simple" xlink:href="../765/1794765.xml">
Pardus</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../887/18537887.xml">
SFS Technology</link></software>
 SFS file format used in Linux Tiger and Super Ubuntu operating systems.</entry>
</list>
</p>

</ss3>
<ss3>
<st>
 Mac OS X </st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../547/231547.xml">
fink</link>, for <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>, derives partially from dpkg/apt and partially from ports.</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../719/1828719.xml">
MacPorts</link></software>
, formerly called DarwinPorts, originated from the <link>
OpenDarwin</link> project.</entry>
</list>
</p>

</ss3>
<ss3>
<st>
 Microsoft Windows </st>

<p>

<list>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../840/6840.xml">
Cygwin</link></writer>
</causal_agent>
</compiler>
</copycat>
</person>
</communicator>
</physical_entity>
 - a free software repository for the <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> operating system which provides many Gnu/Linux tools and an installation tool nee package manager.</entry>
<entry level="1" type="bullet">

 <link>
Appsnap</link> - A package manager for Windows written in Python released under the GPL.</entry>
<entry level="1" type="bullet">

 Appupdater - A package manager for Windows written in Python and PHP released under the GPL.</entry>
<entry level="1" type="bullet">

 Windows-get - A package manager for Windows written in Delphi and PHP released into the public domain.</entry>
<entry level="1" type="bullet">

 GetIt - Uses Appsnap, Appupdater, and Windows-get as sources and combines their repositories to one big catalog.</entry>
</list>
</p>

</ss3>
<ss3>
<st>
 Solaris </st>

<p>

<list>
<entry level="1" type="bullet">

 <link>
SysV</link> format (sometimes called <link>
pkgadd</link> format), used by <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
.</entry>
</list>
</p>

</ss3>
<ss3>
<st>
 Cross platform </st>

<p>

<list>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../750/4335750.xml">
OpenPKG</link></instrumentality>
</artifact>
</system>
 is a cross platform package management system based on the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../236/288236.xml">
RPM Package Manager</link></software>
. It works on several Unix-based systems, including <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> and <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
.</entry>
</list>
</p>

</ss3>
</ss2>
<ss2>
<st>
 For installing using compile scripts </st>

<p>

<list>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../288/308288.xml">
Portage</link></software>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../288/308288.xml#xpointer(//*[./st=%22emerge%22])">
emerge</link></software>
 are used by <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../419/94419.xml">
Gentoo Linux</link></O>
. They were inspired by the BSD ports system and use scripts called <link xlink:type="simple" xlink:href="../390/361390.xml">
ebuild</link>s to install software.</entry>
<entry level="1" type="bullet">

 A <link xlink:type="simple" xlink:href="../845/97845.xml">
recipe</link> file contains information on how to download, unpack, compile and install a package in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../563/225563.xml">
GoboLinux</link></O>
 distribution using its <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../563/225563.xml#xpointer(//*[./st=%22Compile%22])">
Compile</link></O>
 tool.</entry>
<entry level="1" type="bullet">

 <link>
apt-build</link> is used by distributions which use deb packages (such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../298/990298.xml">
Ubuntu</link></O>
, <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8242.xml">
Debian</link></distribution>
</arrangement>
</structure>
, <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<company wordnetid="108058098" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../842/179842.xml">
Xandros</link></institution>
</distribution>
</company>
</arrangement>
</structure>
), allowing automatic compiling and installation of software in a deb source repository.</entry>
</list>
</p>

</ss2>
<ss2>
<st>
 Hybrid systems </st>

<p>

<list>
<entry level="1" type="bullet">

 The <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../033/5128033.xml">
FreeBSD Ports</link></instrumentality>
</artifact>
</system>
 Collection, sometimes known as just <it>ports</it>, uses a system of <link xlink:type="simple" xlink:href="../194/176194.xml">
Makefile</link>s to install software from sources or binaries. <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../719/1828719.xml">
MacPorts</link></software>
 (for Mac OS X), <link xlink:type="simple" xlink:href="../495/21495.xml">
NetBSD</link>'s <it><link xlink:type="simple" xlink:href="../494/944494.xml">
pkgsrc</link></it> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../571/18949571.xml">
OpenBSD</link></O>
's <link xlink:type="simple" xlink:href="../958/3868958.xml">
ports collection</link> are similar.</entry>
</list>
</p>

</ss2>
<ss2>
<st>
 Meta package managers </st>

<p>

The following unify package management for several or all Linux and sometimes Unix variants. These, too, are based on the concept of a recipe file.
<list>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../640/1885640.xml">
Autopackage</link></format>
</instrumentality>
</artifact>
</system>
</information>
</message>
 uses .package files.</entry>
<entry level="1" type="bullet">

 epm, developed by Easy Software Products (creators of <link xlink:type="simple" xlink:href="../418/414418.xml">
CUPS</link>), is a "meta packager", that allows creation of native packages for all Linux and Unix operating systems (.deb, .rpm, .tgz for Linux, pkg for Solaris and *BSD, .dmg for OS X,...) controlled from a single *.list file.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../924/2760924.xml">
klik</link> aims to provide an easy way of getting software packages for most major distributions without the dependency problems so common in many other package formats.</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link>
SFS_Technology</link></software>
 This technology finally solves the problem of dependency and allows the use and exchange of software between Linux computers without changing the environment of the operating system.</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../009/743009.xml">
Zero Install</link></software>
 installs each package into its own directory and uses <link xlink:type="simple" xlink:href="../504/349504.xml">
environment variable</link>s to let each program find its libraries. Package and dependency information is downloaded directly from the software authors' pages in an XML format, similar to an <link xlink:type="simple" xlink:href="../489/93489.xml">
RSS Feed</link>.</entry>
<entry level="1" type="bullet">

 The <link>
Nix Package Manager</link> manages packages in a <link xlink:type="simple" xlink:href="../375/468375.xml">
purely functional</link> way.</entry>
</list>
</p>

</ss2>
</ss1>
<ss1>
<st>
 Proprietary software systems </st>

<p>

A wide variety of package management systems are in common use today by <link xlink:type="simple" xlink:href="../886/18934886.xml">
proprietary software</link> operating systems, handling the installation of both proprietary and free packages.</p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
installp</link> is the <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
AIX</link> command for <link xlink:type="simple" xlink:href="../974/2825974.xml">
Object Data Manager</link> (ODM) databases.</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/1806805.xml">
Software Distributor</link></instrumentality>
</artifact>
</system>
 is the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
 package manager.</entry>
<entry level="1" type="bullet">

 In the <link>
Microsoft .NET</link> framework an <link xlink:type="simple" xlink:href="../154/2016154.xml">
assembly</link> is a partially <link xlink:type="simple" xlink:href="../739/5739.xml">
compiled</link> code library for use in deployment, versioning and security.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Application level package managers </st>

<p>

Aside of the systems level application managers, there are some add-on package managers for operating systems with limited capabilities and for programming languages where developers need the latest libraries. Those include the package managers listed for Windows and OS X above as well as:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../h$at/Internet_R$elay_C$hat.xml">
CPAN</link> - a programming library and package manager for the <link xlink:type="simple" xlink:href="../939/23939.xml">
Perl programming language</link></entry>
<entry level="1" type="bullet">

 <link>
 PEAR</link> - a programming library for the <link xlink:type="simple" xlink:href="../131/24131.xml">
PHP programming language</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../386/2866386.xml">
RubyGems</link></software>
 - a programming library for the <link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby programming language</link></entry>
<entry level="1" type="bullet">

 <link>
EasyInstall</link> - a programming library and package manager for the <link xlink:type="simple" xlink:href="../862/23862.xml">
Python programming language</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../865/5364865.xml">
Cabal</link></software>
 - a programming library and package manager for the <link xlink:type="simple" xlink:href="../630/13630.xml">
Haskell programming language</link></entry>
<entry level="1" type="bullet">

 <link>
LuaRocks</link> - a programming library and package manager for the <link xlink:type="simple" xlink:href="../150/46150.xml">
Lua programming language</link></entry>
</list>
</p>
<p>

In contrast to systems level application managers, application level package managers focus on a small part of the operating system. They typically reside within a directory tree that is not maintained by the systems level package manager (like c:\cygwin or /usr/local/fink). Though, this is not the case for the package managers that deal with programming libraries. This leads to a conflict as both package managers claim to "own" a file and might break upgrades.</p>

</ss1>
</sec>
<sec>
<st>
 See also </st>

<p>

<table style="background:#f9f9f9; font-size:85%; line-height:110%; ">
<row>
<col>
 <image width="32x28px" src="Free_Software_Portal_Logo.svg">
</image>
</col>
<col style="padding:0 0.2em;">
 <b><it>
Free software&#32;portal</it></b></col>
</row>
</table>
</p>

<p>

<list>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../922/3874922.xml">
Conary (package manager)</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../763/9570763.xml">
Software repository</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>


<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://ianmurdock.com/2007/07/21/how-package-management-changed-everything/">
How package management changed everything</weblink>".&#32;  ianmurdock.com.&#32;Retrieved on <link>
2008-03-01</link>.</entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://braintickle.blogspot.com/2006/01/linux-repository-classification.html">
Linux repository classification schemes</weblink>".&#32;  braintickle.blogspot.com.&#32;Retrieved on <link>
2008-03-01</link>.</entry>
<entry id="3">
"<weblink xlink:type="simple" xlink:href="http://lists.centos.org/pipermail/centos/2005-May/046320.html">
CentOS yum pinning rpms</weblink>".&#32;  centos.org.&#32;Retrieved on <link>
2008-03-01</link>.</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://www.debian.org/doc/manuals/apt-howto/ch-apt-get.en.html#s-pin">
How to keep specific versions of packages installed (complex)</weblink>".&#32;  debian.org.&#32;Retrieved on <link>
2008-03-01</link>.</entry>
<entry id="5">
"<weblink xlink:type="simple" xlink:href="http://www.archlinux.org/pacman/pacman.8.html">
pacman(8) Manual Page</weblink>".&#32;  archlinux.org.&#32;Retrieved on <link>
2008-03-01</link>.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://kitenet.net/~joey/pkg-comp/">
Comparing Linux/UNIX Binary Package Formats</weblink></entry>
</list>
</p>


</sec>
</bdy>
</system>
</article>
