<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:24:40[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Structure mining</title>
<id>4851545</id>
<revision>
<id>214007156</id>
<timestamp>2008-05-21T19:05:41Z</timestamp>
<contributor>
<username>BotanyBot</username>
<id>3732271</id>
</contributor>
</revision>
<categories>
<category>Data mining</category>
</categories>
</header>
<bdy>

<b>Structure mining</b> or <b>Structured data mining</b> is the process of finding and extracting useful information from semi structured datasets. Graph mining is a special case of Structured Data Mining.
<sec>
<st>
Description</st>
<p>

The growth of the use of semi-structured data, such as can be represented in XML, has created new opportunities for data mining. Data mining has traditionally been concerned with tabular data sets, reflecting the strong association between <link xlink:type="simple" xlink:href="../253/42253.xml">
data mining</link> and <link xlink:type="simple" xlink:href="../873/25873.xml">
relational databases</link>. Much of the world's interesting and mineable data does not easily fold into relational databases, though a generation of software engineers have been trained to believe this is the only way to do things. Data mining algorithms have generally been developed only to cope with tabular data.</p>
<p>

<format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../138/34138.xml">
XML</link></format>
 is the main way of representing semi-structured data. </p>
<p>

XML, as well as being able to represent tabular data, can also represent arbitrary trees. Any particular representation of data to be exchanged between two applications in <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../138/34138.xml">
XML</link></format>
 is normally described by a Schema often written in <link xlink:type="simple" xlink:href="../449/185449.xml">
XSD</link>. 
Practical examples of such Schemata (plural of schema), for instance NewsML, are normally very sophisticated, containing multiple optional subtrees, used for representing special case data. Frequently around 90% of the schema is concerned with the definition of these optional data items and sub-trees. </p>
<p>

Messages and data, therefore, that are transmitted or encoded using XML and that conform to the same schema are liable to contain very different data depending on what is being transmitted.</p>
<p>

Such data presents large problems for conventional data mining. Two messages that conform to the same schema may have little data in common. Building a training set from such data means that if one were to try to format it as tabular data for conventional data mining, large sections of the tables would or could be empty. </p>
<p>

There is a tacit assumption made in the design of most data mining algorithms that the data presented will be complete. Many algorithms perform badly with incomplete data sets, for instance Neural Networks.</p>
<p>

<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../670/19086670.xml">
XPath</link></system_of_measurement>
</standard>
 is the standard mechanism used to reference nodes and data items within XML. It has similarities to standard techniques for navigating directory hierarchies used in operating systems user interfaces. </p>
<p>

To data and structure mine XML data of any form at least two extensions are required to conventional data mining. These are the ability to associate an XPath statement with any data pattern and sub statements with each data node in the data pattern, and the ability to mine the presence and count of any node or set of nodes within the document. </p>
<p>

As an example, if one were to represent a family tree in XML, using these extensions one could create a data set containing all the individuals in the tree, data items such as name and age at death, and counts of related nodes, such as number of children. More sophisticated searches could extract data such as grandparents' lifespans etc.</p>
<p>

The addition of these data types related to the structure of a document or message facilitates structure mining.</p>
<p>

The other desideratum is that the actual mining algorithms employed, whether supervised or unsupervised, must be able to handle sparse data.  In practice the set of data mining algorithms that are best at handling sparse data are those that process the training set data into trees of related patterns. These are frequently descendants of or take their inspiration from <link xlink:type="simple" xlink:href="../337/4373337.xml">
Ross Quinlan</link>'s <plant wordnetid="100017222" confidence="0.8">
<tree wordnetid="113104059" confidence="0.8">
<vascular_plant wordnetid="113083586" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<woody_plant wordnetid="113103136" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../797/1966797.xml">
ID3 algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</woody_plant>
</rule>
</event>
</vascular_plant>
</tree>
</plant>
.</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../611/4851611.xml">
Molecule mining</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../804/4986804.xml">
Sequence mining</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../253/42253.xml">
Data mining</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../990/7990.xml">
Data warehousing</link></entry>
</list>
</p>

<ss1>
<st>
Commercial software and applications</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.scientio.com/products/xmlminer/Pages/default.aspx">
XmlMiner data, text and structure mining tool and web service</weblink></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.scientio.com/products/xmlminer/Pages/Structuremining.aspx">
Structure mining XML data</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://hms.liacs.nl/">
Mining structured data</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://mlg07.dsi.unifi.it/">
The 5th International Workshop on Mining and Learning with Graphs, Firenze, August 1-3, 2007</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.scientio.com/SiteCollectionDocuments/On_data_mining_tree_structured_data_in_XML.pdf">
Andrew N Edmonds,  <it>On data mining tree structured data in XML', Data mining UK conference, University of Nottingham, Aug 2003</it></weblink></entry>
<entry level="1" type="bullet">

 Gusfield, D., <it>Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology</it>, Cambridge University Press, <b>1997</b>. ISBN 0-521-58519-8</entry>
<entry level="1" type="bullet">

 R.O. Duda, P.E. Hart, D.G. Stork, <it>Pattern Classification</it>, John Wiley &amp; Sons, <b>2001</b>. ISBN 0-471-05669-3</entry>
</list>
</p>

</sec>
</bdy>
</article>
