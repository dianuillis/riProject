<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:32:07[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>USB human interface device class</title>
<id>4877283</id>
<revision>
<id>239156711</id>
<timestamp>2008-09-18T01:11:25Z</timestamp>
<contributor>
<username>Guybrush</username>
<id>73608</id>
</contributor>
</revision>
<categories>
<category>USB</category>
</categories>
</header>
<bdy>

The <b>USB human interface device class</b> ("USB HID class") is a <link>
USB</link> <bus wordnetid="102924116" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../073/32073.xml#xpointer(//*[./st=%22Device_classes%22])">
device class</link></bus>
 that describes <link xlink:type="simple" xlink:href="../655/641655.xml">
human interface device</link>s such as <link xlink:type="simple" xlink:href="../281/18842281.xml">
keyboards</link>, <link xlink:type="simple" xlink:href="../056/7056.xml">
mice</link>, <link xlink:type="simple" xlink:href="../339/104339.xml">
game controller</link>s and alphanumeric <link xlink:type="simple" xlink:href="../703/450703.xml">
display device</link>s.  The USB HID class is defined in a number of documents provided by the <link xlink:type="simple" xlink:href="../157/1460157.xml">
USB Implementers Forum</link>'s Device Working Group.  The primary document used to describe the USB HID class is the <weblink xlink:type="simple" xlink:href="http://www.usb.org/developers/devclass_docs/HID1_11.pdf">
Device Class Definition for HID 1.11</weblink>.  There are a number of <weblink xlink:type="simple" xlink:href="http://www.usb.org/developers/hidpage/">
other documents</weblink> that describe more specific devices in the HID class.
<sec>
<st>
Devices</st>
<p>

The USB HID class describes devices used with nearly every modern computer.  Many predefined functions exist in the USB HID class.  These functions allow hardware manufacturers to design a product to USB HID class specifications and expect it to work with any software that also meets these specifications.</p>
<p>

The same HID protocol is used unmodified in <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../742/3742.xml">
Bluetooth</link></system_of_measurement>
</machine>
</device>
</standard>
</instrumentality>
</artifact>
</computer>
 human interface devices.  The Bluetooth profile specification only points readers to the USB HID documentation.  In this sense those devices also belong to the USB HID class.</p>

<ss1>
<st>
Keyboards</st>
<p>

Keyboards are some of the most popular USB HID class devices.  The USB HID class keyboard has replaced the <connection wordnetid="103091374" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../317/3266317.xml">
PS/2 keyboard</link></connection>
 on most modern computer systems.  The USB HID class keyboard is normally designed with an IN endpoint that communicates keystrokes to the computer and an OUT endpoint that communicates the status of the keyboard's LEDs from the computer to the keyboard.  The <link xlink:type="simple" xlink:href="../954/14484954.xml">
PC 97</link> standard requires that a computer's <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 must detect and work with USB HID class keyboards that are designed to be used during the boot process.</p>

</ss1>
<ss1>
<st>
Mice</st>
<p>

Computer mice are equally popular USB HID class devices.  Much like keyboards, USB HID class mice have replaced <conveyance wordnetid="103100490" confidence="0.8">
<computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<bus wordnetid="102924116" confidence="0.8">
<public_transport wordnetid="104019101" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../204/218204.xml#xpointer(//*[./st=%22Keyboard/mouse+interface%22])">
PS/2 mice</link></machine>
</device>
</public_transport>
</bus>
</instrumentality>
</artifact>
</computer>
</conveyance>
 on many modern computer systems.  USB HID mice can range from single-button simple devices to multi-button compound devices.  Most modern operating systems ship with drivers for standard HID mice designs; mice with extended functionality require custom drivers from the manufacturer.</p>

</ss1>
<ss1>
<st>
Game controllers</st>
<p>

Modern game controllers and <link xlink:type="simple" xlink:href="../229/16229.xml">
joysticks</link> are often USB HID class devices.  Unlike legacy <link xlink:type="simple" xlink:href="../315/271315.xml">
game port</link> devices, USB HID class game devices do not normally require proprietary drivers to function.  Nearly all game devices will function using onboard drivers as long as the device is designed around the drivers and the USB HID class specifications.</p>

</ss1>
<ss1>
<st>
Other devices</st>
<p>

The USB HID class specifications allow for myriad other devices under the USB HID class.  Some examples are automobile simulation controllers, exercise machines, <link xlink:type="simple" xlink:href="../831/41831.xml">
telephony</link> devices, audio controls, medical instrumentation, and even magic carpet simulators.  Even <link xlink:type="simple" xlink:href="../834/41834.xml">
uninterruptible power supplies</link> declare themselves under this class, despite the fact they have no human interface at all.  Any device can be a USB HID class device as long as a designer meets the USB HID class logical specifications.  This is not to say that there is no need to ship drivers for these devices, nor that an operating system will immediately recognize the device.  This only means that the device can declare itself under the human interface device class.</p>

</ss1>
</sec>
<sec>
<st>
Drivers</st>
<p>

One of the benefits of a well-defined specification like the USB HID class is the abundance of <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>s available in most modern operating systems.  The USB HID class devices and their basic functions are defined in USB-IF documentation without any specific software in mind.  Because of these generic descriptions, it is easy for operating system designers to include functioning drivers for devices such as keyboards, mice, and other generic human interface devices.  The inclusion of these generic drivers allows for faster deployment of devices and easier installation by end-users.</p>

</sec>
<sec>
<st>
Logical specifications</st>

<ss1>
<st>
Functional characteristics</st>
<p>

The USB human interface device class can be used to describe both device and interface classes.  The interface class is used when a USB device can contain more than one function.  It is possible, therefore, to have USB devices with two different interfaces at the same time (for example, a USB telephone may use a <link xlink:type="simple" xlink:href="../655/641655.xml">
HID</link> keypad and an <link>
audio</link> speaker).  </p>
<p>

The interface devices are also defined with subclass <link xlink:type="simple" xlink:href="../416/2947416.xml">
descriptor</link>s.  The subclass descriptor is used to declare a device bootable.  A <link>
boot device</link> meets a minimum adherence to a basic <link xlink:type="simple" xlink:href="../615/23615.xml">
protocol</link> and will be recognized by a computer's <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
.</p>
<p>

Each USB HID interface communicates with the host using either a <it>control</it> pipe or an <it><link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link></it> pipe.  <it><link xlink:type="simple" xlink:href="../291/41291.xml">
Isochronous</link></it> and <it>bulk</it> pipes are not used in HID class devices.  Both IN and OUT control transfers are required for enumeration; only an IN interrupt transfer is required for <link xlink:type="simple" xlink:href="../655/641655.xml">
HID</link> reports.  OUT interrupt transfers are optional in HID-class devices.</p>

</ss1>
<ss1>
<st>
Reports</st>
<p>

It is impossible to accurately predict and define all current and future human interface devices.  Because of this, the USB HID class requires that every device describes how it will communicate with the host device.  During enumeration the device describes how its <b>reports</b> are to be structured so that the host device can properly prepare to receive this information.</p>
<p>

The host periodically polls the device's interrupt IN endpoint during operation.  When the device has data to send it forms a report and sends it as a reply to the poll token.  Common devices such as keyboards and mice send reports that are well-defined by manufacturers such as <weblink xlink:type="simple" xlink:href="http://www.usb.org/developers/hidpage/microhid/">
Microsoft</weblink>.  When a vendor makes a custom USB HID class device, the reports formed by the device need only match the report description given during enumeration and the driver installed on the host system.  In this way it is possible for the USB HID class to be extremely flexible.</p>

</ss1>
</sec>
<sec>
<st>
 USB HID API </st>

<p>

The USB HID <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link> is complicated and can be difficult to understand. Despite the complexity, developers who wish to do basic things with the API need only learn a small portion of it. The primary challenge in learning the API lies in determining which parts one needs to use.</p>
<p>

There are two levels of APIs related to USB HID: the <link>
USB</link> level and the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> level. At the USB level, there is a protocol for devices to announce their capabilities and the operating system to parse the data it gets. The operating system then offers a higher-level view to applications, which do not need to include support for individual devices but for classes of devices. This <link xlink:type="simple" xlink:href="../775/574775.xml">
abstraction layer</link> allows a game to work with any USB controller, for example, even ones created after the game.</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.beyondlogic.org/usbnutshell/">
USB in a Nutshell</weblink> </entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.usb.org/home">
USB.org</weblink> - The homepage of the USB Implementers Forum, Inc.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.usb.org/developers/hidpage/microhid/">
Microsoft Related HID Documentation</weblink> - The USB-IF's collection of Microsoft's HID documentation.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.usb.org/developers/hidpage/">
USB-IF HID Tools</weblink> - The USB-IF's page devoted to human interface devices.  Includes all approved documentation.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.lvr.com/hidpage.htm">
Lakeview Research HID Page</weblink> - A collection of articles about, and example code for USB HID devices.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc/system/platform/pcdesign/desguide/pcguides.mspx">
PC System Guides</weblink> - Microsoft's PC System specifications (e.g. PC '97, PC '98).</entry>
</list>
</p>

</sec>
</bdy>
</article>
