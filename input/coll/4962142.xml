<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:24:38[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Supersampling</title>
<id>4962142</id>
<revision>
<id>231088577</id>
<timestamp>2008-08-10T20:47:03Z</timestamp>
<contributor>
<username>Goodone121</username>
<id>5526749</id>
</contributor>
</revision>
<categories>
<category>Image processing</category>
</categories>
</header>
<bdy>

<b>Supersampling</b> is an <link xlink:type="simple" xlink:href="../507/113507.xml">
antialiasing</link> technique, the process of eliminating jagged and pixelated edges (<link xlink:type="simple" xlink:href="../474/151474.xml">
aliasing</link>). It is a method of smoothing images <link xlink:type="simple" xlink:href="../775/25775.xml">
render</link>ed in <link xlink:type="simple" xlink:href="../363/5363.xml">
computer games</link> or other programs that generate imagery.
<sec>
<st>
Overview</st>

<p>

<image location="right" width="150px" src="supersampling.png" type="frame">
<caption>

Calculating the end color value
</caption>
</image>
 Aliasing occurs because real-world objects have continuous, smooth curves and lines. Monitors can only display discrete points of light called <link xlink:type="simple" xlink:href="../665/23665.xml">
pixels</link>. Since pixels are uniformly colored and always of the same shape , lines become jagged.</p>
<p>

Supersampling is one of the ways of solving this problem. Samples are taken at <it>several</it> instances inside the pixel (not just at the center as default) and an average color value is calculated. This is achieved by rendering the image at a much higher <link xlink:type="simple" xlink:href="../399/601399.xml">
resolution</link> than the one being displayed, then <link xlink:type="simple" xlink:href="../049/1315049.xml">
downsampling</link> (shrinking) it to the desired size, using the extra pixels for calculation. The result is smoother transitions from one line of pixels to another along the edges of objects.</p>
<p>

The number of samples determines the quality of the <link xlink:type="simple" xlink:href="../470/41470.xml">
output</link>. Options available normally range from 2x to 32x.</p>

</sec>
<sec>
<st>
Computational cost and adaptive supersampling</st>

<p>

Supersampling is computationally expensive because it requires a lot of <link xlink:type="simple" xlink:href="../624/113624.xml">
video card</link> <link xlink:type="simple" xlink:href="../844/18844.xml">
memory</link> and <link xlink:type="simple" xlink:href="../199/3486199.xml">
memory bandwidth</link>, since the amount of <link xlink:type="simple" xlink:href="../183/2406183.xml">
buffer</link> used is several times larger. A way around this problem is <b>adaptive supersampling</b>. This works by acknowledging that very few pixels will actually be on a boundary, therefore only these need to be supersampled. </p>
<p>

At first only a few samples are made within a pixel. If these values are very similar, only these samples are used for determining color. If not, more are used. The result of this method is that a higher number of samples are calculated only where necessary, thus improving performance.     </p>

</sec>
<sec>
<st>
Types of supersampling </st>

<p>

There are several types of supersampling available, and all are variations on where the extra samples are taken inside the pixel.</p>
<p>

<image width="150px" src="GridSS.png">
<caption>

Grid algorithm
</caption>
</image>

<image width="150px" src="RandomSS.png">
<caption>

Random algorithm
</caption>
</image>

<image width="150px" src="PoissonSS.png">
<caption>

Poisson Disc algorithm
</caption>
</image>

<image width="150px" src="JitterSS.png">
<caption>

Jitter algorithm
</caption>
</image>

<image width="150px" src="RotGridSS.png">
<caption>

Rotated Grid algorithm
</caption>
</image>
</p>


<ss1>
<st>
Grid</st>

<p>

The simplest <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>. The pixel is split in several sub-pixels, and a sample is taken from the center of each. It is fast and easy to implement, although due to the regular nature of sampling, aliasing can still occur if a low number of sub-pixels is used.</p>

</ss1>
<ss1>
<st>
Random</st>

<p>

Also known as Stochastic Sampling, it avoids the regularity of grid supersampling. However, due to the irregularity of the pattern, samples end up being unnecessary in some areas of the pixel and lacking in others.</p>

</ss1>
<ss1>
<st>
Poisson Disc</st>

<p>

Again an algorithm that places the samples randomly, but then checks that any two are not too close. End result is even but random distribution of samples. Unfortunately, the computational time required for this algorithm is too great to justify its use in real-time rendering.</p>

</ss1>
<ss1>
<st>
Jittered </st>

<p>

A combination of the grid algorithm and the Poisson disc (with regard to the end result). A pixel is split into several sub-pixels, but a sample is not taken from the center of each, but from a random point within the sub-pixel. Congregation can still occur, but to a lesser degree.</p>

</ss1>
<ss1>
<st>
Rotated Grid </st>

<p>

A 2x2 grid layout is used but the sample pattern is rotated to avoid samples aligning on the horizontal or vertical axis greatly improving antialiasing quality for the most commonly encountered cases.</p>

</ss1>
</sec>
<sec>
<st>
See also</st>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../391/5283391.xml">
Multisample anti-aliasing</link></entry>
<entry level="1" type="bullet">

<structure wordnetid="105726345" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<aspect wordnetid="105850624" confidence="0.8">
<form wordnetid="105930736" confidence="0.8">
<property wordnetid="105849040" confidence="0.8">
<feature wordnetid="105849789" confidence="0.8">
<link xlink:type="simple" xlink:href="../906/174906.xml">
Quincunx</link></feature>
</property>
</form>
</aspect>
</concept>
</idea>
</structure>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../624/113624.xml">
Graphics card</link></entry>
<entry level="1" type="bullet">

<substance wordnetid="100019613" confidence="0.8">
<paper wordnetid="114974264" confidence="0.8">
<card wordnetid="102962545" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<material wordnetid="114580897" confidence="0.8">
<link xlink:type="simple" xlink:href="../214/390214.xml">
Graphics processing unit</link></material>
</part>
</card>
</paper>
</substance>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../193/17884193.xml">
Ray tracing</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../963/149963.xml">
Framebuffer</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../581/170581.xml">
Game engine</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../077/2937077.xml">
Image scaling</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../357/1814357.xml">
2xSaI</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

"<weblink xlink:type="simple" xlink:href="http://www.nvidia.com/object/feature_hraa.html">
High-Resolution Antialiasing (HRAA)</weblink>".&#32;<it>Technical Brief: High-Resolution Antialiasing through Multisampling</it>.&#32;Retrieved on May, 2006.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

"<weblink xlink:type="simple" xlink:href="http://www.neoseeker.com/Hardware/faqs/kb/10,72.html">
What is supersampling (antialiasing technique)?</weblink>".&#32;<it>Hardware Knowledgebase</it>.&#32;Retrieved on May, 2006.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

"<weblink xlink:type="simple" xlink:href="http://www.everything2.com/index.pl?node_id=1028947">
Supersampling</weblink>".&#32;<it>Everything2</it>.&#32;Retrieved on May, 2006.</entry>
</list>
</p>


</sec>
</bdy>
</article>
