<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:11:23[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<know-how  confidence="0.8" wordnetid="105616786">
<method  confidence="0.8" wordnetid="105660268">
<header>
<title>Rejection sampling</title>
<id>502022</id>
<revision>
<id>233311084</id>
<timestamp>2008-08-21T12:27:49Z</timestamp>
<contributor>
<username>Ludovic89</username>
<id>7632703</id>
</contributor>
</revision>
<categories>
<category>Monte Carlo methods</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../831/18831.xml">
mathematics</link>, <b>rejection sampling</b> is a technique used to generate observations from a <link xlink:type="simple" xlink:href="../543/23543.xml">
distribution</link>. It is also commonly called the <b>acceptance-rejection method</b> or "accept-reject algorithm".<p>

It generates sampling values from an arbitrary <link xlink:type="simple" xlink:href="../543/23543.xml">
probability distribution</link> function <math>f(x)</math> by using an instrumental distribution <math>g(x)</math>, under the only restriction that <math>f(x)&amp;lt; M g(x)</math> where <math>M&amp;gt;1</math> is an appropriate bound on <math>f(x)/g(x)</math>. </p>
<p>

Rejection sampling is usually used in cases where the form of <math>f(x)</math> makes sampling difficult. Instead of sampling directly from the distribution <math>f(x)</math>, we use an envelope distribution <math>Mg(x)</math> where sampling is easier. These samples from <math>Mg(x)</math> are probabilistically accepted or rejected.</p>
<p>

This method relates to the general field of <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/56098.xml">
Monte Carlo</link></method>
</know-how>
</technique>
 techniques, including <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../801/236801.xml">
Markov chain Monte Carlo</link></method>
</know-how>
 algorithms that also use a proxy distribution to achieve simulation from the target distribution <math>f(x)</math>. It forms the basis for algorithms such as the <link xlink:type="simple" xlink:href="../107/56107.xml">
Metropolis algorithm</link>.</p>
<p>

The <b>unconditional acceptance probability</b> is the proportion of proposed samples which are accepted, and is the integral over all values of <math>x</math> of <math>Mf(x)</math>. If this is high, fewer samples are rejected, and the required number of samples for the target distribution is obtained more quickly. The unconditional acceptance probability is higher the less the ratio <math>f(x)/g(x)</math> varies, however to obtain acceptance probabilty 1, <math>f(x)=g(x)</math>, which defeats the purpose of sampling.</p>

<sec>
<st>
Algorithm</st>
<p>

The algorithm (used by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../942/15942.xml">
John von Neumann</link></scientist>
</person>
 and dating back to Buffon and <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../479/667479.xml">
his needle</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
) is as follows: 
<list>
<entry level="1" type="bullet">

 Sample <math>x</math> from <math>g(x)</math> and <math>u</math> from <math>U(0,1)</math></entry>
<entry level="1" type="bullet">

 Check whether or not <math>u&amp;lt;f(x)/Mg(x)</math>. </entry>
<entry level="2" type="bullet">

 If this holds, accept <math>x</math> as a realization of <math>f(x)</math>; </entry>
<entry level="2" type="bullet">

 if not, reject the value of <math>x</math> and repeat the sampling step.</entry>
</list>
</p>
<p>

The validation of this method is the <b>envelope principle</b>: when simulating the pair <math>(x,v=u*Mg(x))</math>, one produces a uniform simulation over the subgraph of <math>Mg(x)</math>. Accepting only pairs such that <math>u&amp;lt;f(x)/Mg(x)</math> then produces pairs <math>(x,v)</math> uniformly distributed over the subgraph of <math>f(x)</math> and thus, marginally, a simulation from <math>f(x)</math>.</p>
<p>

This means that, with enough replicates, the algorithm generates a sample from the desired distribution <math>f(x)</math>. There are a number of extensions to this algorithm, such as the <link xlink:type="simple" xlink:href="../107/56107.xml">
Metropolis algorithm</link>.</p>

</sec>
<sec>
<st>
 Examples </st>
<p>

<image location="right" width="140px" src="Circle_sampling.png">
</image>

As a simple geometric example, suppose it is desired to generate a random point within the unit circle. Generate a candidate point <math>(x,y)</math> where <math>x</math> and <math>y</math> are independent uniformly distributed between &amp;minus;1 and 1.  If it so happens that <math>x^2+y^2 \leq 1</math> then the point is within the unit circle and should be accepted.  If not then this point should be rejected and another candidate should be generated.</p>
<p>

The <link xlink:type="simple" xlink:href="../060/7093060.xml">
ziggurat algorithm</link>, a more advanced example, is used to efficiently generate <link xlink:type="simple" xlink:href="../462/21462.xml">
normally-distributed</link> <link xlink:type="simple" xlink:href="../210/23210.xml">
pseudorandom number</link>s.</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

Robert, C.P. and Casella, G. "Monte Carlo Statistical Methods" (second edition). New York: Springer-Verlag, 2004.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

J. von Neumann, "Various techniques used in connection with random digits. Monte Carlo methods", Nat. Bureau Standards, 12 (1951), pp. 36â€“38.</entry>
</list>
</p>


</sec>
</bdy>
</method>
</know-how>
</article>
