<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:12:48[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<algorithm  confidence="0.9511911446218017" wordnetid="105847438">
<header>
<title>Berlekamp–Massey algorithm</title>
<id>514832</id>
<revision>
<id>237776791</id>
<timestamp>2008-09-11T19:43:52Z</timestamp>
<contributor>
<username>CRGreathouse</username>
<id>1077900</id>
</contributor>
</revision>
<categories>
<category>Error detection and correction</category>
<category>Cryptanalytic algorithms</category>
</categories>
</header>
<bdy>

Not to be confused with <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../100/6057100.xml">
Berlekamp's algorithm</link></geographical_area>
</tract>
</location>
</field>
</region>
.
The <b>Berlekamp–Massey algorithm</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> for finding the shortest <link xlink:type="simple" xlink:href="../992/58992.xml">
linear feedback shift register</link> (LFSR) for a given output sequence. Equivalently, it is an algorithm for finding the <link xlink:type="simple" xlink:href="../678/254678.xml">
minimal polynomial</link> of a linearly <link xlink:type="simple" xlink:href="../806/146806.xml">
 recurrent sequence</link>.<p>

The algorithm was invented by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../893/655893.xml">
Elwyn Berlekamp</link></scientist>
 in 1968. Its connection to linear codes was observed by <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../907/9543907.xml">
James Massey</link></person>
 the following year. It became the key to practical application of the now ubiquitous <link>
Reed–Solomon code</link>.</p>

<sec>
<st>
The algorithm</st>

<p>

<list>
<entry level="1" type="number">

Let <math>s_0, s_1, s_2 ... s_n</math> be the <link xlink:type="simple" xlink:href="../364/3364.xml">
bit</link>s of the stream.</entry>
<entry level="1" type="number">

Initialise three arrays <math>b</math>, <math>c</math> and <math>t</math> each of length <math>n</math> to be zeroes, except <math>b_0 \leftarrow 1, c_0 \leftarrow 1</math>; <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../807/344807.xml">
assign</link></concept>
</idea>
 <math>N \leftarrow 0, L \leftarrow 0, m \leftarrow -1</math>.</entry>
<entry level="1" type="number">

While <math>N</math> is less than <math>n</math>:</entry>
<entry level="2" type="bullet">

Let <math>d</math> be <math>s_N + c_1s_{N-1} + c_2s_{N-2} + ... + c_Ls_{N-L}</math>.</entry>
<entry level="2" type="bullet">

If <math>d</math> is zero, then <math>c</math> is already a polynomial which annihilates the portion of the stream from <math>N-L</math> to <math>N</math>; increase <math>N</math> by 1 and continue.</entry>
<entry level="2" type="bullet">

If <math>d</math> is 1, then:</entry>
<entry level="3" type="bullet">

 Let <math>t</math> be a copy of <math>c</math>.</entry>
<entry level="3" type="bullet">

 Set <math>c_{N-m} \leftarrow c_{N-m} \oplus b_0, c_{N-m+1} \leftarrow c_{N-m+1} \oplus b_1, ... </math> up to <math>c_{n-1} \leftarrow c_{n-1} \oplus b_{n-N+m-1}</math> (where <math>\oplus</math> is the <link xlink:type="simple" xlink:href="../979/105979.xml">
Exclusive or</link> operator).</entry>
<entry level="3" type="bullet">

 If <math>L \le \frac{N}{2}</math>, set <math>L \leftarrow N+1-L</math>, set <math>m \leftarrow N</math>, and let <math>b \leftarrow t</math>; otherwise leave <math>L</math>, <math>m</math> and <math>b</math> alone.</entry>
<entry level="3" type="bullet">

Increment <math>N</math> and continue.</entry>
</list>
</p>
<p>

At the end of the algorithm, <math>L</math> is the length of the minimal LFSR for the stream, and we have <math>c_Ls_a + c_{L-1}s_{a+1} + c_{L-2}s_{a+2} ... = 0</math> for all <math>a</math>.</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://planetmath.org/encyclopedia/BerlekampMasseyAlgorithm.html">
Berlekamp–Massey algorithm</weblink> at <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../623/161623.xml">
PlanetMath</link></web_site>
.</entry>
<entry level="1" type="bullet">

  <cite id="Reference-Mathworld-Berlekamp–Massey Algorithm"><physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<encyclopedist wordnetid="110055566" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/836189.xml">
Eric W. Weisstein</link></scholar>
</mathematician>
</writer>
</scientist>
</causal_agent>
</alumnus>
</compiler>
</encyclopedist>
</intellectual>
</person>
</communicator>
</physical_entity>
, <it><weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/Berlekamp-MasseyAlgorithm.html">
Berlekamp–Massey Algorithm</weblink></it> at <computer wordnetid="103082979" confidence="0.8">
<work wordnetid="104599396" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<reference_book wordnetid="106417598" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<encyclopedia wordnetid="106427387" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<web_site wordnetid="106359193" confidence="0.8">
<link xlink:type="simple" xlink:href="../235/374235.xml">
MathWorld</link></web_site>
</device>
</book>
</instrumentality>
</artifact>
</product>
</encyclopedia>
</publication>
</reference_book>
</machine>
</creation>
</work>
</computer>
.</cite></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://modp.com/release/mma_lfsr/">
Implementation in Mathematica</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.informationsuebertragung.ch/indexAlgorithmen.html">
Applet Berlekamp–Massey algorithm</weblink></entry>
</list>
</p>





</sec>
</bdy>
</algorithm>
</article>
