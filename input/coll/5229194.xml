<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:37:38[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<know-how  confidence="0.8" wordnetid="105616786">
<method  confidence="0.8" wordnetid="105660268">
<header>
<title>Kinetic Monte Carlo</title>
<id>5229194</id>
<revision>
<id>218875089</id>
<timestamp>2008-06-12T15:36:45Z</timestamp>
<contributor>
<username>Aslepoy</username>
<id>7297224</id>
</contributor>
</revision>
<categories>
<category>Statistical mechanics</category>
<category>Monte Carlo methods</category>
</categories>
</header>
<bdy>

The <b>kinetic Monte Carlo (KMC)</b> method is a <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../098/56098.xml">
Monte Carlo method</link></method>
</know-how>
</technique>
 computer simulation intended to simulate the time evolution of some processes occurring in nature.  Typically these are processes that occur with a given known rate.  It is important to understand that these rates are inputs to the KMC algorithm, the method itself cannot predict them.<p>

The KMC method is essentially the same as the <link xlink:type="simple" xlink:href="../579/1101579.xml">
dynamic Monte Carlo method</link> and the <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../763/4438763.xml">
Gillespie algorithm</link></method>
</know-how>
, the main difference seems to be in terminology and usage areas: KMC is used mainly in physics while the "dynamic" method is mostly used in chemistry.</p>

<sec>
<st>
 Algorithm </st>
<p>

<image width="240px" src="Taux_de_transfert.svg" type="thumb">
<caption>

At each step, the system can jump into several ending states, the transfert rates between the initial state and all the possible ending states are supposed to be known.
</caption>
</image>
</p>
<p>

The KMC algorithm for simulating the time evolution of a system where some processes can occur with known rates r can be written for instance as follows:</p>
<p>

<image width="240px" src="State_decision_in_KMC.svg" type="thumb">
<caption>

Choice of the final state : a random var is chosen between 0 et Γtot; the probability that the system jumps into state <it>i</it> is proportionnal to Γi.
</caption>
</image>
</p>
<p>

0. Set the time <it>t</it> = 0.</p>
<p>

1. Form a list of all possible rates in the system <it>ri</it></p>
<p>

2. Calculate the cumulative function <math>R_i=\sum_{j=1}^i r_j</math> for <math>i=1,\ldots,N</math> where <it>N</it> is the total number of transitions. Denote <it>R</it> = <it>RN</it></p>
<p>

3. Get a uniform random number <it>u</it>' &amp;isin; (0, 1]</p>
<p>

4. Find the event to carry out <it>i</it> by finding the <it>i</it> for which <it>Ri</it>&nbsp;&amp;minus;&nbsp;1  <it>u'R</it> &amp;le; <it>Ri</it> (this can be achieved efficiently using <link xlink:type="simple" xlink:href="../266/4266.xml">
binary search</link>).</p>
<p>

5. Carry out event <it>i</it>.</p>
<p>

6. Recalculate all rates <it>ri</it> which may have changed due to the transition. If appropriate, remove or add new transitions <it>i</it>. Update <it>N</it> and the list of
events accordingly.</p>
<p>

7. Get a new uniform random number <it>u</it> &amp;isin; (0, 1].</p>
<p>

8. Update the time with <it>t</it> = <it>t</it>&nbsp;+&nbsp;&amp;Delta;<it>t</it> where
<indent level="2">

<math>\Delta t = - {\log u\over R}. </math>
</indent>

9. Return to step 2.</p>
<p>

(note that the same average time scale can be obtained also using <math> \Delta t = {1 \over R} </math> in step 8. However, including the random number describes better the stochastic nature of the process). </p>
<p>

This algorithm is known in different sources variously as the <b>residence-time algorithm</b> or the <b><it>n</it></b><b>-fold way</b> or the <b>Bortz-Kalos-Liebowitz  (BKL)</b> algorithm or just the <b>kinetic Monte Carlo (KMC)</b> algorithm.</p>

</sec>
<sec>
<st>
 Time dependent Algorithms </st>

<p>

If the rate <it>ri</it>(t) are time dependent step 8 has to be modified by 
<math> \int_{0}^{\Delta t} R_i(t') dt' =  -\log u.  </math>. The reaction (step 4) has to be chosen after this  by
<math>  R_{i-1}(\Delta t)  &amp;lt;    u'  R_N( \Delta t )  \leq    R_i(\Delta t)  </math></p>
<p>

Another very similar algorithm is called the First Reaction Method (FRM).
It consists of choosing the first occurring reaction, meaning to choose the smallest time  <math> \Delta t_i </math>, and the corresponding reaction number <math> i </math>, 
from the formula <math> \int_{0}^{\Delta t_i} r_i(t') dt' =  -\log u_i </math>
where the <it>ui</it> &amp;isin; (0, 1] are N random numbers.</p>

</sec>
<sec>
<st>
 Comments on the algorithm </st>

<p>

The key property of the KMC algorithm, and of the FRM one, is that if the rates are correct, the processes associated with the rates are of the <link xlink:type="simple" xlink:href="../660/102660.xml">
Poisson process</link> type,  and different processes are independent, i.e. not correlated, the KMC algorithm gives the correct time scale for the evolution of the simulated system. </p>
<p>

If furthermore the transitions follow <link xlink:type="simple" xlink:href="../867/2212867.xml">
detailed balance</link>, the KMC algorithm can be used to simulate thermodynamic equilibrium. However, KMC is widely used to simulate non-equilibrium processes, in which case detailed balance need not be obeyed.</p>
<p>

The KMC algorithm is efficient in the sense that every iteration is guaranteed to produce a transition. However, in the form presented above it requires <math>N</math> operations for each transition, which is not too efficient. In many cases this can be much improved on by binning the same kinds of transitions into bins, and/or forming a tree data structure of the events. A constant-time scaling algorithm of this type has recently been developed and tested in (Slepoy 2008).</p>
<p>

The major disadvantage with KMC is that all possible rates <math>r_i</math> and reactions have to be known in advance. The method itself can do nothing about predicting them.</p>

</sec>
<sec>
<st>
 Examples of use </st>

<p>

KMC has been used in simulations of the e.g. the following physical systems:
<list>
<entry level="1" type="number">

 Surface diffusion</entry>
<entry level="1" type="number">

 Surface growth </entry>
<entry level="1" type="number">

 <link xlink:type="simple" xlink:href="../248/10792248.xml">
Vacancy</link> diffusion in alloys (this was the original use in (Young 1966))</entry>
<entry level="1" type="number">

 Coarsening of domain evolution</entry>
<entry level="1" type="number">

 Defect mobility and clustering in ion or neutron irradiated solids</entry>
</list>
</p>
<p>

To give an idea what the "objects" and "events" may be in practice, here is one concrete simple example, corresponding to example 2 above.</p>
<p>

Consider a system where individual atoms are deposited on a surface one at a time (typical of <link xlink:type="simple" xlink:href="../928/6086928.xml">
physical vapor deposition</link>), but also may migrate on the surface with some known jump rate <math>w</math>. In this case the "objects" of the KMC algorithm are simply the individual atoms.</p>
<p>

If two atoms come right next to each other, they become immobile. Then the flux of incoming atoms determines a rate <it>r</it>deposit, and the system can be simulated with KMC considering all deposited mobile atoms which have not (yet) met a counterpart and become immobile. This way there are the following events possible at each KMC step:</p>
<p>

<list>
<entry level="1" type="bullet">

 A new atom comes in with rate 'r<it>deposit</it></entry>
<entry level="1" type="bullet">

 An already deposited atom jumps one step with rate <it>w</it>.</entry>
</list>
</p>
<p>

After an event has been selected and carried out with the KMC algorithm, one then needs to check whether the new or just jumped atom has become immediately adjacent to some other atom. If this has happened, the atom(s) which are now adjacent needs to be moved away from the list of mobile atoms, and correspondingly their jump events removed from the list of possible events.</p>
<p>

Naturally in applying KMC to problems in physics and chemistry, one has to first consider whether the real system follows the assumptions underlying KMC well enough.
Real processes do not necessarily have well-defined rates, the 
transition processes may be correlated, in case of atom or particle jumps
the jumps may not occur in random directions, and so on. When simulating
widely disparate time scales one also needs to consider whether 
new processes may be present at longer time scales. If any of these
issues are valid, the time scale and system evolution predicted by KMC
may be skewed or even completely wrong.</p>

</sec>
<sec>
<st>
 History </st>

<p>

The first  publication which described the basic features of the KMC method (namely using a cumulative function to select an event and a time scale calculation of the form 1/<it>R</it>) was by Young and Elcock in 1966 (Young 1966). The residence-time algorithm was also published at about the same time in (Cox 1965).</p>
<p>

Apparently independent of the work of Young and Elcock, Bortz, Kalos and Lebowitz (Bortz 1975) developed a KMC algorithm for simulating the <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../744/292744.xml">
Ising model</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
, which they called the <it>n-fold way</it>. The basics of their algorithm is the same as that of (Young 1966), but they do provide much greater detail on the method.</p>
<p>

The following year <link xlink:type="simple" xlink:href="../597/18541597.xml">
Dan Gillespie</link> published what is now known as the <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../763/4438763.xml">
Gillespie algorithm</link></method>
</know-how>
 to describe chemical reactions (Gillespie 1976). The algorithm is similar and the time advancement scheme essentially the same as in KMC. </p>
<p>

There is as of the writing of this (June 2006) no definitive treatise of the theory of KMC, but Fichthorn and Weinberg have discussed the theory for thermodynamic equilibrium KMC simulations in detail in (Fichthorn 1991). A good introduction is given also by Art Voter (Voter 2005),<weblink xlink:type="simple" xlink:href="http://www.ipam.ucla.edu/publications/matut/matut_5898_preprint.pdf">
http://www.ipam.ucla.edu/publications/matut/matut_5898_preprint.pdf</weblink> and by A.P.J. Jansen (Jansen 2003),<weblink xlink:type="simple" xlink:href="http://arxiv.org/abs/cond-mat/0303028">
http://arxiv.org/abs/cond-mat/0303028</weblink>,
and a recent review is (Chatterjee 2007).</p>

</sec>
<sec>
<st>
 Varieties of KMC </st>

<p>

The KMC method can be subdivided by how the objects are moving or reactions
occurring. At least the following subdivisions are used:</p>
<p>

<list>
<entry level="1" type="bullet">

 Lattice KMC (<b>LKMC</b>) signifies KMC carried out on an atomic <link>
lattice</link>. Often this variety is also called atomistic KMC, (<b>AKMC</b>). A typical example is simulation of <link>
vacancy</link> <link xlink:type="simple" xlink:href="../643/8643.xml">
diffusion</link> in <link xlink:type="simple" xlink:href="../187/1187.xml">
alloys</link>, where a <link>
vacancy</link> is allowed to jump around the lattice with rates that depend on the local elemental composition</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Object KMC (<b>OKMC</b>) means KMC carried out for <link xlink:type="simple" xlink:href="../849/7849.xml">
defects</link> or <link xlink:type="simple" xlink:href="../993/2061993.xml">
impurities</link>, which are jumping either in random or lattice-specific directions. Only the positions of the jumping objects are included in the simulation, not those of the 'background' lattice atoms. The basic KMC step is one object jump.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Event KMC (<b>EKMC</b>) or First-passage KMC (<b>FPKMC</b>) signifies an OKMC variety where the following reaction between objects (e.g. clustering of two <link xlink:type="simple" xlink:href="../993/2061993.xml">
impurities</link> or <link>
vacancy</link>-<link xlink:type="simple" xlink:href="../321/9853321.xml">
interstitial</link> annihilation) is chosen with the KMC algorithm, taking the object positions into account, and this event is then immediately carried out (Dalla Torre 2005, Opplestrup 2006).</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.roentzsch.org/RealBit/">
3D lattice kinetic Monte Carlo simulation in 'bit language'</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.roentzsch.org/Rayleigh/">
KMC simulation of the Plateau-Rayleigh instability</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.roentzsch.org/SurfDiff/">
KMC simulation of f.c.c. vicinal (100)-surface diffusion</weblink> </entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 (Bortz 1975): A. B. Bortz and M. H. Kalos and J. L. Lebowitz, Journal of Computational Physics 17 (1975) 10 <weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016/0021-9991(75)90060-1">
Journal of Computational Physics 17 (1975) 10</weblink> (needs subscription)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Fichthorn 1991): K. A. Fichthorn and W. H. Weinberg, <weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1063/1.461138">
Journal of Chemical Physics 95 (1991) 1090</weblink> (needs subscription) </entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Gillespie 1976): D. T. Gillespie, Journal of Computational Physics 22 (1976) 403</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Young 1966): W. M. Young and E. W. Elcock, Proceedings of the Physical Society  89 (1966) 735.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Cox 1965): D.R. Cox and H.D. Miller, The Theory of Stochastic Processes (Methuen, London, 1965, pp 6-7.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Jansen 2003): A.P.J. Jansen, An Introduction To Monte Carlo Simulations Of Surface Reactions, Condensed Matter, abstract <weblink xlink:type="simple" xlink:href="http://arxiv.org/abs/cond-mat/0303028">
cond-mat/0303028</weblink>.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Dalla Torre 2005): J. Dalla Torre, J.-L. Bocquet, N.V. Doan, E. Adam and A. Barbu, Phil. Mag. 85 (2005), p. 549. </entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Voter 2005): A. F. Voter, Introduction to the Kinetic Monte Carlo Method, in Radiation Effects in Solids, edited by K. E. Sickafus and E. A. Kotomin (Springer, NATO Publishing Unit, Dordrecht, The Netherlands, 2005).</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Opplestrup 2006): T. Opplestrup, V. V. Bulatov, G. H. Gilmer, M. H. Kalos, and B. Sadigh, First-Passage Monte Carlo Algorithm: Diffusion without All the Hops, Physical Review Letters 97, 230602 (2006) </entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Chatterjee 2007): A. Chatterjee and D. G. Vlachos, An overview of spatial microscopic and accelerated kinetic Monte Carlo methods, J. Computer-Aided Mater. Des. 14, 253 (2007).</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Martinez 2008): E.Martinez, J.Marian, M.H.Kalos, J.M.Perlado, Synchronous Parallel Kinetic Monte Carlo for Continuum Diffusion-Reaction Systems, Journal of Computational Physics, Volume 227, Issue 8, 1 April 2008, Pages 3804-3823</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 (Slepoy 2008): A. Slepoy, A. P. Thompson, and S. J. Plimpton, A constant-time kinetic Monte Carlo algorithm for simulation of large biochemical reaction networks, Journal of Chemical Physics, Volume 128, Issue 20, December 2007, Page 205101</entry>
</list>
</p>



</sec>
</bdy>
</method>
</know-how>
</article>
