<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:17:04[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Spam in blogs</title>
<id>528830</id>
<revision>
<id>241800728</id>
<timestamp>2008-09-29T16:37:26Z</timestamp>
<contributor>
<username>Psychonaut</username>
<id>28478</id>
</contributor>
</revision>
<categories>
<category>Black hat seo</category>
<category>Search engine optimization</category>
<category>Spamming</category>
</categories>
</header>
<bdy>

For blogs that are built only for spamming, see <link xlink:type="simple" xlink:href="../302/2501302.xml">
Spam blog</link>.
<b>Spam in blogs</b> (also called simply <b>blog spam</b> or <b>comment spam</b>) is a form of <link xlink:type="simple" xlink:href="../651/43651.xml">
spamdexing</link>. It is done by automatically posting random comments or promoting commercial services to <link xlink:type="simple" xlink:href="../645/33645.xml">
blogs</link>, <link xlink:type="simple" xlink:href="../851/32851.xml">
wiki</link>s, <link xlink:type="simple" xlink:href="../224/990224.xml">
guestbook</link>s, or other publicly accessible online discussion boards.  Any web application that accepts and displays <link xlink:type="simple" xlink:href="../547/49547.xml">
hyperlinks</link> submitted by visitors may be a target.<p>

Adding links that point to the spammer's web site artificially increases the site's search engine ranking. An increased ranking often results in the spammer's commercial site being listed ahead of other sites for certain searches, increasing the number of potential visitors and paying customers.</p>

<sec>
<st>
History</st>
<p>

This type of spam originally appeared in internet <link xlink:type="simple" xlink:href="../224/990224.xml">
guestbook</link>s, where spammers repeatedly fill a guestbook with links to their own site and no relevant comment, to increase search engine rankings.  If an actual comment is given it is often just "cool page", "nice website", or keywords of the spammed link.</p>
<p>

In <link xlink:type="simple" xlink:href="../163/36163.xml">
2003</link>, spammers began to take advantage of the open nature of comments in the <link xlink:type="simple" xlink:href="../645/33645.xml">
blogging</link> software like <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../871/304871.xml">
Movable Type</link></instrumentality>
</artifact>
</system>
 by repeatedly placing comments to various blog posts that provided nothing more than a link to the spammer's commercial web site. Jay Allen created a free plugin, called MT-BlackList,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> for the Movable Type weblog tool (versions prior to 3.2) that attempted to alleviate this problem. Many blogging packages now have methods of preventing or reducing the effect of blog spam, although spammers have developed tools to circumvent them. Many spammers use special blog spamming tools like <link xlink:type="simple" xlink:href="../878/11296878.xml">
Trackback Submitter</link> to bypass comment spam protection on popular blogging systems like Movable Type, Wordpress, and others.</p>

</sec>
<sec>
<st>
Possible solutions</st>

<ss1>
<st>
Disallowing multiple consecutive submissions</st>
<p>

It is rare on a site that a user would reply to their own comment, yet spammers typically will do<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>. Checking that the user's IP address is not replying to a user of the same IP address will significantly reduce flooding. This however proves problematic in the fairly rare instance when multiple users, behind the same proxy, wish to comment on the same entry.</p>

</ss1>
<ss1>
<st>
Blocking by keyword</st>
<p>

Blocking specific words from posts is one of the simplest and most effective ways to reduce spam. Much spam can be blocked simply by banning names of popular pharmaceuticals and casino games.  </p>
<p>

The main problem with this approach is that it requires constant updating since spammers constantly find new ways to spell or hawk their goods. Blocking "viagra", for example, may reduce spam until spammers start spamming "vi@gra", "v1agr@", "vigra", etc. This system can be difficult to keep updated due to the large number of products spammers try to sell.</p>

</ss1>
<ss1>
<st>
nofollow</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../084/3766084.xml">
nofollow</link></it>
</indent>
Google announced in early 2005 that hyperlinks with rel="nofollow" attribute<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> would not influence the link target's ranking in the search engine's index.  The Yahoo and MSN search engines also respect this tag. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

<link xlink:type="simple" xlink:href="../084/3766084.xml">
nofollow</link> is a misnomer in this case since it actually tells a search engine "Don't score this link" rather than "Don't follow this link." This differs from the meaning of nofollow used within a <link xlink:type="simple" xlink:href="../673/101673.xml#xpointer(//*[./st=%22Alternatives%22])">
robots meta tag</link> which does tell a search engine: "Do not follow any of the hyperlinks in the body of this document."</p>
<p>

Using rel="nofollow" is a much easier solution that makes the improvised techniques above irrelevant. Most weblog software now marks reader-submitted links this way by default (with no option to disable it without code modification). A more sophisticated server software could spare the nofollow for links submitted by <link>
trusted users</link> like those registered for a long time, on a <link xlink:type="simple" xlink:href="../369/182369.xml">
whitelist</link>, or with a high <link>
karma</link>. Some server software adds rel="nofollow" to pages that have been recently edited but omits it from stable pages, under the theory that stable pages will have had offending links removed by human editors.</p>
<p>

Some weblog authors object to the use of rel="nofollow", arguing, for example,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> that
<list>
<entry level="1" type="bullet">

 Link spammers will continue to spam everyone to reach the sites that do not use rel="nofollow"  </entry>
<entry level="1" type="bullet">

 Link spammers will continue to place links for clicking (by surfers) even if those links are ignored by search engines.</entry>
<entry level="1" type="bullet">

 Google is advocating the use of rel="nofollow" in order to reduce the effect of heavy inter-blog linking on page ranking.</entry>
<entry level="1" type="bullet">

 Google is advocating the use of rel="nofollow" only to minimize its own filtering efforts and to deflect that this actually had better been called rel="nopagerank".</entry>
<entry level="1" type="bullet">

  Nofollow may reduce the value of legitimate comments<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
</list>
</p>
<p>

Other websites like <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../715/26715.xml">
Slashdot</link></web_site>
, with high user participation, use improvised nofollow implementations like adding rel="nofollow" only for potentially misbehaving users. Potential spammers posing as users can be determined through various heuristics like age of registered account and other factors. Slashdot also uses the poster's karma as a determinant in attaching a nofollow tag to user submitted links.</p>
<p>

rel="nofollow" has come to be regarded as a <link xlink:type="simple" xlink:href="../998/2346998.xml">
microformat</link>.</p>

</ss1>
<ss1>
<st>
Validation (reverse Turing test)</st>
<p>

A method to block automated spam comments is requiring a <link xlink:type="simple" xlink:href="../844/41844.xml">
validation</link> prior to publishing the contents of the reply form. The goal is to verify that the form is being submitted by a real human being and not by a spam tool and has therefore been described as a <link xlink:type="simple" xlink:href="../435/723435.xml">
reverse Turing test</link>. The test should be of such a nature that a human being can easily pass and an automated tool would most likely fail. </p>
<p>

Many forms on websites take advantage of the <software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<link xlink:type="simple" xlink:href="../834/230834.xml">
CAPTCHA</link></coding_system>
</code>
</writing>
</written_communication>
</program>
</application>
</software>
 technique, displaying a combination of numbers and letters embedded in an image which must be entered literally into the reply form to pass the test. In order to keep out spam tools with built-in <link xlink:type="simple" xlink:href="../091/49091.xml">
text recognition</link> the characters in the images are customarily misaligned, distorted, and noisy. A drawback of many older CAPTCHAs is that passwords are usually <link xlink:type="simple" xlink:href="../063/46063.xml">
case-sensitive</link> while the corresponding images often don't allow a distinction of capital and small letters. This should be taken into account when devising a list of CAPTCHAs. Such systems can also prove problematic to blind people who rely on <link xlink:type="simple" xlink:href="../544/418544.xml">
screen readers</link>. Some more recent systems allow for this by providing an audio version of the characters.</p>
<p>

A simple alternative to CAPTCHAs is the validation in the form of a <link xlink:type="simple" xlink:href="../304/24304.xml">
password</link> question, providing a hint to human visitors that the password is the answer to a simple question like "The Earth revolves around the... [Sun]".  </p>
<p>

One drawback to be taken into consideration is that any validation required in the form of an additional form field may become a nuisance especially to regular posters. Bloggers and guestbook owners may notice a significant decrease in the number of comments once such a validation is in place.</p>

</ss1>
<ss1>
<st>
Disallowing links in posts</st>
<p>

There is negligible gain from spam that does not contain links, so currently all spam posts contain (excessive number of) links. It is safe to require passing Turing tests only if post contains links and letting all other posts through.  While this is highly effective, spammers do frequently send gibberish posts (such as "ajliabisadf ljibia aeriqoj") to test the spam filter.  These gibberish posts will not be labeled as spam.  They do the spammer no good, but they still clog up comments sections.</p>
<p>

Garbage submissions might however also result from level 0 spambots, which don't parse the attacked HTML form fields first, but send generic POST requests against pages. So it happens that a "content" or "forum_post" POST variable is set and received by the blog or forum software, but the "uri" or  other wrong url field name is not accepted and thus not saved as spamlink.</p>

</ss1>
<ss1>
<st>
Redirects</st>
<p>

Instead of displaying a direct hyperlink submitted by a visitor, a web application could display a link to a script on its own website that redirects to the correct <link xlink:type="simple" xlink:href="../277/32277.xml">
URL</link>.  This will not prevent all spam since spammers do not always check for link redirection, but effectively prevents against increasing their <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../724/23724.xml">
PageRank</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, just as rel=nofollow. An added benefit is that the redirection script can count how many people visit external URLs, although it will increase the load on the site.</p>
<p>

Redirects should be <link xlink:type="simple" xlink:href="../880/922880.xml">
server-side</link> to avoid accessibility issues related to client-side redirects. This can be done via the <record wordnetid="106647206" confidence="0.8">
<file wordnetid="106508816" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<link xlink:type="simple" xlink:href="../518/554518.xml">
.htaccess file</link></evidence>
</indication>
</file>
</record>
 in <link>
Apache</link>.</p>
<p>

Another way of preventing <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../724/23724.xml">
PageRank</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 leakage is to make use of public <link xlink:type="simple" xlink:href="../623/645623.xml">
redirection</link> or <text wordnetid="106387980" confidence="0.8">
<line wordnetid="107012534" confidence="0.8">
<heading wordnetid="106343971" confidence="0.8">
<link xlink:type="simple" xlink:href="../885/5258885.xml">
dereferral</link></heading>
</line>
</text>
 services such as <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../680/2003680.xml">
TinyURL</link></web_site>
. For example,</p>
<p>

&amp;lt;a href="http://my-own.net/alias_of_target" rel="nofollow" &amp;gt;Link&amp;lt;/a&amp;gt;</p>
<p>

where 'alias_of_target' is the alias of target address.</p>
<p>

Note however that this prevents users from being able to view the target of a link before clicking it, thus interfering with their ability to ignore websites they know to be spam.</p>

</ss1>
<ss1>
<st>
Distributed approaches</st>
<p>

This approach is very new to addressing link spam. One of the shortcomings of link spam filters is that most sites receive only one link from each domain which is running a spam campaign. If the spammer varies IP addresses, there is little to no distinguishable pattern left on the vandalized site. The pattern, however, is left across the thousands of sites that were hit quickly with the same links. </p>
<p>

A distributed approach, like the free <link>
LinkSleeve</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref> uses <work wordnetid="100575741" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../850/80850.xml">
XML-RPC</link></activity>
</system_of_measurement>
</psychological_feature>
</act>
</service>
</rule>
</direction>
</event>
</standard>
</protocol>
</message>
</work>
 to communicate between the various server applications (such as blogs, guestbooks, forums, and wikis) and the filter server, in this case LinkSleeve. The posted data is stripped of urls and each url is checked against recently submitted urls across the web. If a threshold is exceeded, a "reject" response is returned, thus deleting the comment, message, or posting. Otherwise, an "accept" message is sent.</p>
<p>

A more robust distributed approach is <link xlink:type="simple" xlink:href="../849/3745849.xml">
Akismet</link>, which uses a similar approach to LinkSleeve but uses API keys to assign trust to nodes and also has wider distribution as a result of being bundled with the 2.0 release of <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/605856.xml">
WordPress</link></software>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> They claim over 140,000 blogs contributing to their system. <link xlink:type="simple" xlink:href="../849/3745849.xml">
Akismet</link> libraries have been implemented for Java, Python, Ruby, and PHP, but its adoption may be hindered by its commercial use restrictions. In 2008, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../888/453888.xml">
Six Apart</link></company>
 therefore released a <link xlink:type="simple" xlink:href="../569/3066569.xml">
beta</link> version of their <link>
TypePad AntiSpam</link> software, which is compatible with Akismet but free of the latter's commercial use restrictions.</p>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../729/3541729.xml">
Project Honey Pot</link></company>
 has also begun tracking comment spammers. The Project uses its vast network of thousands of traps installed in over one hundred countries around the world in order to watch what comment spamming web robots are posting to blogs and forums. Data is then published on the top countries for comment spamming, as well as the top keywords and URLs being promoted. The Project's data is then made available to block known comment spammers through . Various plugins have been developed to take advantage of the  API.</p>

</ss1>
<ss1>
<st>
Application-specific anti-spam methods</st>
<p>

Particularly popular software products such as <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../871/304871.xml">
Movable Type</link></instrumentality>
</artifact>
</system>
 and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../710/323710.xml">
MediaWiki</link></software>
 have developed their own custom anti-spam measures, as spammers focus more attention on targeting those platforms.  Whitelists and blacklists that prevent certain IPs from posting, or that prevent people from posting content that matches certain filters, are common defenses.  More advanced <link xlink:type="simple" xlink:href="../589/61589.xml">
access control list</link>s require various forms of validation before users can contribute anything like linkspam.  </p>
<p>

The goal in every case is to allow good users to continue to add links to their comments, as that is considered by some to be a valuable aspect of any comments section.</p>

<ss2>
<st>
RSS feed monitoring</st>
<p>

Some wikis allow you to access an RSS feed of recent changes or comments. If you add that to your news reader and set up a smart search for common spam terms (usually <link xlink:type="simple" xlink:href="../216/29216.xml">
viagra</link> and other drug names) you can quickly identify and remove the offending spam.</p>

</ss2>
<ss2>
<st>
Response tokens</st>
<p>

Another filter available to webmasters is to add a hidden <link xlink:type="simple" xlink:href="../452/865452.xml">
session token</link> or <link xlink:type="simple" xlink:href="../790/13790.xml">
hash function</link> to their comment form.  When the comments are submitted, data stored within the posting such as IP address and time of posting can be compared to the data stored with the session token or hash generated when the user loaded the comment form.  Postings that use different IP addresses for loading the comment form and posting the comment form, or postings that took unusually short or long periods of time to compose can be filtered out.  This method is particularly effective against spammers who <link xlink:type="simple" xlink:href="../284/41284.xml">
spoof their IP Address</link> (or an <link xlink:type="simple" xlink:href="../768/78768.xml">
anonymous proxy</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>) in an attempt to conceal their identities. Additionally spammers may not actually load the comments form for an entry, having a unique code for each entry inserted into the comment form and verifying it on receipt of the HTTP POST will significantly increase the number of steps required to spam multiple entries<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>.</p>

</ss2>
</ss1>
<ss1>
<st>
Ajax</st>

<p>

Some blog software such as <link xlink:type="simple" xlink:href="../728/2424728.xml">
Typo</link> allow the blog administrator to allow only comments submitted via <word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../950/1610950.xml">
Ajax</link></language_unit>
</neologism>
</part>
</word>
 XMLHttpRequests, and discard regular form POST requests. This causes accessibility problems typical to Ajax-only applications. </p>
<p>

Although this technique prevents spam so far, it is a form of <link xlink:type="simple" xlink:href="../087/29087.xml">
security by obscurity</link> and will probably be defeated if it becomes popular enough.</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../091/11486091.xml">
Adversarial information retrieval</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../965/4927965.xml">
Social networking spam</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.jayallen.org/projects/mt-blacklist/">
MT-Blacklist - A Movable Type Anti-spam Plugin</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://blogx.co.uk/Comments.asp?Entry=757">
Matthew1471's ASP BlogX - 5 things you probably did not know about the spammers who spam your website. </weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.w3.org/TR/REC-html40/struct/links.html#adef-rel">
Links in HTML documents</weblink></entry>
<entry id="4">
<weblink xlink:type="simple" xlink:href="http://googleblog.blogspot.com/2005/01/preventing-comment-spam.html">
Official Google Blog: Preventing comment spam</weblink></entry>
<entry id="5">
Michael Hampton (May 23, 2005), <weblink xlink:type="simple" xlink:href="http://www.homelandstupidity.us/2005/05/23/nofollow-revisited/">
Nofollow revisited</weblink>, <it>HomelandStupidity.us</it>, retrieved November 2, 2007</entry>
<entry id="6">
<weblink xlink:type="simple" xlink:href="http://jeremy.zawodny.com/blog/archives/006800.html">
Nofollow No Good? (by Jeremy Zawodny)</weblink></entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.hiittech.com">
LinkSleeve : SLV : Spam Link Verification</weblink></entry>
<entry id="8">
<weblink xlink:type="simple" xlink:href="http://wordpress.org/development/2005/12/wp2/">
WordPress › Blog » WordPress 2</weblink></entry>
<entry id="9">
<weblink xlink:type="simple" xlink:href="http://blogx.co.uk/Comments.asp?Entry=757">
Matthew1471's ASP BlogX - 5 things you probably did not know about the spammers who spam your website. </weblink></entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="http://blogx.co.uk/Comments.asp?Entry=757">
Matthew1471's ASP BlogX - 5 things you probably did not know about the spammers who spam your website. </weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://meta.wikimedia.org/wiki/Anti-spam_Features">
Anti-spam Features</weblink> of <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../710/323710.xml">
MediaWiki</link></software>
</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://sixapart.com/pronet/comment_spam.html">
Six Apart Comment Spam Guide</weblink>, fairly broad overview from <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../871/304871.xml">
Movable Type</link></instrumentality>
</artifact>
</system>
's authors.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.clientwell.com/blog/2007/08/23/blog-spam/">
Article bemoaning the proliferation of blog spam.</weblink></entry>
<entry level="1" type="bullet">

 Gilad Mishne, David Carmel and Ronny Lempel: <weblink xlink:type="simple" xlink:href="http://airweb.cse.lehigh.edu/2005/mishne.pdf">
Blocking Blog Spam with Language Model Disagreement</weblink>, PDF. From the First International Workshop on Adversarial Information Retrieval (AIRWeb'05) Chiba, Japan, 2005.</entry>
</list>
</p>
<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<practice wordnetid="100410247" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../368/28368.xml">
Spamming</link></activity>
</psychological_feature>
</act>
</event>
</practice>
</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<link>
History</link>
&nbsp;·  <link xlink:type="simple" xlink:href="../065/5200065.xml">
Network Abuse Clearinghouse</link></col>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../770/630770.xml">
Protocol</link></rule>
</direction>
</protocol>
</message>
s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;font-weight:normal;;" class="navbox-group">
<link xlink:type="simple" xlink:href="../847/459847.xml">
E-mail</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.5em;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../353/527353.xml">
Address munging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../488/10748488.xml">
Bulk email software</link>&nbsp;·  <link xlink:type="simple" xlink:href="../478/4884478.xml">
Directory Harvest Attack</link>&nbsp;·  <link xlink:type="simple" xlink:href="../977/153977.xml">
DNSBL</link>&nbsp;·   <link xlink:type="simple" xlink:href="../663/1466663.xml">
Spambot</link>&nbsp;·  <link xlink:type="simple" xlink:href="../047/13497047.xml">
Pink contract</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;font-weight:normal;;" class="navbox-group">
Other</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.5em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../958/179958.xml">
Autodialer</link>&nbsp;·  <link xlink:type="simple" xlink:href="../563/2067563.xml">
Flyposting</link>&nbsp;·  <link xlink:type="simple" xlink:href="../475/712475.xml">
Junk fax</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/394592.xml">
Messaging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../616/394616.xml">
Mobile phone</link>&nbsp;·  <link xlink:type="simple" xlink:href="../596/394596.xml">
Newsgroup</link>&nbsp;·  <link xlink:type="simple" xlink:href="../180/162180.xml">
Telemarketing</link>&nbsp;·  <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/1017252.xml">
VoIP</link></concept>
</idea>
</col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../737/313737.xml">
Anti-spam</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../908/1626908.xml">
Disposable e-mail address</link>&nbsp;·  <link xlink:type="simple" xlink:href="../388/1497388.xml">
E-mail authentication</link>&nbsp;·  <link xlink:type="simple" xlink:href="../989/2064989.xml">
SORBS</link>&nbsp;·  <link xlink:type="simple" xlink:href="../427/1905427.xml">
SpamCop</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/1267954.xml">
Spamhaus</link>&nbsp;·  <link xlink:type="simple" xlink:href="../790/5718790.xml">
List poisoning</link>&nbsp;·  <link xlink:type="simple" xlink:href="../929/515929.xml">
Bayesian spam filtering</link>&nbsp;·  <link xlink:type="simple" xlink:href="../288/15252288.xml">
Policy block list</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../651/43651.xml">
Spamdexing</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../102/1789102.xml">
Keyword stuffing</link>&nbsp;·  <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../747/286747.xml">
Google bomb</link></method>
</know-how>
</technique>
&nbsp;·   <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<web_site wordnetid="106359193" confidence="0.8">
<link xlink:type="simple" xlink:href="../572/3152572.xml">
Scraper site</link></web_site>
</machine>
</device>
</instrumentality>
</artifact>
</computer>
&nbsp;·  <link xlink:type="simple" xlink:href="../213/270213.xml">
Link farm</link>&nbsp;·  <link xlink:type="simple" xlink:href="../684/714684.xml">
Webring</link>&nbsp;·  <link xlink:type="simple" xlink:href="../364/418364.xml">
Cloaking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../839/594839.xml">
Doorway page</link>&nbsp;·  <link xlink:type="simple" xlink:href="../686/636686.xml">
URL redirection</link>&nbsp;·   <link xlink:type="simple" xlink:href="../302/2501302.xml">
Spam blog</link>s&nbsp;·  <link xlink:type="simple" xlink:href="../084/2791084.xml">
Sping</link>&nbsp;·  <link xlink:type="simple" xlink:href="../822/4803822.xml">
Forum spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../830/528830.xml">
Blog spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../965/4927965.xml">
Social networking spam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../814/1376814.xml">
Referer spam</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../626/805626.xml">
Internet fraud</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;line-height:1.4em;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../526/46526.xml">
Advance fee fraud</link>&nbsp;·  <link xlink:type="simple" xlink:href="../010/1093010.xml">
Lottery scam</link>&nbsp;·  <link xlink:type="simple" xlink:href="../858/17362858.xml">
Make Money Fast</link>&nbsp;·  <link xlink:type="simple" xlink:href="../849/12512849.xml">
Microcap stock fraud</link>&nbsp;·  <accomplishment wordnetid="100035189" confidence="0.8">
<occupation wordnetid="100582388" confidence="0.8">
<transgression wordnetid="100745005" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<crime wordnetid="100766234" confidence="0.8">
<wrongdoing wordnetid="100732746" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../364/428364.xml">
Phishing</link></activity>
</feat>
</psychological_feature>
</act>
</action>
</wrongdoing>
</crime>
</event>
</transgression>
</occupation>
</accomplishment>
&nbsp;·  <accomplishment wordnetid="100035189" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<action wordnetid="100037396" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<feat wordnetid="100036762" confidence="0.8">
<link xlink:type="simple" xlink:href="../126/6002126.xml">
Vishing</link></feat>
</psychological_feature>
</act>
</action>
</event>
</concept>
</idea>
</accomplishment>
</col>
</row>
</table>
</col>
</row>
</table>

</p>


</sec>
</bdy>
</article>
