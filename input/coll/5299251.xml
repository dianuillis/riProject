<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 21:35:42[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Application virtualization</title>
<id>5299251</id>
<revision>
<id>243356654</id>
<timestamp>2008-10-06T04:22:32Z</timestamp>
<contributor>
<username>Xammer</username>
<id>1033131</id>
</contributor>
</revision>
<categories>
<category>Windows software stubs</category>
<category>Mac OS software</category>
<category>Windows software</category>
<category>Linux software</category>
<category>Virtualization software</category>
<category>Unix software</category>
</categories>
</header>
<bdy>

<b>Application virtualization</b> is an umbrella term that describes software technologies that improve portability, manageability and compatibility of <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<furnishing wordnetid="103405265" confidence="0.8">
<table wordnetid="104379243" confidence="0.8">
<furniture wordnetid="103405725" confidence="0.8">
<console_table wordnetid="103092883" confidence="0.8">
<link xlink:type="simple" xlink:href="../746/454746.xml">
applications</link></console_table>
</furniture>
</table>
</furnishing>
</instrumentality>
</artifact>
 by encapsulating them from the underlying <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> on which they are executed. A fully virtualized application is not installed in the traditional sense<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>, although it is still executed as if it is. The application is fooled at runtime into believing that it is directly interfacing with the original operating system and all the resources managed by it, when in reality it is not. Application virtualization differs from <link xlink:type="simple" xlink:href="../353/32353.xml">
operating system virtualization</link> in that in the latter case, the whole <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> is virtualized rather than only specific applications.
<sec>
<st>
Description</st>
<p>

Limited application virtualization is used in modern operating systems such as <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
.  For example, IniFileMappings were introduced with <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 to virtualize (into the <record wordnetid="106647206" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<file wordnetid="106508816" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../933/1164933.xml">
Registry</link></part>
</evidence>
</indication>
</file>
</component>
</concept>
</idea>
</record>
) the legacy <message wordnetid="106598915" confidence="0.8">
<record wordnetid="106647206" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<file wordnetid="106508816" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../172/1908172.xml">
INI file</link></format>
</evidence>
</indication>
</file>
</information>
</record>
</message>
s of applications originally written for <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<window wordnetid="104587648" confidence="0.8">
<supporting_structure wordnetid="104361095" confidence="0.8">
<framework wordnetid="103391770" confidence="0.8">
<link xlink:type="simple" xlink:href="../311/168311.xml">
Windows 3.1</link></framework>
</supporting_structure>
</window>
</artifact>
</structure>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>  Similarly, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 implements limited file and <record wordnetid="106647206" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<file wordnetid="106508816" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../933/1164933.xml">
Registry</link></part>
</evidence>
</indication>
</file>
</component>
</concept>
</idea>
</record>
 virtualization so that legacy applications that try to save user data in a read-only system location can still work on the platform without elevating users' access.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>
<p>

Full application virtualization requires a virtualization layer.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> This layer must be installed on a machine to intercept all file and Registry operations of virtualized applications and transparently redirect these operations into a virtualised location.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>  The application performing the file operations never knows that it's not accessing the physical resource it believes it is.  In this way, applications with many dependent files and settings can be made portable by redirecting all their <link xlink:type="simple" xlink:href="../558/14558.xml">
input/output</link> to a single physical file, and traditionally incompatible applications can be executed side-by-side. <link xlink:type="simple" xlink:href="../889/10541889.xml">
Microsoft Application Virtualization</link>, <link xlink:type="simple" xlink:href="../959/5862959.xml">
Software Virtualization Solution</link>, and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/17661658.xml">
VMware ThinApp</link></software>
 are examples of this technology for the Windows platform.</p>
<p>

A common misconception is that a <link xlink:type="simple" xlink:href="../263/192263.xml">
runtime environment</link> is application virtualization.  However a runtime layer is required for an application to be able to execute, while a virtualization layer is not.</p>
<p>

A similar, but different principle is <link xlink:type="simple" xlink:href="../353/32353.xml">
Operating system virtualization</link>s which encapsulate the entire operating system from the hardware, as opposed to only the applications from the operating system.</p>

</sec>
<sec>
<st>
Technologies</st>
<p>

Technology categories that fall under application virtualization include:</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../485/6973485.xml">
Application Streaming</link>.  The application is delivered in a package, that may include a subset of OS files and configuration settings.  Running the package requires the installation of a lightweight client application.  Packages are usually delivered over a protocol such as HTTP or <link>
RTSP</link>.  Application virtualization is commonly paired with <link xlink:type="simple" xlink:href="../485/6973485.xml">
application streaming</link> to deliver applications on demand.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../303/7308303.xml">
Desktop Virtualization</link>/<link xlink:type="simple" xlink:href="../303/7308303.xml">
Virtual Desktop Infrastructure</link> (VDI).  The application is hosted in a VM or <link xlink:type="simple" xlink:href="../364/2250364.xml">
blade PC</link> that also includes the operating system (OS).  These solutions include a management infrastructure for automating the creation of virtual desktops, and providing for access control to target virtual desktop.  VDI solutions can usually fill the gaps where application streaming falls short.</entry>
</list>
</p>

</sec>
<sec>
<st>
Benefits of application virtualization</st>
<p>

<list>
<entry level="1" type="bullet">

 Allows applications to run in environments that do not suit the native application (e.g. <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../583/37583.xml">
Wine</link></software>
 allows <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> applications to run on <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
).</entry>
<entry level="1" type="bullet">

 May protect the operating system and other applications from poorly written or buggy code.</entry>
<entry level="1" type="bullet">

 Uses fewer resources than a separate <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>.</entry>
<entry level="1" type="bullet">

 Run applications that are not written correctly, for example applications that try to store user data in a read-only system-owned location.</entry>
<entry level="1" type="bullet">

 Run incompatible applications side-by-side, at the same time and with minimal regression testing against one another.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
<entry level="1" type="bullet">

 Maintain a standard configuration in the underlying operating system across multiple computers in an organization, regardless of the applications being used, thereby keeping costs down.</entry>
<entry level="1" type="bullet">

 Implement the security <link xlink:type="simple" xlink:href="../226/1695226.xml">
principle of least privilege</link> by removing the requirement for end-users to have Administrator privileges in order to run poorly written applications.</entry>
<entry level="1" type="bullet">

 Simplified <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> migrations.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="1" type="bullet">

 Accelerated application deployment, through on-demand <link xlink:type="simple" xlink:href="../485/6973485.xml">
application streaming</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="1" type="bullet">

 Improved security, by isolating applications from the operating system.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
Disadvanges of application virtualization</st>
<p>

<list>
<entry level="1" type="bullet">

 Applications have to be "packaged" or "sequenced" before they will run in a virtualized way.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Minimal increased resource requirements (memory and disk storage).</entry>
<entry level="1" type="bullet">

 Not all software can be virtualized.  Some examples include applications that require a <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link> and <link xlink:type="simple" xlink:href="../535/64535.xml">
16-bit</link> applications that need to run in shared memory space.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></entry>
<entry level="1" type="bullet">

 Some compatibility issues between legacy applications and newer operating systems cannot be addressed by application virtualization (although they can still be run on an older operating system under a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>). For example, some applications that don't manage the <link xlink:type="simple" xlink:href="../117/547117.xml">
heap</link> correctly will not execute on Windows Vista, regardless of whether they are virtualized or not, as they still allocate memory in the same way.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> For this reason, specialist application compatibility fixes ("SHIMs") may still be needed, even if the application is virtualized.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../069/4256069.xml">
Comparison of Application Virtual Machines</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../937/18943937.xml">
Software emulation</link></entry>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
AIX 6.1</link></O>
 Live Application Mobility</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../333/2262333.xml">
Software as a service</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</entry>
</list>
</p>

<ss1>
<st>
 Similar application schemes </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../924/2760924.xml">
klik (packaging method)</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../017/3668017.xml">
Application directory</link></entry>
<entry level="1" type="bullet">

 Altiris <link xlink:type="simple" xlink:href="../959/5862959.xml">
Software Virtualization Solution</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../009/743009.xml">
Zero Install</link></software>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/17661658.xml">
VMware ThinApp</link></software>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../889/10541889.xml">
Microsoft Application Virtualization</link></entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../020/703020.xml">
Citrix XenApp</link></software>
</entry>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../068/17661068.xml">
Xenocode</link></institution>
</company>
</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/windows/products/windowsvista/enterprise/softgrid.mspx">
Introducing Microsoft SoftGrid Application Virtualization</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.</entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://msdn.microsoft.com/en-us/library/ms725501(VS.85).aspx">
WritePrivateProfileString Function</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.&#32;Retrieved on <link>
2008-06-18</link>.</entry>
<entry id="3">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../201/3127201.xml">
Mark Russinovich</link></scholar>
</employee>
</causal_agent>
</alumnus>
</worker>
</intellectual>
</person>
</physical_entity>
&#32;(June 2007).&#32;"<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/technet/technetmag/issues/2007/06/UAC/default.aspx">
Inside Windows Vista User Account Control</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.</entry>
<entry id="4">
Amir Husain.&#32;"<weblink xlink:type="simple" xlink:href="http://vdiworks.com/wp/?p=15">
How to build an Application Virtualization Framework</weblink>".&#32;  <link>
VDIworks</link>.&#32;Retrieved on <link>
2008-07-01</link>.</entry>
<entry id="5">
Coby Gurr&#32;(2008-01-28).&#32;"<weblink xlink:type="simple" xlink:href="http://www.dell.com/downloads/global/power/ps1q08-20080154-LANDesk.pdf">
Facilitating Microsoft Windows Vista Migration Through Application Virtualization</weblink>"&#32;(PDF).&#32;  <link xlink:type="simple" xlink:href="../490/102490.xml">
Dell</link>.&#32;Retrieved on <link>
2008-06-19</link>.</entry>
<entry id="6">
"<weblink xlink:type="simple" xlink:href="http://technet2.microsoft.com/WindowsVista/en/library/006bca87-10df-4174-94b9-ed568a3faf991033.mspx?mfr=true">
Overview Series: Windows Vista Application Compatibility</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.&#32;Retrieved on <link>
2008-06-19</link>.</entry>
<entry id="7">
"<weblink xlink:type="simple" xlink:href="http://www.dabcc.com/documents/DesktopVirtualization_11_26_07.pdf">
Desktop Virtualization Comes of Age</weblink>"&#32;(PDF).&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../695/842695.xml">
Credit Suisse</link></company>
&#32;(2007-11-26).&#32;Retrieved on <link>
2008-03-03</link>.</entry>
<entry id="8">
Mayank Johri&#32;(2008-02-28).&#32;"<weblink xlink:type="simple" xlink:href="http://mayankjohri.wordpress.com/2008/02/08/guidelines-for-application-to-be-sequenced/">
Guidelines for Application Sequencing</weblink>".&#32;Retrieved on <link>
2008-06-24</link>.</entry>
<entry id="9">
Peter Varhol&#32;(September 2007).&#32;"<weblink xlink:type="simple" xlink:href="http://redmondmag.com/features/article.asp?editorialsid=1776">
Application Virtualization Hits Its Stride</weblink>".&#32;  <weblink xlink:type="simple" xlink:href="http://redmondmag.com">
Redmondmag.com</weblink>.&#32;Retrieved on <link>
2008-06-19</link>.</entry>
<entry id="10">
Adrian Marinescu&#32;(2006-07-14).&#32;"<weblink xlink:type="simple" xlink:href="http://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Marinescu.pdf">
Windows Vista Heap Management Enhancements</weblink>"&#32;(PDF).&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.&#32;Retrieved on <link>
2008-06-19</link>.</entry>
<entry id="11">
Chris Jackson&#32;(2008-05-01).&#32;"<weblink xlink:type="simple" xlink:href="http://blogs.msdn.com/cjacks/archive/2008/04/30/can-you-shim-applications-virtualized-in-softgrid.aspx">
Can You Shim Applications Virtualized in SoftGrid?</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
.&#32;Retrieved on <link>
2008-06-24</link>.</entry>
</reflist>
</p>


</sec>
</bdy>
</article>
