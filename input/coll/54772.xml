<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:45:07[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<class  confidence="0.8" wordnetid="107997703">
<collection  confidence="0.8" wordnetid="107951464">
<group  confidence="0.8" wordnetid="100031264">
<header>
<title>ZPP</title>
<id>54772</id>
<revision>
<id>206308417</id>
<timestamp>2008-04-17T19:16:32Z</timestamp>
<contributor>
<username>Jarodwen</username>
<id>2379907</id>
</contributor>
</revision>
<categories>
<category>Complexity classes</category>
</categories>
</header>
<bdy>

<indent level="1">

<it>This is an article about a computational complexity class. For Polish communist political organisation, see <link>
Związek Patriotów Polskich</link></it>. For the pyrotechnic composition, see <link xlink:type="simple" xlink:href="../930/12623930.xml">
zirconium-potassium perchlorate</link>.
</indent>

In <link xlink:type="simple" xlink:href="../543/7543.xml">
complexity theory</link>, <b>ZPP</b> (Zero-error Probabilistic <link xlink:type="simple" xlink:href="../576/44576.xml">
Polynomial time</link>) is the <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link> of problems for which a <link xlink:type="simple" xlink:href="../812/197812.xml">
probabilistic Turing machine</link> exists with these properties:<p>

<list>
<entry level="1" type="bullet">

 It always returns the correct YES or NO answer.</entry>
<entry level="1" type="bullet">

 The running time is unbounded, but is polynomial on average for any input.</entry>
</list>
</p>
<p>

In other words, the algorithm is allowed to flip a truly-random coin while it's running.  It always returns the correct answer. (Such an algorithm is called a <link xlink:type="simple" xlink:href="../519/537519.xml">
Las Vegas algorithm</link>.) For a problem of size <it>n</it>, there is some polynomial <it>p</it>(<it>n</it>) such that the average running time will be less than <it>p</it>(<it>n</it>), even though it might occasionally be much longer.  </p>
<p>

Alternatively, <b>ZPP</b> can be defined as the class of problems for which a probabilistic <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 exists with these properties:
<list>
<entry level="1" type="bullet">

 It always runs in polynomial time.</entry>
<entry level="1" type="bullet">

 It returns an answer YES, NO or DO NOT KNOW.</entry>
<entry level="1" type="bullet">

 The answer is always either DO NOT KNOW or the correct answer.</entry>
<entry level="1" type="bullet">

 If the correct answer is YES, then it returns YES with probability at least 1/2 (and DO NOT KNOW otherwise).</entry>
<entry level="1" type="bullet">

 If the correct answer is NO, then it returns NO with probability at least 1/2 (and DO NOT KNOW otherwise).</entry>
</list>

The two definitions are equivalent.</p>
<p>

The definition of <b>ZPP</b> is based on probabilistic Turing machines.  Other complexity classes based on them include <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../079/4079.xml">
BPP</link></group>
</collection>
</class>
</b> and <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../771/54771.xml">
RP</link></group>
</collection>
</class>
</b>.  The class <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/4080.xml">
BQP</link></group>
</collection>
</class>
</b> is based on another machine with randomness: the <link xlink:type="simple" xlink:href="../220/25220.xml">
quantum computer</link>.</p>

<sec>
<st>
 Intersection definition </st>

<p>

The class <b>ZPP</b> is exactly equal to the intersection of the classes <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../771/54771.xml">
RP</link></group>
</collection>
</class>
</b> and <b>Co-RP</b>. This is often taken to be the definition of <b>ZPP</b>. To show this, first note that every problem which is in <it>both</it> <b>RP</b> and <b>co-RP</b> has a <link xlink:type="simple" xlink:href="../519/537519.xml">
Las Vegas algorithm</link> as follows:</p>
<p>

<list>
<entry level="1" type="bullet">

 Suppose we have a language L recognized by both the <b>RP</b> algorithm A and the (possibly completely different) <b>co-RP</b> algorithm B.</entry>
<entry level="1" type="bullet">

 Given an input in L, run A on the input. If it returns YES, the answer must be YES. Otherwise, run B on the input. If it returns NO, the answer must be NO. If neither occurs, repeat this step.</entry>
</list>
</p>
<p>

Note that only one machine can ever give a wrong answer, and the chance of that machine giving the wrong answer during each repetition is 50%. This means that the chance of reaching the <it>k</it>th round shrinks exponentially in <it>k</it>, showing that the <link xlink:type="simple" xlink:href="../653/9653.xml">
expected</link> running time is polynomial. This shows that <b>RP</b> intersect <b>co-RP</b> is contained in <b>ZPP</b>.</p>
<p>

To show that <b>ZPP</b> is contained in <b>RP</b> intersect <b>co-RP</b>, suppose we have a Las Vegas algorithm C to solve a problem. We can then construct the following <b>RP</b> algorithm:
<list>
<entry level="1" type="bullet">

 Run C for at least <it>double</it> its expected running time. If it gives an answer, give that answer. If it doesn't give any answer before we stop it, give NO.</entry>
</list>

By <difference wordnetid="104748836" confidence="0.8">
<inequality wordnetid="104752221" confidence="0.8">
<link xlink:type="simple" xlink:href="../232/238232.xml">
Markov's Inequality</link></inequality>
</difference>
, the chance that it will yield an answer before we stop it is 1/2. This means the chance we'll give the wrong answer on a YES instance, by stopping and yielding NO, is only 1/2, fitting the definition of an <b>RP</b> algorithm. The <b>co-RP</b> algorithm is identical, except that it gives YES if C "times out".</p>

</sec>
<sec>
<st>
 Witness and Proof </st>

<p>

The classes NP, RP and ZPP can be thought of in terms of proof of membership in a set.</p>
<p>

<b>Definition:</b> A <it>verifier</it> V for a set X is a Turing Machine such that:
<list>
<entry level="1" type="bullet">

 if x is in X then there exists a string w such that V(x,w) accepts;</entry>
<entry level="1" type="bullet">

 if x is not in X, then for all strings w, V(x,w) rejects.</entry>
</list>
</p>
<p>

The string w can be thought of as the proof of membership. In the case of short proofs (of length bounded by a polynomial in the size of the input) which can be efficiently verified (V is a polynomial-time deterministic Turing Machine), the string w is called a <it>witness</it>. </p>
<p>

<b>Notes:</b>
<list>
<entry level="1" type="bullet">

 The definition is very asymmetric. The proof of x being in X is a single string. The proof of x not being in X is the collection of all strings, none of which is a proof of membership. </entry>
<entry level="1" type="bullet">

 The availability of witness is uniform. For all x in X there must be a witness. It is not the case where certain x in X are too difficult to verify, whereas most are not. </entry>
<entry level="1" type="bullet">

 The witness needn't be a traditionally construed proof. If V is a probabilisitic Turing Machine which could possible accept x if x is in X, then the proof is the string of coin flips which leads the machine, by luck, intuition, or genius, to accepting x.</entry>
<entry level="1" type="bullet">

 The co- concept is a proof of non-membership, or membership in the complement set.</entry>
</list>
</p>
<p>

The classes NP, RP and ZPP are sets which have witnesses for membership. The class NP requires only that witnesses exist. They may be very rare. Of the 2f(|x|) possible strings, with f() a polynomial, only one need cause the verifier to accept (if x is in X. If x is not in X, no string will cause the verifier to accept). </p>
<p>

For the classes RP and ZPP any string chosen at random will likely be a witness.</p>
<p>

The corresponding co-classes have witness for non-membership. In particular, co-RP is the class of sets for which, if x is not in X, any randomly chosen string is likely to be a witness for non-membership. ZPP is the class of sets for which any random string is likely to be a witness of x in X, or x not in X, which ever the case may be.</p>
<p>

Connecting this definition with other definitions of RP, co-RP and ZPP is easy. The probablisitic polynomial-time Turing Machine V*w(x) corresponds to the deterministic polynomial-time Turing Machine V(x,w) by replacing the random tape of V* with a second input tape for V on which is written the sequence of coin flips. By selecting the witness as a random string, the verifier is a probabilistic polynomial-time Turing Machine whose probability of accepting x when x is in X is large (greater than 1/2, say), but zero if x is not in X (for RP); of rejecting x when x is not in X is large but zero if x is in X (for co-RP); and of correctly accepting or rejecting x as a member of X is large, but zero of incorrectly accepting or rejecting x (for ZPP).</p>
<p>

By repeated random selection of a possible witness, the large probability that a random string is a witness gives an expected polynomial time algorithm for accepting or rejecting an input. Conversely, if the Turing Machine is expected polynomial-time (for any given x), then a considerable fraction of the runs must be polynomial-time bounded, and the coin sequence used in such a run will be a witness.</p>
<p>

ZPP should be contrasted with BPP. The class BPP does not require witnesses, although witnesses are sufficient (hence BPP contains RP, co-RP and ZPP). A BPP language has V(x,w) accept on a (clear) majority of strings w if x is in X, and conversely reject on a (clear) majority of strings w if x is not in X. No single string w need be definitive, and therefore they cannot in general be considered proofs or witnesses.</p>

</sec>
<sec>
<st>
 Connection to other classes </st>
<p>

Since <b>ZPP</b>=<b>RP</b> ∩ <b>coRP</b>, <b>ZPP</b> is obviously contained in both <b>RP</b> and <b>coRP</b>.</p>
<p>

The class <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../550/658550.xml">
P</link></group>
</collection>
</class>
</b> is contained in <b>ZPP</b>, and some computer scientists have conjectured that <b>P</b>=<b>ZPP</b>: i.e. every Las Vegas algorithm has a deterministic polynomial-time equivalent.</p>
<p>

It is still open whether <b>ZPP</b> = <b><class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../694/54694.xml">
EXPTIME</link></group>
</collection>
</class>
</b> (though that is almost certainly false). The result <b>P</b>=<b>ZPP</b> would disprove this, as <b>P</b> ≠ <b>EXPTIME</b> (see <link xlink:type="simple" xlink:href="../120/184120.xml">
time hierarchy theorem</link>).</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://qwiki.stanford.edu/wiki/Complexity_Zoo#zpp">
ZPP</weblink> - from Complexity Zoo</entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
Important <link xlink:type="simple" xlink:href="../426/502426.xml">
complexity class</link>es (<link xlink:type="simple" xlink:href="../359/663359.xml">
more</link>)</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../550/658550.xml">
P</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../562/21562.xml">
NP</link></group>
</collection>
</class>
&nbsp;• <link xlink:type="simple" xlink:href="../184/6184.xml">
co-NP</link>&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/39466.xml">
NP-C</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../680/54680.xml">
co-NP-C</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../681/54681.xml">
NP-hard</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../240/312240.xml">
UP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../924/27924.xml">
<list>
<entry level="1" type="number">

P</entry>
</list>
</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../925/27925.xml">
<list>
<entry level="1" type="number">

P-C</entry>
</list>
</link></group>
</collection>
</class>
&nbsp;• <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../999/1149999.xml">
L</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
&nbsp;• <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../955/1145955.xml">
NL</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../073/22073.xml">
NC</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../683/54683.xml">
P-C</link></group>
</collection>
</class>
&nbsp;• <mathematical_relation wordnetid="113783581" confidence="0.8">
<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<operator wordnetid="113786413" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../351/39351.xml">
PSPACE</link></function>
</operator>
</group>
</collection>
</class>
</mathematical_relation>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../685/54685.xml">
PSPACE-C</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../694/54694.xml">
EXPTIME</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../657/663657.xml">
NEXPTIME</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../703/54703.xml">
EXPSPACE</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../202/11387202.xml">
2-EXPTIME</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../897/3106897.xml">
PR</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../703/3106703.xml">
RE</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../741/3106741.xml">
Co-RE</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../251/3123251.xml">
RE-C</link></group>
</collection>
</class>
&nbsp;• <link xlink:type="simple" xlink:href="../283/3123283.xml">
Co-RE-C</link>&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../763/3106763.xml">
R</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../080/4080.xml">
BQP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../079/4079.xml">
BPP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../771/54771.xml">
RP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../772/54772.xml">
ZPP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../509/504509.xml">
PCP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../070/2197070.xml">
IP</link></group>
</collection>
</class>
&nbsp;• <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../608/658608.xml">
PH</link></group>
</collection>
</class>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</group>
</collection>
</class>
</article>
