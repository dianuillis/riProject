<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:45:53[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Hercules emulator</title>
<id>55374</id>
<revision>
<id>236942844</id>
<timestamp>2008-09-07T21:58:00Z</timestamp>
<contributor>
<username>Rbowler</username>
<id>5215047</id>
</contributor>
</revision>
<categories>
<category>Linux emulation software</category>
<category>Free software by domain</category>
<category>Windows emulation software</category>
<category>Virtualization software</category>
<category>Mac OS X emulation software</category>
</categories>
</header>
<bdy>

<image width="128px" src="Hercules-logo.gif" type="thumb">
<caption>

Hercules logo
</caption>
</image>

The <b>Hercules emulator</b> is a computer program which allows software designed for <link xlink:type="simple" xlink:href="../872/14872.xml">
IBM mainframe</link> computers (<link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>, <link xlink:type="simple" xlink:href="../266/1856266.xml">
System/390</link> and <link xlink:type="simple" xlink:href="../088/3968088.xml">
zSeries</link>) to be run on other types of computer hardware: notably on low-cost <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computers</link>. Although there are other mainframe emulators which perform a similar function, Hercules is significant in that it enables private individuals to run mainframe computer software on their own personal computers. Hercules runs under <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>, <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
, <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 and <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> and is released under the <link xlink:type="simple" xlink:href="../663/277663.xml">
open source software</link> license <link xlink:type="simple" xlink:href="../309/68309.xml">
QPL</link>. It emulates the <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link> and peripheral device hardware only; the operating system has to be supplied by the user. Hercules was notably the first mainframe emulator to incorporate 64-bit <link xlink:type="simple" xlink:href="../144/1856144.xml">
z/Architecture</link> support, beating out commercial offerings.<p>

Development of the Hercules emulator was started in 1999 by Roger Bowler, a mainframe systems programmer.  The project is currently maintained and hosted by <person wordnetid="100007846" confidence="0.9638700866880419">
<link xlink:type="simple" xlink:href="../289/4661289.xml">
Jay Maynard</link></person>
.</p>

<sec>
<st>
 Background </st>
<p>

The emulator is written entirely in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
. Machine specific <link xlink:type="simple" xlink:href="../368/1368.xml">
assembly</link> code, which other emulators use, was ruled out due to its lack of portability even though it could significantly improve performance. There is one exception: hardware assists are used to provide inter-processor consistency when emulating multiple CPUs on SMP host systems.</p>
<p>

The IBM <link xlink:type="simple" xlink:href="../551/18935551.xml">
public domain</link> operating systems <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>, <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link>, <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/VS</link>, <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link>, <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link>, and <link>
TSS/370</link> run under the emulator. Newer operating systems, such as <link xlink:type="simple" xlink:href="../129/39129.xml">
OS/390</link>, <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../682/32682.xml">
VSE/ESA</link></O>
, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link></O>
, <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/ESA</link>, and <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link> will run, but cannot legally be used except in very limited circumstances for license reasons. <link xlink:type="simple" xlink:href="../604/1266604.xml">
Linux/390</link> and <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../604/1266604.xml">
Linux on zSeries</link></distribution>
</arrangement>
</structure>
 run well on Hercules, and much development work is done on the emulator. Several Linux distributions include ports for S/390 and some also include a separate zSeries port, the most popular being <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../626/2694626.xml">
SUSE Linux Enterprise Server</link></distribution>
</arrangement>
</structure>
. Other distributions with mainframe ports include <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../778/556778.xml">
Red Hat Enterprise Linux</link></O>
, <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8242.xml">
Debian Linux</link></distribution>
</arrangement>
</structure>
, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../890/998890.xml">
CentOS</link></O>
, and <structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../290/28290.xml">
Slackware</link></distribution>
</arrangement>
</structure>
.</p>
<p>

One of the prime uses for Hercules is as a cheap way of getting multiprocessor and 64-bit environments for development purposes to verify that code is portable and works with <link xlink:type="simple" xlink:href="../318/50318.xml">
SMP</link> and is 64-bit clean. There is also a large community of current and former mainframe operators and programmers, as well as those with no prior experience, who use Hercules and the public domain IBM operating systems as a hobby and for learning purposes.</p>
<p>

The <link xlink:type="simple" xlink:href="../663/277663.xml">
open source</link> nature of Hercules means that anyone can produce their own customized version of the emulator. For example, there are at least two projects<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> underway whose aim is to produce a hybrid "System/380" which would combine the characteristics of <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> and <link xlink:type="simple" xlink:href="../266/1856266.xml">
System/390</link>.</p>

</sec>
<sec>
<st>
 Example usage </st>
<p>

The screenshot below shows the Hercules control panel, which is roughly equivalent to the Hardware Management Console (HMC) on an IBM S/390 mainframe. PSW means "Program Status Word", which includes what is known as "Instruction Pointer" on some other architectures, along with other status information. All counters are zero because the machine has not yet been told to boot. The console is active and ready to take commands, however the actual operating system (Debian GNU/Linux 390 in this case) has not been loaded yet.</p>
<p>

<image location="right" width="150px" src="HerculesCaptureDEcran-HMC.gif" type="thumb">
<caption>

Hercules Control Panel
</caption>
</image>
</p>
<p>

To the right is what you see after an operating system is booted, in this case Debian GNU/Linux 390. The panel command "IPL 0800" (<link>
Initial Program Load</link>) was issued to boot from the device found at address 0800. A Linux boot sequence takes place that looks more or less as it does on <link xlink:type="simple" xlink:href="../971/8971.xml">
Alpha</link>, <link xlink:type="simple" xlink:href="../198/34198.xml">
Intel</link> or other platforms. Interaction here is still via the control panel, where the rule is that any commands prefixed by a dot "." are passed through to the mainframe operating system and anything else is interpreted as a panel command. An alternative is to connect via a <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<terminal wordnetid="104412901" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<station wordnetid="104306080" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/15154.xml">
3270</link></rule>
</direction>
</station>
</facility>
</terminal>
</artifact>
</protocol>
</message>
 session or a <link xlink:type="simple" xlink:href="../476/15476.xml">
TCP/IP</link> connection over <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/28814.xml">
ssh</link></system_of_measurement>
</rule>
</direction>
</standard>
</protocol>
</message>
 or <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/34147.xml">
X11</link></rule>
</direction>
</protocol>
</message>
/xterm just as for a <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computer</link>. </p>
<p>

<image location="left" width="150px" src="HerculesCaptureDEcran-ApresIPL.gif" type="thumb">
<caption>

Hercules Linux/390
</caption>
</image>
</p>

<p>

The screenshot on the left is after logging in (with password in plain text due to the HMC pass-through arrangement). The user has shown that Linux/390 thinks it is running on a dual processor S/390 with a serial number of Pi.</p>



</sec>
<sec>
<st>
 Performance </st>

<p>

It is difficult to determine exactly how Hercules emulation speeds correspond to real mainframe hardware. This is partially due to the difficulty of comparing real mainframe hardware to other PCs and servers as well as the lack of a concrete performance measurement. Hercules expresses its processing performance in <link>
MIPS</link>. Due to the age of the earlier System/360 and System/370 hardware, it is a relatively safe assumption that Hercules will outperform them when running on moderately powerful hardware, despite the considerable overhead of emulating a computer architecture in software. Newer System z systems still outperform Hercules: A relatively fast dual processor machine is capable of sustaining about 50 to 60 MIPS under Hercules for code that utilizes both processors in a realistic environment. It can have peaks of around 100 to 130 MIPS when running in a tight loop (such as in a synthetic instruction benchmark or other small compute intensive codes). Hercules generally outperforms <link xlink:type="simple" xlink:href="../117/3781117.xml">
IBM's PC based mainframes</link> from the mid-1990s, which have an advertised peak performance of around 29 MIPS. Compared to the more powerful but still undersized Multiprise 2000 and 3000 mainframes, Hercules would be considered a mid-range server. For every mainframe after the 9672 Generation 1, Hercules would generally be the lowest end system. Current high end System z10 systems are capable of performance up to around 28,000 MIPS (for aggregate performance of many CPUs in a fully configured 64-CPU multiprocessor server), so Hercules is outperformed by several orders of magnitude. However, Hercules on a PC costs several orders of magnitude less than those high end System z systems.</p>
<p>

Processing power alone is only a small part of a larger picture. Mainframes are renowned for reliability, disk I/O performance, and their ability to handle many concurrent tasks, among other things. These aspects are generally lacking on most desktop or notebook PCs available to the hobbyist, though perhaps not on server-class platforms, so even though Hercules may be capable of performing more instructions per second than some mainframes, disk bottlenecks may degrade performance.</p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://tech.groups.yahoo.com/group/hercules-os380/">
Hercules-OS/380 Yahoo Group</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://tech.groups.yahoo.com/group/hercules-380/">
Hercules-380 Yahoo Group</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.hercules-390.org">
Hercules Emulator home page</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.tech-news.com/another/ap200601b.html">
Hercules, Son of Z's</weblink> (Review on Tech-news.com)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cbttape.org">
Public domain OS library</weblink> (MVS version 3.8, VM/CMS release 6, DOS/VS release 34, TSS/370 version 3)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ibiblio.org/jmaynard">
Public domain software archive</weblink> (includes Turnkey MVS CD image)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.debian-administration.org/articles/484">
Running GNU/Linux</weblink> Debian s390 under a i386</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.bsp-gmbh.com/turnkey/">
Tur(n)key 3 MVS documentation</weblink> (Hercules with MVS 3.8 ready to run)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://pup-mvs.hercules-390.com.br/">
Tur(n)key 4 MVS (BETA) on PUP Linux Bootable CD/USB image</weblink></entry>
</list>
</p>


</sec>
</bdy>
</article>
