<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:45:55[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>History of operating systems</title>
<id>55395</id>
<revision>
<id>240467362</id>
<timestamp>2008-09-23T16:14:14Z</timestamp>
<contributor>
<username>Sagabot</username>
<id>2230472</id>
</contributor>
</revision>
<categories>
<category>History of software</category>
</categories>
</header>
<bdy>

The <b>history of computer <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s</b> recapitulates to a degree, the recent <link xlink:type="simple" xlink:href="../636/13636.xml">
history of computer hardware</link>. <p>

Operating systems (OSes) provide a set of functions needed and used by most application-programs on a computer, and the necessary linkages for the control and sychronization of the computer's hardware. On the first computers, without an operating system, every program needed the full hardware specification to run correctly and perform standard tasks, and its own drivers for peripheral devices like printers and card-readers. The growing complexity of hardware and application-programs eventually made operating systems a necessity.</p>

<p>

<table class="infobox">
<row>
<col style="background: #ccf; text-align:center;">
 <b><link xlink:type="simple" xlink:href="../519/386519.xml">
History of computing</link></b></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../636/13636.xml">
Hardware before 1960</link></col>
</row>
<row>
<col>
<link>
Hardware 1960s to present</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../959/397959.xml">
Hardware in Soviet Bloc countries</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../413/3271413.xml">
Computer science</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../395/55395.xml">
Operating systems</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../167/16142167.xml">
Personal computers</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../037/16785037.xml">
Laptops</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../895/758895.xml">
Software engineering</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../120/896120.xml">
Programming languages</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../560/2894560.xml">
Artificial intelligence</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../914/13914.xml">
Graphical user interface</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../692/13692.xml">
Internet</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../777/4192777.xml">
World Wide Web</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../401/32401.xml">
Computer and video games</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/6249.xml">
Timeline of computing</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
 <p>

<list>
<entry level="1" type="bullet">

<link>
Timeline of computing 2400 BC–1949</link></entry>
<entry level="1" type="bullet">

<link>
1950–1979</link></entry>
<entry level="1" type="bullet">

<link>
1980–1989</link></entry>
<entry level="1" type="bullet">

<link>
1990&mdash;</link></entry>
<entry level="1" type="bullet">


Computing timelines|More timelines...</entry>
</list>
</p>
</col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col align="center">

History of computing|More...</col>
</row>
</table>
</p>

<sec>
<st>
 Background </st>
<p>

Early computers lacked any form of operating system. The user had sole use of the machine and would arrive armed with  program and data, often on punched paper and tape. The program would be loaded into the machine, and the machine would be set to work until the program completed or crashed. Programs could generally be debugged via a front panel using switches and lights. It is said that <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../208/1208.xml">
Alan Turing</link></scientist>
</person>
 was a master of this on the early  <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../601/37601.xml">
Manchester Mark I</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
 machine, and he was already deriving the primitive conception of an <it>operating system</it> from the principles of the <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../435/71435.xml">
Universal Turing machine</link></machine>
</causal_agent>
</worker>
</device>
</assistant>
</instrumentality>
</artifact>
</model>
</person>
</physical_entity>
.</p>
<p>

Later machines came with <link xlink:type="simple" xlink:href="../238/473238.xml">
libraries</link> of support code, which would be linked to the user's program to assist in operations such as input and output. This was the genesis of the modern-day operating system. However, machines still ran a single job at a time; at <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../796/31796.xml">
Cambridge University</link></university>
 in England the job queue was at one time a washing line from which tapes were hung with different colored clothes-pegs to indicate job-priority.</p>
<p>

As machines became more powerful, the time needed for a run of a program diminished and the time to hand off the equipment became very large by comparison.  Accounting for and paying for machine usage moved on from checking the wall clock to automatic logging by the computer. Run queues evolved from a literal queue of people at the door, to a heap of media on a jobs-waiting table, or batches of punch-cards stacked one on top of the other in the reader, until the machine itself was able to select and sequence which <link xlink:type="simple" xlink:href="../505/20505.xml">
magnetic tape</link> drives were online. Where  program developers had originally had access to run their own jobs on the machine, they were supplanted by dedicated machine operators who looked after the well-being and maintenance of the machine and were less and less concerned with implementing tasks manually. When commercially available computer centers were faced with the implications of data lost through tampering or operational errors, equipment vendors were put under pressure to enhance the <link xlink:type="simple" xlink:href="../238/473238.xml">
runtime libraries</link> to prevent misuse of system resources. Automated monitoring was needed not just for <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link> usage but for counting pages printed, cards punched, cards read, disk storage used and for signaling when operator intervention was required by jobs such as changing magnetic tapes. </p>
<p>

All these features were building up towards the repertoire of a fully capable operating system. Eventually the <link xlink:type="simple" xlink:href="../238/473238.xml">
runtime libraries</link> became an amalgamated program that was started before the first customer job and could read in the customer job, control its execution, clean up after it, record its usage, and immediately go on to process the next job. Significantly, it became possible for programmers to use symbolic program-code instead of having to hand-encode binary images, once task-switching allowed a computer to perform translation of a program into binary form before running it. These resident background programs, capable of managing multistep processes, were often called monitors or monitor-programs before the term OS established itself.</p>
<p>

An underlying program offering basic hardware-management, software-scheduling and resource-monitoring may seem a remote ancestor to the user-oriented OSes of the <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computing</link> era. But there has been a shift in meaning. With the era of  commercial computing, more and more "secondary" software was bundled in the OS package, leading eventually to the perception of an OS as a complete user-system with utilities, applications (such as text editors and file managers) and configuration tools, and having an integrated <link xlink:type="simple" xlink:href="../293/12293.xml">
graphical user interface</link>. The true descendant of the early operating systems is what is now called the "<link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link>". In technical and development circles the old restricted sense of an OS persists because of the continued active development of <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded</link> operating systems for all kinds of devices with a data-processing component, from hand-held gadgets up to industrial robots and <link xlink:type="simple" xlink:href="../767/25767.xml">
real-time</link> control-systems, which do not run user-applications at the front-end. An embedded OS in a device today is not so far removed as one might think from its ancestor of the 1950s.</p>
<p>

The broader categories of systems and application software are discussed in the <link xlink:type="simple" xlink:href="../309/5309.xml">
computer software</link> article.</p>

</sec>
<sec>
<st>
 The mainframe era </st>
<p>

It is generally thought that the first operating system used for real work was <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../866/13100866.xml">
GM-NAA I/O</link></O>
, produced in 1956 by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../102/12102.xml">
General Motors</link></company>
' Research division for its <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/76492.xml">
IBM 704</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> Most other early operating systems for IBM mainframes were also produced by customers.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

Early operating systems were very diverse, with each vendor or customer producing one or more operating systems specific to their particular <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframe computer</link>. Every operating system, even from the same vendor, could have radically different models of commands, operating procedures, and such facilities as debugging aids. Typically, each time the manufacturer brought out a new machine, there would be a new operating system, and most applications would have to be manually adjusted, recompiled, and retested. </p>

<ss1>
<st>
 Systems on IBM hardware </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../089/13856089.xml">
History of IBM mainframe operating systems</link></it>
</indent>

The state of affairs continued until the 1960s when IBM, already a leading hardware vendor, stopped the work on existing systems, and put all the effort into developing the <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> series of machines, all of which used the <it>same</it> instruction architecture. IBM intended to develop also a single operating system for the new hardware, the <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link>. The problems encountered in the development of the OS/360 are legendary, and are described by <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../652/11652.xml">
Fred Brooks</link></scientist>
</person>
 in <it><book wordnetid="106410904" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../340/31340.xml">
The Mythical Man-Month</link></book>
</it>—a book that has become a classic of <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineering</link>. Because of performance differences across the hardware range and delays with software development, a whole family of operating systems were introduced instead of a single OS/360.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> </p>
<p>

IBM wound up releasing a series of stop-gaps followed by three longer-lived operating systems:
<list>
<entry level="1" type="bullet">

 OS/MFT for mid-range systems. This had one successor, OS/VS1, which was discontinued in the 1980s.</entry>
<entry level="1" type="bullet">

 OS/MVT for large systems. This was similar in most ways to OS/MFT (programs could be ported between the two without being  <link xlink:type="simple" xlink:href="../739/5739.xml">
re-compiled</link>), but has more sophisticated memory management and a <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> facility,  <link xlink:type="simple" xlink:href="../150/212150.xml">
TSO</link>. MVT had several successors including the current <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link>.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../229/626229.xml">
DOS/360</link> for small System/360 models had several successors including the current <link xlink:type="simple" xlink:href="../682/32682.xml">
z/VSE</link>. It was significantly different from OS/MFT and OS/MVT.</entry>
</list>
</p>
<p>

IBM maintained full compatibility with the past, so that programs developed in the sixties can still run under z/VSE (if developed for DOS/360) or z/OS (if developed for OS/MFT or OS/MVT) with no change.</p>

</ss1>
<ss1>
<st>
 Other mainframe operating systems </st>
<p>

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
 developed the <link xlink:type="simple" xlink:href="../953/6975953.xml">
SCOPE</link> operating system in the 1960s, for batch processing.  In cooperation with the University of Minnesota, the <link xlink:type="simple" xlink:href="../989/5929989.xml">
KRONOS</link> and later the <link xlink:type="simple" xlink:href="../363/8716363.xml">
NOS</link> operating systems were developed during the 1970s, which supported simultaneous batch and timesharing use.  Like many commercial timesharing systems, its interface was an extension of the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../845/516845.xml">
Dartmouth BASIC</link></programming_language>
 operating systems, one of the pioneering efforts in timesharing and programming languages.
In the late 1970s, Control Data and the University of Illinois developed the <link xlink:type="simple" xlink:href="../474/1000474.xml">
PLATO system</link>, which used plasma panel displays and long-distance time sharing networks.  PLATO was remarkably innovative for its time; the shared memory model of PLATO's <link xlink:type="simple" xlink:href="../107/3281107.xml">
TUTOR programming language</link> allowed applications such as real-time chat and multi-user graphical games.</p>
<p>

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../173/144173.xml">
UNIVAC</link></institution>
</company>
, the first commercial computer manufacturer, produced a series of <link xlink:type="simple" xlink:href="../841/1312841.xml">
EXEC</link> operating systems.  Like all early main-frame systems, this was a batch-oriented system that managed magnetic drums, disks, card readers and line printers.  In the 1970s, UNIVAC produced the Real-Time Basic (RTB) system to support large-scale time sharing, also patterned after the Dartmouth BASIC system.</p>
<p>

<company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../524/4524.xml">
Burroughs Corporation</link></institution>
</company>
 introduced the B5000 in 1961 with the MCP (<link xlink:type="simple" xlink:href="../244/966244.xml">
Master Control Program</link>) operating system. The B5000 was a stack machine designed to exclusively support high-level languages with no machine language or assembler and indeed the MCP was the first OS to be written exclusively in a high-level language (<physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<speech wordnetid="107109196" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<dialect wordnetid="107155661" confidence="0.8">
<auditory_communication wordnetid="107109019" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<non-standard_speech wordnetid="107155081" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/949062.xml">
ESPOL</link></non-standard_speech>
</writer>
</causal_agent>
</compiler>
</auditory_communication>
</dialect>
</person>
</speech>
</communicator>
</physical_entity>
, a dialect of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../453/1453.xml">
ALGOL</link></programming_language>
). MCP also introduced many other ground-breaking innovations, such as being the first commercial implementation of <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>. MCP is still in use today in the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../274/61274.xml">
Unisys</link></company>
 ClearPath/MCP line of computers.</p>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../730/12730.xml">
General Electric</link></company>
 and MIT developed <link xlink:type="simple" xlink:href="../002/195002.xml">
General Electric Comprehensive Operating Supervisor</link> (GECOS), which introduced the concept of ringed security privilege levels. After acquisition by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 it was renamed to General Comprehensive Operating System (GCOS). </p>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
 developed many operating systems for its various computer lines, including <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../607/529607.xml">
TOPS-10</link></O>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../380/66380.xml">
TOPS-20</link></O>
 time sharing systems for the 36-bit PDP-10 class systems. Prior to the widespread use of UNIX, TOPS-10 was a particularly popular system in universities, and in the early <link xlink:type="simple" xlink:href="../111/253111.xml">
ARPANET</link> community.</p>
<p>

In the late 1960s through the late 1970s, several hardware capabilities evolved that allowed similar or ported software to run on more than one system.  Early systems had utilized <link xlink:type="simple" xlink:href="../999/19999.xml">
microprogramming</link> to implement features on their systems in order to permit different underlying architecture to appear to be the same as others in a series.  In fact most 360's after the 360/40 (except the 360/165 and 360/168) were microprogrammed implementations. But soon other means of achieving application compatibility were proven to be more significant.</p>

</ss1>
</sec>
<sec>
<st>
 Minicomputers and the rise of UNIX </st>

<p>

The beginnings of the <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link></family>
 operating system was developed at AT&amp;T Bell Laboratories in the late 1960s. Because it was essentially free in early editions, easily obtainable, and easily modified, it achieved wide acceptance. It also became a requirement within the Bell systems operating companies. Since it was written in a high level <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C language</link></programming_language>
, when that language was ported to a new machine architecture <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link></family>
 was also able to be ported. This portability permitted it to become the choice for a second generation of minicomputers and the first generation of <link xlink:type="simple" xlink:href="../181/68181.xml">
workstation</link>s. By widespread use it exemplified the idea of an operating system that was conceptually the same across various hardware platforms.  It still was owned by AT&amp;T and that limited its use to groups or corporations who could afford to license it.  It became one of the roots of the <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> movement.</p>
<p>

Other than that Digital Equipment Corporation created the simple <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../309/69309.xml">
RT-11</link></O>
 system for its 16-bit <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link> class machines, and the <link xlink:type="simple" xlink:href="../520/32520.xml">
VMS</link> system for the 32-bit VAX computer. </p>
<p>

Another system which evolved in this time frame was the <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<system wordnetid="104377057" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../217/471217.xml">
Pick operating system</link></database>
</wordnet>
</instrumentality>
</lexical_database>
</artifact>
</electronic_database>
</system>
</information>
</message>
. The Pick system was developed and sold by Microdata Corporation who created the precursors of the system. The system is an example of a system which started as a database application support program and graduated to system work.</p>

</sec>
<sec>
<st>
 The case of 8-bit home computers and game consoles </st>

<ss1>
<st>
 Home computers </st>
<p>

Although most small 8-bit <link xlink:type="simple" xlink:href="../950/13950.xml">
home computer</link>s of the 1980s, such as the <link xlink:type="simple" xlink:href="../293/7293.xml">
Commodore 64</link>, the <link xlink:type="simple" xlink:href="../429/63429.xml">
Atari 8-bit</link>, the <computer wordnetid="103082979" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
Amstrad CPC</link></computer>
, <link xlink:type="simple" xlink:href="../467/34467.xml">
ZX Spectrum</link> series and others <it>could</it> use a disk-loading operating system, such as <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
 or <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../863/1632863.xml">
GEOS</link></O>
 they could generally work <it>without</it> one. In fact, most if not all of these computers shipped with a built-in <link xlink:type="simple" xlink:href="../015/4015.xml">
BASIC</link> interpreter on ROM, which also served as a crude operating system, allowing minimal <link xlink:type="simple" xlink:href="../077/7077.xml">
file</link> management operations (such as deletion, copying, etc.) to be performed and sometimes disk formatting, along of course with <link xlink:type="simple" xlink:href="../746/454746.xml">
application</link> loading and execution, which sometimes required a non-trivial command sequence, like with the <link xlink:type="simple" xlink:href="../293/7293.xml">
Commodore 64</link>.</p>
<p>

The fact that the majority of these machines were bought for entertainment and educational purposes and were seldom used for more "serious" or business/science oriented applications, partly explains why a "true" operating system was not necessary.</p>
<p>

Another reason is that they were usually single-task and <link xlink:type="simple" xlink:href="../751/39751.xml">
single-user</link> machines and shipped with minimal amounts of <link xlink:type="simple" xlink:href="../847/25847.xml">
RAM</link>, usually between 4 and 256 <link xlink:type="simple" xlink:href="../794/16794.xml">
kilobyte</link>s, with 64 and 128 being common figures, and 8-bit processors, so an operating system's <link xlink:type="simple" xlink:href="../399/1932399.xml">
overhead</link> would likely compromise the performance of the machine without really being necessary.</p>
<p>

Even the available <link xlink:type="simple" xlink:href="../236/33236.xml">
word processor</link> and <link xlink:type="simple" xlink:href="../385/13179385.xml">
integrated software</link> applications were mostly self-contained programs which took over the machine completely, as also did <link xlink:type="simple" xlink:href="../363/5363.xml">
video games</link>.</p>

</ss1>
<ss1>
<st>
 Game consoles and video games </st>
<p>

Since virtually all video game consoles and <link xlink:type="simple" xlink:href="../381/961381.xml">
arcade cabinet</link>s designed and built after 1980 were true digital machines (unlike the analog <it><link xlink:type="simple" xlink:href="../947/24947.xml">
Pong</link></it> clones and derivatives), some of them carried a minimal form of <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 or built-in game, such as the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../306/7306.xml">
ColecoVision</link></system>
, the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/104168.xml">
Sega Master System</link></system>
 and the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../554/231554.xml">
SNK</link></company>
 <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../011/22011.xml">
Neo Geo</link></system>
. There were however successful designs where a BIOS was not necessary, such as the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../028/18944028.xml">
Nintendo NES</link></system>
 and its clones.</p>
<p>

Modern day game consoles and videogames, starting with the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<furnishing wordnetid="103405265" confidence="0.8">
<table wordnetid="104379243" confidence="0.8">
<furniture wordnetid="103405725" confidence="0.8">
<console_table wordnetid="103092883" confidence="0.8">
<link xlink:type="simple" xlink:href="../268/31268.xml">
PC-Engine</link></console_table>
</furniture>
</table>
</furnishing>
</instrumentality>
</artifact>
, all have a minimal BIOS that also provides some interactive utilities such as <link xlink:type="simple" xlink:href="../855/212855.xml">
memory card</link> management, <link xlink:type="simple" xlink:href="../087/18994087.xml">
Audio</link> or <link xlink:type="simple" xlink:href="../441/32441.xml">
Video</link> <link xlink:type="simple" xlink:href="../429/6429.xml">
CD</link> playback, <link xlink:type="simple" xlink:href="../210/219210.xml">
copy prevention</link> and sometimes carry <link xlink:type="simple" xlink:href="../727/17727.xml">
libraries</link> for developers to use etc. 
Few of these cases, however, would qualify as a "true" operating system.</p>
<p>

The most notable exceptions are probably the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../036/29036.xml">
Dreamcast</link></system>
 game console which includes a minimal BIOS, like the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<furnishing wordnetid="103405265" confidence="0.8">
<table wordnetid="104379243" confidence="0.8">
<furniture wordnetid="103405725" confidence="0.8">
<console_table wordnetid="103092883" confidence="0.8">
<link xlink:type="simple" xlink:href="../964/23964.xml">
PlayStation</link></console_table>
</furniture>
</table>
</furnishing>
</instrumentality>
</artifact>
, but can load the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../360/230360.xml">
Windows CE</link></O>
 operating system from the game disk allowing easily porting of games from the <link xlink:type="simple" xlink:href="../803/49803.xml">
PC</link> world, and the <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../342/17416342.xml">
Xbox</link></system>
 game console, which is little more than a disguised Intel-based <link xlink:type="simple" xlink:href="../803/49803.xml">
PC</link> running a secret, modified version of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> in the background. Furthermore, there are <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 versions that will run on a <system wordnetid="104377057" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../036/29036.xml">
Dreamcast</link></system>
 and later game consoles as well.</p>
<p>

Long before that, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../989/26989.xml">
Sony</link></company>
 had released a kind of <link xlink:type="simple" xlink:href="../087/166087.xml">
development kit</link> called the <link xlink:type="simple" xlink:href="../463/616463.xml">
Net Yaroze</link> for its first <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<furnishing wordnetid="103405265" confidence="0.8">
<table wordnetid="104379243" confidence="0.8">
<furniture wordnetid="103405725" confidence="0.8">
<console_table wordnetid="103092883" confidence="0.8">
<link xlink:type="simple" xlink:href="../964/23964.xml">
PlayStation</link></console_table>
</furniture>
</table>
</furnishing>
</instrumentality>
</artifact>
 platform, which provided a series of programming and developing tools to be used with a normal PC and a specially modified "Black PlayStation" that could be interfaced with a PC and download programs from it. These operations require in general a functional OS on both platforms involved.</p>
<p>

In general, it can be said that videogame consoles and arcade coin operated machines used at most a built-in <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 during the 1970s, 1980s and most of the 1990s, while from the <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<furnishing wordnetid="103405265" confidence="0.8">
<table wordnetid="104379243" confidence="0.8">
<furniture wordnetid="103405725" confidence="0.8">
<console_table wordnetid="103092883" confidence="0.8">
<link xlink:type="simple" xlink:href="../964/23964.xml">
PlayStation</link></console_table>
</furniture>
</table>
</furnishing>
</instrumentality>
</artifact>
 era and beyond they started getting more and more sophisticated, to the point of requiring a generic or custom-built OS for aiding in development and expandability.</p>

</ss1>
</sec>
<sec>
<st>
 The personal computer era: Apple, PC/MS/DR-DOS and beyond </st>

<p>

The development of microprocessors made inexpensive computing available for the <link xlink:type="simple" xlink:href="../495/276495.xml">
small business</link> and hobbyist, which in turn led to the widespread use of interchangeable hardware components using a common interconnection (such as the <link xlink:type="simple" xlink:href="../036/152036.xml">
S-100</link>, SS-50, <link xlink:type="simple" xlink:href="../ury/22nd_century.xml">
Apple II</link>, <link xlink:type="simple" xlink:href="../029/15029.xml">
ISA</link>, and <link xlink:type="simple" xlink:href="../075/24075.xml">
PCI</link> <link xlink:type="simple" xlink:href="../146/4146.xml">
bus</link>es), and an increasing need for 'standard' operating systems to control them. The most important of the early OSes on these machines was Digital Research's CP/M-80 for the 8080 / 8085 / Z-80 CPUs. It was based on several Digital Equipment Corporation operating systems, mostly for the PDP-11 architecture. MS-DOS (or PC-DOS when supplied by IBM) was based originally on CP/M-80. Each of these machines had a small boot program in ROM which loaded the OS itself from disk. The BIOS on the IBM-PC class machines was an extension of this idea and has accreted more features and functions in the 20 years since the first IBM-PC was introduced in 1981. </p>
<p>

The decreasing cost of display equipment and processors made it practical to provide graphical user interfaces for many operating systems, such as the generic <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../147/34147.xml">
X Window System</link></rule>
</direction>
</protocol>
</message>
 that is provided with many UNIX systems, or other graphical systems such as <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../612/327612.xml">
RadioShack</link></company>
 Color Computer's  <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../451/39451.xml">
OS-9 Level II/MultiVue</link></institution>
</company>
, Commodore's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
, <link xlink:type="simple" xlink:href="../856/856.xml">
Apple</link>'s <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link>, or even <link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link>'s <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
. The original GUI was developed at Xerox Palo Alto Research Center in the early '70s (the Alto computer system) and imitated by many vendors.</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../916/71916.xml">
List of operating systems</link></entry>
<entry level="1" type="bullet">

 <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline of operating systems</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../248/2469248.xml">
Charles Babbage Institute</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
"<weblink xlink:type="simple" xlink:href="http://www.computerhistory.org/timeline/?year=1956">
Timeline of Computer History: 1956: Software</weblink>".&#32;  <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<depository wordnetid="103177349" confidence="0.8">
<museum wordnetid="103800563" confidence="0.8">
<link xlink:type="simple" xlink:href="../478/1115478.xml">
Computer History Museum</link></museum>
</depository>
</facility>
</artifact>
.&#32;Retrieved on <link>
2008-05-25</link>.
</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.bozemanlug.org/talks/linux_history.html">
A Brief History of Linux</weblink></entry>
<entry id="3">
 <cite style="font-style:normal">Johnston&#32;(April 1, 2005).&#32;"<weblink xlink:type="simple" xlink:href="http://www.zjournal.com/index.cfm?section=article&amp;aid=293">
VSE: A Look at the Past 40 Years</weblink>". <it>z/Journal</it>&#32;(April/May 2005).&#32;Thomas Communications, Inc..</cite>&nbsp;</entry>
<entry id="4">
Chuck Boyer, <weblink xlink:type="simple" xlink:href="http://www-306.ibm.com/software/os/zseries/pdf/360Revolution_0406.pdf">
<it>The 360 Revolution''</it></weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 Further reading </st>
<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book"><person wordnetid="100007846" confidence="0.9508927676800064">
<writer wordnetid="110794014" confidence="0.9508927676800064">
<essayist wordnetid="110064405" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../443/21443.xml">
Neal Stephenson</link></essayist>
</writer>
</person>
&#32;(November 1999). <link xlink:type="simple" xlink:href="../862/21862.xml">
In the Beginning...was the Command Line</link>.&#32;Harper Perennial. ISBN 0380815931.</cite>&nbsp; A useful and readable (albeit somewhat opinionated) book dealing with operating system history.</entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</article>
