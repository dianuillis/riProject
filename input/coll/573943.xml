<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:19:19[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>General protection fault</title>
<id>573943</id>
<revision>
<id>243005063</id>
<timestamp>2008-10-04T18:36:33Z</timestamp>
<contributor>
<username>ImageRemovalBot</username>
<id>4851336</id>
</contributor>
</revision>
<categories>
<category>Computer errors</category>
<category>Operating system technology</category>
</categories>
</header>
<bdy>

This article is about the error.&#32;&#32;For the <link xlink:type="simple" xlink:href="../176/161176.xml">
webcomic</link>, see <link xlink:type="simple" xlink:href="../125/630125.xml">
General Protection Fault (webcomic)</link>.&#32;&#32;
A <b>General Protection Fault</b> (<b>GPF</b>) in the <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> and <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
AMD</link> <link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link> <link xlink:type="simple" xlink:href="../597/7597.xml">
architecture</link>s, and other unrelated architectures, is a fault (a type of interrupt) which can encompass several cases where protection mechanisms within the processor architecture are violated by any of the programs that are running, whether it be the kernel or user program. The mechanism is first described in section 9.8.13 in Intel 80386 Programmer's reference manual from 1986. The General Protection Fault is implemented as an <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link> (vector number 13) in both <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> and <link xlink:type="simple" xlink:href="../374/244374.xml">
AMD64</link>-architectures.<p>

If the processor detects a protection violation it stops executing the code and sends a General Protection Fault interrupt. In most cases the operating system will simply remove the failing process from the execution queue, signal the user and continue executing another program. If however the operating system fails to catch the General Protection Fault, i.e. another protection violation occurs before the operating system returns from the previous General Protection Fault-interrupt, the processor will signal a <link xlink:type="simple" xlink:href="../233/1501233.xml">
double fault</link> (interrupt vector 8, a typical <link xlink:type="simple" xlink:href="../600/167600.xml">
BSOD</link> scenario). If yet another failure occurs, the processor will shut down. It will then only respond to a reset or init (that is, pressing the reset-button, or rebooting the entire system) and <link xlink:type="simple" xlink:href="../055/1250055.xml">
NMI</link>-interrupts (unless it has previously failed when handing NMI-interrupts, in which case it will ignore these too).</p>

<ss1>
<st>
 Behaviour in specific operating systems </st>



<p>

In some versions of <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, the general protection fault is indeed reported as a "general protection fault". However, in other versions, the errors may be reported by other messages such as:</p>
<p>

<list>
<entry level="1" type="bullet">

 Unrecoverable Application Error. (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../400/168400.xml">
Windows 3.0</link></version>
)</entry>
<entry level="1" type="bullet">

 [Program Name] has caused a General Protection Fault in module [module name] at [debug code]. (Win 3.xx)</entry>
<entry level="1" type="bullet">

 This program has performed an illegal operation and will be shut down. (<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../486/454486.xml">
Windows 9x</link></O>
)</entry>
<entry level="1" type="bullet">

 [Program Name] has generated errors and will be closed by Windows. (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
)</entry>
<entry level="1" type="bullet">

 [Program Name] has caused an error in [Module Name]. [Program Name] will now close. (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../458/75458.xml">
Windows Me</link></version>
)</entry>
<entry level="1" type="bullet">

 [Program Name/Description] has encountered a problem and needs to close. We are sorry for the inconvenience. (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
)</entry>
<entry level="1" type="bullet">

 [Program Name/Description] has stopped working. (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
)</entry>
</list>
</p>
<p>

In systems such as <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, the errors are reported separately (e.g. <link xlink:type="simple" xlink:href="../803/28803.xml">
segmentation fault</link> for memory errors).</p>

</ss1>
<ss1>
<st>
Memory errors</st>

<p>

In the case of a memory error, the program attempts to perform an action which would result in accessing a portion of <link xlink:type="simple" xlink:href="../847/25847.xml">
memory</link> which should not be accessed. This can include:</p>
<p>

<list>
<entry level="1" type="bullet">

 Writing to a <link xlink:type="simple" xlink:href="../378/304378.xml">
read-only</link> portion of memory</entry>
<entry level="1" type="bullet">

 Attempting to execute <link xlink:type="simple" xlink:href="../365/3365.xml">
byte</link>s in memory which are not designated as <link xlink:type="simple" xlink:href="../801/3149801.xml">
instructions</link></entry>
<entry level="1" type="bullet">

 Attempting to read as data bytes in memory which are designated as instructions</entry>
<entry level="1" type="bullet">

 Other miscellaneous conflicts between the designation of a part of memory and its use</entry>
</list>
</p>
<p>

However, in the case of operating systems that utilize <link xlink:type="simple" xlink:href="../193/311193.xml">
paging</link> instead of <link xlink:type="simple" xlink:href="../131/1323131.xml">
segmentation</link> for controlling accesses to memory, most invalid memory references are actually reported via a <link xlink:type="simple" xlink:href="../143/1157143.xml">
page fault</link> exception as opposed to a general protection fault.  Many modern operating systems implement their memory access-control schemes via paging instead of segmentation, so it is often the case that invalid memory references in operating systems such as <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> are reported via page faults instead of general protection faults.  Operating systems typically provide an abstraction layer (such as <link xlink:type="simple" xlink:href="../231/59231.xml">
exception handling</link> or <link xlink:type="simple" xlink:href="../473/28473.xml">
signals</link>) that hides whatever internal processor mechanism was used to raise a memory access error from a program, for the purposes of providing a standard interface for handling many different types of processor-generated error conditions.</p>
<p>

In terms of the <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> architecture, general protection faults are specific to segmentation-based protection when it comes to memory accesses.  However, general protection faults are still used to report other protection violations (aside from memory access violations) when paging is used, such as the use of instructions not accessible from the <link>
current privilege level</link>.</p>
<p>

While it is theoretically possible for an operating system to utilize both paging and segmentation, for the most part, common operating systems typically rely on paging for the bulk of their memory access control needs.</p>

</ss1>
<ss1>
<st>
Privilege errors</st>

<p>

There are some things on a computer which are reserved for the exclusive use of the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>. If a program which is not part of the operating system attempts to use one of these features, it may cause a general protection fault.</p>
<p>

Additionally, there are storage locations which are reserved both for the operating system and the processor itself. As a consequence of their reservation, they are read-only and an attempt to write <link xlink:type="simple" xlink:href="../040/18985040.xml">
data</link> to them by an unprivileged program is an error.</p>

</ss1>
<sec>
<st>
Technical causes for faults</st>

<p>

General protection faults can occur for several reasons, including:</p>
<p>

<list>
<entry level="1" type="bullet">

 Segment limits exceeded </entry>
<entry level="2" type="bullet">

 with CS, DS, ES, FS, or GS</entry>
<entry level="2" type="bullet">

 accessing descriptor tables (such as the GDT/IDT/LDT)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Segment permissions violated</entry>
<entry level="2" type="bullet">

 jumping to nonexecutable segments</entry>
<entry level="2" type="bullet">

 writing to code or read only segments</entry>
<entry level="2" type="bullet">

 reading execute-only segments</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Segments illegally loaded</entry>
<entry level="2" type="bullet">

 stack segment (SS) loaded with a segment selector for a read only, executable, or null segment</entry>
<entry level="2" type="bullet">

 code segment (CS) loaded with a segment selector for a data or null segment</entry>
<entry level="2" type="bullet">

 SS, DS, ES, FS, GS, loaded with a segment selector for a system segment</entry>
<entry level="2" type="bullet">

 SS, DS, ES, FS, GS, loaded with a segment selector for an execute-only code segment</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Accessing memory using DS, ES, FS, or GS, when they contain a null selector</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Switching (TSS)</entry>
<entry level="2" type="bullet">

 switching to a busy task during a call or jump</entry>
<entry level="2" type="bullet">

 switching to an available task during IRET</entry>
<entry level="2" type="bullet">

 using a segment selector on switch pointing to a TSS descriptor in the LDT</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Miscellaneous</entry>
<entry level="2" type="bullet">

 attempting to access an interrupt/exception handler from v86 mode when the handler's code segment DPL is greater than 0</entry>
<entry level="2" type="bullet">

 attempting to write a 1 into the reserved bits of CR4</entry>
<entry level="2" type="bullet">

 attempting to execute privileged instructions when the current privilege level (CPL) is not zero</entry>
<entry level="2" type="bullet">

 writing to a reserved bit in an MSR</entry>
<entry level="2" type="bullet">

 accessing a gate containing a null segment selector</entry>
<entry level="2" type="bullet">

 executing a software interrupt when the CPL is greater than the DPL set for the interrupt gate</entry>
<entry level="2" type="bullet">

 the segment selector in a call, interrupt or trap gate does not point to a code segment</entry>
<entry level="2" type="bullet">

 exceeding the instruction length of 15 bytes</entry>
<entry level="2" type="bullet">

 violating privilege rules</entry>
<entry level="2" type="bullet">

 enabling paging whilst disabling protection</entry>
<entry level="2" type="bullet">

 referencing IDT following an interrupt or exception that is not an interrupt, trap, or task gate</entry>
</list>
</p>

</sec>
<sec>
<st>
 Notes and references </st>
<p>

<list>
<entry level="1" type="bullet">

<it>Intel Architecture Software Developer's Manual</it>–Volume 3: System Programming</entry>
</list>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link></entry>
</list>
</p>

<ss1>
<st>
 References </st>


<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</ss1>
</sec>
</bdy>
</article>
