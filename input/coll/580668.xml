<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:19:46[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Pollard&apos;s rho algorithm</title>
<id>580668</id>
<revision>
<id>244406409</id>
<timestamp>2008-10-10T17:22:46Z</timestamp>
<contributor>
<username>Giftlite</username>
<id>37986</id>
</contributor>
</revision>
<categories>
<category>Integer factorization algorithms</category>
</categories>
</header>
<bdy>

This article is about the <link xlink:type="simple" xlink:href="../491/15491.xml">
integer factorization</link> algorithm.&#32;&#32;For the <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link> algorithm, see <link xlink:type="simple" xlink:href="../817/1630817.xml">
Pollard's rho algorithm for logarithms</link>.&#32;&#32;<p>

<b>Pollard's rho algorithm</b> is a special-purpose <link xlink:type="simple" xlink:href="../491/15491.xml">
integer factorization</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>. It was invented by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../500/1068500.xml">
John Pollard</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 in 1975. It is particularly effective at splitting composite numbers with small factors.</p>

<sec>
<st>
Core ideas</st>
<p>

The rho algorithm is based on <link>
Floyd's cycle-finding algorithm</link> and on the observation that (as in the <link xlink:type="simple" xlink:href="../242/73242.xml">
birthday paradox</link>) two numbers <it>x</it> and <it>y</it> are congruent modulo <it>p</it> with probability 0.5 after <math>1.177\sqrt{p}</math> numbers have been randomly chosen. If <it>p</it> is a factor of <it>n</it>, the integer we are aiming to factor, then <math>1 &amp;lt; \gcd \left( |x-y|,n \right) \le n</math> since <it>p</it> divides both <math>\left|x-y\right|</math> and <it>n</it>.</p>
<p>

The rho algorithm therefore uses a function modulo <it>n</it> as a generator of a <link xlink:type="simple" xlink:href="../210/23210.xml">
pseudo-random sequence</link>. It runs one sequence twice as "fast" as the other; i.e. for every iteration made by one copy of the sequence, the other copy makes two iterations. Let <it>x</it> be the current state of one sequence and <it>y</it> be the current state of the other. The <link xlink:type="simple" xlink:href="../354/12354.xml">
GCD</link> of |<it>x</it> &amp;minus; <it>y</it>| and <it>n</it> is taken at each step. If this GCD ever comes to <it>n</it>, then the algorithm terminates with failure, since this means <it>x</it> = <it>y</it> and therefore, by Floyd's cycle-finding algorithm, the sequence has cycled and continuing any further would only be repeating previous work.</p>

</sec>
<sec>
<st>
The algorithm</st>
<p>

<b>Inputs</b>: <it>n</it>, the integer to be factored; and <it>f</it>(<it>x</it>), a pseudo-random function modulo <it>n</it></p>
<p>

<b>Output</b>: a non-trivial factor of <it>n</it>, or failure.
<list>
<entry level="1" type="number">

 <it>x</it> &amp;larr; 2, <it>y</it> &amp;larr; 2; <it>d</it> &amp;larr; 1</entry>
<entry level="1" type="number">

 While <it>d</it> = 1:</entry>
<entry level="2" type="number">

 <it>x</it> &amp;larr; <it>f</it>(<it>x</it>)</entry>
<entry level="2" type="number">

 <it>y</it> &amp;larr; <it>f</it>(<it>f</it>(<it>y</it>))</entry>
<entry level="2" type="number">

 <it>d</it> &amp;larr; GCD(|<it>x</it> &amp;minus; <it>y</it>|, <it>n</it>)</entry>
<entry level="1" type="number">

 If <it>d</it> = <it>n</it>, return failure.</entry>
<entry level="1" type="number">

 Else, return <it>d</it>.</entry>
</list>
</p>
<p>

Note that this algorithm will return failure for all prime <it>n</it>, but it can also fail for composite <it>n</it>. In that case, use a different <it>f</it>(<it>x</it>) and try again.</p>

</sec>
<sec>
<st>
Richard Brent's variant</st>
<p>

In 1980, <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../484/872484.xml">
Richard Brent</link></associate>
</mathematician>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
 published a faster variant of the rho algorithm. He used the same core ideas as Pollard, but he used a different method of cycle detection that was faster than Floyd's original algorithm.</p>
<p>

Brent's algorithm is as follows:</p>
<p>

<b>Input</b>: <it>n</it>, the integer to be factored; <it>x</it>0, such that 0 &amp;le; <it>x</it>0 &amp;le; n; <it>m</it> such that <it>m</it> &amp;gt; 0; and <it>f</it>(<it>x</it>), a pseudo-random function modulo <it>n</it>.</p>
<p>

<b>Output</b>: a non-trivial factor of <it>n</it>, or failure.
<list>
<entry level="1" type="number">

 <it>y</it> &amp;larr; <it>x</it>0, <it>r</it> &amp;larr; 1, <it>q</it> &amp;larr; 1.</entry>
<entry level="1" type="number">

 Do:</entry>
<entry level="2" type="number">

 <it>x</it> &amp;larr; <it>y''</it></entry>
<entry level="2" type="number">

 For <it>i</it> = 1 To <it>r</it>:</entry>
<entry level="3" type="number">

 <it>y</it> &amp;larr; <it>f</it>(<it>y</it>)</entry>
<entry level="2" type="number">

<it>k</it> &amp;larr; 0</entry>
<entry level="2" type="number">

 Do:</entry>
<entry level="3" type="number">

 <it>ys</it> &amp;larr; <it>y''</it></entry>
<entry level="3" type="number">

 For <it>i</it> = 1 To min(<it>m</it>, <it>r</it> &amp;minus; <it>k</it>):</entry>
<entry level="4" type="number">

 <it>y</it> &amp;larr; <it>f</it>(<it>y</it>)</entry>
<entry level="4" type="number">

 <it>q</it> &amp;larr; (<it>q</it> &amp;times; |<it>x</it> &amp;minus; <it>y</it>|) mod <it>n''</it></entry>
<entry level="3" type="number">

 <it>g</it> &amp;larr; GCD(<it>q</it>, <it>n</it>)</entry>
<entry level="3" type="number">

 <it>k</it> &amp;larr; <it>k</it> + <it>m''</it></entry>
<entry level="2" type="number">

 Until (<it>k</it> &amp;ge; <it>r</it> or <it>g</it> &amp;gt; 1)</entry>
<entry level="2" type="number">

 <it>r</it> &amp;larr; 2<it>r''</it></entry>
<entry level="1" type="number">

 Until <it>g</it> &amp;gt; 1</entry>
<entry level="1" type="number">

 If <it>g</it> = <it>n</it> then</entry>
<entry level="2" type="number">

 Do:</entry>
<entry level="3" type="number">

 <it>ys</it> &amp;larr; <it>f</it>(<it>ys</it>)</entry>
<entry level="3" type="number">

 <it>g</it> &amp;larr; GCD(|<it>x</it> &amp;minus; <it>ys</it>|, <it>n</it>)</entry>
<entry level="2" type="number">

 Until <it>g</it> &amp;gt; 1</entry>
<entry level="1" type="number">

 If <it>g</it> = <it>n</it> then return failure, else return <it>g''</it></entry>
</list>
</p>

</sec>
<sec>
<st>
In practice</st>
<p>

The algorithm is very fast for numbers with small factors. For example, on a 3&nbsp;GHz workstation, the original rho algorithm found the factor 274177 of the sixth <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../127/91127.xml">
Fermat number</link></difficulty>
</problem>
</state>
</condition>
 (18446744073709551617) in 26 milliseconds; the Richard Brent variant found the same factor in 5 milliseconds.  However, for a <link xlink:type="simple" xlink:href="../542/339542.xml">
semiprime</link> of the same size (10023859281455311421), the same workstation using the original rho algorithm took 109 milliseconds to find a factor; the Richard Brent variant took 31 milliseconds.</p>
<p>

For <it>f</it>, we choose a polynomial with integer coefficients. The most common ones are of the form:</p>
<p>

<indent level="1">

<math>f(x)=x^2+c\hbox{ mod }n,\,c\neq0,-2.</math>
</indent>

The rho algorithm's most remarkable success has been the factorization of the eighth Fermat number by Pollard and Brent. They used Brent's variant of the algorithm, which found a previously unknown prime factor. The complete factorization of <it>F</it>8 took, in total, 2 hours on a <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../173/144173.xml">
UNIVAC</link></institution>
</company>
 <link xlink:type="simple" xlink:href="../147/201147.xml">
1100/42</link>.</p>

</sec>
<sec>
<st>
Example factorization</st>
<p>

Let <it>n</it> = 8051 and <it>f</it>(<it>x</it>) = <it>x</it>2 + 1 mod 8051.</p>

<p>

<table border="1">
<row>
<col width="30">
<it>i''</it></col>
<col width="60">
<it>x</it>
<it>i''</it></col>
<col width="60">
<it>y</it>
<it>i''</it></col>
<col >
<it>x</it>
<it>i</it> &amp;minus; <it>yi</it>|, 8051)</col>
</row>
<row>
<col>
1</col>
<col>
5</col>
<col>
26</col>
<col>
1</col>
</row>
<row>
<col>
2</col>
<col>
26</col>
<col>
7474</col>
<col>
1</col>
</row>
<row>
<col>
3</col>
<col>
677</col>
<col>
871</col>
<col>
97</col>
</row>
</table>
</p>

<p>

97 is a non-trivial factor of 8051. Other values of <it>c</it> may give the cofactor (83) instead of 97.</p>

</sec>
<sec>
<st>
 Complexity </st>

<p>

The algorithm offers a trade-off between its running time and the probability that it finds a factor.
If n is a product of two distinct primes of equal length, running the algorithm for <link xlink:type="simple" xlink:href="../578/44578.xml">
O</link>(n1/4 polylog(n)) steps yields a factor with probability roughly half. (Note that this is a heuristic claim, and rigorous analysis of the algorithm remains open.)</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 J.M. Pollard. "A Monte Carlo method for factorization", BIT Numerical Mathematics 15(3), 1975, pp. 331-334.</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../484/872484.xml">
Richard P. Brent</link></associate>
</mathematician>
</scientist>
</causal_agent>
</colleague>
</person>
</peer>
</physical_entity>
. <it>An Improved Monte Carlo Factorization Algorithm</it>, BIT 20, 1980, pp.176-184,  http://wwwmaths.anu.edu.au/~brent/pd/rpb051i.pdf</entry>
<entry level="1" type="bullet">

 <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Section 31.9: Integer factorization, pp.896&ndash;901 (this section discusses only Pollard's rho algorithm).</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cs.princeton.edu/introcs/78crypto/PollardRho.java.html">
Java Implementation</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible uncollapsed " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../527/21527.xml">
Number-theoretic</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../751/183751.xml">
Primality test</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<b><process wordnetid="105701363" confidence="0.8">
<institute wordnetid="108407330" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<association wordnetid="108049401" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../847/405847.xml">
AKS</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</association>
</thinking>
</inquiry>
</institute>
</process>
</b> · <b><link>
APR</link></b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/3609890.xml">
Ballie-PSW</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><process wordnetid="105701363" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../015/4049015.xml">
ECPP</link></higher_cognitive_process>
</trial>
</shape>
</line>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</curve>
</process>
</b> · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../755/157755.xml">
Fermat</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <b><link>
Lucas–Lehmer</link></b> · <b><it><link>
Lucas–Lehmer (Mersenne numbers)</link></it></b> · <b><it><process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../861/15371861.xml">
Lucas–Lehmer–Riesel</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</it></b> · <b><it><statement wordnetid="106722453" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../985/3225985.xml">
Proth's theorem</link></higher_cognitive_process>
</trial>
</proposition>
</experiment>
</problem_solving>
</theorem>
</thinking>
</inquiry>
</message>
</process>
</statement>
</it></b> · <b><it><link>
Pépin's</link></it></b> · <link>
Solovay–Strassen</link> · <link>
Miller–Rabin</link> · <b><problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
</b></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Sieving algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../920/2150920.xml">
Sieve of Atkin</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/73415.xml">
Sieve of Eratosthenes</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../330/14517330.xml">
Sieve of Sundaram</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
 · <process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<problem_solving wordnetid="105796750" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/4621216.xml">
Wheel factorization</link></higher_cognitive_process>
</trial>
</experiment>
</problem_solving>
</thinking>
</inquiry>
</process>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<premise wordnetid="106753800" confidence="0.8">
<postulate wordnetid="106753299" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/15491.xml">
Integer factorization</link></proposition>
</postulate>
</premise>
</message>
</statement>
algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../392/1335392.xml">
CFRAC</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../877/1033877.xml">
Dixon's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../212/154212.xml">
ECM</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</geographical_area>
</rule>
</event>
</tract>
</location>
</field>
</region>
 · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../069/15822069.xml">
Euler's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/580668.xml">
Pollard's rho</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../753/578753.xml">
P − 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <it><event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../573/1916573.xml">
P + 1</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</it> · <link xlink:type="simple" xlink:href="../340/582340.xml">
QS</link> · <link xlink:type="simple" xlink:href="../734/152734.xml">
GNFS</link> · <it><link xlink:type="simple" xlink:href="../132/589132.xml">
SNFS</link></it> · <link xlink:type="simple" xlink:href="../510/2608510.xml">
rational sieve</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../433/2132433.xml">
Fermat's</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../328/3387328.xml">
Shanks' square forms</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <problem_solving wordnetid="105796750" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<process wordnetid="105701363" confidence="0.8">
<inquiry wordnetid="105797597" confidence="0.8">
<thinking wordnetid="105770926" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<experiment wordnetid="105798043" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<trial wordnetid="105799212" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<higher_cognitive_process wordnetid="105770664" confidence="0.8">
<link xlink:type="simple" xlink:href="../660/557660.xml">
Trial division</link></higher_cognitive_process>
</procedure>
</activity>
</psychological_feature>
</trial>
</act>
</rule>
</experiment>
</event>
</thinking>
</inquiry>
</process>
</algorithm>
</problem_solving>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../674/42674.xml">
Shor's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Other algorithms</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../814/3975814.xml">
Ancient Egyptian multiplication</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../197/4039197.xml">
Aryabhata</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../410/985410.xml">
Binary GCD</link> · <link xlink:type="simple" xlink:href="../658/4050658.xml">
Chakravala</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../377/10377.xml">
Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/99438.xml">
Extended Euclidean</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <link xlink:type="simple" xlink:href="../054/13644054.xml">
integer relation algorithm</link> · <link xlink:type="simple" xlink:href="../655/981655.xml">
integer square root</link> · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/903032.xml">
Modular exponentiation</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 · <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../375/3667375.xml">
Shanks-Tonelli</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</col>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style=";" class="navbox-abovebelow">
<it>Italics</it> indicate that algorithm is for numbers of special forms; <b>bold</b> indicates <link xlink:type="simple" xlink:href="../951/665951.xml">
deterministic algorithm</link>for primality tests.</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
