<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:21:38[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Common Scrambling Algorithm</title>
<id>598735</id>
<revision>
<id>232215499</id>
<timestamp>2008-08-16T00:38:06Z</timestamp>
<contributor>
<username>Kal-El-Bot</username>
<id>6352359</id>
</contributor>
</revision>
<categories>
<category>Cryptographic algorithms</category>
</categories>
</header>
<bdy>

The <b>Common Scrambling Algorithm</b> (or <b>CSA</b>) is the <link xlink:type="simple" xlink:href="../294/10294.xml">
encryption algorithm</link> used in the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../977/146977.xml">
DVB</link></system_of_measurement>
</standard>
 <link xlink:type="simple" xlink:href="../271/8271.xml">
digital television</link> broadcasting for encrypting <link xlink:type="simple" xlink:href="../471/54471.xml">
video stream</link>s.<p>

CSA was specified by <link xlink:type="simple" xlink:href="../452/18934452.xml">
ETSI</link> and adopted by the DVB consortium in May <link xlink:type="simple" xlink:href="../337/18948337.xml">
1994</link>, but was largely kept secret until <link xlink:type="simple" xlink:href="../502/35502.xml">
2002</link>. The patent papers gave some hints but important details, like the layout of the so-called <link>
S-box</link>es, remained secret. Without these free implementations of the algorithm were out of question. Initially, CSA was to remain implemented in <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link> only, and this would have made it difficult to <link xlink:type="simple" xlink:href="../488/18935488.xml">
reverse engineer</link> existing implementations.</p>
<p>

In <link xlink:type="simple" xlink:href="../502/35502.xml">
2002</link> FreeDec was released, implementing CSA in <link xlink:type="simple" xlink:href="../309/5309.xml">
software</link>. Though released as <link xlink:type="simple" xlink:href="../392/217392.xml">
binary</link> only, <link xlink:type="simple" xlink:href="../390/54390.xml">
disassembly</link> revealed the missing details and allowed reimplementation of the algorithm in higher-level <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>s.</p>
<p>

With CSA now publicly known in its entirety, <link xlink:type="simple" xlink:href="../715/5715.xml">
cryptanalyst</link>s started looking for weaknesses. Like other encryption algorithms, a weak spot arises inasmuch that parts of the message are known or at least easily predictable, like <link xlink:type="simple" xlink:href="../055/20055.xml">
MPEG</link> headers. The length of the <link xlink:type="simple" xlink:href="../039/53039.xml">
key</link> is 64 <link xlink:type="simple" xlink:href="../364/3364.xml">
bit</link>s, which  allows for many different possibilities of encryption. A <link xlink:type="simple" xlink:href="../784/53784.xml">
brute force attack</link> taking 1 &#956;s for each try, through all possible key words, would take around 300,000 years, on average. This can be reduced by using the predictable parts of the encrypted message to rule out potential keys.</p>
<p>

While CSA algorithm uses 64-bit keys, in reality only 48 bits of key are unknown, since bytes 3 and 7 are used as checksum bytes, and may be easily recalculated. This fact allows practical space-time tradeoff attack where 32 bits are brute-forced, 16 bits are calculated with memory tables built from ciphertext, and 16 bits calculated as checksum with a <link xlink:type="simple" xlink:href="../578/44578.xml">
running time</link> of O(216)+O(232), which can be less than a second if implemented in FPGA hardware or on scalable architecture like cell processor.</p>
<p>

Were CSA to be broken, encrypted DVB transmissions would be decipherable, regardless of any proprietary conditional access system used. This could seriously compromise paid digital television services, as DVB has been standardised on for <link xlink:type="simple" xlink:href="../303/497303.xml">
digital terrestrial television</link> in Europe and elsewhere, and is used by many satellite television providers. No attack has yet been published, however.</p>

<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cdc.informatik.tu-darmstadt.de/~kwirt/csa.pdf">
Analysis of the DVB Common Scrambling Algorithm</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://csa.irde.to/">
CSA: known facts and speculations</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.videolan.org/developers/libdvbcsa.html">
libdvbcsa: A free implementation of the DVB Common Scrambling Algorithm</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal">Wirt, Kai&#32;(November 2003).&#32;"<weblink xlink:type="simple" xlink:href="http://eprint.iacr.org/2004/289/">
Fault attack on the DVB Common Scrambling Algorithm (Report 2004/289)</weblink>". <it>Cryptology ePrint Archive</it>.</cite>&nbsp;</entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
