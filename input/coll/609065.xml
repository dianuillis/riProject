<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:23:09[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<format  confidence="0.9508927676800064" wordnetid="106636806">
<header>
<title>COM file</title>
<id>609065</id>
<revision>
<id>243840463</id>
<timestamp>2008-10-08T07:48:48Z</timestamp>
<contributor>
<username>DirlBot</username>
<id>8008198</id>
</contributor>
</revision>
<categories>
<category>CP/M</category>
<category>DOS on IBM PC compatibles</category>
<category>Executable file formats</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox file format</name>
<parameters>
<genre>
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/217392.xml">
Executable</link></instrumentality>
</artifact>
</system>
</genre>
<extension>
.COM</extension>
<name>
COM</name>
</parameters>
</template>


".COM" redirects here.&#32;&#32;For the top level internet domain, see <sphere wordnetid="114514039" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../859/222859.xml">
.com</link></sphere>
.  For other uses, see <link xlink:type="simple" xlink:href="../045/4796045.xml">
dot-com</link>.<p>

In many computer operating systems, a <b>COM file</b> is a type of <link xlink:type="simple" xlink:href="../392/217392.xml">
executable file</link>; the name is derived from the <link xlink:type="simple" xlink:href="../957/147957.xml">
file name extension</link> <it>.COM</it>. Originally, the term stood for "Command file", a text file containing commands to be issued to the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> (similar to a <link xlink:type="simple" xlink:href="../146/8146.xml">
DOS</link> <link xlink:type="simple" xlink:href="../030/15264030.xml">
batch file</link>), on many of the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
Digital Equipment Corporation</link></company>
 <link xlink:type="simple" xlink:href="../272/20272.xml">
mini</link> and <link xlink:type="simple" xlink:href="../330/20330.xml">
mainframe</link> operating systems going back to the 1970s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

With the introduction of <link xlink:type="simple" xlink:href="../144/48144.xml">
microcomputer</link>s, the type of files commonly associated with the extension .com changed; in <link xlink:type="simple" xlink:href="../148/45148.xml">
8-bit</link> <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../146/45146.xml">
CP/M</link></O>
, and later in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 and compatible <link xlink:type="simple" xlink:href="../146/8146.xml">
DOS</link>es, they are <link xlink:type="simple" xlink:href="../702/920702.xml">
binary</link> executable files by convention. However, executables in the COM <link xlink:type="simple" xlink:href="../600/18933600.xml">
file format</link> do not have to have the file name extension .COM in any but CP/M and very early versions of MS-DOS. </p>
<p>

The .COM file name extension has no relation to the <sphere wordnetid="114514039" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../859/222859.xml">
.com</link></sphere>
 (for "commercial") top-level Internet domain name. However, this similarity in name has been exploited by malicious computer virus writers.</p>

<sec>
<st>
 MS-DOS binary format</st>
<p>

The COM format is the original binary executable format used in CP/M and MS-DOS.  It is very simple; it has no header, and contains no <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link>, only code and data. Its simplicity exacts a price, however: the <link xlink:type="simple" xlink:href="../307/337307.xml">
binary</link> has a maximum size of 65,280 (0xFF00) bytes (64 <link xlink:type="simple" xlink:href="../755/149755.xml">
KiB</link>) and stores all its <link xlink:type="simple" xlink:href="../537/1067537.xml">
code</link> and <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<link xlink:type="simple" xlink:href="../235/1613235.xml">
data</link></concept>
</idea>
 in one segment.</p>
<p>

Since it lacks <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../963/1938963.xml">
relocation</link></room>
</library>
</area>
</artifact>
</structure>
 information, it is <link xlink:type="simple" xlink:href="../773/483773.xml">
loaded</link> by the operating system at a pre-set address, at offset <link xlink:type="simple" xlink:href="../263/13263.xml">
0x</link>0100, where it is executed. This was not an issue on early <link xlink:type="simple" xlink:href="../148/45148.xml">
8-bit</link> machines because of how the <link xlink:type="simple" xlink:href="../178/150178.xml">
segmentation</link> model works, but it is the main reason why the format fell into disuse soon after the introduction of <link xlink:type="simple" xlink:href="../535/64535.xml">
16-</link> and then <link xlink:type="simple" xlink:href="../733/80733.xml">
32-bit</link> processors with their much larger, <link xlink:type="simple" xlink:href="../131/1323131.xml">
segmented</link> memories. </p>
<p>

In <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/15062.xml">
Intel 8080</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 CPU architecture, only 65,536 bytes of memory could be addressed (address range 0x0000 to 0xFFFF). Under CP/M, the first page of this memory, from 0x0000 to 0x00FF was reserved for system use, and any user program had to be loaded at exactly 0x0100 to be executed. COM files fit this model perfectly. Note that there was no possibility of running more than one program or command at a time: the program loaded at 0x0100 was run, and no other.</p>
<p>

Although the file format is the same in MS-DOS and CP/M, this does not mean that CP/M programs can be directly executed under MS-DOS or vice versa; MS-DOS COM files contain <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> instructions, while CP/M COM files contain <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/15062.xml">
8080</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
, <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../302/97302.xml">
8085</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 or <link xlink:type="simple" xlink:href="../461/34461.xml">
Z80</link> instructions. Additionally, MS-DOS COM files often depend on operating system <link xlink:type="simple" xlink:href="../447/7380447.xml">
traps</link> supplied exclusively by MS-DOS via <link xlink:type="simple" xlink:href="../095/1260095.xml">
interrupt 21h</link>. It is possible to construct a <link xlink:type="simple" xlink:href="../695/595695.xml">
fat</link> COM file which both processor families can execute.</p>
<p>

Under CP/M 3, if the first byte of a COM file is 0xC9 then this indicates the presence of a 256-byte header; since 0xC9 corresponds to the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../062/15062.xml">
8080</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 instruction RET, this means that the COM file will immediately terminate if run on an earlier version of CP/M that does not support this extension.</p>
<p>

Files may have names ending in .COM, but not be in the simple format described above; this is indicated by a <link xlink:type="simple" xlink:href="../996/352996.xml">
magic number</link> at the start of the file. For example, the <link xlink:type="simple" xlink:href="../187/71187.xml">
COMMAND.COM</link> file in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../086/66086.xml">
DR-DOS</link></O>
 6 is actually in <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../753/3645753.xml">
DOS executable</link></format>
 format, indicated by the first two bytes being <it>MZ</it> (0x4D 0x5A), the initials of <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../839/2215839.xml">
Mark Zbikowski</link></scholar>
</employee>
</causal_agent>
</alumnus>
</worker>
</intellectual>
</person>
</physical_entity>
.</p>

</sec>
<sec>
<st>
 Large Programs </st>
<p>

In <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 and compatible <link xlink:type="simple" xlink:href="../146/8146.xml">
DOS</link>es, there is no <link xlink:type="simple" xlink:href="../924/66924.xml">
memory management</link> provided for COM files by the <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../773/483773.xml">
loader</link></room>
</library>
</area>
</artifact>
</structure>
 or execution environment. All memory is simply available to the COM file. After execution, the operating system command shell, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../187/71187.xml">
COMMAND.COM</link></software>
, is reloaded. This leaves the possibilities that the COM file can either be very simple, using a single <link xlink:type="simple" xlink:href="../131/1323131.xml">
segment</link>, or arbitrarily complex, providing its own memory management system. An example of a complex program would be COMMAND.COM, the MS-DOS shell, which provided a loader to load other COM or <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../055/582055.xml">
EXE</link></format>
</information>
</message>
 programs. In the .COM system, larger programs (up to the available memory size) can be loaded and run, but the system loader assumes that all code and data is in the first segment, and it is up to the .COM program to provide any further organisation. Programs larger than available memory, or large <link xlink:type="simple" xlink:href="../235/1613235.xml">
data segment</link>s, can be handled by <link>
dynamic linking</link>, if the necessary code is included in the .COM program. The advantage of using a .COM rather than a .EXE format is that the binary image is usually smaller and easier to program using an <link>
assembler</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> Once <link xlink:type="simple" xlink:href="../739/5739.xml">
compiler</link>s and <link xlink:type="simple" xlink:href="../566/18566.xml">
linker</link>s of sufficient power became available it was no longer advantageous to use the .COM format for complex programs.</p>

</sec>
<sec>
<st>
Execution preference</st>
<p>

In MS-DOS, if a directory contains both a COM file and an <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../055/582055.xml">
EXE</link></format>
</information>
</message>
 file with same name (not including extension), the COM file is preferred. For example, if a directory in the <link xlink:type="simple" xlink:href="../359/19335359.xml">
system path</link> contains two files named foo.com and foo.exe, the following would execute foo.com:</p>
<p>

C:\&amp;gt;foo</p>
<p>

If the user wishes to run foo.exe, they can explicitly use the complete filename:</p>
<p>

C:\&amp;gt;foo.exe</p>
<p>

Taking advantage of this default behaviour, <link xlink:type="simple" xlink:href="../196/18994196.xml">
virus</link> writers and other malicious programmers sometimes use names like notepad.com for their creations, hoping that if it is placed in the directory of the corresponding EXE file, a run command or batch file may accidentally trigger their program instead of the ubiquitous <link xlink:type="simple" xlink:href="../474/143474.xml">
notepad.exe</link> text editor.</p>
<p>

On <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
 and derivatives (<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
, and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
), the PATHEXT variable is used to determine the order of preference (and acceptable extensions) for calling files without specifying the extension from the command line.  The default value still places .com files before .exe files.</p>

</sec>
<sec>
<st>
Platform support</st>
<p>

The format is still <link xlink:type="simple" xlink:href="../392/217392.xml">
executable</link> on many modern <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>-based <link xlink:type="simple" xlink:href="../196/81196.xml">
platforms</link>, but it is run in an MS-DOS-emulating subsystem, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../173/1501173.xml">
NTVDM</link></part>
</causal_agent>
</component>
</concept>
</copycat>
</idea>
</person>
</physical_entity>
, which is not present in <link xlink:type="simple" xlink:href="../285/148285.xml">
64-bit</link> variants. COM files can also be executed on DOS emulators such as <work wordnetid="100575741" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<plan wordnetid="105898568" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<undertaking wordnetid="100795720" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../149/946149.xml">
DOSBox</link></activity>
</psychological_feature>
</act>
</undertaking>
</event>
</plan>
</idea>
</work>
, on any platform supported by these emulators.</p>

</sec>
<sec>
<st>
Malicious usage of the .com extension</st>
<p>

Some computer virus writers have hoped to take advantage of modern computer users' likely lack of knowledge of the .com file extension and associated binary format, along with their more likely familiarity with the <sphere wordnetid="114514039" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../859/222859.xml">
.com</link></sphere>
 Internet domain name.  E-mail has been sent with attachment names similar to "www.example.com".  Unwary <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> users clicking on such an attachment would expect to begin browsing a site named http://www.example.com/, but instead would run the attached binary command file named www.example, giving it full permission to do to their machine whatever its author had in mind.</p>
<p>

Note that there is nothing malicious about the COM file format itself; this is an exploitation of the coincidental name collision between .com <it>com</it>mand files and .com <it>com</it>mercial web sites.</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.skrenta.com/pdpbook.txt">
This site</weblink> has a reference book for the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../309/69309.xml">
RT-11</link></O>
 operating system running on the <link xlink:type="simple" xlink:href="../399/24399.xml">
PDP-11</link> minicomputer, which shows in section 5.3 that .COM is used to refer to a command file</entry>
<entry id="2">
 <cite id="Reference-Scanlon-1991" style="font-style:normal" class="book">Scanlon, Leo J.&#32;(1991).&#32;"ch. 2", Assembly Language Subroutines for MS-DOS, 2nd,&#32;Windcrest Books,&#32;pg. 16. ISBN 083067649X.</cite>&nbsp;</entry>
</reflist>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../392/217392.xml">
Executable</link></instrumentality>
</artifact>
</system>
 <link xlink:type="simple" xlink:href="../600/18933600.xml">
file format</link>s</header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../325/328325.xml">
COFF</link></format>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../065/609065.xml">
COM</link></format>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../480/9605480.xml">
ECOFF</link></format>
 &nbsp;·  <link xlink:type="simple" xlink:href="../914/9914.xml">
ELF</link> &nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../251/13853251.xml">
Hunk</link></format>
</information>
</message>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../222/694222.xml">
Mach-O</link></format>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../753/3645753.xml">
MZ</link></format>
 &nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<format wordnetid="106636806" confidence="0.8">
<link xlink:type="simple" xlink:href="../005/2864005.xml">
NE</link></format>
</information>
</message>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../063/65063.xml">
PE</link></format>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../240/694240.xml">
PEF</link></format>
 &nbsp;·  <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../364/337364.xml">
XCOFF</link></format>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</format>
</article>
