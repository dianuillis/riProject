<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:07:40[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Distributed minimum spanning tree</title>
<id>6183392</id>
<revision>
<id>214858199</id>
<timestamp>2008-05-25T16:39:13Z</timestamp>
<contributor>
<username>Andreas Kaufmann</username>
<id>72502</id>
</contributor>
</revision>
<categories>
<category>Spanning tree</category>
</categories>
</header>
<bdy>

The <b>distributed minimum spanning tree</b> problem involves the construction of a <link xlink:type="simple" xlink:href="../795/41795.xml">
minimum spanning tree</link> by a <link xlink:type="simple" xlink:href="../202/3367202.xml">
distributed algorithm</link>, in a network where nodes communicate by message passing.  It is radically different from the classical sequential problem, although the most basic approach resembles <link>
Borůvka's algorithm</link>.<p>

The problem was first suggested and solved in <math>O(V \log V)</math> time in 1983 by Gallagher et al <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>. Later the solution was improved to <math>O(V)</math>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and finally
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>
<math>O(\sqrt V \log^* V + D)</math> 
where <it>D</it> is the network, or graph diameter. Lower bound on the time complexity of the solution has been eventually shown to be
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref>
<math>\Omega\left({\frac{\sqrt V}{\log V}}\right).</math></p>

<sec>
<st>
 Model </st>

<p>

The input graph <math>G(V,E)</math> is considered to be a network, where vertices <math>V</math> are independent computing nodes and edges <math>E</math> are communication links. Links are weighted as in the classical problem.</p>
<p>

At the beginning of the algorithm, nodes know only the weights of the links which are connected to them. (It is possible to consider models in which they know more, for example their neighbors' links.) </p>
<p>

As the output of the algorithm, every node knows which of its links belong to the Minimum Spanning Tree and which do not.</p>

</sec>
<sec>
<st>
 Applications </st>

<p>

Ethernet switches use a distributed minimum spanning tree algorithm to construct a loop-free topology. See <link xlink:type="simple" xlink:href="../761/98761.xml">
spanning tree protocol</link>.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
Robert G. Gallager, Pierre A. Humblet, and P. M. Spira, "A distributed algorithm for minimum-weight spanning trees," ACM TOPLAS,vol.5, no. 1, pp. 66--77, January 1983.</entry>
<entry id="2">
Baruch Awerbuch. Optimal Distributed Algorithms for Minimum Weight Spanning Tree, Counting, Leader Election, and Related Problems. Proceedings of the 19th Annual ACM Symposium on Theory of Computing (STOC), New York City, New York, May 1987.
</entry>
<entry id="3">
Juan Garay, Shay Kutten and David Peleg, "A Sub-Linear Time Distributed Algorithm for Minimum-Weight Spanning Trees (Extended Abstract)", IEEE Symposium on Foundations of Computer Science, 1993.</entry>
<entry id="4">
David Peleg and Vitaly Rubinovich “A near tight lower bound on the time complexity of Distributed Minimum Spanning Tree Construction”, SIAM Journal of Computing, 2000, and IEEE Foundations of Computer Science (FOCS) Symposium, 1999.</entry>
</reflist>
</p>


</sec>
</bdy>
</article>
