<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:19:30[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Karatsuba algorithm</title>
<id>6395589</id>
<revision>
<id>241724623</id>
<timestamp>2008-09-29T08:05:01Z</timestamp>
<contributor>
<username>Jorge Stolfi</username>
<id>48742</id>
</contributor>
</revision>
<categories>
<category>Multiplication</category>
<category>Arbitrary precision algorithms</category>
</categories>
</header>
<bdy>

The <b>Karatsuba</b> <link xlink:type="simple" xlink:href="../411/57411.xml">
multiplication algorithm</link>, a technique for quickly multiplying large numbers, was discovered by <link>
Anatolii Alexeevich Karatsuba</link> in 1960 and published in the joint paper with Yu. Ofman in 1962. It reduces the multiplication of two <it>n</it>-digit numbers to <math>n^{\log_23}\approx n^{1.585}</math> single-digit multiplications. This makes it faster than the <link xlink:type="simple" xlink:href="../411/57411.xml">
classical</link> algorithm, which requires <it>n</it>2 single-digit products.  If <it>n</it> = 210 = 1024, for example, the counts are 310 = 59,049 and (210)2 = 1,048,576, respectively. <p>

The <link>
Toom-Cook algorithm</link> is a faster generalization of Karatsuba's.  For sufficiently large <it>n</it>, Karatsuba's algorithm is beaten by the <link>
Schönhage-Strassen algorithm</link>.</p>
<p>

The Karatsuba algorithm is a notable example of the <link xlink:type="simple" xlink:href="../154/201154.xml">
divide and conquer</link> paradigm, specifically of <link xlink:type="simple" xlink:href="../251/4226251.xml">
binary splitting</link>.</p>

<sec>
<st>
Algorithm</st>


<ss1>
<st>
The basic step</st>
<p>

The basic step of Karatsuba's algorithm is a formula that allows us to compute the product of two large numbers <it>x</it> and <it>y</it> using three multiplications of smaller numbers,  each with about half as many digits as <it>x</it> or <it>y</it>, plus some additions and digit shifts. </p>
<p>

Let <it>x</it> and <it>y</it> be represented as <it>n</it>-digit strings in some <link xlink:type="simple" xlink:href="../207/701207.xml">
base</link> <it>B</it>. For any positive integer <it>m</it> less than <it>n</it>, one can split the two given numbers as follows</p>
<p>

<indent level="1">

<it>x</it> = <it>x</it>1<it>Bm</it> + <it>x</it>0
</indent>
:<it>y</it> = <it>y</it>1<it>Bm</it> + <it>y</it>0</p>
<p>

where <it>x</it>0 and <it>y</it>0 are less than <it>Bm</it>. The product is then</p>
<p>

<indent level="1">

<it>xy</it> = (<it>x</it>1<it>Bm</it> + <it>x</it>0)(<it>y</it>1<it>Bm</it> + <it>y</it>0)
</indent>
::= <it>z</it>2 <it>B</it>2<it>m</it> + <it>z</it>1 <it>Bm</it> + <it>z</it>0</p>
<p>

where </p>
<p>

<indent level="1">

<it>z</it>2 = <it>x</it>1<it>y</it>1
</indent>
:<it>z</it>1 = <it>x</it>1<it>y</it>0 + <it>x</it>0<it>y</it>1
<indent level="1">

<it>z</it>0 = <it>x</it>0<it>y</it>0
</indent>

These formulas require four multiplications.  Karatsuba observed that we can compute <it>xy</it> in only three multiplications, at the cost of a few extra additions:</p>
<p>

<indent level="1">

Let <it>z</it>2 = <it>x</it>1<it>y</it>1
</indent>
:Let <it>z</it>0 = <it>x</it>0<it>y</it>0
<indent level="1">

Let <it>z</it>1 = (<it>x</it>1 + <it>x</it>0)(<it>y</it>1 + <it>y</it>0) - <it>z2</it> - <it>z0</it>
</indent>

since</p>
<p>

<indent level="1">

<it>z</it>1 = (<it>x</it>1<it>y</it>1 + <it>x</it>1<it>y</it>0 + <it>x</it>0<it>y</it>1 + <it>x</it>0<it>y</it>0) - <it>x</it>1<it>y</it>1 - <it>x</it>0<it>y</it>0 = <it>x</it>1<it>y</it>0 + <it>x</it>0<it>y</it>1
</indent>

</p>
</ss1>
<ss1>
<st>
Example</st>
<p>

Say we want to compute the product of 1234 and 5678. We choose <it>B</it> = 10 and <it>m</it> = 2. We have</p>
<p>

<indent level="1">

12 34 = 12 × 102 + 34
</indent>
:56 78 = 56 × 102 + 78
<indent level="1">

<it>z</it>2 = 12 × 56 = 672
</indent>
:<it>z</it>0 = 34 × 78 = 2652
<indent level="1">

<it>z</it>1 = (12 + 34)(56 + 78) - <it>z</it>2 - <it>z</it>0 = 46 × 134 - 672 - 2652 = 2840
</indent>
:result = <it>z</it>2 × 102×2 + <it>z</it>1 × 102 + <it>z</it>0 = 672 0000 + 2840 00 + 2652 = <b>7006652</b></p>

</ss1>
<ss1>
<st>
Recursive application</st>
<p>

If <it>n</it> is four or more, the three multiplications in Karatsuba's basic step involve operands with less than <it>n</it> digits.  Therefore, those  products can be computed by <link xlink:type="simple" xlink:href="../407/25407.xml">
recursive</link> calls of the Karatsuba algorithm. The recursion can be applied until the numbers are so small that they can (or must) be computed directly.</p>
<p>

In a computer with a full 32-bit by 32-bit <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<electrical_device wordnetid="103269401" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<circuit wordnetid="103033362" confidence="0.8">
<link xlink:type="simple" xlink:href="../898/285898.xml">
multiplier</link></circuit>
</device>
</electrical_device>
</instrumentality>
</artifact>
, for example, one could choose <it>B</it> = 231 = 2,147,483,648 or <it>B</it> = 109 = 1,000,000,000, and store each digit as a separate 32-bit binary word.  Then the sums <it>x</it>1 + <it>x</it>0 and <it>y</it>1 + <it>y</it>0 will not need an extra carry-over digit (as in <link xlink:type="simple" xlink:href="../178/4337178.xml">
carry-save adder</link>), and the the Karatsuba recursion can be applied until the numbers are only 1 digit long.</p>

</ss1>
</sec>
<sec>
<st>
Efficiency analysis</st>
<p>

Karatsuba's basic step works for any base <it>B</it> and any <it>m</it>, but the recursive algorithm is most efficient when, and <it>m</it> is equal to <it>n</it>/2, rounded up.  In particular, if <it>n</it> is 2<it>k</it>, for some integer <it>k</it>, and the recursion stops only when <it>n</it> is 1, then the number of single-digit multiplications is 3<it>k</it>, which is <it>nc</it> where <it>c</it> = log23.</p>
<p>

Since one can extend any inputs with zero digits until their length is a power of two, it follows that the number of elementary multiplications, for any <it>n</it>, is at most <math>3^{ \lceil\log_2 n \rceil} \leq 3 n^{\log_2 3}</math>.</p>
<p>

Since the additions, subtractions, and digit shifts (multiplications by powers of <it>B</it>) in Karasuba's basic step take time proportional to <it>n</it>, their cost of all becomes negligible as <it>n</it> increases.  More precisely, if <it>t</it>(<it>n</it>) denotes the total number of elementary operations that the algorithm performs when multiplying two <it>n</it>-digit numbers, then we can write</p>
<p>

<indent level="1">

<it>t</it>(<it>n</it>) = 3 <it>t</it>(<math>\lceil</math><it>n</it>/2<math>\rceil</math>) + <it>cn</it> + <it>d</it>
</indent>

for some constants <it>c</it> and <it>d</it>.  For this <link xlink:type="simple" xlink:href="../806/146806.xml">
recurrence relation</link>, the <link xlink:type="simple" xlink:href="../585/561585.xml">
master theorem</link> gives the <link xlink:type="simple" xlink:href="../578/44578.xml">
asymptotic</link> bound <it>t</it>(<it>n</it>) = Θ(<it>n</it>log(3)/log(2)).  </p>
<p>

It follows that, for sufficiently large <it>n</it>, Karatsuba's algorithm will perform <it>fewer</it> shifts and single-digit additions than longhand multiplication, even though its basic step uses <it>more</it> additions and shifts than the straightforward formula.  For small values of <it>n</it>, however, the extra shift and add operations may make it run slower than the longhand method.  The point of positive return depends on the <link xlink:type="simple" xlink:href="../196/81196.xml">
computer platform</link> and context.  As a rule of thumb, Karatsuba is usually faster when <it>n</it> is 10 or more <weblink xlink:type="simple" xlink:href="http://gmplib.org/manual/Karatsuba-Multiplication.html">
http://gmplib.org/manual/Karatsuba-Multiplication.html</weblink><weblink xlink:type="simple" xlink:href="http://ozark.hendrix.edu/~burch/proj/karat/comment1.html">
http://ozark.hendrix.edu/~burch/proj/karat/comment1.html</weblink></p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 A. Karatsuba and Yu Ofman, <it>Multiplication of Many-Digital Numbers by Automatic Computers.</it> Doklady Akad. Nauk SSSR, Vol. 145 (1962), pp. 293–294. Translation in Physics-Doklady, 7 (1963), pp. 595&ndash;596.</entry>
<entry level="1" type="bullet">

 Karacuba A. A. <it>Berechnungen und die Kompliziertheit von Beziehungen (German).</it> Elektron.  Informationsverarb.  Kybernetik, 11, 603–606 (1975).</entry>
<entry level="1" type="bullet">

 Karatsuba A. A. <it>The complexity of computations.</it> Proc. Steklov Inst. Math., 211, 169–183 (1995); translation from Trudy Mat. Inst. Steklova, 211, 186–202 (1995).</entry>
<entry level="1" type="bullet">

 Knuth D.E. <it>The art of computer programming. v.2.</it> Addison-Wesley Publ.Co., 724 pp., Reading (1969).</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://mathworld.wolfram.com/KaratsubaMultiplication.html">
Karatsuba Multiplication on MathWorld</weblink></entry>
<entry level="1" type="bullet">

Bernstein, D. J., "<weblink xlink:type="simple" xlink:href="http://cr.yp.to/papers/m3.pdf">
Multidigit multiplication for mathematicians</weblink>". Covers Karatsuba and many other multiplication algorithms.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.ccas.ru/personal/karatsuba/divcen.htm">
Karatsuba Multiplication on Fast Algorithms and the FEE</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.saahiihii.com/storyPage.php?lang=ENU&amp;country=DK&amp;region=&amp;orderBy=MostRecent&amp;period=All&amp;type=Business&amp;businessNo=1354&amp;memberID=enkya&amp;page=DOCUMENT&amp;section=EDUCATION&amp;story=2&amp;action=card">
Karatsuba Multiplication using Squares of a Difference</weblink></entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://utilitymill.com/utility/Karatsuba_Multiplication">
Karatsuba multiplication Algorithm - Web Based Calculator (GPL)</weblink></entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
