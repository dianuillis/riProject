<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:29:07[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>Greedoid</title>
<id>666526</id>
<revision>
<id>199492372</id>
<timestamp>2008-03-20T01:31:14Z</timestamp>
<contributor>
<username>Hans Adler</username>
<id>5773149</id>
</contributor>
</revision>
<categories>
<category>Combinatorial optimization</category>
<category>Combinatorics</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../170/5170.xml">
combinatorics</link>, a <b>greedoid</b> is a type of <link xlink:type="simple" xlink:href="../535/232535.xml">
set system</link>. It rises from the notion of the <link xlink:type="simple" xlink:href="../321/244321.xml">
matroid</link>, which was originally introduced by <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../794/391794.xml">
Whitney</link></scientist>
 in 1935 to study <link xlink:type="simple" xlink:href="../314/24314.xml">
planar graph</link>s and was later used by Edmonds to characterize a class of optimization problems that can be solved by <link xlink:type="simple" xlink:href="../247/89247.xml">
greedy algorithm</link>s. Around 1980, Korte and <link>
Lovász</link> introduced the greedoid to further generalize this characterization of greedy algorithms; hence the name greedoid. Besides <link xlink:type="simple" xlink:href="../033/52033.xml">
mathematical optimization</link>, greedoids have also been connected to <link xlink:type="simple" xlink:href="../401/12401.xml">
graph theory</link>, language theory, <link xlink:type="simple" xlink:href="../572/23572.xml">
poset</link> theory, and other <link xlink:type="simple" xlink:href="../579/1337579.xml">
areas of mathematics</link>.
<sec>
<st>
 Basic examples </st>

<p>

Most classes of greedoid have many equivalent definitions in terms of set system, language, poset, <link xlink:type="simple" xlink:href="../686/252686.xml">
simplicial complex</link>, and so on. The following description takes the traditional route of listing only a couple of the more well-known characterizations.</p>
<p>

A <b>set system</b> (<it>F</it>, E) is a collection <it>F</it> of <link xlink:type="simple" xlink:href="../631/27631.xml">
subset</link>s of a ground set E (i.e. <it>F</it> is a subset of the <link xlink:type="simple" xlink:href="../799/23799.xml">
power set</link> of E). When considering a greedoid, a member of <it>F</it> is called a <b>feasible set</b>. When considering a <link xlink:type="simple" xlink:href="../321/244321.xml">
matroid</link>, a feasible set is also known as an <it>independent set</it>.</p>
<p>

An <b>accessible set system</b> (<it>F</it>, E) is a set system in which every nonempty feasible set X contains an element x such that X\{x} is feasible.
This implies that any nonempty, <link xlink:type="simple" xlink:href="../742/11742.xml">
finite</link> accessible set system necessarily contains the <link xlink:type="simple" xlink:href="../566/9566.xml">
empty set</link> ∅.</p>
<p>

A <b>greedoid</b> (<it>F</it>, E) is an accessible set system that satisfies the <it>exchange property</it>:</p>
<p>

<list>
<entry level="1" type="bullet">

 for all X,Y ∈ <it>F</it> with |X| &amp;gt; |Y|, there is some x ∈ X such that Y∪{x} ∈ <it>F''</it></entry>
</list>
</p>
<p>

<it>Note:  Some people reserve the term </it>exchange property<it> for a condition on the bases of a greedoid, and prefer to call the above condition the “Augmentation Property”.</it></p>
<p>

An <b>interval greedoid</b> (<it>F</it>, E) is a greedoid that satisfies the <it>Interval Property</it>:</p>
<p>

<list>
<entry level="1" type="bullet">

 if A, B, C ∈ <it>F</it> with A ⊆ B ⊆ C, then, for all x ∈ E\C,  (A∪{x} ∈ <it>F</it> and C∪{x} ∈ <it>F</it>) implies B∪{x} ∈ <it>F''</it></entry>
</list>
</p>
<p>

Equivalently, an interval greedoid is a greedoid such that the union of any two feasible sets is feasible if it is contained in another feasible set.</p>
<p>

An <b><link xlink:type="simple" xlink:href="../063/667063.xml">
antimatroid</link></b> (<it>F</it>, E) is a greedoid that satisfies the <it>Interval Property without Upper Bounds</it>:</p>
<p>

<list>
<entry level="1" type="bullet">

 if A, B ∈ <it>F</it> with A ⊆ B, then, for all x ∈ E\B, A∪{x} ∈ <it>F</it> implies B∪{x} ∈ <it>F''</it></entry>
</list>
</p>
<p>

Equivalently, an antimatroid is (i) a greedoid with a unique basis; or (ii) an accessible set system closed under union.  It is easy to see that an antimatroid is also an interval greedoid.</p>
<p>

A <b><link xlink:type="simple" xlink:href="../321/244321.xml">
matroid</link></b> (<it>F</it>, E) is a greedoid that satisfies the <it>Interval Property without Lower Bounds</it>:</p>
<p>

<list>
<entry level="1" type="bullet">

 if B, C ∈ <it>F</it> with B ⊆ C, then, for all x ∈ E\C, C∪{x} ∈ <it>F</it> implies B∪{x} ∈ <it>F''</it></entry>
</list>
</p>
<p>

It is easy to see that a matroid is also an interval greedoid.</p>
<p>

<it>Example 1</it>.
Consider an undirected <link xlink:type="simple" xlink:href="../806/325806.xml">
graph</link> G.  Let the ground set be the edges of G and the feasible sets be the edge set of each <it>forest</it> (i.e. subgraph containing no cycle) of G.
This set system is called the <b>cycle matroid</b>.
A set system is said to be a <b>graphic matroid</b> if it is the cycle matroid of some graph.
(Originally cycle matroid was defined on <b>circuits</b>, or minimal <it>dependent sets</it>.
Hence the name cycle.)</p>
<p>

<it>Example 2</it>.
Consider a finite, undirected graph G rooted at the vertex r.
Let the ground set be the vertices of G and the feasible sets be the vertex subsets containing r that induce connected subgraphs of G.
This is called the <b>vertex search greedoid</b> and is a kind of antimatroid.</p>
<p>

<it>Example 3</it>.
Consider a finite, <link xlink:type="simple" xlink:href="../986/19721986.xml">
directed graph</link> D rooted at r.  Let the ground set be the (directed) edges of D and the feasible sets be the edge sets of each directed subtree rooted at r with all edges pointing away from r.  This is called the <b>line search greedoid</b>, or <b>directed branching greedoid</b>.  It is an interval matroid, but neither an antimatroid nor a matroid.</p>
<p>

<it>Example 4</it>.
Consider an m-by-n <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> M.  Let the ground set E be the indices of the columns from 1 to n and the feasible sets be <it>F</it> = {X ⊆ E: submatrix M{1,...,|X|},X is an <link xlink:type="simple" xlink:href="../122/217122.xml">
invertible matrix</link>}.
This is called the <b>Gaussian elimination greedoid</b> because this structure underlies the <link xlink:type="simple" xlink:href="../035/13035.xml">
Gaussian elimination</link> algorithm.  It is a greedoid, but not an interval greedoid.</p>

</sec>
<sec>
<st>
 Greedy algorithm </st>

<p>

In general, a <link xlink:type="simple" xlink:href="../247/89247.xml">
greedy algorithm</link> is just an iterative process in which a <it>locally best choice</it>, usually an input of minimum weight, is chosen each round until all available choices have been exhausted.
In order to describe a greedoid-based condition in which a greedy algorithm is optimal, we need some more common terminologies in greedoid theory.
<link xlink:type="simple" xlink:href="../000/296000.xml">
Without loss of generality</link>, we consider a greedoid G = (<it>F</it>, E) with E finite.</p>
<p>

A <b>basis</b> of a greedoid is a maximal feasible set, meaning it is a feasible set but not contained in any other one.  A basis of a subset X of E is a maximal feasible set contained in X.</p>
<p>

The <b>rank</b> of a greedoid is the size of a basis.
By the exchange property, all bases have the same size.
Thus, the rank function is <link xlink:type="simple" xlink:href="../456/253456.xml">
well-defined</link>.  The rank of a subset X of E is the size of a basis of X.</p>
<p>

A subset X of E is <b>rank feasible</b> if the largest intersection of X with any feasible set has size equal to the rank of X.
In a matroid, every subset of E is rank feasible.
But the equality does not hold for greedoids in general.</p>
<p>

A function w: E → ℜ is <b><it>R</it></b><b>-compatible</b> if {x ∈ E: w(x) ≥ c} is rank feasible for all <link xlink:type="simple" xlink:href="../491/19725491.xml">
real number</link>s c.</p>
<p>

An objective function f: 2S → ℜ is <b>linear</b> over a set S if, for all X ⊆ S, we have f(X) = Σx ∈ X w(x) for some <link xlink:type="simple" xlink:href="../523/245523.xml">
weight function</link> w: S → ℜ.</p>
<p>

<b>Proposition.</b>  A greedy algorithm is optimal for every <b><it>R</it></b>-compatible linear objective function over a greedoid.</p>
<p>

We will not discuss the full proof here. The intuition is that, during the iterative process, each optimal exchange of minimum weight is made possible by the exchange property, and optimal results are obtainable from the feasible sets in the underlying greedoid. In any case, this is a general and useful result as it guarantees the optimality of many well-known algorithms.</p>
<p>

<it>Example 5</it>. Consider an undirected graph in which every edge is weighted by a nonnegative real number, and its associated cycle matroid. Then a <it>minimum spanning forest</it>, meaning a forest including all vertices with minimum total weight, can be obtained using <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../776/53776.xml">
Kruskal's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. Or, equivalently, we can apply the greedy algorithm over the negative weight sum of each feasible set of the associated matroid.</p>
<p>

<it>Example 6</it>. Consider a connected, rooted, directed graph, in which every directed edge is weighted by a nonnegative real number, and its associated directed branching greedoid. Then a <it>shortest path</it>, meaning a path with minimum total weight, can be obtained using <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../809/45809.xml">
Dijkstra's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
. Or, equivalently, we can apply the greedy algorithm over the negative weight sum of each feasible set of the associated greedoid.</p>
<p>

These examples show that matroids are often a good match for situations in which ordering is unimportant, as in an unrooted, undirected graph. However, if ordering is important, as in a rooted or directed graph, then a more general structure like a greedoid is needed. But greedoids, too, rely on the objective function being linear. If this condition is not satisfied, for example if the objective function requires extra inputs such as time in addition to weights, then even greedoids would fall short.</p>
<p>

Unfortunately, not all optimization problems can be solved by greedy algorithms. New frontiers of problems solvable by greedy algorithm remain to be explored. For example, an even more general result based on <link xlink:type="simple" xlink:href="../426/735426.xml">
matroid embedding</link> has been proposed.</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 <cite id="CITEREFBj.C3.B6rnerZiegler1992" style="font-style:normal">Björner, Anders&#32;&amp;&#32;<link>
Ziegler, Günter M.</link>&#32;(1992),&#32;"Introduction to greedoids", in&#32;White, Neil,&#32;<it>Matroid Applications</it>, Cambridge, UK: Cambridge University Press</cite>&nbsp;.</entry>
<entry level="1" type="bullet">

 <cite id="CITEREFEdmonds1971" style="font-style:normal"><link>
Edmonds, Jack</link>&#32;(1971),&#32;"Matroids and the greedy algorithm",&#32;<it>Mathematical Programming</it>&#32;<b>1</b>:  127–113</cite>&nbsp;.</entry>
<entry level="1" type="bullet">

 <cite id="CITEREFHelmanMoretShapiro1993" style="font-style:normal">Helman, Paul; Moret, Bernard M. E.&#32;&amp;&#32;Shapiro, Henry D.&#32;(1993),&#32;"An exact characterization of greedy structures",&#32;<it>SIAM J. Discrete Math.</it>&#32;<b>6</b>(2):  274–283</cite>&nbsp;.</entry>
<entry level="1" type="bullet">

 <cite id="CITEREFKorteLov.C3.A1sz1981" style="font-style:normal">Korte, Bernard&#32;&amp;&#32;<link>
Lovász, László</link>&#32;(1981),&#32;"Mathematical structures underlying greedy algorithms", in&#32;Gecseg, F.,&#32;<it>Fundamentals of Computation Theory: Proceedings of the 1981 International FCT-Conference, Szeged, Hungaria, August 24-28, 1981</it>, Lecture Notes in Computer Science, <b>117</b>, Berlin: Springer-Verlag, pp. 205–209</cite>&nbsp;.</entry>
<entry level="1" type="bullet">

 <cite id="CITEREFKorteLov.C3.A1szSchrader1991" style="font-style:normal">Korte, Bernard; <link>
Lovász, László</link>&#32;&amp;&#32;Schrader, Rainer&#32;(1991),&#32;<it>Greedoids</it>, New York, Berlin: <link xlink:type="simple" xlink:href="../949/1418949.xml">
Springer-Verlag</link></cite>&nbsp;.</entry>
<entry level="1" type="bullet">

 <cite id="CITEREFWhitney1935" style="font-style:normal"><link>
Whitney, Hassler</link>&#32;(1935),&#32;"On the abstract properties of linear independence",&#32;<it><periodical wordnetid="106593296" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../680/4977680.xml">
American Journal of Mathematics</link></periodical>
</it>&#32;<b>57</b>:  509–533</cite>&nbsp;.</entry>
</list>
</p>


</sec>
</bdy>
</entity>
</article>
