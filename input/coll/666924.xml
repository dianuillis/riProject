<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:29:09[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<work  confidence="0.8" wordnetid="100575741">
<event  confidence="0.8" wordnetid="100029378">
<service  confidence="0.8" wordnetid="100577525">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<activity  confidence="0.8" wordnetid="100407535">
<header>
<title>Service-oriented architecture</title>
<id>666924</id>
<revision>
<id>244411711</id>
<timestamp>2008-10-10T17:52:27Z</timestamp>
<contributor>
<username>Mrego</username>
<id>739105</id>
</contributor>
</revision>
<categories>
<category>All pages needing cleanup</category>
<category>Articles lacking reliable references from June 2008</category>
<category>Service-oriented (business computing)</category>
<category>Wikify from June 2008</category>
<category>All pages needing to be wikified</category>
<category>Semi-protected</category>
<category>Cleanup from June 2008</category>
<category>Enterprise application integration</category>
<category>Articles with specifically-marked weasel-worded phrases</category>
<category>Web services</category>
</categories>
</header>
<bdy>

<image width="150px" src="">

</image>


<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_content.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <p>

This article or section has multiple issues. Please help <b><weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Service-oriented_architecture&amp;action=edit">
improve the article</weblink></b> or discuss these issues on the .
<list>
<entry level="1" type="bullet">

 It needs <b>additional  for .</b> Tagged since June 2008.</entry>
<entry level="1" type="bullet">

 It may need to be <b>
Articles that need to be wikified|wikified</b> to meet Wikipedia's . Tagged since July 2008.</entry>
<entry level="1" type="bullet">

 It may require general  to meet Wikipedia's . Tagged since June 2008.</entry>
</list>
</p>
</col>
</row>
</table>
</p>

<p>

<b>Service-oriented architecture </b> (<b>SOA</b>) is a method for <link xlink:type="simple" xlink:href="../565/27565.xml">
systems development</link> and <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../385/8576385.xml">
integration</link></instrumentality>
</artifact>
</system>
 where functionality is grouped around <link xlink:type="simple" xlink:href="../977/342977.xml">
business process</link>es and packaged as <link xlink:type="simple" xlink:href="../285/41285.xml">
<it>interoperable''</it></link> <link xlink:type="simple" xlink:href="../740/5747740.xml">
<it>services''</it></link>. SOA also <link xlink:type="simple" xlink:href="../564/8064564.xml">
describes</link> IT infrastructure which allows different applications to exchange data with one another as they participate in <link xlink:type="simple" xlink:href="../977/342977.xml">
business process</link>es. The aim is a <it>loose coupling</it> of services with operating systems, programming languages and other technologies which underlie applications.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>  SOA separates functions into distinct units, or services, which are made accessible over a network in order that they can be combined and reused in the production of business applications.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> These services communicate with each other by passing data from one service to another, or by coordinating an activity between two or more services. SOA concepts are often seen as built upon, and evolving from older concepts of <link xlink:type="simple" xlink:href="../501/8501.xml">
distributed computing</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> and <link xlink:type="simple" xlink:href="../133/939133.xml">
modular programming</link>.</p>

<sec>
<st>
Description</st>

<ss1>
<st>
Overview</st>

<p>

<image location="right" width="150px" src="SOA_Detailed_Diagram.png" type="thumb">
<caption>

A Service-Oriented Architecture
</caption>
</image>

Companies have long sought to integrate existing systems in order to implement <link xlink:type="simple" xlink:href="../340/15340.xml">
information technology</link> (IT) support for business processes that cover all present and prospective systems requirements needed to run the business end-to-end. A variety of designs can be used to this end, ranging from rigid point-to-point <link xlink:type="simple" xlink:href="../790/9790.xml">
electronic data interchange</link> (EDI) interactions to web auctions. By updating older technologies, such as Internet-enabling EDI-based systems, companies can make their IT systems available to internal or external customers; but the resulting systems have not proven to be flexible enough to meet business demands.
A flexible, standardized architecture is required to better support the connection of various applications and the sharing of data.  <b>SOA</b> is one such architecture. It unifies business processes by structuring large applications as an ad hoc collection of smaller modules called services. These applications can be used by different groups of people both inside and outside the company, and new applications built from a mix of services from the global pool exhibit greater flexibility and uniformity. One should not, for example, have to provide redundantly the same personal information to open an online checking, savings or <link xlink:type="simple" xlink:href="../055/402055.xml">
IRA</link> account, and further, the interfaces one interacts with should have the same look and feel and use the same level and type of input data validation. Building all applications from the same pool of services makes achieving this goal much easier and more deployable to affiliate companies. An example of this might be interacting with a rental car company's reservation system even though you are doing so from an airline's reservation system.</p>
<p>

Service Oriented Architecture (SOA) is a design framework for realizing rapid and low-cost system development and improving total system quality. SOA uses the Web services standards and technologies and is rapidly becoming a standard approach for enterprise information systems. Web services face significant challenges because of particular requirements. There are many problems that are to be addressed when applying the SOA paradigm to a real-time system, which include response time, support of event-driven, asynchronous parallel applications, complicated human interface support, reliability, etc. This article explains what SOA is, followed by detailed discussion on several issues that arise when SOA is applied to industrial systems.</p>

</ss1>
<ss1>
<st>
Introduction</st>

<p>

Service-oriented architecture (SOA) Definition :
A service-oriented architecture can be defined as a group of services, which communicate with each other. The process of communication involves either simple data passing or it could involve two or more services coordinating some activity. Some means of connecting services to each other is needed.</p>
<p>

SOAs build applications out of software services. Services are intrinsically unassociated units of functionality, which have no calls to each other embedded in them. They typically implement functionalities most humans would recognize as a service, such as filling out an online application for an account, viewing an online bank statement, or placing an online booking or airline ticket order. Instead of services embedding calls to each other in their source code, protocols are defined which describe how one or more services can talk to each other. This architecture then relies on a business process expert to link and sequence services, in a process known as <link xlink:type="simple" xlink:href="../737/679737.xml">
orchestration</link>, to meet a new or existing business system requirement.</p>
<p>

Relative to typical practices of earlier attempts to promote software reuse via modularity of functions, or by use of predefined groups of functions known as classes, SOA's atomic-level objects are often 100 to 1,000 times larger, and are associated by an application designer or engineer using orchestration. In the process of orchestration, relatively large chunks of software functionality (services) are associated in a non-hierarchical arrangement (in contrast to a class hierarchy) by a software engineer, or process engineer, using a special software tool which contains an exhaustive list of all of the services, their characteristics, and a means to record the designer's choices which the designer can manage and the software system can consume and use at run-time.</p>
<p>

Underlying and enabling all of this is <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link> which is sufficient to describe not only the characteristics of these services, but also the data that drives them. <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../138/34138.xml">
XML</link></format>
 has been used extensively in SOA to create data which is wrapped in a nearly exhaustive description container. Analogously, the services themselves are typically described by <link xlink:type="simple" xlink:href="../790/4030790.xml">
WSDL</link>, and communications protocols by <link xlink:type="simple" xlink:href="../215/29215.xml">
SOAP</link>. Whether these description languages are the best possible for the job, and whether they will remain the favorites in the future, is an open question. What is certain is that SOA is utterly dependent on data and services that are described using some implementation of metadata which meets the following two criteria: the metadata must be in a form which software systems can use to configure themselves dynamically by discovery and incorporation of defined services, and also to maintain coherence and integrity. The metadata must also be in a form which system designers can understand and manage at a reasonable cost and effort.</p>
<p>

The goal of SOA is to allow fairly large chunks of functionality to be strung together to form ad hoc applications which are built almost entirely from existing software services. The larger the chunks, the fewer the interface points required to implement any given set of functionality; however, very large chunks of functionality may not be granular enough to be easily reused. Each interface brings with it some amount of processing overhead, so there is a performance consideration in choosing the granularity of services.  The great promise of SOA is that the <link xlink:type="simple" xlink:href="../499/325499.xml">
marginal cost</link> of creating the n-th application is zero, as all of the software required already exists to satisfy the requirements of other applications. Only orchestration is required to produce a new application. </p>
<p>

The key is that there are no interactions between the chunks specified within the chunks themselves.  Instead, the interaction of services (all of which are unassociated peers) is specified by humans in a relatively ad hoc way with the intent driven by newly emergent business requirements.  Thus the need for services to be much larger units of functionality than traditional functions or classes, lest the sheer complexity of thousands of such granular objects overwhelm the application designer. The services themselves are developed using traditional languages like <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../196/2356196.xml">
C#</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
, <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 or <link xlink:type="simple" xlink:href="../799/6799.xml">
COBOL</link>.</p>
<p>

SOA services are <link xlink:type="simple" xlink:href="../470/1639470.xml">
loosely coupled</link>, in contrast to the functions a linker binds together to form an <link xlink:type="simple" xlink:href="../392/217392.xml">
executable</link>, a <link>
dynamically linked library</link>, or an assembly.  SOA services also run in "safe" wrappers such as <link>
Java</link> or <link>
.NET</link>, and other programming languages that manage memory allocation and reclamation, allow ad hoc and late binding, and provide some degree of indeterminate <link xlink:type="simple" xlink:href="../817/93817.xml">
data typing</link>. </p>
<p>

Increasing numbers of third-party software companies are offering software services for a fee. In the future, SOA systems may consist of such third-party services combined with others created in-house.  This has the potential to spread costs over many customers, and customer uses, and promotes standardization both in and across industries.  In particular, the travel industry now has a well-defined and documented set of both services and data, sufficient to allow any reasonably competent software engineer to create travel agency software using entirely off-the-shelf software services. Other industries, such as the finance industry, are also making significant progress in this direction.</p>
<p>

SOA is an architecture that relies on <link xlink:type="simple" xlink:href="../034/4953034.xml">
service-orientation</link> as its fundamental design principle.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> In a SOA environment, independent services can be accessed without knowledge of their underlying platform implementation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref></p>
<p>

SOA relies on services exposing their functionality via interfaces which other applications and services read to understand how the service can be utilized.</p>

</ss1>
<ss1>
<st>
Requirements</st>
<p>

In order to efficiently use a SOA, one must meet the following requirements: </p>
<p>

<list>
<entry level="1" type="bullet">

Interoperability between different systems and programming languages provides the basis for integration between applications on different platforms through  a communication protocol. One example of such communication is based on the concept of <link xlink:type="simple" xlink:href="../836/429836.xml">
messages</link>. Using messages across defined message channels decreases the complexity of the end application thereby allowing the developer of the application to focus on true application functionality instead of the intricate needs of a communication protocol.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Desire to create a federation of resources. Establish and maintain data flow to a <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../246/1270246.xml">
federated data warehouse</link></instrumentality>
</artifact>
</system>
. This allows new functionality developed to reference a common business format for each data element.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
Principles</st>
<p>

The following <b>guiding principles</b> define the ground rules for development, maintenance, and usage of the SOA:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>
<indent level="1">

</indent>
*Reuse, <link xlink:type="simple" xlink:href="../684/792684.xml">
granularity</link>, <link xlink:type="simple" xlink:href="../133/939133.xml">
modularity</link>, composability, componentization, portability, and <link xlink:type="simple" xlink:href="../285/41285.xml">
interoperability</link>
<list>
<entry level="1" type="bullet">

Standards compliance (both common and industry-specific)</entry>
<entry level="1" type="bullet">

Services identification and categorization, provisioning and delivery, and monitoring and tracking</entry>
</list>
</p>
<p>

The following <b>specific architectural principles</b> for design and service definition focus on specific themes that influence the intrinsic behaviour of a system and the style of its design:
<list>
<entry level="1" type="bullet">

<b>Service <link xlink:type="simple" xlink:href="../301/10301.xml">
encapsulation</link></b> - Many web-services are consolidated to be used under the SOA Architecture. Often such services have not been planned to be under SOA.</entry>
<entry level="1" type="bullet">

<b>Service <link xlink:type="simple" xlink:href="../470/1639470.xml">
loose coupling</link></b> - Services maintain a relationship that minimizes dependencies and only requires that they maintain an awareness of each other</entry>
<entry level="1" type="bullet">

<b><link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Service+contract%22])">
Service contract</link></b> - Services adhere to a communications agreement, as defined collectively by one or more service description documents</entry>
<entry level="1" type="bullet">

<b>Service abstraction</b> - Beyond what is described in the service contract, services hide logic from the outside world</entry>
<entry level="1" type="bullet">

<b>Service reusability</b> - Logic is divided into services with the intention of promoting reuse</entry>
<entry level="1" type="bullet">

<b>Service composability</b> - Collections of services can be coordinated and assembled to form composite services</entry>
<entry level="1" type="bullet">

<b>Service autonomy</b> – Services have control over the logic they encapsulate</entry>
<entry level="1" type="bullet">

<b>Service optimization</b> – All else equal, high-quality services are generally considered preferable to low-quality ones</entry>
<entry level="1" type="bullet">

<b><message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../577/1239577.xml">
Service discoverability</link></rule>
</direction>
</protocol>
</message>
</b> – Services are designed to be outwardly descriptive so that they can be found and assessed via available discovery mechanisms<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
</list>
</p>
<p>

The following references provide additional considerations for defining a SOA implementation:
<list>
<entry level="1" type="bullet">

SOA Reference Architecture provides a working design of an enterprise-wide SOA implementation with detailed architecture diagrams, component descriptions, detailed requirements, design patterns, opinions about standards, patterns on regulation compliance, standards templates etc.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="1" type="bullet">

Life cycle management <weblink xlink:type="simple" xlink:href="http://www.soablueprint.com/whitepapers/SOAPGPart3.pdf">
SOA Practitioners Guide Part 3: Introduction to Services Lifecycle</weblink> introduces the Services Lifecycle and provides a detailed process for services management though the service lifecycle, from inception through to retirement or repurposing of the services. It also contains an appendix that includes organization and governance best practices, templates, comments on key SOA standards, and recommended links for more information.</entry>
</list>
</p>
<p>

In addition, the following factors should be taken into account when defining a SOA implementation:
<list>
<entry level="1" type="bullet">

Efficient use of system resources</entry>
<entry level="1" type="bullet">

Service maturity and performance</entry>
<entry level="1" type="bullet">

EAI <link xlink:type="simple" xlink:href="../555/842555.xml">
Enterprise Application Integration</link></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Web services approach </st>
<p>

<link xlink:type="simple" xlink:href="../483/93483.xml">
Web service</link>s can be used to implement a service-oriented architecture. A major focus of Web services is to make functional building blocks accessible over standard Internet protocols that are independent from platforms and programming languages. These services can be new applications or just wrapped around existing legacy systems to make them network-enabled. </p>
<p>

Each SOA building block can play one or more of two roles: 
<list>
<entry level="1" type="bullet">

Service providerThe service provider creates a <link xlink:type="simple" xlink:href="../483/93483.xml">
Web service</link> and possibly publishes its interface and access information to the service registry. Each provider must decide which services to expose, how to make trade-offs between security and easy availability, how to price the services, or, if they are free, how to exploit them for other value. The provider also has to decide what category the service should be listed in for a given broker service and what sort of trading partner agreements are required to use the service.Its registry what services are available with in it. It list all the  potential service requester. The implementer of the broker decides about the scope of the broker. Public brokers are available through the Internet, while private brokers are only accessible to a limited audience, for example, users of a company intranet. Furthermore, the amount of the offered information has to be decided. Some brokers specialize in many listings. Others offer high levels of trust in the listed services. Some cover a broad landscape of services and others focus within an industry. There are also brokers that catalog other brokers. Depending on the business model, brokers can attempt to maximize look-up requests, number of listings or accuracy of the listings. The <link xlink:type="simple" xlink:href="../694/158694.xml">
Universal Description Discovery and Integration</link> (UDDI) specification defines a way to publish and discover information about Web services. Other service broker technologies include for example <link xlink:type="simple" xlink:href="../996/176996.xml">
ebXML</link> (Electronic Business using eXtensible Markup Language) and those based on the <information wordnetid="105816287" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<datum wordnetid="105816622" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../128/2372128.xml">
ISO/IEC 11179</link></system_of_measurement>
</datum>
</standard>
</information>
 Metadata Registry (MDR) standard.List all the services provided by various service providers.</entry>
<entry level="1" type="bullet">

Service requesterThe service requester or Web service client locates entries in the broker registry using various find operations and then binds to the service provider in order to invoke one of its Web services.This Brokers will look for services. Which service they need they have to took into the Brokers then bind with respective service then use it. They can access multiple, if the service provide multiple services.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
SOA and web service protocols</st>

<p>

A SOA is commonly built using <link xlink:type="simple" xlink:href="../483/93483.xml">
Web service</link>s standards (e.g., using <link xlink:type="simple" xlink:href="../215/29215.xml">
SOAP</link>) that have gained broad industry acceptance.  These standards (also referred to as <link xlink:type="simple" xlink:href="../658/480658.xml">
Web Service specifications</link>) also provide greater interoperability and some protection from lock-in to proprietary vendor software. One can, however, implement SOA using any service-based technology, such as <link xlink:type="simple" xlink:href="../398/185398.xml">
Jini</link>, <link xlink:type="simple" xlink:href="../799/4096799.xml">
CORBA</link> or <word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../222/907222.xml">
REST</link></language_unit>
</neologism>
</part>
</word>
.</p>

</ss1>
<ss1>
<st>
Other SOA concepts</st>

<p>

Architecture is not tied to a specific technology.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> It may be implemented using a wide range of technologies, including <link xlink:type="simple" xlink:href="../215/29215.xml">
SOAP</link>, <link xlink:type="simple" xlink:href="../222/907222.xml">
REST</link>, <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../346/26346.xml">
RPC</link></rule>
</direction>
</protocol>
</message>
, <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/93492.xml">
DCOM</link></part>
</causal_agent>
</worker>
</component>
</assistant>
</concept>
</idea>
</model>
</person>
</physical_entity>
, <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../285/43285.xml">
CORBA</link></part>
</component>
</concept>
</idea>
, <link xlink:type="simple" xlink:href="../483/93483.xml">
Web Services</link> or <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../012/2429012.xml">
WCF</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
 (Microsoft's implementation of Webservice is a part of <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../012/2429012.xml">
WCF</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
).  SOA can be implemented using one or more of these protocols and, for example, might use a file system mechanism to communicate data conforming to a defined interface specification between processes conforming to the SOA concept.  The key is independent services with defined interfaces that can be called to perform their tasks in a standard way, without a service having foreknowledge of the calling application, and without the application having or needing knowledge of how the service actually performs its tasks.</p>
<p>

<image location="right" width="150px" src="SOA_Diagram.png" type="thumb">
<caption>

Simple SOA diagram
</caption>
</image>
</p>
<p>

<image location="right" width="150px" src="SOA_Elements.png" type="thumb">
<caption>

Elements of SOA, by Dirk Krafzig, Karl Banke, and Dirk Slama. Enterprise SOA. Prentice Hall, 2005
</caption>
</image>
</p>
<p>

<image location="right" width="150px" src="SOA_Metamodel.svg" type="thumb">
<caption>

SOA Meta Model, The Linthicum Group, 2007
</caption>
</image>
</p>
<p>

<image location="right" width="150px" src="SOMF_V_1.1.jpg" type="thumb">
<caption>

Service-Oriented Modeling Framework (SOMF) Version 1.1
</caption>
</image>
 </p>
<p>

SOA can also be regarded as a style of information systems architecture that enables the creation of applications that are built by combining <link xlink:type="simple" xlink:href="../470/1639470.xml">
loosely coupled</link> and <link xlink:type="simple" xlink:href="../285/41285.xml">
interoperable</link> services<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref>. These services inter-operate based on a formal definition (or contract, e.g., <link xlink:type="simple" xlink:href="../790/4030790.xml">
WSDL</link>) that is independent of the underlying platform and programming language. The interface definition <link xlink:type="simple" xlink:href="../501/79501.xml">
hides the implementation</link> of the language-specific service.  SOA-based systems can therefore be independent of development technologies and platforms (such as <link>
Java</link>, <link>
.NET</link> etc). Services written in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../196/2356196.xml">
C#</link></programming_language>
 running on .NET platforms and services written in Java running on <message wordnetid="106598915" confidence="0.8">
<model wordnetid="105890249" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<hypothesis wordnetid="105888929" confidence="0.8">
<link xlink:type="simple" xlink:href="../869/42869.xml">
Java EE</link></hypothesis>
</request>
</concept>
</idea>
</model>
</message>
 platforms, for example, can both be consumed by a common composite application (or client).  Applications running on either platform can also consume services running on the other as Web services, which facilitates reuse. Many COBOL legacy systems can also be wrapped by a managed environment and presented as a software service. This has allowed the useful life of many core legacy systems to be extended indefinitely no matter what language they were originally written in. </p>
<p>

SOA can support integration and consolidation activities within complex <work wordnetid="100575741" confidence="0.8">
<examination wordnetid="100635850" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<survey wordnetid="100644503" confidence="0.8">
<investigation wordnetid="100633864" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../049/1448049.xml">
enterprise</link></activity>
</psychological_feature>
</act>
</investigation>
</survey>
</event>
</examination>
</work>
 systems, but SOA does not specify or provide a methodology or <link xlink:type="simple" xlink:href="../145/1173145.xml">
framework</link> for documenting capabilities or services.</p>
<p>

<link xlink:type="simple" xlink:href="../842/189842.xml">
High-level language</link>s such as <link xlink:type="simple" xlink:href="../947/334947.xml">
BPEL</link> and specifications such as <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<standard wordnetid="107260623" confidence="0.8">
<description wordnetid="106724763" confidence="0.8">
<specification wordnetid="106725067" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../227/16837227.xml">
WS-CDL</link></system_of_measurement>
</language>
</specification>
</description>
</standard>
</message>
</statement>
 and <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<description wordnetid="106724763" confidence="0.8">
<specification wordnetid="106725067" confidence="0.8">
<link xlink:type="simple" xlink:href="../299/2539299.xml">
WS-Coordination</link></specification>
</description>
</message>
</statement>
 extend the service concept by providing a method of defining and supporting <link xlink:type="simple" xlink:href="../737/679737.xml">
orchestration</link> of fine grained services into more coarse-grained business services, which in turn can be incorporated into workflows and business processes implemented in <link xlink:type="simple" xlink:href="../933/4415933.xml">
composite applications</link> or <artifact wordnetid="100021939" confidence="0.8">
<portal wordnetid="103985684" confidence="0.8">
<way wordnetid="104564698" confidence="0.8">
<access wordnetid="102671062" confidence="0.8">
<entrance wordnetid="103290771" confidence="0.8">
<link xlink:type="simple" xlink:href="../773/5016773.xml">
portals</link></entrance>
</access>
</way>
</portal>
</artifact>
.</p>
<p>

The use of <link xlink:type="simple" xlink:href="../013/3546013.xml">
Service Component Architecture</link> (SCA) to implement SOA is a current area of research.</p>
<p>

How can a SOA address interoperability and reusability challenges of our computing environments and simplify the heterogeneous business and technological landscapes that we have been building for decades? SOA introduces another concept to help practitioners to understand their complex environments by modeling practices. These disciplines are introduced by the <link xlink:type="simple" xlink:href="../175/12943175.xml">
Service-Oriented Modeling</link> paradigm <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>, a SOA framework that identifies the various disciplines that guide SOA practitioners to conceptualize, analyze, design, and architect their service-oriented assets. Thus, the Service-Oriented Modeling Framework (SOMF) is a work structure, a "map" depicting the various components that contribute to a successful service-oriented modeling approach. It illustrates the major elements that identify the “what to do” aspects of a service development scheme. These are the modeling pillars that will enable practitioners to craft an effective project plan and to identify the milestones of a service-oriented initiative—either a small project or large-scale business or a technological venture. SOMF also provides a common language, a modeling notation to address one of the major intrinsic collaboration requirements of our times: alignment between business and IT organizations. This crucial vocabulary, if employed, can also illustrate the following SOA principles:
<list>
<entry level="1" type="bullet">

Business Traceability</entry>
<entry level="1" type="bullet">

Architectural Best-Practices Traceability</entry>
<entry level="1" type="bullet">

Technological Traceability</entry>
<entry level="1" type="bullet">

SOA Value Proposition</entry>
<entry level="1" type="bullet">

Software Assets Reuse</entry>
<entry level="1" type="bullet">

SOA Integration Strategies</entry>
<entry level="1" type="bullet">

Technological Abstraction and Generalization</entry>
<entry level="1" type="bullet">

Architectural Components Abstraction</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 "<weblink xlink:type="simple" xlink:href="http://www.modelingconcepts.com/pdf/SOMF_ANALYSIS_MODELING.pdf">
Service-Oriented Modeling Framework (SOMF) Example</weblink>".</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 "<weblink xlink:type="simple" xlink:href="http://www.modelingconcepts.com/pages/download.htm">
Download SOMF Examples &amp; Language Notation</weblink>".</entry>
</list>
</p>

</ss1>
<ss1>
<st>
SOA definitions</st>

<p>

SOA is a design for linking computational resources (principally applications and data) on demand to achieve the desired results for service consumers (which can be end users or other services). OASIS (the <link xlink:type="simple" xlink:href="../842/177842.xml">
Organization for the Advancement of Structured Information Standards</link>) defines SOA as the following:</p>
<p>

<it>A paradigm for organizing and utilizing distributed capabilities that may be under the control of different ownership domains. It provides a uniform means to offer, discover, interact with and use capabilities to produce desired effects consistent with measurable preconditions and expectations.</it></p>
<p>

There are multiple definitions of SOA, The <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../842/177842.xml">
OASIS</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
 group and the <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../819/57819.xml">
Open Group</link></system_of_measurement>
</standard>
 have created formal definitions with depth which can be applied to both the technology and business domains. </p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Open Group SOA Definition</link> (SOA-Definition)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../779/8436779.xml">
OASIS SOA Reference Model</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
 (SOA-RM)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></entry>
</list>
</p>
<p>

In addition, SOA is an approach to architecture whereby business services are the key organizing principles that drive the design of IT to be aligned with business needs.</p>

</ss1>
<ss1>
<st>
Service contract</st>
<p>
 
A service contract needs to have the following components: 
<list>
<entry level="1" type="bullet">

Header</entry>
<entry level="2" type="bullet">

Name - Name of the service.  Should indicate in general terms what it does, but not be the only definition</entry>
<entry level="2" type="bullet">

Version - The version of this service contract</entry>
<entry level="2" type="bullet">

Owner - The person/team in charge of the service</entry>
<entry level="2" type="bullet">

<link xlink:type="simple" xlink:href="../673/3181673.xml">
RACI</link></entry>
<entry level="3" type="bullet">

Responsible - The role/person/team responsible for the deliverables of this contract/service.  All versions of the contract</entry>
<entry level="3" type="bullet">

Accountable - Ultimate Decision Maker in terms of this contract/service</entry>
<entry level="3" type="bullet">

Consulted - Who must be consulted before action is taken on this contract/service.  This is 2-way communication.  These people have an impact on the decision and/or the execution of that decision.</entry>
<entry level="3" type="bullet">

Informed - Who must be informed that a decision or action is being taken.  This is a 1-way communication.  These people are impacted by the decision or execution of that decision, but have no control over the action.</entry>
<entry level="2" type="bullet">

Type - This is the type of the service to help distinguish the layer in which it resides. Different implementations will have different service types. Examples of service types include:</entry>
<entry level="3" type="bullet">

Presentation</entry>
<entry level="3" type="bullet">

Process</entry>
<entry level="3" type="bullet">

Business</entry>
<entry level="3" type="bullet">

Data</entry>
<entry level="3" type="bullet">

Integration</entry>
<entry level="1" type="bullet">

Functional</entry>
<entry level="2" type="bullet">

Functional Requirement (from Requirements Document) - Indicates the functionality in specific bulleted items what exactly this service accomplishes.  The language should be such that it allows test cases to prove the functionality is accomplished.</entry>
<entry level="2" type="bullet">

Service Operations - Methods, actions etc.  Must be defined in terms of what part of the Functionality it provides.</entry>
<entry level="2" type="bullet">

Invocation - Indicates the invocation means of the service. This includes the URL, interface, etc.  There may be multiple Invocation paths for the same service.  We may have the same functionality for an internal and external clients each with a different invocation means and interface. Examples:</entry>
<entry level="3" type="bullet">

<link xlink:type="simple" xlink:href="../215/29215.xml">
SOAP</link></entry>
<entry level="3" type="bullet">

<word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../222/907222.xml">
REST</link></language_unit>
</neologism>
</part>
</word>
</entry>
<entry level="3" type="bullet">

Events Triggers</entry>
<entry level="1" type="bullet">

Non-Functional</entry>
<entry level="2" type="bullet">

Security Constraints - Defines who can execute this service in terms of roles or individual partners, etc. and which invocation mechanism they can invoke.</entry>
<entry level="2" type="bullet">

Quality of Service - Determines the allowable failure rate</entry>
<entry level="2" type="bullet">

Transactional - Is this capable of acting as part of a larger transaction and if so, how do we control that?</entry>
<entry level="2" type="bullet">

Service Level Agreement - Determines the amount of latency the service is allowed to have to perform its actions</entry>
<entry level="2" type="bullet">

Semantics - Dictates or defines the meaning of terms used in the description and interfaces of the service</entry>
<entry level="2" type="bullet">

Process - Describes the process, if any, of the contracted service</entry>
</list>
</p>

</ss1>
<ss1>
<st>
SOA and Business Architecture</st>
<p>

One area where SOA has been gaining ground is in its power as a mechanism for defining business services<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref> and operating models (e.g., <link xlink:type="simple" xlink:href="../866/16737866.xml">
Business-Agile Enterprise</link>) and thus provide a structure for IT to deliver against the actual business requirements and adapt in a similar way to the business.  The purpose of using SOA as a business mapping tool is to ensure that the services created properly represent the business view and are not just what technologists think the business services should be. At the heart of SOA planning is the process of defining architectures for the use of information in support of the business, and the plan for implementing those architectures <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref>. Enterprise Business Architecture should always represent the highest and most dominant architecture. Every service should be created with the intent to bring value to the business in some way and must be traceable back to the business architecture.</p>
<p>

Within this area, SOMA (<link xlink:type="simple" xlink:href="../144/13527144.xml">
service-oriented modeling and architecture</link><weblink xlink:type="simple" xlink:href="http://www.amazon.com/dp/0132353741">
http://www.amazon.com/dp/0132353741</weblink><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>) was announced by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 as the first publicly announced SOA-related methodology in 2004. Since then, efforts have been made to move towards greater standardization and the involvement of business objectives, particularly within the <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../842/177842.xml">
OASIS</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
 standards group and specifically the <weblink xlink:type="simple" xlink:href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=soa-blueprints">
SOA Adoption Blueprints</weblink> group. All of these approaches take a fundamentally structured approach to SOA, focusing more on the Services and Architecture elements and leaving implementation to the more technically focused standards.  Another pertinent example is <link xlink:type="simple" xlink:href="../340/5738340.xml">
SAP Enterprise Services Architecture</link>, which is focused on a strict governance process and the use of semantics to improve the usefulness of services in business process innovation.</p>

</ss1>
<ss1>
<st>
SOA and network management architecture</st>
<p>

The principles of SOA are currently being applied to the field of <link xlink:type="simple" xlink:href="../410/41410.xml">
network management</link>. Examples of service-oriented network management architectures are TS 188 001 <it>NGN Management OSS Architecture</it> from <link xlink:type="simple" xlink:href="../452/18934452.xml">
ETSI</link>, and M.3060 <it>Principles for the Management Of Next Generation Networks</it> recommendation from the <link xlink:type="simple" xlink:href="../744/14744.xml">
ITU-T</link>.</p>
<p>

Tools for managing SOA infrastructure include: </p>
<p>

<list>
<entry level="1" type="bullet">

 <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../163/8774163.xml">
HyPerformix IPS Performance Optimizer</link></company>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../112/867112.xml">
HP Management Software / Mercury SOA Manager</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../389/2568389.xml">
IBM Tivoli Framework</link></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
Discussion</st>

<ss1>
<st>
Benefits</st>

<p>

<link xlink:type="simple" xlink:href="../823/5269823.xml">
Enterprise architect</link>s believe that SOA can help businesses respond more quickly and cost-effectively to changing market conditions<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref> 
. This style of <b>architecture</b> promotes reuse at the macro(service) level rather than micro(classes) level. It can also simplify interconnection to - and usage of - existing IT (legacy) assets.</p>
<p>

In some respects, SOA can be considered an architectural evolution rather than a revolution and captures many of the <link xlink:type="simple" xlink:href="../228/805228.xml">
best practice</link>s of previous software architectures. In communications systems, for example, there has been little development of solutions that use truly static bindings to talk to other equipment in the network. By formally embracing a SOA approach, such systems are better positioned to stress the importance of well-defined, highly inter-operable interfaces.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>
<p>

Some have questioned whether SOA is just a revival of modular programming (1970s), event-oriented design (1980s) or interface/component-based design (1990s). SOA promotes the goal of separating users (consumers) from the service implementations. Services can therefore be run on various distributed platforms and be accessed across networks. This can also maximize reuse of services.</p>
<p>

SOA is an architectural and design discipline conceived to achieve the goals of increased interoperability (information exchange, reusability, and composability), increased federation (uniting resources &amp; apps while maintaining their individual autonomy &amp; self-governance), and increased business &amp; technology domain alignment.</p>
<p>

Service-Oriented Architecture (SOA) is an architectural approach (or style) for constructing complex software-intensive systems from a set of universally interconnected and interdependent building blocks, called services. </p>
<p>

SOA realizes its business and IT benefits through utilizing an analysis and design methodology when creating services that ensures they are consistent with the architectural vision &amp; roadmap and adhere to principles of service-orientation. Arguments supporting the business and management aspects from SOA are outlined in various publications. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></p>
<p>

A service is a stand-alone unit of functionality which is available only via a formally defined interface. Services can be some kind of "nano-enterprises" which are easy to produce and improve. Also services can be "mega-corporations" which are constructed as coordinated work of sub-ordinate services .</p>
<p>

Services generally adhere to the following principles of service-orientation: formal contract, loose coupling, abstraction, reusability, autonomy, statelessness, discoverability, and composability.</p>

</ss1>
<ss1>
<st>
Challenges faced in SOA adoption</st>
<p>

One obvious and common challenge faced is managing <b>services <link xlink:type="simple" xlink:href="../632/18933632.xml">
metadata</link></b>. SOA-based environments can include many services which exchange messages to perform tasks. Depending on the design, a single application may generate millions of messages. Managing and providing information on how services interact is a complicated task. This becomes even more complicated when these services are delivered by different organizations within the company or even different companies (partners, suppliers, etc). This creates huge trust issue across teams, and hence SOA Governance comes into picture. </p>
<p>

Second biggest challenge is the <b>lack of testing</b> in SOA space. There are no sophisticated tools that provide testability of all headless services (including message and database services along with web services) in a typical architecture. Lack of horizontal trust requires that both producers and consumers test services on a continuous basis. SOA's main goal is to deliver Agility to Businesses. Therefore it is important to invest in a testing framework (build or buy) that would provide you with the visibility required to find the culprit in your architecture in no time. </p>
<p>

Another challenge is providing <b>appropriate levels of security</b>. Security models built into an application may no longer be appropriate when the capabilities of the application are exposed as services that can be used by other applications. That is, application-managed security is not the right model for securing services. A number of new technologies and standards are emerging to provide more appropriate models for security in SOA. See <link xlink:type="simple" xlink:href="../210/8479210.xml">
SOA Security</link> entry for more info.</p>
<p>

As SOA and the <link xlink:type="simple" xlink:href="../658/480658.xml">
WS-* specifications</link> are constantly being expanded, updated and refined, there is a shortage of skilled people to work on SOA based systems, including the integration of services and construction of services infrastructure.</p>
<p>

<b>Interoperability</b> is another important aspect in the SOA implementations. The WS-I organization has developed Basic Profile (BP) and Basic Security Profile (BSP) to enforce compatibility.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref> Testing tools have been designed by WS-I to help assess whether web services are conformant with WS-I profile guidelines. Additionally, another Charter has been established to work on the Reliable Secure Profile.</p>
<p>

There is significant <b>vendor hype</b> concerning SOA that can create expectations that may not be fulfilled.  Product stacks are still evolving as early adopters test the development and runtime products with real world problems.  SOA does not guarantee reduced IT costs, improved systems agility or faster time to market. Successful SOA implementations may realize some or all of these benefits depending on the quality and relevance of the system architecture and design.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>

</ss1>
<ss1>
<st>
Criticisms of SOA</st>
<p>

Some criticisms<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref> of SOA are based on the assumption that SOA is just another term for <link xlink:type="simple" xlink:href="../483/93483.xml">
Web Services</link>.  For example, some critics&#91;&#93; claim SOA results in the addition of XML layers introducing XML parsing and composition.  In the absence of native or binary forms of <link xlink:type="simple" xlink:href="../346/26346.xml">
Remote Procedure Call</link> (RPC) applications could <b>run slower</b> and require <b>more processing power</b>, increasing costs.  Most implementations do incur these overheads, but SOA can be implemented using technologies (for example, <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/2790415.xml">
Java Business Integration</link></request>
</message>
 (JBI)) which do not depend on remote procedure calls or translation through XML. At the same time, there are emerging, open-source XML parsing technologies, such as <b><software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../284/10447284.xml">
VTD-XML</link></software>
,</b> and various XML-compatible binary formats that promise to significantly improve the SOA performance<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2223%22])">23</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2224%22])">24</ref>. </p>
<p>

Stateful services require both the consumer and the provider to share the same consumer-specific context, which is either included in or referenced by messages exchanged between the provider and the consumer. The drawback of this constraint is that it could reduce the overall scalability of the service provider because it might need to remember the shared context for each consumer. It also increases the coupling between a service provider and a consumer and makes switching service providers more difficult. </p>
<p>

Another concern is that <b>WS-* standards and products are still evolving</b> (e.g., transaction, security), and SOA can thus introduce new risks unless properly managed and estimated with additional budget and contingency for additional <link xlink:type="simple" xlink:href="../668/608668.xml">
Proof of Concept</link> work.</p>
<p>

Some critics&#91;&#93; feel SOA is merely an obvious evolution of currently well-deployed architectures (open interfaces, etc).</p>
<p>

A SOA being an architecture is the first stage of representing the system components that interconnect for the benefit of the business. At this level a SOA is just an evolution of an existing architecture and business functions. SOAs are normally associated with interconnecting back end transactional systems that are accessed via web services.</p>
<p>

The real issue with any IT "architecture" is how one defines the information management model and operations around it that deal with information privacy, reflect the business's products and services, enable services to be delivered to the customers, allow for self care, preferences and entitlements and at the same time embrace identity management and agility. On this last point, system modification (agility) is a critical issue which is normally omitted from IT system design. Many systems, including SOAs, hard code the operations, goods and services of the organization thus restricting their online service and business agility in the global market place. </p>
<p>

Adopting SOAs is therefore just the first (diagrammatic) step in defining a real business system.  The next step in the design process is the definition of a Service Delivery Platform (SDP) and its implementation. It is in the SDP design phase where one defines the business information models, identity management, products, content, devices, and the end user service characteristics, as well as how agile the system is so that it can deal with the evolution of the business and its customers.</p>

</ss1>
</sec>
<sec>
<st>
Extensions</st>

<ss1>
<st>
SOA, Web 2.0, and mashups </st>
<p>

<work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<meme wordnetid="105985126" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<acculturation wordnetid="105984936" confidence="0.8">
<link xlink:type="simple" xlink:href="../022/1555022.xml">
Web 2.0</link></acculturation>
</activity>
</meme>
</psychological_feature>
</act>
</service>
</event>
</work>
 refers to a "second generation" of web sites, primarily distinguished by the ability of visitors to contribute information for collaboration and sharing. Web 2.0 applications use Web services and may include <word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../950/1610950.xml">
Ajax</link></language_unit>
</neologism>
</part>
</word>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../947/20947.xml">
Flash</link></software>
, or <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../049/11125049.xml">
JavaFX</link></software>
 user interfaces, <link xlink:type="simple" xlink:href="../054/327054.xml">
Web syndication</link>, <link xlink:type="simple" xlink:href="../645/33645.xml">
blogs</link>, and <link xlink:type="simple" xlink:href="../851/32851.xml">
wikis</link>.  While there are no set standards for Web 2.0, it is characterised by building on the existing web server architecture and using services.  Web 2.0 can therefore be regarded as displaying some SOA characteristics<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2225%22])">25</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2226%22])">26</ref> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2227%22])">27</ref>.</p>
<p>

<software wordnetid="106566077" confidence="0.8">
<application wordnetid="106570110" confidence="0.8">
<program wordnetid="106568978" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106359877" confidence="0.8">
<word wordnetid="106286395" confidence="0.8">
<code wordnetid="106355894" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<coding_system wordnetid="106353757" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../092/2709092.xml">
Mashups</link></language_unit>
</neologism>
</coding_system>
</part>
</code>
</word>
</writing>
</written_communication>
</program>
</application>
</software>
 are also considered by some to be Web 2.0 applications. The term "enterprise mashup" has been coined to describe Web applications that combine content from more than one source into an integrated experience, which share many of the characteristics of <link xlink:type="simple" xlink:href="../553/8034553.xml">
service-oriented business application</link>s (SOBAs), which are applications composed of services in a declarative manner.  There is ongoing debate about "the collision of Web 2.0, mashups, and SOA", with some stating that Web 2.0 applications are a realization of SOA composite and business applications.
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2228%22])">28</ref></p>

</ss1>
<ss1>
<st>
Internet of Services</st>

<p>

The term Web 2.0 has been coined by <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../115/410115.xml">
Tim O'Reilly</link></person>
 to describe a quickly growing set of Web based applications <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2229%22])">29</ref>. A topic that has experienced enormous coverage recently is the relationship between Web 2.0 and Service-Oriented Architectures (SOAs). SOA is considered as the philosophy of encapsulating application logic in services with a uniformly defined interface and making these publicly available via discovery mechanisms. The notion of complexity-hiding and reuse, but also the concept of loosely coupling services has inspired researchers to elaborate on similarities between the two philosophies SOA and Web 2.0 and their respective applications. Some argue Web 2.0 and SOA have significantly different elements and thus can not be regarded “parallel philosophies”, whereas others consider the two concepts as complementary and regard Web 2.0 as the global SOA <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2230%22])">30</ref>.</p>
<p>

The philosophies of Web 2.0 and SOA serve different user needs and thus expose differences with respect to the design and also the used technologies of real-world applications. However, very recently, numerous novel use-cases demonstrate the great potential of combining technologies and principles of both Web 2.0 and SOA. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2231%22])">31</ref>.</p>
<p>

In an “Internet of Services,” all people, machines, and goods will have access to it by leveraging the network infrastructure of tomorrow. The Internet will thus offer services for all areas of life and business, such as virtual insurance, online banking and music, and so on. Those services will require a complex services infrastructure including Service delivery platforms bringing together demand and supply. Building blocks for the Internet of Services are SOA, Web2.0 and Semantics on the Technology side as well as novel business models, and approaches to systematic and community based innovation.
Rainer Ruggaber's Talk at the WETICE 2007 conference will motivate and describe the Vision of the “Internet of Services,” its building blocks, relevant early initiatives and open research questions. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2232%22])">32</ref>.</p>

</ss1>
<ss1>
<st>
SOA 2.0 or Advanced SOA</st>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/22591.xml">
Oracle</link></company>
 is taking up <b>SOA 2.0</b> as "the next-generation version of SOA" combining service-oriented architecture and <link xlink:type="simple" xlink:href="../786/4731786.xml">
Event Driven Architecture</link>, and categorizing the first iteration of SOA as client-server driven<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2233%22])">33</ref>
.
Even though Oracle indicates that <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../363/250363.xml">
Gartner</link></company>
 is coining a new term, Gartner analysts indicate that they call this <b>advanced SOA</b> and it is 'whimsically' referred to as SOA 2.0.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2234%22])">34</ref> Most of the major middleware vendors (e.g., <link xlink:type="simple" xlink:href="../914/1098914.xml">
webMethods</link>, <link xlink:type="simple" xlink:href="../497/1085497.xml">
TIBCO Software</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
, <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
, and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/22591.xml">
Oracle</link></company>
) have had some form of SOA 2.0 attributes for years.  </p>
<p>

However, some other industry commentators have criticized attaching a version number ("2.0") to an application architecture design approach, while others have stated that the "next generation" should apply to the evolution of SOA techniques from IT optimization to business development.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2235%22])">35</ref></p>

</ss1>
</sec>
<sec>
<st>
See also</st>

<p>

<table style="background:transparent; width:100%;" cellpadding="0" class=" multicol" cellspacing="0">
<row>
<col align="left" width="50%" valign="top">
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../165/587165.xml">
Big ball of mud</link> <link xlink:type="simple" xlink:href="../956/233956.xml">
anti-pattern</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../877/5378877.xml">
Business-driven development</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../781/7204781.xml">
Comparison of business integration software</link></entry>
<entry level="1" type="bullet">

 <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
Digital signature</link></writing>
</written_communication>
</document>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../555/842555.xml">
Enterprise application integration</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../899/1611899.xml">
Enterprise Messaging System</link></entry>
<entry level="1" type="bullet">

 <work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../534/11335534.xml">
Enterprise Integration Patterns</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../254/928254.xml">
Enterprise service bus</link></entry>
<entry level="1" type="bullet">

 <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../599/62599.xml">
Event-driven programming</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../415/2790415.xml">
Java Business Integration</link></request>
</message>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../108/6896108.xml">
Microsoft Connected Services Framework</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../543/7876543.xml">
Open ESB</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../716/9519716.xml">
Oracle SOA Suite</link></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../333/2262333.xml">
Software as a service</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../973/5720973.xml">
Service bureau</link></entry>
</list>
</col>
<col align="left" width="50%" valign="top"><p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../112/194112.xml">
Public key infrastructure</link></entry>
<entry level="1" type="bullet">

 <word wordnetid="106286395" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<neologism wordnetid="106294441" confidence="0.8">
<language_unit wordnetid="106284225" confidence="0.8">
<link xlink:type="simple" xlink:href="../222/907222.xml">
Representational State Transfer</link></language_unit>
</neologism>
</part>
</word>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../340/5738340.xml">
SAP Enterprise Services Architecture</link></entry>
<entry level="1" type="bullet">

 <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../170/4323170.xml">
Semantic service oriented architecture</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
 - contain ISO standards</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../013/3546013.xml">
Service component architecture</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../175/12943175.xml">
Service-oriented modeling</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../393/1155393.xml">
Service-oriented analysis and design</link></entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<engine wordnetid="103287733" confidence="0.8">
<motor wordnetid="103789946" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/7470226.xml">
Search oriented architecture</link></machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
 complementary pattern</entry>
<entry level="1" type="bullet">

 <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../161/8836161.xml">
Service-oriented architecture implementation framework</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../432/8004432.xml">
SOA Governance</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../297/18736297.xml">
Sun Java CAPS</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../866/16737866.xml">
Business-Agile Enterprise</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../007/14204007.xml">
Business Intelligence 2.0</link> (BI 2.0)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../594/19522594.xml">
Data as a service</link></entry>
</list>
</p>
</col>
</row>
</table>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<reflist>
<entry id="1">
 <cite id="Reference-Newcomer-2005" style="font-style:normal" class="book">Newcomer, Eric;&#32;Lomow, Greg&#32;(2005). Understanding SOA with Web Services.&#32;Addison Wesley. ISBN 0-321-18086-0.</cite>&nbsp;</entry>
<entry id="2">
 <cite id="Reference-Erl-2005" style="font-style:normal" class="book">Erl, Thomas&#32;(2005). Service-oriented Architecture: Concepts, Technology, and Design.&#32;Upper Saddle River:&#32;Prentice Hall PTR. ISBN 0-13-185858-0.</cite>&nbsp;</entry>
<entry id="3">
 An alternative view, particularly after initial deployments, is that SOAs properly ought not dictate physical implementation, so the formal definition should not include "network." High performance SOAs may not be viable, especially if deployed to distributed nodes on a network. Separate nodes for every (or most) services could be prohibitively expensive.</entry>
<entry id="4">
 Channabasavaiah, Holley and Tuggle, <weblink xlink:type="simple" xlink:href="http://www-128.ibm.com/developerworks/library/ws-migratesoa/">
Migrating to a service-oriented architecture</weblink>, <it><company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 DeveloperWorks</it>, 16 Dec 2003</entry>
<entry id="5">
Yvonne Balzer <weblink xlink:type="simple" xlink:href="http://www-128.ibm.com/developerworks/webservices/library/ws-improvesoa/">
Improve your SOA project plans</weblink>, <it><company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
</it>, 16 July 2004</entry>
<entry id="6">
Thomas Erl <weblink xlink:type="simple" xlink:href="http://www.serviceorientation.org/p0.asp">
Serviceorientation.org - About the Principles</weblink>, 2005-2006</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.soablueprint.com/whitepapers/SOAPGPart2.pdf">
SOA Practitioners Guide Part 2: SOA Reference Architecture</weblink></entry>
<entry id="8">
 <cite id="Reference-Cardoso-2006" style="font-style:normal" class="book">Cardoso, Jorge;&#32;Sheth, Amit P.&#32;(2006).&#32;"Foreword", Semantic Web Services, Processes and Applications, Foreword by Frank Leymann, SEMANTIC WEB AND BEYOND: Computing for Human Experience,&#32;Springer,&#32;xxi. ISBN 978-0-387-30239-3.&nbsp;"The corresponding architectural style is called "service-oriented architecture": fundamentally, it describes how service requesters and service providers can be decoupled via discovery mechanisms resulting in loosely coupled systems. ... Implementing a service-oriented architecture means to deal with heterogeneity and interoperability concerns."</cite>&nbsp;</entry>
<entry id="9">
 <cite id="Reference-Bell-2008" style="font-style:normal" class="book">Bell, Michael&#32;(2008).&#32;"Introduction to Service-Oriented Modeling", Service-Oriented Modeling: Service Analysis, Design, and Architecture.&#32;Wiley &amp; Sons,&#32;3. ISBN 978-0-470-14111-3.</cite>&nbsp;</entry>
<entry id="10">
<weblink xlink:type="simple" xlink:href="http://opengroup.org/projects/soa/doc.tpl?gdid=10632">
SOA - Documents - Document details</weblink></entry>
<entry id="11">
<weblink xlink:type="simple" xlink:href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=soa-rm">
SOA Reference Model definition</weblink></entry>
<entry id="12">
Steve Jones <weblink xlink:type="simple" xlink:href="http://www.infoq.com/minibooks/enterprise-soa">
Enterprise SOA Adoption Strategies</weblink>, <it>InfoQ</it>, May 17, 2006, ISBN 978-1-84728-398-6</entry>
<entry id="13">
 <cite style="font-style:normal" class="book">Spewak, Steven;&#32;Hill, Steven C.. Enterprise Architecture Planning: Developing a Blueprint for Data, Applications, and Technology. ISBN 978-0894354366.</cite>&nbsp; Note that there is another edition that just lists Spewak as an author that may have better availability.</entry>
<entry id="14">
Bieberstein et al, Executing SOA: A Practical Guide for the Service-Oriented Architect (Paperback), IBM Press books, 978-0132353748</entry>
<entry id="15">
Christopher Koch <weblink xlink:type="simple" xlink:href="http://www.cio.com.au/index.php/id;1350140708">
A New Blueprint For The Enterprise</weblink>, <it>CIO Magazine</it>, Mar 1 2005</entry>
<entry id="17">
Martin van den berg et al. SOA for Profit, A Manager's Guide to Success with Service-Oriented Architecture (Hardcover), 978-9075414141 </entry>
<entry id="16">
Bieberstein et al., Service-Oriented Architecture (SOA) Compass: Business Value, Planning, and Enterprise Roadmap (The developerWorks Series) (Hardcover), IBM Press books, 2005, 978-0131870024</entry>
<entry id="19">
<weblink xlink:type="simple" xlink:href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;articleId=9001155&amp;source=NLT_ROI&amp;nlid=44">
Is There Real Business Value Behind the Hype of SOA?</weblink>, <it>Computerworld</it>, June 19, 2006.</entry>
<entry id="18">
<weblink xlink:type="simple" xlink:href="http://www.ws-i.org/Profiles/BasicProfile-1.0-2004-04-16.html">
WS-I Basic Profile</weblink></entry>
<entry id="21">
Tim Bray, XML co-founder - http://blogs.zdnet.com/service-oriented/?p=597</entry>
<entry id="20">
See also: <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<description wordnetid="106724763" confidence="0.8">
<specification wordnetid="106725067" confidence="0.8">
<link xlink:type="simple" xlink:href="../423/4059423.xml">
WS-MetadataExchange</link></specification>
</description>
</message>
</statement>
 <work wordnetid="100575741" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<service wordnetid="100577525" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<link xlink:type="simple" xlink:href="../483/9736483.xml">
OWL-S</link></activity>
</psychological_feature>
</act>
</service>
</event>
</work>
</entry>
<entry id="23">
 <weblink xlink:type="simple" xlink:href="http://soa.sys-con.com/read/250512.htm">
The Performance Woe of Binary XML</weblink></entry>
<entry id="22">
<weblink xlink:type="simple" xlink:href="http://xml.sys-con.com/read/453082.htm">
Index XML documents with VTD-XML</weblink></entry>
<entry id="25">
Dion Hinchcliffe <weblink xlink:type="simple" xlink:href="http://web2.wsj2.com/is_web_20_the_global_soa.htm">
Is Web 2.0 The Global SOA?</weblink>, <it>SOA Web Services Journal</it>, 28 October 2005</entry>
<entry id="24">
<weblink xlink:type="simple" xlink:href="http://www.devx.com/xml/Article/36379">
Manipulate XML Content the Ximple Way</weblink></entry>
<entry id="27">
Hoyer, Volker ; Stanoesvka-Slabeva, Katarina; Janner, Till; Schroth, Christoph;&#32;(2008).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.alexandria.unisg.ch/publications/44891">
Enterprise Mashups: Design Principles towards the Long Tail of User Need</weblink></it>". &#32;Proceedings of the 2008 IEEE International Conference on Services Computing (SCC 2008).&#32;Retrieved on <link>
2008-07-08</link>.</entry>
<entry id="26">
Schroth, Christoph ; Janner, Till;&#32;(2007).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.alexandria.unisg.ch/Publikationen/37270">
Web 2.0 and SOA: Converging Concepts Enabling the Internet of Services</weblink></it>". &#32;IT Professional 9 (2007), Nr. 3, p. 36-41, IEEE Computer Society.&#32;Retrieved on <link>
2008-02-23</link>.</entry>
<entry id="29">
"<weblink xlink:type="simple" xlink:href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html">
What Is Web 2.0</weblink>".&#32;  Tim O'Reilly&#32;(2005-09-30).&#32;Retrieved on <link>
2008-06-10</link>.</entry>
<entry id="28">
Jason Bloomberg <weblink xlink:type="simple" xlink:href="http://www.zapthink.com/report.html?id=ZAPFLASH-2006320">
Mashups and SOBAs: Which is the Tail and Which is the Dog?</weblink>, <it>Zapthink''</it></entry>
<entry id="31">
Schroth, Christoph ; Janner, Till;&#32;(2007).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.alexandria.unisg.ch/Publikationen/37270">
Web 2.0 and SOA: Converging Concepts Enabling the Internet of Services</weblink></it>". &#32;IT Professional 9 (2007), Nr. 3, p. 36-41, IEEE Computer Society.&#32;Retrieved on <link>
2008-02-23</link>.</entry>
<entry id="30">
Schroth, Christoph ; Janner, Till;&#32;(2007).&#32;"<it><weblink xlink:type="simple" xlink:href="http://www.alexandria.unisg.ch/Publikationen/37270">
Web 2.0 and SOA: Converging Concepts Enabling the Internet of Services</weblink></it>". &#32;IT Professional 9 (2007), Nr. 3, p. 36-41, IEEE Computer Society.&#32;Retrieved on <link>
2008-02-23</link>.</entry>
<entry id="34">
Yefim Natis &amp; Roy Schulte  <weblink xlink:type="simple" xlink:href="http://www.gartner.com/DisplayDocument?ref=g_search&amp;id=493863">
Advanced SOA for Advanced Enterprise Projects</weblink>, <it>Gartner</it>, July 13, 2006</entry>
<entry id="35">
Joe McKendrick <weblink xlink:type="simple" xlink:href="http://blogs.zdnet.com/service-oriented/?p=652">
Anti-SOA 2.0 petition nears 400</weblink>, <it>ZDNet.com</it>, June 29, 2006</entry>
<entry id="32">
Ruggaber, Rainer;&#32;(2007).&#32;"<it><weblink xlink:type="simple" xlink:href="http://csdl2.computer.org/comp/proceedings/wetice/2007/2879/00/28790003.pdf">
Internet of Services—A SAP Research Vision</weblink></it>". &#32;IEEE Computer Society.&#32;Retrieved on <link>
2008-02-23</link>.</entry>
<entry id="33">
Paul Krill <weblink xlink:type="simple" xlink:href="http://www.infoworld.com/article/06/05/17/78420_HNsoa20_1.html">
Make way for SOA 2.0</weblink>, <it>InfoWorld </it>, May 17, 2006</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 Further reading </st>
<p>

<list>
<entry level="1" type="bullet">

 SOA for the Business Developer: Concepts, BPEL, and SCA -- ISBN 978-158347-065-7</entry>
<entry level="1" type="bullet">

 Frank Leymann, Dimka Karastoyanova (Eds.) et al.: <it>Service Oriented Architecture – Overview of Technologies and Standards</it>. Special Topic Issue Journal <it>it - Information Technology</it>. <weblink xlink:type="simple" xlink:href="http://www.atypon-link.com/OLD/toc/itit/50/2">
Vol. 50 (2008)Heft 2</weblink></entry>
<entry level="1" type="bullet">

 Janner, Till ; Cañas Vaz, Miguel Angel ; Hierro, Juan J. ; Lizcano, David ; Reyes , Marcos ; Schroth, Christoph ; Soriano, Javier ; Hoyer, Volker: Enterprise Mashup: Putting a face on next generation global SOA. The 8th International Conference on Web Information Systems Engineering (WISE 2007). Nancy, France, 2007.- URL http://www.alexandria.unisg.ch/Publikationen/41338 </entry>
<entry level="1" type="bullet">

 Schroth, Christoph ; Christ, Oliver: Brave New Web: Emerging Design Principles and Technologies as Enablers of a Global SOA. In: Proceedings of the 2007 IEEE International Conference on Services Computing (SCC 2007) : IEEE Computer Society, 2007.- 2007 IEEE International Conference on Services Computing (SCC 2007).- Salt Lake City, Utah, USA, S. 8.- URL http://www.alexandria.unisg.ch/Publikationen/37038</entry>
</list>
</p>


</sec>
</bdy>
</activity>
</psychological_feature>
</act>
</service>
</event>
</work>
</article>
