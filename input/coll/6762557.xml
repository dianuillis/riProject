<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:30:51[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Probabilistic CTL</title>
<id>6762557</id>
<revision>
<id>237890937</id>
<timestamp>2008-09-12T07:55:55Z</timestamp>
<contributor>
<username>Cweise</username>
<id>7817881</id>
</contributor>
</revision>
<categories>
<category>Orphaned articles from November 2006</category>
<category>Logic in computer science</category>
<category>All orphaned articles</category>
</categories>
</header>
<bdy>
<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Wiki_letter_w.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article is  as few or no other articles <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Special:Whatlinkshere&amp;target=Probabilistic_CTL&amp;namespace=0">
link to it</weblink>.</b>
Please help  in articles on <weblink xlink:type="simple" xlink:href="http://www.google.com/search?hl=en&amp;as_qdr=all&amp;q=+site%3Aen.wikipedia.org+%22Probabilistic+CTL%22">
related topics</weblink>. <it>(November 2006)''</it></col>
</row>
</table>
</p>
<p>

 
<b>Probabilistic Computation Tree Logic</b> is an extension of <link xlink:type="simple" xlink:href="../894/840894.xml">
CTL</link> which allows for probabilistic quantification of described properties. It has been defined in the paper by <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/hansson94logic.html">
Hansson and Jonsson</weblink>.
PCTL is a useful logic for stating soft deadline properties, e.g. "after a request for a service, there is at least a 98% probability that the service will be carried out within 2 seconds". Akin CTL suitability for model-checking PCTL extension is widely used as a property specification language for probabilistic model checkers.</p>

<ss2>
<st>
 PCTL Syntax </st>
<p>

One of the possible syntax of PCTL is defined as follows:</p>
<p>

<math>
\phi ::= p | \neg p | \phi \lor \phi | \phi \land \phi | \mathcal{P}_{\sim\lambda}(\phi \mathcal{U} \phi) |
\mathcal{P}_{\sim\lambda}(\square\phi)
</math></p>
<p>

Therein, <math>\sim \in \{ &amp;lt;, \leq, =, \geq, &amp;gt; \}</math> is comparison operator and <math>\lambda</math> is a probability threshold.</p>
<p>

Formulas of PCTL are interpreted over discrete <link xlink:type="simple" xlink:href="../876/60876.xml">
Markov chains</link>. An interpretation structure
is a quadruple <math>K = \langle S, s^i, \mathcal{T}, L \rangle</math>, where 
<list>
<entry level="1" type="bullet">

<math>S</math> is a finite set of states, </entry>
<entry level="1" type="bullet">

<math>s^i \in S</math> is an initial state, </entry>
<entry level="1" type="bullet">

<math>\mathcal{T}</math> is a transition probability function, <math>\mathcal{T} : S \times S \to [0,1] </math>, such that for all <math>s \in S</math> we have <math>\sum_{s'\in S} \mathcal{T}(s,s')=1</math>, and</entry>
<entry level="1" type="bullet">

<math>L</math> is a labeling function, <math>L:S\to2^A</math>, assigning atomic propositions to states.</entry>
</list>
</p>
<p>

A path <math>\sigma</math> from a state <math>s_0</math> is an inifite sequence of states 
<math>s_0 \to s_1 \to \dots \to s_n \to \dots </math>. The n-th state of the path is denoted as <math>\sigma[n]</math>
and the prefix of <math>\sigma</math> of length <math>n</math> is denoted as <math>\sigma\uparrow n</math>.</p>


</ss2>
<ss2>
<st>
 Probability Measure </st>
<p>

A probability measure <math>\mu_m</math> of the set of path with the common prefix of length <math>n</math> is equal to the product of transitions probabilitites along the prefix of the path:
<math>
\mu_m(\{\sigma \in X : \sigma\uparrow n = s_0 \to \dots \to s_n \}) = \mathcal{T}(s_0,s_1) \times\dots\times\mathcal{T}(s_{n-1},s_n)
</math>
For <math>n = 0</math> the probability measure is equal to <math>\mu_m(\{\sigma \in X : \sigma\uparrow 0 = s_0 \}) = 1</math>.</p>

</ss2>
<ss2>
<st>
 Satisfaction relations </st>
<p>

Satisfaction relations <math>s \models_K f</math>, <math>\sigma \models_K f</math> are inductively defined as follows:
<list>
<entry level="1" type="bullet">

 <math>s \models_K a</math> if and only if <math>a \in L(s)</math>,</entry>
<entry level="1" type="bullet">

 <math>s \models_K \neg f</math> if and only if not <math>s \models_K f</math>,</entry>
<entry level="1" type="bullet">

 <math>s \models_K f_1 \lor f_2</math> if and only if <math>s \models_K f_1</math> or <math>s \models_K f_2</math>,</entry>
<entry level="1" type="bullet">

 <math>s \models_K f_1 \land f_2</math> if and only if <math>s \models_K f_1</math> and <math>s \models_K f_2</math>,</entry>
<entry level="1" type="bullet">

 <math>s \models_K \mathcal{P}_{\sim\lambda}(f_1 \mathcal{U} f_2)</math> if and only if <math>\mu_m(\{\sigma : \sigma[0] = s \land (\exists i)\sigma[i] \models_K f_2 \land (\forall 0 \leq j &amp;lt; i) \sigma[j] \models_K f_1\}) \sim \lambda</math>, and</entry>
<entry level="1" type="bullet">

 <math>s \models_K \mathcal{P}_{\sim\lambda}(\square f)</math> if and only if <math>\mu_m(\{\sigma : \sigma[0] = s \land (\forall i \geq 0)\sigma[i] \models_K f\}) \sim \lambda</math>.</entry>
</list>
</p>

</ss2>
</bdy>
</article>
