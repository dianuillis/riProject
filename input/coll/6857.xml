<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:23:46[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Computer multitasking</title>
<id>6857</id>
<revision>
<id>243347427</id>
<timestamp>2008-10-06T03:28:22Z</timestamp>
<contributor>
<username>Oliverbell99</username>
<id>5738721</id>
</contributor>
</revision>
<categories>
<category>Concurrent computing</category>
<category>CISSP</category>
<category>Operating system technology</category>
</categories>
</header>
<bdy>

In computing, <b><link xlink:type="simple" xlink:href="../126/20126.xml">
multitasking</link></b> is a method by which multiple tasks, also known as <link>
processes</link>, share common processing resources such as a <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>. In the case of a computer with a single CPU, only one task is said to be <it>running</it> at any point in time, meaning that the CPU is actively executing instructions for that task.
Multitasking solves the problem by <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduling</link> which task may be the one running at any given time, and when another waiting task gets a turn.  The act of reassigning a CPU from one task to another one is called a <link xlink:type="simple" xlink:href="../904/6904.xml">
context switch</link>.
When context switches occur frequently enough the illusion of <link xlink:type="simple" xlink:href="../162/145162.xml">
parallelism</link> is achieved.
Even on computers with more than one CPU (called <link xlink:type="simple" xlink:href="../020/64020.xml">
multiprocessor</link> machines), multitasking allows many more tasks to be run than there are CPUs. <p>

Operating systems may adopt one of many different <link xlink:type="simple" xlink:href="../920/231920.xml">
scheduling strategies</link>, which generally fall into the following categories:
<list>
<entry level="1" type="bullet">

 In <it>multiprogramming</it> systems, the running task keeps running until it performs an operation that requires waiting for an external event (e.g. reading from a tape) or until the computer's scheduler forcibly swaps the running task out of the CPU. Multiprogramming systems are designed to maximize CPU usage.</entry>
<entry level="1" type="bullet">

 In <it><link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link></it> systems, the running task is required to relinquish the CPU, either voluntarily or by an external event such as a <link xlink:type="simple" xlink:href="../289/15289.xml">
hardware interrupt</link>. Time sharing systems are designed to allow several programs to execute apparently simultaneously.</entry>
<entry level="1" type="bullet">

 In <it><link xlink:type="simple" xlink:href="../767/25767.xml">
real-time</link></it> systems, some waiting tasks are guaranteed to be given the CPU when an external event occurs. Real time systems are designed to control mechanical devices such as industrial robots, which require timely processing.</entry>
</list>
</p>
<p>

The term <it>time-sharing</it> is no longer commonly used, having been replaced by simply <it>multitasking</it>.</p>

<sec>
<st>
 Multiprogramming </st>
<p>

In the early days of computing, <link xlink:type="simple" xlink:href="../500/6008500.xml">
CPU time</link> was expensive, and <link xlink:type="simple" xlink:href="../ago/Austin=2C_C$hicago.xml">
peripheral</link>s were very slow. When the computer ran a program that
needed access to a peripheral, the CPU would have to stop executing program instructions while the peripheral processed the
data. This was deemed very inefficient.</p>
<p>

The first efforts to create multiprogramming systems took place in the 1960s. Several different programs in batch were loaded in the computer memory, and the first one began to run. When the first program reached an instruction waiting for a peripheral,
the context of this program was stored away, and the second program in memory was given a chance to run. The process continued
until all programs finished running.</p>
<p>

Multiprogramming doesn't give any guarantee that a program will run in a timely manner. Indeed, the very first program
may very well run for hours without needing access to a peripheral. As there were no users waiting at an interactive
terminal, this was no problem: users handed a deck of punched cards to an operator, and came back a few hours later
for printed results. Multiprogramming greatly reduced the waiting.</p>
<p>

The early <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> primary control program (PCP) followed the above model but was replaced the very next year, <link xlink:type="simple" xlink:href="../749/34749.xml">
1967</link>, by <link xlink:type="simple" xlink:href="../651/2660651.xml">
MFT</link> which limited the amount of CPU time any single process could consume before being switched out.</p>

</sec>
<sec>
<st>
 Cooperative multitasking/time-sharing </st>
<p>

When computer usage evolved from batch mode to interactive mode, multiprogramming was no longer a suitable approach. Each
user wanted to see his program running as if it was the only program in the computer. The use of time sharing made this possible, with the qualification that the computer would not seem as fast to any one user as it really would be if it were running only that user's program.</p>
<p>

Early multitasking systems consisted of suites of related applications that voluntarily ceded time to each other. This approach, which was eventually supported by many computer <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s, is today known as cooperative multitasking. Although it is rarely used in larger systems, <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> prior to <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../064/34064.xml">
Windows 95</link></version>
 and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT</link></family>
, and <link xlink:type="simple" xlink:href="../043/20043.xml">
Mac OS</link> prior to <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> both used cooperative multitasking to enable the running of multiple applications simultaneously. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../486/454486.xml">
Windows 9x</link></O>
 also used cooperative multitasking, but only for 16-bit legacy applications, much the same way as pre-<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2001664.xml">
Leopard</link></version>
 <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link> versions of Mac OS X used it for <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/56892.xml">
Classic</link></software>
 applications. Cooperative multitasking is still used today on <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../999/167999.xml">
RISC OS</link></O>
 systems.</p>
<p>

Because a cooperatively multitasked system relies on each process to regularly give time to other processes on the system, one poorly designed program can cause the whole system to <link xlink:type="simple" xlink:href="../417/19005417.xml">
hang</link>.</p>

</sec>
<sec>
<st>
 Preemptive multitasking/time-sharing </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemption (computing)</link></it>
</indent>

Preemptive multitasking allows the computer system to more reliably guarantee each process a regular "slice" of operating time. It also allows the system to rapidly deal with important external events like incoming data, which might require the immediate attention of one or another process.</p>
<p>

At any specific time, processes can be grouped into two categories: those that are waiting for input or output (called "<link xlink:type="simple" xlink:href="../513/648513.xml">
I/O bound</link>"), and those that are fully utilizing the CPU ("<link xlink:type="simple" xlink:href="../697/648697.xml">
CPU bound</link>"). In early systems, processes would often "poll", or "<link xlink:type="simple" xlink:href="../489/671489.xml">
busywait</link>" while waiting for requested input (such as disk, keyboard or network input). During this time, the process was not performing useful work, but still maintained complete control of the CPU. With the advent of interrupts and preemptive multitasking, these I/O bound processes could be "blocked", or put on hold, pending the arrival of the necessary data, allowing other processes to utilize the CPU. As the arrival of the requested data would generate an interrupt, blocked processes could be guaranteed a timely return to execution.</p>
<p>

The earliest pre-emptive multitasking OS available to home users was the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
 released in 1985.  Pre-emptive multitasking was later adopted on Apple Macintoshes by <link xlink:type="simple" xlink:href="../043/20043.xml">
MacOS</link> 9.x <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> as an additional API, i.e. the application could be programmed to use the pre-emptive or co-operative model, and all legacy applications were multitasked cooperatively within a single process. Mac OS X, being a <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 system, uses pre-emptive multitasking for all native applications, although <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../892/56892.xml">
Classic</link></software>
 applications may be multitasked cooperatively as they run in fact under Mac OS 9 running as OS X process.</p>
<p>

Much similar model is used in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../486/454486.xml">
Windows 9x</link></O>
 and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../438/33438.xml">
Windows NT family</link></family>
, where native 32-bit applications are multitasked preemptively, and legacy 16-bit <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../719/167719.xml">
Windows 3.x</link></version>
 ones - cooperatively within a single process, although in the NT family it is possible to force 16-bit application to run as a separate preemptively multitasked process. <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> 64-bit editions of Windows, both for the <link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link> and <link xlink:type="simple" xlink:href="../454/15454.xml">
IA-64</link> architectures no longer provide support for legacy 16-bit applications, and thus provide pre-emptive multitasking for all supported applications.</p>
<p>

Pre-emptive multitasking is also a standard feature on all versions of <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
 <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> and <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../815/31815.xml">
Unix-like</link></family>
 operating systems, including <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <link xlink:type="simple" xlink:href="../981/26981.xml">
Solaris</link> and <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> with its <link xlink:type="simple" xlink:href="../169/4710169.xml">
derivatives</link>.</p>

</sec>
<sec>
<st>
 Real time </st>
<p>

Another reason for multitasking was in the design of <link xlink:type="simple" xlink:href="../767/25767.xml">
real-time computing</link> systems, where there are a number of possibly unrelated external activities needed to be controlled by a single processor system. In such systems a hierarchical interrupt system was coupled with process prioritization to ensure that key activities were given a greater share of available process time.</p>

</sec>
<sec>
<st>
 Multithreading </st>
<p>

As multitasking greatly improved the throughput of computers, programmers started to implement
applications as sets of cooperating processes (e.g. one process gathering input data, one process
processing input data, one process writing out results on disk.) This, however, required some tools to allow processes to efficiently exchange data.</p>
<p>

<link xlink:type="simple" xlink:href="../303/45303.xml">
Threads</link> were born from the idea that the most efficient way for cooperating processes to exchange
data would be to share their entire memory space. Thus, threads are basically processes that run 
in the same memory context. Threads are described as <it>lightweight</it> because switching between threads does not involve changing the memory context.</p>
<p>

While threads are scheduled preemptively, some operating systems provide a variant to threads, named <it><link xlink:type="simple" xlink:href="../712/5533712.xml">
fiber</link>s</it>, that are scheduled cooperatively. On operating systems that do not provide fibers, an application may implement its own fibers using repeated calls to worker functions. Fibers are even more lightweight than threads, and somewhat easier to program with, although they tend to lose some or all of the benefits of threads on <link xlink:type="simple" xlink:href="../020/64020.xml">
machines with multiple processors</link>.</p>
<p>

Some systems directly support <link xlink:type="simple" xlink:href="../679/10520679.xml">
multithreading in hardware</link>.</p>

</sec>
<sec>
<st>
 Memory protection </st>
<p>

When multiple programs are present in memory, an ill-behaved program may (inadvertently or deliberately) overwrite memory belonging to another program, or even to the operating system itself.</p>
<p>

The operating system therefore restricts the memory accessible to the running program. A program trying to access memory outside its allowed range is immediately stopped before it can change memory belonging to another process.</p>
<p>

Another key innovation was the idea of privilege levels. Low privilege tasks are not allowed some kinds of memory access and are not allowed to perform certain instructions. When a task tries to perform a privileged operation a <link xlink:type="simple" xlink:href="../447/7380447.xml">
trap</link> occurs and a supervisory program running at a higher level is allowed to decide how to respond. This created the possibility of virtualizing the entire system, including virtual peripheral devices. Such a simulation is called a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> operating system. Early virtual machine systems did not have <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>, but both are common today.</p>

</sec>
<sec>
<st>
 Memory swapping </st>
<p>

Use of a <link xlink:type="simple" xlink:href="../354/32354.xml">
swap file</link> or swap partition is a way for the operating system to provide more memory than is physically available by keeping portions of the primary memory in <link xlink:type="simple" xlink:href="../248/88248.xml">
secondary storage</link>. While multitasking and memory swapping are two completely unrelated techniques, they are very often used together, as swapping memory allows more tasks to be loaded at the same time.  Typically, a multitasking system allows another process to run when the running process hits a point where it has to wait for some portion of memory to be reloaded from <link xlink:type="simple" xlink:href="../248/88248.xml">
secondary storage</link>.</p>

</sec>
<sec>
<st>
 Programming in a multitasking environment </st>
<p>

Processes that are entirely independent are not much trouble to program. Most of the complexity in multitasking systems comes from the need to share computer resources between tasks and to synchronize the operation of co-operating tasks.
Various <link xlink:type="simple" xlink:href="../605/2581605.xml">
concurrent computing</link> techniques are used to avoid potential problems caused by multiple tasks attempting to access the same resource.</p>
<p>

Bigger computer systems were sometimes built with a central processor(s) and some number of I/O processors, a kind of asymmetric <link xlink:type="simple" xlink:href="../020/64020.xml">
multi-processing</link>.</p>
<p>

Over the years, multitasking systems have been refined. Modern operating systems generally include detailed mechanisms for prioritizing processes, while <link xlink:type="simple" xlink:href="../318/50318.xml">
symmetric multiprocessing</link> has introduced new complexities and capabilities.</p>

</sec>
<sec>
<st>
 Notes </st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://developer.apple.com/technotes/tn/tn2006.html">
Technical Note TN2006: MP-Safe Routines</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.smartcomputing.com/editorial/article.asp?article=articles%2F2005%2Fs1606%2F08s06%2F08s06.asp">
Smart Computing Article - Windows 2000 &amp;16-Bit Applications</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.ibiblio.org/team/intro/unix/what.html">
The Digital Research Initiative</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../260/4387260.xml">
Process states</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../070/6613070.xml">
Process time</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../191/1655191.xml">
Task</link></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../162/145162.xml">
Parallel computing</link>topics</header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../527/832527.xml">
High-performance computing</link></difficulty>
</problem>
</state>
</condition>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Parallelism</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../148/14229148.xml">
Bit-level parallelism</link>&nbsp;·  <link xlink:type="simple" xlink:href="../960/245960.xml">
Instruction level parallelism</link>&nbsp;·  <link xlink:type="simple" xlink:href="../420/9467420.xml">
Data parallelism</link>&nbsp;·  <link xlink:type="simple" xlink:href="../070/9468070.xml">
Task parallelism</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Threads</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../877/313877.xml">
Superthreading</link>&nbsp;·  <link xlink:type="simple" xlink:href="../443/151443.xml">
Hyperthreading</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Theory</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../612/1448612.xml">
Speedup</link>&nbsp;·  <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<rule wordnetid="105846054" confidence="0.8">
<link xlink:type="simple" xlink:href="../ury/24th_century.xml">
Amdahl's law</link></rule>
</concept>
</idea>
&nbsp;·  <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../349/222349.xml">
Flynn's taxonomy</link></group>
</collection>
</class>
 (<link xlink:type="simple" xlink:href="../630/1103630.xml">
SISD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../359/55359.xml">
SIMD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../666/991666.xml">
MISD</link>&nbsp;&amp;bull;  <link xlink:type="simple" xlink:href="../139/157139.xml">
MIMD</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../721/3505721.xml">
Cost efficiency</link>&nbsp;·  <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<rule wordnetid="105846054" confidence="0.8">
<link xlink:type="simple" xlink:href="../252/4243252.xml">
Gustafson's law</link></rule>
</concept>
</idea>
&nbsp;·  <link xlink:type="simple" xlink:href="../042/9453042.xml">
Karp-Flatt metric</link>&nbsp;·  <link xlink:type="simple" xlink:href="../068/15167068.xml">
Parallel slowdown</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Elements</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread</link>&nbsp;·  <link xlink:type="simple" xlink:href="../712/5533712.xml">
Fiber</link>&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../675/956675.xml">
Parallel Random Access Machine</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Coordination</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../020/64020.xml">
Multiprocessing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../679/10520679.xml">
Multithreading</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../818/399818.xml">
Memory coherency</link>&nbsp;·  <link xlink:type="simple" xlink:href="../865/176865.xml">
Cache coherency</link>&nbsp;·  <link xlink:type="simple" xlink:href="../263/4736263.xml">
Barrier</link>&nbsp;·  <link xlink:type="simple" xlink:href="../017/4726017.xml">
Synchronization</link>&nbsp;·  <link xlink:type="simple" xlink:href="../501/8501.xml">
Distributed computing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../373/49373.xml">
Grid computing</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../311/5311.xml">
Programming</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../375/2242375.xml">
Programming model</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
&nbsp;·  <link xlink:type="simple" xlink:href="../888/3453888.xml">
Implicit parallelism</link>&nbsp;·  <link xlink:type="simple" xlink:href="../332/3095332.xml">
Explicit parallelism</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../310/5310.xml">
Hardware</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../896/18949896.xml">
Computer cluster</link>&nbsp;·  <link xlink:type="simple" xlink:href="../542/66542.xml">
Beowulf</link>&nbsp;·  <link xlink:type="simple" xlink:href="../318/50318.xml">
Symmetric multiprocessing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../643/40643.xml">
Non-Uniform Memory Access</link>&nbsp;·  <link xlink:type="simple" xlink:href="../307/910307.xml">
Cache only memory architecture</link>&nbsp;·  <link xlink:type="simple" xlink:href="../506/2576506.xml">
Asymmetric multiprocessing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../021/315021.xml">
Simultaneous multithreading</link>&nbsp;·  <link xlink:type="simple" xlink:href="../653/825653.xml">
Shared memory</link>&nbsp;·  <link xlink:type="simple" xlink:href="../887/234887.xml">
Distributed memory</link>&nbsp;·  <link xlink:type="simple" xlink:href="../049/584049.xml">
Massive parallel processing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../702/51702.xml">
Superscalar processing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../205/58205.xml">
Vector processing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../153/37153.xml">
Supercomputer</link>&nbsp;·  <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<paradigm wordnetid="113804375" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../727/2786727.xml">
Stream processing</link></grammatical_relation>
</inflection>
</causal_agent>
</linguistic_relation>
</worker>
</paradigm>
</assistant>
</model>
</person>
</physical_entity>
&nbsp;·  <substance wordnetid="100019613" confidence="0.8">
<paper wordnetid="114974264" confidence="0.8">
<card wordnetid="102962545" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<material wordnetid="114580897" confidence="0.8">
<link xlink:type="simple" xlink:href="../939/1268939.xml">
GPGPU</link></material>
</part>
</card>
</paper>
</substance>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../309/5309.xml">
Software</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../843/399843.xml">
Distributed shared memory</link> &nbsp;·  <link xlink:type="simple" xlink:href="../765/416765.xml">
Application checkpointing</link>&nbsp;·  <link xlink:type="simple" xlink:href="../129/2738129.xml">
Warewulf</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>s</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../671/634671.xml">
POSIX Threads</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../842/381842.xml">
OpenMP</link>&nbsp;·  <link xlink:type="simple" xlink:href="../466/221466.xml">
Message Passing Interface (MPI)</link>&nbsp;·  <link xlink:type="simple" xlink:href="../616/1057616.xml">
UPC</link>&nbsp;·  <link xlink:type="simple" xlink:href="../077/11625077.xml">
Intel Threading Building Blocks</link>&nbsp;·  <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/711324.xml#xpointer(//*[./st=%22Multithreading+=E2=80=93+Boost.Thread%22])">
Boost.Thread</link></room>
</library>
</area>
</artifact>
</structure>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Problems</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../712/1738712.xml">
Embarrassingly parallel</link></instrumentality>
</artifact>
</system>
&nbsp;·  <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../754/439754.xml">
Grand Challenge</link></difficulty>
</problem>
</state>
</condition>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../798/12332798.xml">
Software lockout</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</article>
