<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:43:30[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Timeline of virtualization development</title>
<id>6967890</id>
<revision>
<id>218539920</id>
<timestamp>2008-06-11T02:34:16Z</timestamp>
<contributor>
<username>SF007</username>
<id>6059244</id>
</contributor>
</revision>
<categories>
<category>Wikipedia articles needing rewrite</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-content" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40px" src="Crystal_Clear_app_kedit.svg">
<caption>

Notepad
</caption>
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>To comply with Wikipedia's , this article may need to be rewritten.</b>
Reason: <it>Content dealing with recent events is hard to understand, not a timeline, strangely formatted, and contains unsourced speculations and hopes.</it>Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Timeline_of_virtualization_development&amp;action=edit">
improve this article</weblink>. The may contain suggestions.</col>
</row>
</table>


<sec>
<st>
 Timelines </st>

<p>

<b>Note:</b> This timeline is missing data for important historical systems, including: <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../548/19278548.xml">
Atlas Computer (Manchester)</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, <link xlink:type="simple" xlink:href="../659/58659.xml">
GE 645</link>, Burroughs <link xlink:type="simple" xlink:href="../693/332693.xml">
B5000</link></p>
<p>

<list>
<entry level="1" type="bullet">

 1964</entry>
<entry level="2" type="bullet">

 IBM <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
 begins development of <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>.</entry>
<entry level="1" type="bullet">

 1965</entry>
<entry level="2" type="bullet">

 <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link>, experimental paging system, in use at <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../125/1400125.xml">
Thomas J. Watson Research Center</link></facility>
</artifact>
</structure>
.</entry>
<entry level="2" type="bullet">

 IBM announces the <link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link>, a 32-bit CPU with virtual memory hardware (August 1965).</entry>
<entry level="1" type="bullet">

 1966</entry>
<entry level="2" type="bullet">

 IBM ships the S/360-67 computer in June 1966</entry>
<entry level="2" type="bullet">

 IBM begins work on CP-67, a reimplementation of CP-40 for the S/360-67.</entry>
<entry level="1" type="bullet">

 1967</entry>
<entry level="2" type="bullet">

 CP-40 (January) and CP-67 (April) go into production time-sharing use.</entry>
<entry level="1" type="bullet">

 1968</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 installed at eight initial customer sites.</entry>
<entry level="2" type="bullet">

 CP/CMS submitted to <link xlink:type="simple" xlink:href="../204/7218204.xml">
IBM Type-III Library</link> by MIT's <link xlink:type="simple" xlink:href="../536/637536.xml">
Lincoln Laboratory</link>, making system available to all IBM S/360 customers at no charge in source code form.</entry>
<entry level="2" type="bullet">

 Resale of CP/CMS access begins at <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> vendor <company wordnetid="108058098" confidence="0.8">
<enterprise wordnetid="108056231" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../513/6190513.xml">
National CSS</link></institution>
</business>
</enterprise>
</company>
 (becoming a distinct version, eventually renamed <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/6190581.xml">
VP/CSS</link></O>
).</entry>
<entry level="1" type="bullet">

 1970</entry>
<entry level="2" type="bullet">

 IBM <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> announced (June) &ndash; <it>without</it> virtual memory.</entry>
<entry level="2" type="bullet">

 Work begins on CP-370, a complete reimplementation of CP-67, for use on the System/370 series.</entry>
<entry level="1" type="bullet">

 1971</entry>
<entry level="2" type="bullet">

 First <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> shipped: S/370-155 (January).</entry>
<entry level="1" type="bullet">

 1972</entry>
<entry level="2" type="bullet">

 Announcement of virtual memory added to <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> series.</entry>
<entry level="2" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link></O>
 announced &ndash; and running on announcement date. VM/370 includes the ability to run VM under VM (previously implemented both at IBM and at user sites under CP/CMS, but not made part of standard releases).</entry>
<entry level="1" type="bullet">

 1973</entry>
<entry level="2" type="bullet">

 First shipment of announced virtual memory S/370 models (April: -158, May: -168).</entry>
<entry level="1" type="bullet">

 1974-1998</entry>
<entry level="2" type="bullet">

 [ongoing history of [[VM (operating system)|VM]] family and [[VP/CSS]].]</entry>
<entry level="1" type="bullet">

 1985</entry>
<entry level="2" type="bullet">

 October 9, 1985: Announcement of the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../054/15054.xml">
Intel 80286</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
-based <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../411/1275411.xml">
AT&amp;T 6300+</link></institution>
</company>
 with <link xlink:type="simple" xlink:href="../185/1580185.xml">
Simultask</link>, a <link xlink:type="simple" xlink:href="../216/1267216.xml">
virtual machine monitor</link> developed by <link xlink:type="simple" xlink:href="../250/19572250.xml">
Locus Computing Corporation</link> in collaboration with <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../269/17555269.xml">
AT&amp;T</link></company>
, that enabled the direct execution of an <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../063/15063.xml">
Intel 8086</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 guest operating system under a host <link>
Unix System V Release 2 OS</link>.  Although the product was marketed with <link xlink:type="simple" xlink:href="../027/20027.xml">
Microsoft MS-DOS</link> as the guest OS, in fact the Virtual Machine could support any <link xlink:type="simple" xlink:href="../823/79823.xml">
realmode</link> operating system or standalone program (such as <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/159994.xml">
Microsoft Flight Simulator</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
) that was written using only valid 8086 instructions (not instructions introduced with the 80286).  Locus subsequently developed this technology into their "Merge" product line.</entry>
<entry level="1" type="bullet">

 1987</entry>
<entry level="2" type="bullet">

 January 1987:  A "product evaluation" version of <link xlink:type="simple" xlink:href="../185/1580185.xml">
Merge/386</link> from <link xlink:type="simple" xlink:href="../250/19572250.xml">
Locus Computing Corporation</link> was made available to OEMs.  <link xlink:type="simple" xlink:href="../185/1580185.xml">
Merge/386</link> made use of the <artifact wordnetid="100021939" confidence="0.8">
<merchandise wordnetid="103748886" confidence="0.8">
<commodity wordnetid="103076708" confidence="0.8">
<link xlink:type="simple" xlink:href="../324/641324.xml">
Virtual 8086 mode</link></commodity>
</merchandise>
</artifact>
 provided by the <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../070/15070.xml">
Intel 80386</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 processor, and supported multiple simultaneous <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual 8086 machines</link>.  The virtual machines supported unmodified guest operating systems and standalone programs such as <event wordnetid="100029378" confidence="0.8">
<social_event wordnetid="107288639" confidence="0.8">
<contest wordnetid="107456188" confidence="0.8">
<game wordnetid="100456199" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/159994.xml">
Microsoft Flight Simulator</link></psychological_feature>
</game>
</contest>
</social_event>
</event>
; but in typical usage the guest was MS-DOS with a Locus proprietary <link xlink:type="simple" xlink:href="../555/2227555.xml">
redirector</link> (also marketed for networked PCs as "PC-Interface") and a "network" driver that provided communication with a regular user-mode file server process running under the host operating system on the same machine.</entry>
<entry level="2" type="bullet">

 October 1987:  Retail Version 1.0 of Merge/386 began shipping, offered with <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../348/6141348.xml">
Microport</link></institution>
</company>
 <link>
Unix System V Release 3</link>.</entry>
<entry level="1" type="bullet">

 1988</entry>
<entry level="2" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../936/3508936.xml">
SoftPC</link></causal_agent>
</copycat>
</person>
</physical_entity>
 1.0 for Sun was introduced in 1988 by Insignia Solutions <weblink xlink:type="simple" xlink:href="http://computing-dictionary.thefreedictionary.com/Insignia+Solutions,+Inc.">
http://computing-dictionary.thefreedictionary.com/Insignia+Solutions,+Inc.</weblink></entry>
<entry level="2" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<copycat wordnetid="109964411" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../936/3508936.xml">
SoftPC</link></causal_agent>
</copycat>
</person>
</physical_entity>
 appears in its first version for Apple Macintosh. These versions (Sun and Macintosh) have only support for DOS.</entry>
<entry level="1" type="bullet">

 1997</entry>
<entry level="2" type="bullet">

 First version of <link xlink:type="simple" xlink:href="../850/2786850.xml">
Virtual PC</link> for Macintosh platform was released in June 1997 by <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../266/616266.xml">
Connectix</link></company>
</entry>
<entry level="1" type="bullet">

 1998</entry>
<entry level="2" type="bullet">

 October 26, 1998, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
 filed for a patent on their techniques, which is granted as U.S. Patent 6,397,242 <weblink xlink:type="simple" xlink:href="http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=6,397,242">
http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=6,397,242</weblink></entry>
<entry level="1" type="bullet">

 1999</entry>
<entry level="2" type="bullet">

 February 8, 1999, VMware introduced VMware Virtual Platform for the Intel IA-32 architecture.</entry>
<entry level="1" type="bullet">

 2000</entry>
<entry level="2" type="bullet">

 IBM announces <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link>, new version of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
 for IBM's 64-bit <link xlink:type="simple" xlink:href="../144/1856144.xml">
z/Architecture</link></entry>
<entry level="1" type="bullet">

 2001</entry>
<entry level="2" type="bullet">

 June, Connectix launchs its first version of Virtual PC for Windows.<weblink xlink:type="simple" xlink:href="http://www.sfgate.com/cgi-bin/article.cgi?file=/chronicle/archive/2001/04/30/BU186669.DTL&amp;type=business">
http://www.sfgate.com/cgi-bin/article.cgi?file=/chronicle/archive/2001/04/30/BU186669.DTL&amp;type=business</weblink></entry>
<entry level="2" type="bullet">

 July, VMWare created the first <link xlink:type="simple" xlink:href="../198/34198.xml">
x86</link> server virtualization product.<weblink xlink:type="simple" xlink:href="http://www.vmware.com/news/releases/gsx_win_release.html">
http://www.vmware.com/news/releases/gsx_win_release.html</weblink></entry>
<entry level="1" type="bullet">

 2003</entry>
<entry level="2" type="bullet">

 February 18, 2003, Microsoft acquired virtualization technologies (Virtual PC and unreleased product called "Virtual Server") from Connectix Corporation. <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/presspass/press/2003/Feb03/02-19PartitionPR.mspx">
http://www.microsoft.com/presspass/press/2003/Feb03/02-19PartitionPR.mspx</weblink></entry>
<entry level="2" type="bullet">

 Late 2003, EMC acquired VMware for $635 million.</entry>
<entry level="2" type="bullet">

 Late 2003, VERITAS acquired Ejascent for $59 million.</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/presspass/press/2003/nov03/11-10VPC2004RTMPR.mspx">
November 10, 2003</weblink> <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 releases <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../015/312015.xml">
Microsoft Virtual PC</link></software>
, which is machine-level virtualization technology, to ease the transition to Windows XP.</entry>
<entry level="1" type="bullet">

 2005</entry>
<entry level="2" type="bullet">

 HP releases <link xlink:type="simple" xlink:href="../017/8236017.xml">
Integrity Virtual Machines</link> 1.0 and 1.2 which ran only <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vmware.com/news/releases/player_beta.html">
October 24, 2005</weblink> VMware releases <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../178/6011178.xml">
VMware Player</link></software>
, a free player for virtual machines, to the masses.</entry>
<entry level="1" type="bullet">

 2006</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vmware.com/news/releases/server.html">
July 12, 2006</weblink> VMware releases <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../257/8175257.xml">
VMware Server</link></software>
, a free machine-level virtualization product for the server market.</entry>
<entry level="2" type="bullet">

 Microsoft Virtual PC 2006 is released as a free program, also in July.</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/presspass/press/2006/jul06/07-17SoftricityPR.mspx">
July 17, 2006</weblink> <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 bought <link xlink:type="simple" xlink:href="../889/10541889.xml">
Softricity</link>. </entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vmware.com/news/releases/uvac_winners.html">
August 16, 2006</weblink> VMware announces of the winners of the virtualization appliance contest.</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://biz.yahoo.com/prnews/060926/sftu096.html?.v=70">
September 26, 2006</weblink> <link xlink:type="simple" xlink:href="../741/12077741.xml">
moka5</link> delivers <link xlink:type="simple" xlink:href="../700/7174700.xml">
LivePC</link> technology.</entry>
<entry level="2" type="bullet">

 HP releases <link xlink:type="simple" xlink:href="../017/8236017.xml">
Integrity Virtual Machines</link> Version 2.0, which supports Windows Server 2003, CD and DVD burners, tape drives and VLAN.</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualiron.com/news_events/releaseDate-121106_Version3_1.cfm">
December 11, 2006</weblink> <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../242/8890242.xml">
Virtual Iron</link></institution>
</company>
 releases Virtual Iron 3.1, a free bare metal virtualization product for enterprise server virtualization market.</entry>
<entry level="1" type="bullet">

 2007</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualbox.org/wiki/News">
January 15, 2007</weblink> <weblink xlink:type="simple" xlink:href="http://www.innotek.de/">
innoTek</weblink> released <link xlink:type="simple" xlink:href="../260/8934260.xml">
VirtualBox</link> Open Source Edition (OSE), the first professional PC virtualization solution released as open source under the GNU General Public License (<link xlink:type="simple" xlink:href="../683/18938683.xml">
GPL</link>). It includes some code from the <link xlink:type="simple" xlink:href="../669/1465669.xml">
Qemu</link> project.</entry>
<entry level="1" type="bullet">

 2008</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vmware.com/company/news/releases/thinstall.html">
January 15, 2008</weblink> <weblink xlink:type="simple" xlink:href="http://www.vmware.com/">
VMware, Inc.</weblink> announced it has entered into a definitive agreement to acquire <weblink xlink:type="simple" xlink:href="http://www.thinstall.com/">
Thinstall</weblink>, a privately-held <link xlink:type="simple" xlink:href="../251/5299251.xml">
application virtualization</link> software company.</entry>
<entry level="2" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sun.com/aboutsun/pr/2008-02/sunflash.20080212.1.xml">
February 12, 2008</weblink> <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
 announced that it had entered into a stock purchase agreement to acquire <weblink xlink:type="simple" xlink:href="http://www.innotek.de/">
innotek</weblink>, makers of <link xlink:type="simple" xlink:href="../260/8934260.xml">
VirtualBox</link>.</entry>
<entry level="2" type="bullet">

 In April, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
 releases <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../250/8175250.xml">
VMware Workstation</link></software>
 6.5 beta, the first program for Windows and Linux to enable DirectX 9 accelerated graphics on Windows XP guests <weblink xlink:type="simple" xlink:href="http://www.vmware.com/products/beta/ws/releasenotes_ws65_beta.html">
http://www.vmware.com/products/beta/ws/releasenotes_ws65_beta.html</weblink>.</entry>
</list>
</p>

<ss1>
<st>
 Year 1960 </st>

<p>

<indent level="1">

<it>Main articles: <link xlink:type="simple" xlink:href="../207/7506207.xml">
IBM CP-40</link>,&#32;<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
,&#32;<link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link>,&#32;and&#32;<link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link></it>
</indent>
In the mid 1960s, IBM's <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
 developed <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>, the first version of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
. It went into production use in January 1967. From its inception, <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> was intended to implement <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link>. Doing so required hardware and microcode customization on a S/360-40, to provide the necessary address translation and other virtualization features. Experience on the <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> project provided input to the development of the <link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link>, announced in 1965 (along with its ill-starred operating system, <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link>). <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> was reimplemented for the S/360-67 as CP-67, and by April 1967, both versions were in daily production use. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was made generally available to IBM customers in source code form, as part of the unsupported <link xlink:type="simple" xlink:href="../204/7218204.xml">
IBM Type-III Library</link>, in 1968.</p>

</ss1>
<ss1>
<st>
 Year 1970 </st>

<p>

<indent level="1">

<it>Main articles: <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>,&#32;<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM (operating system)</link></O>
,&#32;<link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link>,&#32;and&#32;<link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link></it>
</indent>
IBM announced the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link> in 1970. To the disappointment of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 users &ndash; as with the <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link> announcement &ndash; the series would not include <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>. In 1972, IBM changed direction, announcing that the option would be made available on all S/370 models, and also announcing several virtual storage operating systems, including <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link></O>
. By the mid-1970s, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
, VM, and the maverick <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/6190581.xml">
VP/CSS</link></O>
 were running on a numerous large IBM mainframes. By the late 80s, there were reported to be more VM licenses than <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link> licenses.</p>

</ss1>
<ss1>
<st>
 Year 1999 </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../179/996179.xml">
x86 virtualization</link></it>
</indent>
On <link xlink:type="simple" xlink:href="../360/11360.xml">
February 8</link>, <link xlink:type="simple" xlink:href="../553/34553.xml">
1999</link>, VMware introduced the first <link xlink:type="simple" xlink:href="../179/996179.xml">
x86 virtualization</link> product, <it>VMware Virtual Platform</it>, based on earlier research by its founders at <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../977/26977.xml">
Stanford University</link></university>
.</p>

</ss1>
<ss1>
<st>
 Year 2005 </st>

<ss2>
<st>
 Free desktop virtualization </st>
<p>

Previously, a substantial licensing fee was required for the use of VMware's Workstation product.  VMware decided to provide high quality virtualization technology to everyone for free.  They omitted the ability to create virtual machines and did not distribute the acceleration tools that come with VMware workstation.  This early corporate play to encourage consumer applications of virtualization went largely unnoticed.</p>

</ss2>
</ss1>
<ss1>
<st>
 Year 2006 </st>
<p>

This year <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link> has a new level of playing field in <link xlink:type="simple" xlink:href="../251/5299251.xml">
Application Virtualization</link> and <link xlink:type="simple" xlink:href="../485/6973485.xml">
Application Streaming</link>.</p>

</ss1>
<ss1>
<st>
 Year 2008</st>
<p>

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/312018.xml">
VMware</link></company>
 releases <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../250/8175250.xml">
VMware Workstation</link></software>
 6.5 beta, the first program for Windows and Linux to enable DirectX 9 accelerated graphics on Windows XP guests <weblink xlink:type="simple" xlink:href="http://www.vmware.com/products/beta/ws/releasenotes_ws65_beta.html">
http://www.vmware.com/products/beta/ws/releasenotes_ws65_beta.html</weblink>.</p>

<ss2>
<st>
 Overview </st>
<p>

As an overview, there are three levels of virtualization:
<list>
<entry level="1" type="bullet">

 At the <link xlink:type="simple" xlink:href="../833/1582833.xml">
hardware level</link>, the VMs can run multiple guest OSes. This is best used for testing and training that require networking interoperability between more than one OSes, since not only the guest OS can be different than the host OS, it can run as many guest OS as long as there is enough CPU, RAM and HDD space. <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../259/18622259.xml">
IBM</link></company>
 introduced this around 1990 under the name <link xlink:type="simple" xlink:href="../383/2301383.xml">
logical partitioning</link> (LPAR), at first only in the mainframe field.</entry>
<entry level="1" type="bullet">

 At the <link xlink:type="simple" xlink:href="../340/2770340.xml">
operating system level</link>, it can only virtualize one OS: the guest OS is the host OS. This is similar to having many <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../110/16575110.xml">
terminal server</link></software>
 sessions without locking down the desktop. Thus, this is the best of both world, having the speed of a <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../110/16575110.xml">
TS</link></software>
 session with the benefit of a full access to the desktop as virtual machine, where the user can still control the <b>quotas</b> for CPU, RAM and HDD. Similar to the hardware level, this is still consider a <b>Server Virtualization</b> where each guest OS has its own IP address, so it can be used for networking applications such as for <link>
web hosting</link>.</entry>
<entry level="1" type="bullet">

 At the <link xlink:type="simple" xlink:href="../069/4256069.xml">
application level</link>, it is running on the Host OS directly, without any guest OS, which can be in a locked down desktop, including in a <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../110/16575110.xml">
terminal server</link></software>
 session. This is called Application Virtualization or Desktop Virtualization, which virtualizes the front-end, whereas Server Virtualization virtualizes the back-end. Now, Application Streaming refers to delivering applications directly onto the desktop and running them locally. Traditionally in <link xlink:type="simple" xlink:href="../072/1852072.xml">
terminal server computing</link>, the applications are running on the server, not locally, and streaming the screenshots onto the desktop.</entry>
</list>
</p>

</ss2>
<ss2>
<st>
 Application virtualization </st>
<p>

Application Virtualization solutions such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/17661658.xml">
VMware ThinApp</link></software>
, <weblink xlink:type="simple" xlink:href="http://www.softricity.com">
Softricity</weblink>, and <weblink xlink:type="simple" xlink:href="http://www.trigence.com/">
Trigence</weblink> attempt to separate application specific files and settings from the host operating system, thus allowing them to run in more-or-less isolated sandboxes without installation and without the memory and disk overhead of full machine virtualization.  <link xlink:type="simple" xlink:href="../251/5299251.xml">
Application Virtualization</link> is tightly tied to the host OS and thus does not translate to other operating systems or hardware.  VMware ThinApp and Softricity are Intel Windows centric, while Trigence supports Linux and Solaris.  Unlike machine virtualization, Application virtualization does not use code emulation or translation so CPU related benchmarks run with no changes, though fileystem benchmarks may experience some performance degradation.  On Windows, VMware ThinApp and Softricity essentially work by intercepting filesystem and registry requests by an application and redirecting those requests to a preinstalled isolated sandbox, thus allowing the application to run without installation or changes to the local PC.  Though VMware ThinApp and Softricity both began independent development around 1998, behind the scenes VMware ThinApp and Softricity are implemented using different techniques:
<list>
<entry level="1" type="bullet">

 VMware ThinApp works by packaging an application into a single "packaged" EXE which includes the runtime plus the application data files and registry.  VMware ThinApp’s runtime is loaded by Windows as a normal Windows application, from there the runtime replaces the Windows loader, filesystem, and registry for the target application and presents a merged image of the host PC as if the application had been previously installed. VMware ThinApp replaces all related API functions for the host application, for example the ReadFile API supplied to the application must pass through VMware ThinApp before it reaches the operating system.  If the application is reading a virtual file, VMware ThinApp handles the request itself otherwise the request will be passed on to the operating system.  Because VMware ThinApp is implemented in user-mode without device drivers and it does not have a client that is preinstalled, applications can run directly from USB Flash or network shares without previously needing elevated security privileges.</entry>
<entry level="1" type="bullet">

 Softricity (acquired by Microsoft) operates on a similar principle using device drivers to intercept file request in ring0 at a level closer to the operating system.  Softricity installs a client in Administrator mode which can then be accessed by restricted users on the machine.  An advantage of virtualizing at the kernel level is the Windows Loader (responsible for loading EXE and DLL files) does not need to be reimplemented and greater application compatibility can be achieved with less work (Softricity claims to support most major applications).  A disadvantage for ring0 implementation is it requires elevated security privileges to be installed and crashes or security defects can occur system wide rather than being isolated to a specific application.</entry>
</list>

Because Application Virtualization runs all application code natively, it can only provide security guarantees as strong as the host OS is able to provide.   Unlike full machine virtualization, Application virtualization solutions currently do not work with device drivers and other code that runs at ring0 such as virus scanners.  These special applications must be installed normally on the host PC in order to function.</p>

</ss2>
<ss2>
<st>
 Managed runtimes </st>

<p>

Another technique sometimes referred to as virtualization, is portable byte code execution using a standard portable native runtime (aka Managed Runtimes).  The two most popular solutions today include <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
 and <link xlink:type="simple" xlink:href="../164/3582164.xml">
.NET</link>.  These solutions both use a process called <link xlink:type="simple" xlink:href="../946/220946.xml">
JIT</link> (Just in time) compilation to translate code from a virtual portable machine language into the local processor’s native code.  This allows applications to be compiled for a single architecture and then run on many different machines.  Beyond machine portable applications, an additional advantage to this technique includes strong security guarantees.  Because all native application code is generated by the controlling environment, it can be checked for correctness (possible security exploits) prior to execution.  Programs must be originally designed for the environment in question or manually rewritten and recompiled to work for these new environments.  For example, one cannot automatically convert or run a Windows / Linux native app on .NET or Java.  Because portable runtimes try to present a common API for applications for a wide variety of hardware, applications are less able to take advantage of OS specific features.  Portable application environments also have higher memory and CPU overheads than optimized native applications, but these overheads are much smaller compared with full machine virtualization.  Portable Byte Code environments such as Java have become very popular on the server where a wide variety of hardware exist and the set of OS-specific APIs required is standard across most Unix and Windows flavors.  Another popular feature among managed runtimes is garbage collection, which automatically detects unused data and reclaims it without the developer having to explicitly invoke free operations.</p>

</ss2>
<ss2>
<st>
 Neutral view of application virtualization </st>
<p>

Given the <weblink xlink:type="simple" xlink:href="http://en.wikipedia.org/w/index.php?title=Virtualization_Development&amp;oldid=76696530">
industry-biased in the past</weblink>, to be more neutral, there are also two other ways to look at the Application Level:
<list>
<entry level="1" type="bullet">

 The first type is <b>application packagers</b> (VMware ThinApp, Softricity) whereas the other is <b>application compilers</b> (Java and Dot Net). Because it is a packager, it can be used to stream applications without modifying the source code, whereas the latter can only be used to compile the source code.</entry>
<entry level="1" type="bullet">

 Another way to look at is through the <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link> point of view. The first one is "hypervisor" in <b>user mode</b>, whereas the other is "hypervisor" in <b>runtime mode</b>. The hypervisor was put in quotation, because both of them have similar behavior in that it intercepts system calls in different mode: user mode and runtime mode. The user mode intercepts the system calls from the runtime mode before going to kernel mode. The <b>real hypervisor</b> only needs to intercept the system call using <weblink xlink:type="simple" xlink:href="http://wiki.xensource.com/xenwiki/hypercall">
hypercall</weblink> in kernel mode. Hopefully, once Windows have a <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link>, <link xlink:type="simple" xlink:href="../216/1267216.xml">
Virtual machine monitor</link>, there may even be no need for JRE and CLR. Moreover, in Linux case, maybe the <link xlink:type="simple" xlink:href="../389/16389.xml">
JRE</link> can be modified to run on top of the Hypervisor as a <link xlink:type="simple" xlink:href="../658/371658.xml">
loadable kernel module</link> running in <link xlink:type="simple" xlink:href="../510/18510.xml">
kernel</link> mode, instead of the having the legacy runtime turtling around, running really slowly, in user mode. Now, if it were running on top of the <link>
Linux Hypervisor</link> directly, then it should be called <link>
Java OS</link>, not just another <b>runtime mode</b> <link xlink:type="simple" xlink:href="../632/220632.xml">
JIT</link>.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../170/15250170.xml">
Mendel Rosenblum</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> called the <b>runtime mode</b> as High-level language virtual machines in August 2004. However, at that time, the first type, intercepting system calls in user mode, was irresponsible and unthinkable, so he didn't mention it on his article. Hence, <link xlink:type="simple" xlink:href="../485/6973485.xml">
Application Streaming</link> was still mysterious in 2004.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> Now, when the <link xlink:type="simple" xlink:href="../389/16389.xml">
JVM</link>, no longer High-level language virtual machines, becomes <link>
Java OS</link> running on <link>
Linux Hypervisor</link>, then Java Applications will have a new level of playing field, just as Windows Applications already has with <link xlink:type="simple" xlink:href="../889/10541889.xml">
Softricity</link>.</entry>
<entry level="1" type="bullet">

 In summary, the first one is virtualizing the <link xlink:type="simple" xlink:href="../957/19661957.xml">
Binary Code</link> so that it can be <b>installed once and run anywhere</b>, whereas the other is virtualizing the <link>
Source Code</link> using <link xlink:type="simple" xlink:href="../997/89997.xml">
Byte code</link> or <link xlink:type="simple" xlink:href="../801/1750801.xml">
Managed code</link> so that it can be <b>written once and run anywhere</b>. Both of them are actually partial solution to portability problem: application portability and source code portability. Maybe it is time to combine the two problems into one complete solution at the <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link> level in the <link xlink:type="simple" xlink:href="../394/50394.xml">
kernel</link> mode.</entry>
</list>
</p>

</ss2>
<ss2>
<st>
Further development</st>
<p>

However, the mysterious <link xlink:type="simple" xlink:href="../485/6973485.xml">
Application Streaming</link> will soon become very popular, because <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 had just bought <link xlink:type="simple" xlink:href="../889/10541889.xml">
Softricity</link> on <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/presspass/press/2006/jul06/07-17SoftricityPR.mspx">
July 17, 2006</weblink>. Because of this, Traditional Rich Windows Applications will have a <b>new level of playing field</b> with the Web Applications and the Java Applications with respect to the ease of distributions (i.e. no more setup required, just click and run). Soon the frowned-upon will become the cheered-upon as every <link xlink:type="simple" xlink:href="../389/16389.xml">
JRE</link> and <link xlink:type="simple" xlink:href="../003/46003.xml">
CLR</link> will just be running virtually on the user mode without kernel mode drivers being installed and updated such that there can even be multiple versions of <link xlink:type="simple" xlink:href="../389/16389.xml">
JRE</link> and <link xlink:type="simple" xlink:href="../003/46003.xml">
CLR</link> in HDD as well as in RAM.</p>
<p>

Nevertheless, this frowned and cheered-upon <link xlink:type="simple" xlink:href="../942/223942.xml">
Rootkit</link> technique such as <link xlink:type="simple" xlink:href="../223/1944223.xml">
filter driver</link><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> maybe made obsolete once the <link>
Linux Hypervisor</link> is integrated into the <link xlink:type="simple" xlink:href="../510/18510.xml">
Linux Kernel</link> and the <link>
Window Server Virtualization</link> integrates the <link>
Windows Hypervisor</link> with the <link xlink:type="simple" xlink:href="../523/1942523.xml">
Windows Kernel</link>. This may take a while as the Linux Hypervisor are still waiting for the Xen <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link> and VMware <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link> to be <weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0,1895,1994793,00.asp">
fully compatible with each other</weblink> as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../591/22591.xml">
Oracle</link></company>
 <weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0%2C1895%2C1996904%2C00.asp">
impatiently pounding at the door</weblink> to let the Hypervisor come into the Linux Kernel so that it can full steam ahead with its <link xlink:type="simple" xlink:href="../373/49373.xml">
Grid Computing</link> life. Meanwhile, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
 have made their choice to be fully compatible with the Xen <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link>
<weblink xlink:type="simple" xlink:href="http://www.eweek.com/article2/0,1895,1990366,00.asp">
http://www.eweek.com/article2/0,1895,1990366,00.asp</weblink>. IBM, of course, doesn't just <weblink xlink:type="simple" xlink:href="http://news.zdnet.com/2100-3513_22-5588129.html">
sit idle</weblink> as it is working with VMware for the x86 servers, and possibly helping Xen to move from x86 into <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../570/60570.xml">
IBM's POWER</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 using the open source <link>
rHype</link>.
Now, to make the <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link> party to become a full house, <link xlink:type="simple" xlink:href="../179/996179.xml">
Intel's Vanderpool and AMD's Pacifica</link> are hoping to ease and speed up paravirtualization so that guest OS can be run unmodified.</p>

</ss2>
</ss1>
</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=168">
The Reincarnation of Virtual Machines</weblink> ACM Queue vol. 2, no. 5 - July/August 2004 -- by Mendel Rosenblum, Standford University and VMWare</entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.zdnetasia.com/insight/software/0,39044822,39175522,00.htm">
Application streaming anyone?</weblink>
By Brien M. Posey MCSE, Special to ZDNet Asia Wednesday, April 14 2004 03:55 PM.</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc/driver/filterdrv/default.mspx">
File System Filter Driver</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../356/18311356.xml">
Virtualization</link></entry>
<entry level="2" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../179/996179.xml">
X86 virtualization</link></machine>
</device>
</instrumentality>
</artifact>
 — hardware-assisted virtualization.</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../216/1267216.xml">
Virtual machine monitor</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../833/1582833.xml">
Comparison of virtual machines</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../340/2770340.xml">
Operating system-level virtualization</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../069/4256069.xml">
Comparison of Application Virtual Machines</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../558/1042558.xml">
Emulation</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../799/5967799.xml">
Physical-to-Virtual</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual Tape Library</link></entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<link xlink:type="simple" xlink:href="../933/3342933.xml">
IBM SAN Volume Controller</link></device>
</instrumentality>
</artifact>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://networkcomputing.com/article/printFullArticle.jhtml;jsessionid=UIMHZ2V1NMPRKQSNDLRSKHSCJUNN2JVN?articleID=192202544">
 Application Virtualization: Streamlining Distribution</weblink> <link xlink:type="simple" xlink:href="../711/1711.xml">
August 31</link>, <link xlink:type="simple" xlink:href="../164/36164.xml">
2006</link> -- By James Drews</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=168">
The Reincarnation of Virtual Machines</weblink> ACM Queue vol. 2, no. 5 - July/August 2004 -- by Mendel Rosenblum, Standford University and VMWare</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.xensource.com/files/xensource_wp.pdf#search=%22xen%20art%20of%20virtualization%22">
Xen—the Art of Virtualization</weblink> from co-author <weblink xlink:type="simple" xlink:href="http://research.microsoft.com/~tharris/papers/2003-sosp.pdf">
Tim Harris</weblink> Microsoft Research Cambridge (UK)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc/system/platform/virtual/default.mspx">
Windows Virtualization</weblink> from Microsoft</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualiron.com/products/index.cfm">
Virtual Iron Native Virtualization</weblink> from Virtual Iron</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.vmware.com/pdf/virtualization.pdf#search=%22hypervisor%20VMware%20virtualization%20layer%22">
Virtualization Overview</weblink> from VMware</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.kernelthread.com/publications/virtualization/">
An introduction to Virtualization</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.jsequeira.com/cgi-bin/virtualization/">
Virtualization Faceted Wiki</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://rentzsch.com/notes/virtualizationAsAnAntivirus">
Weblog post</weblink> on the how virtualization can be used to implement <link xlink:type="simple" xlink:href="../900/879900.xml">
Mandatory Access Control</link>.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://research.ihost.lv/osihpa-hensbergen.pdf">
The Effect of Virtualization on OS Interference</weblink> in PDF format.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.beagle-ears.com/lars/engineer/comphist/ibm360.htm">
VM/360 history</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.multicians.org/thvv/360-67.html">
 VM/360 history</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.virtualbox.org/">
VirtualBox</weblink></entry>
</list>
</p>
</sec>
</bdy>
</article>
