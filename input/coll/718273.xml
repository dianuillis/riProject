<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:35:27[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Design for Six Sigma</title>
<id>718273</id>
<revision>
<id>240263337</id>
<timestamp>2008-09-22T18:36:32Z</timestamp>
<contributor>
<username>Secretlondon</username>
<id>21834</id>
</contributor>
</revision>
<categories>
<category>Quality</category>
<category>Design</category>
</categories>
</header>
<bdy>

<b>Design for Six Sigma</b> (<b>DFSS</b>) is a separate and emerging business-process management methodology related to traditional <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../448/222448.xml">
Six Sigma</link></method>
</know-how>
. While the tools and order used in Six Sigma require a process to be in place and functioning, DFSS has the objective of determining the needs of customers and the business, and driving those needs into the product solution so created.  DFSS is relevant to the complex system/product synthesis phase, especially in the context of unprecedented system development. It is process <it>generation</it> in contrast with process <it>improvement</it>.<p>

<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link>
DMADV</link></method>
</know-how>
, <b>D</b>efine – <b>M</b>easure – <b>A</b>nalyze – <b>D</b>esign – <b>V</b>erify, is sometimes synonymously referred to as DFSS.  The traditional DMAIC (<b>D</b>efine – <b>M</b>easure – <b>A</b>nalyze – <b>I</b>mprove – <b>C</b>ontrol) Six Sigma process, as it is usually practiced, which is focused on evolutionary and <link xlink:type="simple" xlink:href="../693/13984693.xml">
continuous improvement</link> manufacturing or service process development, usually occurs after initial system or product design and development have been largely completed.  DMAIC Six Sigma as practiced is usually consumed with solving existing manufacturing or service process problems and removal of the defects and variation associated with defects.  On the other hand, DFSS (or DMADV) strives to generate a new process where none existed, or where an existing process is deemed to be inadequate and in need of replacement.  DFSS aims to create a process with the end in mind of optimally building the efficiencies of Six Sigma methodology into the process <it>before</it> implementation; traditional Six Sigma seeks for continuous improvement <it>after</it> a process already exists.</p>

<sec>
<st>
DFSS as an approach to design</st>
<p>

DFSS seeks to avoid manufacturing/service process problems by using advanced Voice of the Customer techniques and proper systems engineering techniques to avoid process problems at the outset (i.e., fire prevention).  When combined, these methods obtain the proper needs of the customer, and derive engineering system parameter requirements that increase product and service effectiveness in the eyes of the customer.  This yields products and services that provide greater customer satisfaction and increased market share.  See for example:  http://www.sbtionline.com/OurServices/GrowthExcellence/DFSS.php  These techniques also include tools and processes to predict, model and simulate the product delivery system (the processes/tools, personnel and organization, training, facilities, and logistics to produce the product/service) as well as the analysis of the developing system life cycle itself to ensure customer satisfaction with the proposed system design solution.  In this way, DFSS is closely related to <link xlink:type="simple" xlink:href="../764/27764.xml">
systems engineering</link>, <link xlink:type="simple" xlink:href="../476/43476.xml">
operations research</link> (solving the <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../974/16974.xml">
Knapsack problem</link></difficulty>
</problem>
</state>
</condition>
), <link xlink:type="simple" xlink:href="../318/3403318.xml">
systems architecture</link> and <link xlink:type="simple" xlink:href="../246/1269246.xml">
concurrent engineering</link>. DFSS is largely a design activity requiring specialized tools including: <link xlink:type="simple" xlink:href="../456/239456.xml">
quality function deployment</link> (QFD), <link xlink:type="simple" xlink:href="../687/3309687.xml">
axiomatic design</link>, <link xlink:type="simple" xlink:href="../911/287911.xml">
TRIZ</link>, <link xlink:type="simple" xlink:href="../554/2036554.xml">
Design for X</link>, <link xlink:type="simple" xlink:href="../541/9541.xml">
design of experiments</link> (DOE), <link xlink:type="simple" xlink:href="../079/442079.xml">
Taguchi methods</link>, tolerance design, <link xlink:type="simple" xlink:href="../719/9645719.xml">
Robustification</link> and <link xlink:type="simple" xlink:href="../194/4481194.xml">
response surface methodology</link>.  While these tools are sometimes used in the classic DMAIC Six Sigma process, they are uniquely used by DFSS to analyze new and unprecedented systems/products. A graphical flowchart of common DFSS tools can be seen at <weblink xlink:type="simple" xlink:href="http://www.c2c-solutions.com/pdfs/C2CRoadmapNP.pdf">
DFSS Roadmap</weblink>.</p>

</sec>
<sec>
<st>
Arguments over the separation of DFSS from Six Sigma</st>
<p>

Proponents of DMAIC techniques might claim that DFSS falls under the general rubric of Six Sigma.  It is often seen that the tools used for DFSS techniques vary widely from those used for DMAIC Six Sigma.  In particular, DMAIC practitioners often use new or existing mechanical drawings and manufacturing process instructions as the originating information to perform their analysis, while DFSS practitioners often use system simulations and parametric system design/analysis tools to predict both cost and performance of candidate system architectures.  While it can be claimed that two processes are similar, in practice the working medium differs enough so that DFSS requires different tool sets in order to perform its system design tasks.  DMAIC Six Sigma may still be used during depth-first plunges into the system architecture analysis and for "back end" Six Sigma processes; DFSS provides system design processes used in front-end complex system designs.</p>

</sec>
<sec>
<st>
Similarities with other methods</st>
<p>

Arguments about what makes DFSS different from Six Sigma demonstrate the similarities between DFSS and other established engineering practices such as <link xlink:type="simple" xlink:href="../804/9499804.xml">
Probabilistic design</link> and design for quality. In general Six Sigma with its DMAIC roadmap focuses on improvement of an existing process or processes.  DFSS focuses on the creation of new value with inputs from customers, suppliers and business needs. While traditional Six Sigma may also use those inputs, the focus is again on improvement and not design of some new product or system. It also shows the engineering background of DFSS. However, like other methods developed in engineering, there is no theoretical reason why DFSS can't be used in areas outside of engineering.  It has been used to design processes for example.</p>

</sec>
<sec>
<st>
DFSS, applied to Software Engineering</st>
<p>

Historically, Design for Six Sigma (DFSS) was created in part because Six Sigma organisations found that they could not optimise products past three or four Sigma without, fundamentally, redesigning the product. This means that ‘Six Sigma’ levels of performance have to be ‘built-in’ or ‘by design’. The DFSS for Software Engineering is essentially a non superficial modification of <it>"classical DFSS"</it> since the character and nature of software is different from other fields of engineering. The methodology describes the detailed process for successfully applying DFSS methods and tools throughout the Software Product Design, covering the overall Software Development life cycle: Requirements, Architecture, Design, Implementation, Integration, Verification and Validation. The methodology explains how to build predictive statistical models for software reliability, robustness and shows how simulation and analysis techniques can be combined with structural design and architecture methods to effectively produce software and information systems at Six Sigma levels. </p>
<p>

DFSS in Software Engineering, acts as a glue to blend the classical modelling techniques of software engineering <it>such as OOD ERD</it> with statistical,predictive models and simulation techniques. The methodology provides Software Engineers with practical tools for measuring and predicting the quality attributes of the software product and also enables them to include software in system reliability models. It Introduces techniques and measurements from different stages of the life cycle: Requirements, Design, Implementation, Verification and Validation.</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.eng.wayne.edu/page.php?id=574">
Kai Yang</weblink> &amp; El Haik, <it>Design for Six Sigma</it>, McGraw-Hill, 2003, ISBN 0-07-141208-5</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.subirchowdhury.com">
Subir Chowdhury</weblink>, <it>The Power of Design for Six Sigma</it>, Dearborn Trade, 2002, ISBN 0-7931-6060-X</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.subirchowdhury.com">
Subir Chowdhury</weblink>, <it>Design for Six Sigma</it>, Dearborn Trade, 2002, ISBN 0-7931-5224-0</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

Stamatis, <it>Six Sigma and Beyond: Design for Six Sigma, Volume VI</it>, CRC Press, 2002, ISBN 1-57444-315-1</entry>
</list>

Define, Identify, Measure
<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.systonomy.com">
Radouane Oudrhiri</weblink>. <it>Implementing the Design For Six Sigma (DFSS) culture in an IT and Software Environment</it>, Six Sigma in Software &amp; IT, WBCF Publication, San Francisco 2006.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.systonomy.com">
Radouane Oudrhiri</weblink>. <it>DFSS for Software Engineering</it>, Oudrhiri R, Six Sigma for IT &amp; Software Development,  IQPC Publication, Hilton Northbrook, Northbrook, IL 2006.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Notes </st>
<p>


</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 http://www.spcpress.com/pdf/The_Final_6_Sigma_Zone.pdf</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 http://www.sbtionline.com/OurServices/GrowthExcellence/DFSS.php  </entry>
</list>
</p>



</sec>
</bdy>
</article>
