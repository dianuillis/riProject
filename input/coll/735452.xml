<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:35:32[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<header>
<title>McEliece cryptosystem</title>
<id>735452</id>
<revision>
<id>227396406</id>
<timestamp>2008-07-23T12:00:43Z</timestamp>
<contributor>
<username>SmackBot</username>
<id>433328</id>
</contributor>
</revision>
<categories>
<category>Articles with invalid date parameter in template</category>
<category>All articles to be expanded</category>
<category>Articles to be expanded since July 2008</category>
<category>Asymmetric-key cryptosystems</category>
<category>Electronic commerce</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link>, the <b>McEliece cryptosystem</b> is an <link xlink:type="simple" xlink:href="../222/24222.xml">
asymmetric key algorithm</link> developed in <link xlink:type="simple" xlink:href="../753/34753.xml">
1978</link> by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<theorist wordnetid="110706812" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../291/2151291.xml">
Robert McEliece</link></decoder>
</mathematician>
</scientist>
</causal_agent>
</intellectual>
</theorist>
</cryptanalyst>
</person>
</physical_entity>
. The algorithm has never gained much acceptance in the cryptographic community.<p>

The algorithm uses <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<link xlink:type="simple" xlink:href="../683/1882683.xml">
Goppa code</link></shape>
</geographical_area>
</line>
</tract>
</location>
</curve>
</field>
</region>
s, which are a type of <link>
error-correcting code</link> (see <link xlink:type="simple" xlink:href="../869/321869.xml">
coding theory</link>). The algorithm disguises a Goppa code made from the plaintext as a general linear code. Goppa codes are easy to decode, but distinguishing them from a general linear code is hard. This is McEliece's hard problem.</p>
<p>

The private and public keys are large matrices, which is one of the main disadvantages of the algorithm. The public key is very large: 219 bits long.</p>
<p>

Attempts have been made to cryptanalyze McEliece, but none have been successful. However, the algorithm is rarely used in practice because of the massive keys. One exceptional case that uses McEliece for encryption is the <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../997/10997.xml">
Freenet</link></software>
-like application <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../296/812296.xml">
Entropy (anonymous data store)</link></software>
.</p>

<sec>
<st>
Scheme definition</st>

<p>

McEliece consists of three algorithms: a probabilistic key generation algorithm which produces a public and a private key, a probabilistic encryption algorithm, and a deterministic decryption algorithm.  </p>
<p>

All users in a McEliece deployment share a set of common security parameters: <math>n, t, k</math>.  Recommended values for these parameters are <math>n=1024, t=38, k=644</math> (source: Handbook of Applied Cryptography).</p>

<ss1>
<st>
Key generation</st>

<p>

<list>
<entry level="1" type="number">

Users select a binary <math>(n, k)</math>-linear code <math>C</math> capable of correcting <math>t</math> errors.  This code must possess an efficient decoding algorithm.</entry>
<entry level="1" type="number">

Alice generates a <math>k \times n</math> generator matrix <math>G</math> for the code <math>C</math>.</entry>
<entry level="1" type="number">

Select a random <math>k \times k</math> binary non-singular matrix <math>S</math>.</entry>
<entry level="1" type="number">

Select a random <math>n \times n</math> permutation matrix P.</entry>
<entry level="1" type="number">

Compute the <math>k \times n</math> matrix <math>{\hat G} = SGP</math>.</entry>
<entry level="1" type="number">

Aliceâ€™s public key is <math>({\hat G}, t)</math>; her private key is <math>(S, G, P)</math>.</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Message encryption </st>

<p>

Suppose Bob wishes to send a message <it>m</it> to Alice whose public key is <math>({\hat G}, t)</math>:</p>
<p>

<list>
<entry level="1" type="number">

Encode the message as a binary string of length <math>k</math>.</entry>
<entry level="1" type="number">

Compute the vector <math>c^{\prime} = m{\hat G}</math>.</entry>
<entry level="1" type="number">

Generate a random <math>n</math>-bit vector <math>z</math> containing at most <math>t</math> ones.</entry>
<entry level="1" type="number">

Compute the ciphertext as <math>c = c^{\prime} + z</math>. '+' is XOR operator</entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Message decryption </st>

<p>

<list>
<entry level="1" type="number">

Compute the inverse of <math>P</math>, <math>P^{-1}</math>.</entry>
<entry level="1" type="number">

Compute <math>{\hat c} = cP^{-1}</math>.</entry>
<entry level="1" type="number">

Use the decoding algorithm for the code <math>C</math> to decode <math>{\hat c}</math> to <math>{\hat m}</math>.</entry>
<entry level="1" type="number">

Compute <math>m = {\hat m}S^{-1}</math>.</entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 Alfred J. Menezes, Scott A. Vanstone, A. J. Menezes and Paul C. van Oorschot, Handbook of Applied Cryptography.  </entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cacr.math.uwaterloo.ca/hac/about/chap8.pdf">
The "Handbook of Applied Cryptography" chapter that deals with the McEliece cryptosystem.</weblink> (PDF); <weblink xlink:type="simple" xlink:href="http://www.cacr.math.uwaterloo.ca/hac/about/chap8.ps">
Postscript version.</weblink></entry>
</list>
</p>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-notice" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Wiki_letter_w.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=McEliece_cryptosystem&amp;action=edit">
improve this article or section</weblink> by expanding it.</b> Further information might be found on the  or at . 
<it>(July 2008)''</it></col>
</row>
</table>

</p>


</sec>
</bdy>
</entity>
</article>
