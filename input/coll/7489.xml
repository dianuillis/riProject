<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:24:13[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Collation</title>
<id>7489</id>
<revision>
<id>240319682</id>
<timestamp>2008-09-22T23:30:52Z</timestamp>
<contributor>
<username>Rjwilmsi</username>
<id>203434</id>
</contributor>
</revision>
<categories>
<category>Collation</category>
<category>Character encoding</category>
</categories>
</header>
<bdy>

"Alphabetical" redirects here.&#32;&#32;For the type of writing system, see <link xlink:type="simple" xlink:href="../670/670.xml">
Alphabet</link>.  For the album, see <album wordnetid="106591815" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../570/1329570.xml">
Alphabetical (album)</link></album>
.
"A-Z" redirects here. For the UK atlas publisher, see <link>
Geographer's A–Z Street Atlas</link>.
"Dictionary order" redirects here. For the mathematical order on sets, see <link xlink:type="simple" xlink:href="../667/567667.xml">
Lexicographical order</link>.
This article is about collation in <link xlink:type="simple" xlink:href="../569/18933569.xml">
library and information science</link> and <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link>.&#32;&#32;For other uses, see <link xlink:type="simple" xlink:href="../178/9485178.xml">
Collation (disambiguation)</link>.<p>

<b>Collation</b> is the assembly of written information into a standard order. This is commonly called <b>alphabetisation</b>, though collation is not limited to ordering letters of the <link xlink:type="simple" xlink:href="../670/670.xml">
alphabet</link>. Collating lists of words or names into alphabetical order is the basis of most office <link xlink:type="simple" xlink:href="../489/11489.xml">
filing</link> systems, <link xlink:type="simple" xlink:href="../871/190871.xml">
library catalog</link>s and <link xlink:type="simple" xlink:href="../727/25727.xml">
reference book</link>s.</p>
<p>

Collation differs from <it>classification</it> in that classification is concerned with arranging information into logical categories, while collation is concerned with the ordering of those categories.</p>
<p>

Advantages of sorted lists include:
<list>
<entry level="1" type="bullet">

one can easily find the first n elements (e.g. the 5 smallest countries) and the last n elements (e.g. the 3 largest countries)</entry>
<entry level="1" type="bullet">

one can easily find the elements in a given range (e.g. countries with an area between .. and .. square km)</entry>
<entry level="1" type="bullet">

one can easily search for an element, and conclude whether it is in the list, e.g. with the <link xlink:type="simple" xlink:href="../266/4266.xml">
binary search algorithm</link> or <link xlink:type="simple" xlink:href="../895/69895.xml">
interpolation search</link> either automatically, or, roughly and perhaps unconsciously, manually.</entry>
</list>
</p>
<p>

A collation algorithm, e.g. the "<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../532/641532.xml">
Unicode collation algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
", differs from a <it><link xlink:type="simple" xlink:href="../442/28442.xml">
sorting algorithm</link></it>: the first is a process to <it>define</it> the order, which corresponds to the process of just comparing two values, while a sorting algorithm is a procedure to put a list of items in this order.</p>
<p>

Collation defines a <series wordnetid="108457976" confidence="0.8">
<arrangement wordnetid="107938773" confidence="0.8">
<sequence wordnetid="108459252" confidence="0.8">
<ordering wordnetid="108456993" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/828131.xml#xpointer(//*[./st=%22Total_preorders%22])">
total preorder</link></group>
</ordering>
</sequence>
</arrangement>
</series>
http://localhost:18088/wiki/index.php/Strict_weak_ordering#Total_preorders on the set of possible items, typically by defining a <link xlink:type="simple" xlink:href="../330/30330.xml">
total order</link> on a <link xlink:type="simple" xlink:href="../656/144656.xml#xpointer(//*[./st=%22Sorting_information_or_data%22])">
sortkey</link>http://localhost:18088/wiki/index.php/Sorting#Sorting_information_or_data. Note however that in the case of e.g. numerical sorting of strings representing numbers, the strings are only partially preordered, because e.g. 2e3 and 2000 have the same ranking, and 2 and 2.0 also. The numbers represented by the strings are totally ordered.</p>

<sec>
<st>
Collation systems</st>

<ss1>
<st>
Numerical sorting, sorting of single characters</st>
<p>

One collation system is <b>numerical sorting</b>. For example, the list of numbers <it>4 · 17 · 3 · -5</it> collates to <it>-5 · 3 · 4 · 17</it>.</p>
<p>

While this might appear to work only for numbers, <link xlink:type="simple" xlink:href="../457/7878457.xml">
computer</link>s can use this method for any textual information since computers internally use <link xlink:type="simple" xlink:href="../295/5295.xml">
character set</link>s which assign a numeric <it>code point</it> to each letter or <link xlink:type="simple" xlink:href="../904/12904.xml">
glyph</link>.
For example, a computer using <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<representation wordnetid="105926676" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../586/586.xml">
ASCII</link></rule>
</direction>
</representation>
</protocol>
</message>
 code (or any of its <link xlink:type="simple" xlink:href="../273/29273.xml">
superset</link>s such as <link xlink:type="simple" xlink:href="../742/31742.xml">
Unicode</link>) and numerical sorting would collate the list of characters <it>a · b · C · d · $</it> to <it>$ · C · a · b · d</it>.</p>
<p>

The numerical values that ASCII uses are <it>$</it> = 36, <it>a</it> = 97, <it>b</it> = 98, <it>C</it> = 67, and <it>d</it> = 100, resulting in what is called "<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<representation wordnetid="105926676" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../586/586.xml#xpointer(//*[./st=%22Order%22])">
ASCIIbetical order</link></rule>
</direction>
</representation>
</protocol>
</message>
http://localhost:18088/wiki/index.php/ASCII#Order".</p>
<p>

This style of collation is commonly used, often with the refinement of converting uppercase letters to lowercase before comparing ASCII values, since most people do not expect capitalised words to jump the head of the list.</p>

</ss1>
<ss1>
<st>
Alphabetical order</st>
<p>

For a comprehensive list of the collation orders in various languages, see <link xlink:type="simple" xlink:href="../074/6110074.xml">
Collating sequence</link>.
A collation system for multiple-character words is <b>alphabetical order<it>, based on the conventional order of letters in an <link xlink:type="simple" xlink:href="../670/670.xml">
alphabet</link> or <link xlink:type="simple" xlink:href="../877/877.xml">
abjad</link> (most of which have a single conventional order). Each </it></b><b>n<it>th letter is compared with the </it></b><b>n<it>th letter of other words in the list, starting at the first letter of each word and advancing to the second, third, fourth, and so on, until the order is established.</it></b></p>
<p>

The order of the <W wordnetid="106833544" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../306/18306.xml">
Latin alphabet</link></W>
 is</p>
<p>

<b>A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z</b></p>


<p>

The principle behind extending alphabetical order to words (<link xlink:type="simple" xlink:href="../667/567667.xml">
lexicographical order</link>) is that all words in a list beginning with the same letter should be grouped together; within a grouping starting with a single letter, all words beginning with the same two letters shall be grouped together; and so on, maximizing the number of common initial letters between adjacent words. The ordering principle is applied at the point where the letters differ.  For instance, in the sequence:</p>
<p>

<indent level="1">

Astro<b>l</b>abe
</indent>
:Astro<b>n</b>omy
<indent level="1">

Astro<b>p</b>hysics
</indent>

The order of the words is given according to the first letter of the words that is different from the others (shown in bold). Since <b>n</b> follows <b>l</b> in the alphabet, but precedes <b>p</b>, <it>Astronomy</it> comes after <it>Astrolabe</it>, but before <it>Astrophysics</it>.</p>
<p>

There has historically been some variation in the application of these rules.  For instance, the prefixes <it>Mc</it> and <it>M</it>' in Irish and Scottish surnames were taken to be abbreviations for <it>Mac</it>, and alphabetized as if they were spelled out as <it>Mac</it> in full.  Thus one might find in a catalog the sequence:</p>
<p>

<indent level="1">

McKinley
</indent>
:Mackintosh</p>
<p>

with <it>McKinley</it> preceding <it>Mackintosh</it>, as if it had been spelled "MacKinley". Since the advent of computer-sorted lists, this type of alphabetization is less frequently encountered, though it is still used in British phone books. A variation in alphabetical principles applies to names consisting of two words.  In some cases, names with identical first words are all alphabetized together under the first word, e.g., grouping together all names beginning with <it>San</it>, all those beginning with <it>Santa</it>, and those beginning with <it>Santo</it>:</p>
<p>

<indent level="1">

San
</indent>
:San Cristobal
<indent level="1">

San Juan
</indent>
:San Teodoro
<indent level="1">

San Tomas
</indent>
:Santa Barbara
<indent level="1">

Santa Clara
</indent>
:Santa Cruz
<indent level="1">

Santo Domingo
</indent>

But in another system, the names are alphabetized as if they had no spaces, e.g. as follows:</p>
<p>

<indent level="1">

San
</indent>
:San Cristobal
<indent level="1">

San Juan
</indent>
:Santa Barbara
<indent level="1">

Santa Clara
</indent>
:Santa Cruz
<indent level="1">

San Teodoro
</indent>
:Santo Domingo
<indent level="1">

San Tomas
</indent>

The difference between computer-style numerical sorting and true alphabetical sorting becomes obvious in languages using an extended <W wordnetid="106833544" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../306/18306.xml">
Latin alphabet</link></W>
. For example, the 29-letter alphabet of <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../825/26825.xml">
Spanish</link></language>
 treats <it>ñ</it> as a basic letter following <it>n</it>, and formerly treated <it>ch</it> and <it>ll</it> as basic letters following <it>c</it> and <it>l</it>, respectively. <it>Ch</it> and <it>ll</it> are still considered letters, but are now alphabetized as two-letter combinations. (The new alphabetization rule was issued by the <link xlink:type="simple" xlink:href="../889/59889.xml">
Royal Spanish Academy</link> in 1994.) On the other hand, the <link xlink:type="simple" xlink:href="../365/403365.xml">
digraph</link> <it>rr</it> follows <it>rqu</it> as expected, both with and without the 1994 alphabetization rule. A numeric sort may order <it>ñ</it> incorrectly following <it>z</it> and treat <it>ch</it> as <it>c + h</it>, also incorrect when using pre-1994 alphabetization.</p>
<p>

Similar differences between computer numeric sorting and alphabetic sorting occur in <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../227/8227.xml">
Danish</link></language>
 and <language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../704/21704.xml">
Norwegian</link></language>
 (<it>aa</it> is ordered at the end of the alphabet when it is pronounced like <it><link>
å</link></it>, and at the start of the alphabet when it is pronounced like <it>a</it>), <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/11884.xml">
German</link></language>
 (<it>ß</it> is ordered as <it>s + s</it>; <it>ä, ö, ü</it> are ordered as <it>a + e, o + e, u + e</it> in phone books, but as <it>o</it> elsewhere, and behind <it>o</it> in Austria), <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../005/224005.xml">
Icelandic</link></language>
 (<it>ð</it> follows <it>d</it>), <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../433/8433.xml">
Dutch</link></language>
 (<it>ij</it> is sometimes ordered as <it>y</it>; see ), English (<it>æ</it> is ordered as <it>a + e</it>), and many other languages.</p>
<p>

Usually the <link xlink:type="simple" xlink:href="../856/143856.xml">
space</link>s or <link xlink:type="simple" xlink:href="../347/59347.xml">
hyphen</link>s between words are ignored.</p>
<p>

Languages that used a <link xlink:type="simple" xlink:href="../820/26820.xml">
syllabary</link> or <link xlink:type="simple" xlink:href="../878/878.xml">
abugida</link> instead of an alphabet (for example, <link xlink:type="simple" xlink:href="../371/356371.xml">
Cherokee</link>) can use approximately the same system if there is a set ordering for the symbols.</p>

</ss1>
<ss1>
<st>
Radical-and-stroke sorting</st>


<p>

Another form of collation is <b>radical-and-stroke sorting</b>, used for non-alphabetic writing systems such as <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../751/5751.xml">
Chinese</link></language>
 <link xlink:type="simple" xlink:href="../231/91231.xml">
hanzi</link> and <language wordnetid="106282651" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../606/15606.xml">
Japanese</link></language>
 <link xlink:type="simple" xlink:href="../604/37604.xml">
kanji</link>, whose thousands of symbols defy ordering by convention. In this system, common components of characters are identified; these are called <link xlink:type="simple" xlink:href="../992/234992.xml">
radicals</link> in Chinese and logographic systems derived from Chinese. Characters are then grouped by their primary radical, then ordered by number of pen strokes within radicals. When there is no obvious radical or more than one radical, convention governs which is used for collation. For example, the Chinese character for "mother" (媽) is sorted as a thirteen-stroke character under the three-stroke primary radical (女). </p>
<p>

The radical-and-stroke system is cumbersome compared to an alphabetical system in which there are a few characters, all unambiguous. The choice of which components of a logograph comprise separate radicals and which radical is primary is not clear-cut. As a result, logographic languages often supplement radical-and-stroke ordering with alphabetic sorting of a phonetic conversion of the logographs. For example, the kanji word <b>'Tōkyō<it> (東京), the Japanese name of <region wordnetid="108630985" confidence="0.8">
<administrative_district wordnetid="108491826" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<municipality wordnetid="108626283" confidence="0.8">
<capital wordnetid="108518505" confidence="0.8">
<city wordnetid="108524735" confidence="0.8">
<center wordnetid="108523483" confidence="0.8">
<area wordnetid="108497294" confidence="0.8">
<prefecture wordnetid="108626947" confidence="0.8">
<seat wordnetid="108647945" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<district wordnetid="108552138" confidence="0.8">
<urban_area wordnetid="108675967" confidence="0.8">
<link xlink:type="simple" xlink:href="../057/30057.xml">
Tokyo</link></urban_area>
</district>
</geographical_area>
</seat>
</prefecture>
</area>
</center>
</city>
</capital>
</municipality>
</location>
</administrative_district>
</region>
 can be sorted as if it were spelled out in the Japanese characters of the <link xlink:type="simple" xlink:href="../804/13804.xml">
hiragana</link> syllabary as "to-u-ki-yo-u" (とうきょう), using the conventional sorting order for these characters.</it></b></p>
<p>

Nevertheless, the radical-and-stroke system is the only practical method for constructing dictionaries that someone may use to look up a logograph whose pronunciation is unknown.</p>
<p>

In addition, in Greater China, <link xlink:type="simple" xlink:href="../471/12655471.xml">
surname stroke order</link>ing is a convention in some official documentations where peoples' names are listed without hierarchy.</p>

</ss1>
<ss1>
<st>
Multilingual ordering</st>
<p>

When lists of names or words need to be ordered, but the context does not define a particular single language or alphabet, the <link xlink:type="simple" xlink:href="../532/641532.xml">
Unicode Collation Algorithm</link> provides a way to put them in sequence.</p>

</ss1>
</sec>
<sec>
<st>
Complications</st>

<ss1>
<st>
Conventions in typography and in sorting systems</st>
<p>

In typography and in the writing of scientific articles etc, such things as headers, sections, lists, pages etc. might use alphabetical numbering instead of numerical numbering. However, this does not always mean that the full alphabet of a particular language is used. Often alphabetical numbering—or enumeration—only uses a subset of the full alphabet. E.g. the Russian alphabet has 33 letters, but typically only 28 are used in typographical enumeration (and for instance Ukrainian, Belarusian and Bulgarian Cyrillic enumeration shows similar features). Two Russian letters, <link>
Ъ</link> and <link>
Ь</link>, are only used for modifying the preceding <link xlink:type="simple" xlink:href="../641/5641.xml">
consonants</link>—they naturally fall out. The last three could have been used, but mostly are not: <link>
Ы</link> never begins a Russian word, <link>
Й</link> almost never begins a word either, and it is perhaps too much alike the <link>
И</link>—and also a relatively new character. <link>
Ё</link> is also relatively new and much debated—sometimes in proper alphabetical sorting letters on Ё are listed under <link>
Е</link>. (These "rules" are of course moderated, again, e.g. in phone catalogs, where foreign (non-Russian) names may frequently begin with Й or Ы.) This alludes to a simple fact: alphabets are not only tools for writing. And letters are often kept in an alphabet of a certain language even though they are not used in writing, not least because they are used in alphabetical enumeration. For instance, <link xlink:type="simple" xlink:href="../142/34142.xml">
X</link>, <link xlink:type="simple" xlink:href="../180/33180.xml">
W</link>, <link xlink:type="simple" xlink:href="../425/34425.xml">
Z</link> are not used in writing the Norwegian language, except in loanwords and names. Still they are kept in the <link xlink:type="simple" xlink:href="../323/194323.xml">
Norwegian alphabet</link>, and used in alphabetical lists. Likewise, earlier versions of the <link xlink:type="simple" xlink:href="../936/316936.xml">
Russian alphabet</link> contained letters which only had two purposes: they were good for writing Greek words and for using the Greek counting system in its Cyrillic form.</p>

</ss1>
<ss1>
<st>
Compound words and special characters</st>
<p>

A complication in alphabetical sorting can arise due to disagreements over how groups of words (separated <link xlink:type="simple" xlink:href="../473/887473.xml">
compound word</link>s, <link xlink:type="simple" xlink:href="../226/164226.xml">
name</link>s, <link xlink:type="simple" xlink:href="../160/226160.xml">
title</link>s, etc.) should be ordered.  One rule is to remove spaces for purposes of ordering, another is to consider a <link xlink:type="simple" xlink:href="../856/143856.xml">
space</link> as a character that is ordered before numbers and letters (this method is consistent with ordering by ASCII or Unicode codepoint), and a third is to order a space after numbers and letters.  Given the following strings to alphabetize—"catch", "cattle", "cat food"—the first rule produces "catch" "cat food" "cattle", the second "cat food" "catch" "cattle", and the third "catch" "cattle" "cat food".  The first rule is used in most (but not all) <link xlink:type="simple" xlink:href="../931/7931.xml">
dictionaries</link>, the second in <link xlink:type="simple" xlink:href="../263/162263.xml">
telephone directories</link> (so that Wilson, Jim K appears with other people named Wilson, Jim and not after Wilson, Jimbo).  The third rule is rarely used.</p>
<p>

A similar complication arises when special characters such as <link xlink:type="simple" xlink:href="../347/59347.xml">
hyphen</link>s or <link xlink:type="simple" xlink:href="../126/59126.xml">
apostrophe</link>s appear in words or names.  Any of the same rules as above can be used in this case as well; however, the strict ASCII sorting no longer corresponds exactly to any of the rules.</p>

</ss1>
<ss1>
<st>
Name/surname ordering</st>
<p>
 
The telephone directory example sheds light on another complication.  In cultures where <link xlink:type="simple" xlink:href="../814/10814.xml">
family name</link>s are written after <link xlink:type="simple" xlink:href="../991/247991.xml">
given name</link>s, it is usually still desired to sort by family name first.  In this case, names need to be reordered to be sorted properly.  For example, Juan Hernandes and Brian O'Leary should be sorted as Hernandes, Juan and O'Leary, Brian even if they are not written this way.  Capturing this rule in a computer collation algorithm is difficult, and simple attempts will necessarily fail.  For example, unless the algorithm has at its disposal an extensive list of family names, there is no way to decide if "Gillian Lucille van der Waal" is "van der Waal, Gillian Lucille", "Waal, Gillian Lucille van der", or even "Lucille van der Waal, Gillian".</p>

</ss1>
<ss1>
<st>
Abbreviations and common words</st>
<p>

When abbreviations are used, it is sometimes desired to expand the abbreviations for sorting.  In this case, "St. Paul" comes before "Shanghai".  Obviously, to capture this behavior in a collation algorithm, we need a list of abbreviations.  It may be more practical in some cases to store two sets of strings, one for sorting and one display.  A similar problem arises when letters are replaced by numbers or special symbols in an irregular manner, for example 1337 for <link xlink:type="simple" xlink:href="../562/18562.xml">
leet</link> or the movie <it><link xlink:type="simple" xlink:href="../818/206818.xml">
Se7en</link></it>.  In this case, proper sorting necessitates keeping two sets of strings.</p>
<p>

In certain contexts, very common words (such as <link xlink:type="simple" xlink:href="../203/48203.xml">
article</link>s) at the beginning of a sequence of words are not considered for ordering, or are moved to the end.  So "<link xlink:type="simple" xlink:href="../592/75592.xml">
The Shining</link>" is considered "Shining" or "Shining, The" when alphabetizing and therefore is ordered before "<movie wordnetid="106613686" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../682/952682.xml">
Summer of Sam</link></movie>
".  This rule is fairly easy to capture in an algorithm, but many programs rely instead on simple <link xlink:type="simple" xlink:href="../667/567667.xml">
lexicographic order</link>ing.  One fairly quaint exception to this rule is the flying of the flag of <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../978/41978.xml">
The Former Yugoslav Republic of Macedonia</link></country>
 at the <link xlink:type="simple" xlink:href="../769/31769.xml">
United Nations</link> between those of <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../128/30128.xml">
Thailand</link></country>
 and <country wordnetid="108544813" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../399/19159399.xml">
Timor Leste</link></country>
.</p>

</ss1>
</sec>
<sec>
<st>
Sorting of numbers</st>
<p>

Ascending order of numbers differs from alphabetical order, e.g. 11 comes alphabetically before 2. This can be fixed with <link xlink:type="simple" xlink:href="../210/1868210.xml">
leading zero</link>s: 02 comes alphabetically before 11. See e.g. <system wordnetid="104377057" confidence="0.8">
<structure wordnetid="105726345" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<calendar wordnetid="115173479" confidence="0.8">
<link xlink:type="simple" xlink:href="../024/15024.xml">
ISO 8601</link></calendar>
</instrumentality>
</arrangement>
</artifact>
</structure>
</system>
.</p>
<p>

Also -13 comes alphabetically after -12 although it is less. With negative numbers, to make ascending order correspond with alphabetical sorting, more drastic measures are needed such as adding a constant to all numbers to make them all positive.</p>

<ss1>
<st>
Numerical sorting of strings</st>
<p>

Sometimes, it is desired to order text with embedded numbers using proper numerical order.  For example, "Figure 7b" goes before "Figure 11a", even though '7' comes after '1' in Unicode.  This can be extended to <link xlink:type="simple" xlink:href="../657/25657.xml">
Roman numeral</link>s. This behavior is not particularly difficult to produce as long as only integers are to be sorted, although it can slow down sorting significantly. For example, <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/33879.xml">
Windows XP</link></version>
 does this when sorting <link xlink:type="simple" xlink:href="../542/351542.xml">
file name</link>s.</p>
<p>

Sorting decimals properly is a bit more difficult, due to the fact that different locales use different symbols for a <link xlink:type="simple" xlink:href="../503/80503.xml">
decimal point</link>, and sometimes the same character used as a decimal point is also used as a separator, for example "Section 3.2.5".  There is no universal answer for how to sort such strings; any rules are application dependent.</p>

</ss1>
<ss1>
<st>
Alphabetical sorting of numbers</st>
<p>

When numbers are used as names, rather than for their numerical properties, it is common to sort them alphabetically as they would be spelled.  For example, the movie <it><movie wordnetid="106613686" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../033/11600033.xml">
1776</link></movie>
</it> would be between <link xlink:type="simple" xlink:href="../993/740993.xml">
Seve Ballesteros</link> and <liabilities wordnetid="113396054" confidence="0.8">
<possession wordnetid="100032613" confidence="0.8">
<principal wordnetid="113400662" confidence="0.8">
<debt wordnetid="113397174" confidence="0.8">
<fictional_character wordnetid="109587565" confidence="0.8">
<imaginary_being wordnetid="109483738" confidence="0.8">
<link xlink:type="simple" xlink:href="../331/44331.xml">
Severus Snape</link></imaginary_being>
</fictional_character>
</debt>
</principal>
</possession>
</liabilities>
.  If a number is in a foreign term, it should be alphabetized as it would be spelled in that language; for example, <link xlink:type="simple" xlink:href="../596/1401596.xml">
24 heures du Mans</link> would be between <link xlink:type="simple" xlink:href="../245/54245.xml">
Vinge's Singularity</link> and <airport wordnetid="102692232" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../663/2920663.xml">
Vinh Airport</link></airport>
, reflecting the <link xlink:type="simple" xlink:href="../597/10597.xml">
French</link> "vingt quatre".</p>

</ss1>
</sec>
<sec>
<st>
External links and references</st>

<p>

<image location="none" width="50px" src="Wiktionary-logo-en.svg">
<caption>

Wiktionary
</caption>
</image>

Look up <it>, </it>'<b><it> in <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../658/156658.xml">
Wiktionary</link></web_site>
, the free dictionary.</it></b></p>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.unicode.org/unicode/reports/tr10/">
Unicode Collation Algorithm</weblink>: Unicode Technical Standard #10</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://spanish.about.com/library/weekly/aa092099.htm#letters">
Collation in Spanish</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.un.org/Overview/unmember.html">
Collation of the names of the member states of the United Nations</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.w3.org/TR/css3-lists">
Typographical collation for many languages</weblink>, as proposed in the List module of <format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../013/164013.xml">
Cascading Style Sheets</link></format>
.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.collation-charts.org/">
Collation Charts</weblink>: Charts demonstrating language-specific sorting orders in various operating systems and DBMS</entry>
</list>
</p>

<ss1>
<st>
 Tools </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.gnu.org/software/coreutils/manual/html_node/sort-invocation.html">
sort</weblink> The GNU implementation of the standard Unix sort utility.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://billposer.org/Software/msort.html">
msort</weblink> A sort program that provides an unusual level of flexibility in defining collations and extracting keys.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://demo.icu-project.org/icu-bin/locexp?_=en_US&amp;x=col">
ICU Locale Explorer</weblink> An online demonstration of the <link xlink:type="simple" xlink:href="../532/641532.xml">
Unicode Collation Algorithm</link> using <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<component wordnetid="105868954" confidence="0.8">
<part wordnetid="105867413" confidence="0.8">
<link xlink:type="simple" xlink:href="../785/1296785.xml">
International Components for Unicode</link></part>
</component>
</concept>
</idea>
</entry>
</list>
</p>


</ss1>
</sec>
</bdy>
</article>
