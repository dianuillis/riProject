<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:55:10[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>IBM CP-40</title>
<id>7506207</id>
<revision>
<id>224426748</id>
<timestamp>2008-07-08T20:10:35Z</timestamp>
<contributor>
<username>Gwern</username>
<id>2164608</id>
</contributor>
</revision>
<categories>
<category>Virtualization software</category>
<category>History of software</category>
<category>IBM Mainframe computer operating systems</category>
</categories>
</header>
<bdy>

<b>CP-40</b> was a research precursor to <link xlink:type="simple" xlink:href="../718/315718.xml">
CP-67</link>, which in turn was part of IBM's then-revolutionary <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP[-67]/CMS</link></O>
 &ndash; a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>/<link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> for the <link xlink:type="simple" xlink:href="../024/7522024.xml">
IBM System/360-67</link>, and the parent of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM family</link></O>
. CP-40 ran multiple instances of client operating systems &ndash; particularly <shell wordnetid="104190464" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<ammunition wordnetid="102703275" confidence="0.8">
<weaponry wordnetid="104566257" confidence="0.8">
<link xlink:type="simple" xlink:href="../805/154805.xml">
CMS</link></weaponry>
</ammunition>
</instrumentality>
</artifact>
</shell>
, the <it>Cambridge Monitor System</it>, built as part of the same effort. Like CP-67, CP-40 and the first version of CMS were developed by IBM's <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
 (CSC) staff, working closely with MIT researchers at <link xlink:type="simple" xlink:href="../147/254147.xml">
Project MAC</link> and <link xlink:type="simple" xlink:href="../536/637536.xml">
Lincoln Laboratory</link>. CP-40/CMS production use began in January 1967. CP-40 ran on a unique, specially-modified IBM S/360-40. <p>

<it>See also:</it>
<list>
<entry level="1" type="bullet">

 <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP[-67]/CMS</link></O>
: The widely-used successor to CP-40, and the precursor to IBM's VM systems</entry>
<entry level="1" type="bullet">

 <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
, where CP-40 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 were built</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link>, a contemporary experimental paging system</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link>, a review of events and issues leading to the creation of CP-40</entry>
</list>
</p>


<sec>
<st>
Project goals</st>
<p>

CP-40 was a one-off research system. Its declared goals were:
<list>
<entry level="1" type="bullet">

 Provide research input to the S/360-67 team working in Poughkeepsie, who were breaking new ground with the as-yet-unproven concept of virtual memory.</entry>
<entry level="1" type="bullet">

 Support CSC's time-sharing requirements in Cambridge. </entry>
</list>
</p>
<p>

However, there was also an important unofficial mission: To demonstrate IBM's commitment to and capability for supporting time-sharing users like MIT. CP-40 (and its successor) achieved its goals from technical and social standpoints &ndash; they helped to prove the viability of virtual machines, to establish a culture of time-sharing users, and to launch a remote computer services industry. However, the project became embroiled in an internal IBM political war over time-sharing versus batch processing; and it failed to win the hearts and minds of the academic computer science community, which ultimately turned away from IBM to systems like <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../847/18847.xml">
Multics</link></O>
, <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../380/66380.xml">
TOPS-20</link></O>
, and various <link xlink:type="simple" xlink:href="../006/413006.xml">
DEC</link> operating systems. Ultimately, however, the <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> concepts developed in the CP-40 project bore fruit in diverse areas, and remain important today.</p>

</sec>
<sec>
<st>
Features</st>
<p>

CP-40 was the first operating system that implemented complete virtualization, i.e. it provided a virtual machine environment supporting all aspects of its target computer system (a S/360-40), such that other S/360 operating systems could be installed, tested, and used as if on a stand-alone machine. CP-40 supported fourteen simultaneous virtual machines. Each virtual machine ran in "problem state" &ndash; privileged instructions such as I/O operations caused exceptions, which were then caught by the control program and simulated. Similarly, references to virtual memory locations not present in main memory cause <link xlink:type="simple" xlink:href="../143/1157143.xml">
page fault</link>s, which again were handled by control program rather than reflected to the virtual machine. Further details on this implementation are found in <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml#xpointer(//*[./st=%22Architecture%22])">
CP/CMS (architecture)</link></O>
.</p>
<p>

The basic architecture and user interface of CP-40 were carried forward into <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP-67/CMS</link></O>
, which evolved to become IBM's current VM product line.</p>

</sec>
<sec>
<st>
Hardware platform</st>
<p>

A <link>
S/360-67</link> was not available for building CP-40, so a custom virtual memory device based on associative memory (the "CAT box"<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>) was designed and built for CSC. It involved both hardware and microcode changes to a specially-modified <link xlink:type="simple" xlink:href="../294/29294.xml">
S/360</link> model 40. These changes gave the unit the <link xlink:type="simple" xlink:href="../179/996179.xml">
virtualization technology</link> needed for full virtualization of the S/360 hardware. This modified S/360-40 influenced the design of the forthcoming S/360-67, which was intended to meet the needs of the same community of time-sharing users (notably MIT's Project MAC and <link xlink:type="simple" xlink:href="../712/3712.xml">
Bell Laboratories</link> &ndash; though both of these sites became notable IBM sales failures).</p>
<p>

Three distinct virtual memory systems were implemented by IBM during this period:
<list>
<entry level="1" type="bullet">

 The "Blaauw Box" (named for <link xlink:type="simple" xlink:href="../002/1267002.xml">
Gerry Blaauw</link>), part of the original design of the S/360-67</entry>
<entry level="1" type="bullet">

 The "CAT Box" (Cambridge Address Translator), added to CSC's S/360-40 to run CP-40</entry>
<entry level="1" type="bullet">

 The "DAT Box" (Dynamic Address Translation), announced as an addition to the <link xlink:type="simple" xlink:href="../785/59785.xml">
S/370</link> series in 1972</entry>
</list>

These systems were all different, but bore a family resemblance. CP-40's CAT box was a key milestone. Pugh<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> cites an IEEE paper<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> about the CP-40 virtual memory hardware, and states that it was <it>"unique in that it included a parallel-search register bank to speed dynamic address translation. With funds supplied by Cambridge, IBM engineer[s]...built a 64-register associative memory and integrated it into a 360/40. The one-of-a-kind result was shipped to Cambridge early in 1966."</it></p>
<p>

It is important to note that, although virtualization support was an explicit goal for CSC's modified 360/40, this was <it>not</it> apparently the case for the original S/360-67 design. The fact that virtualization capabilities were ultimately implemented in the -67, and thus enabled the success of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP-67/CMS</link></O>
, speaks to the tenacity and persuasivness of the CSC team.</p>

</sec>
<sec>
<st>
CMS under CP-40</st>
<p>

CMS was first built in 1964 at CSC to run as a 'client' operating system under CP-40. The CMS project leader was John Harmon. Although any S/360 operating system could be run in a CP-40 virtual machine, it was decided that a new, simple, single-user interactive operating system would be best for supporting interactive time-sharing users. This would avoid the complexity and overhead of running a multi-user system like CTSS. (Contrast this with IBM's <link xlink:type="simple" xlink:href="../150/212150.xml">
OS/MVT-TSO</link> and its successors &ndash; essentially a time-sharing operating system running as a single task under an IBM batch operating system. With CMS, each interactive user gets a private virtual machine.)</p>
<p>

By September 1965, many important CMS design decisions had already been made:
<list>
<entry level="1" type="bullet">

 User-friendly commands, with default-mode, non-required parameters wherever possible (for ease of use and training, and to minimize job control requirements)</entry>
<entry level="1" type="bullet">

 A basic set of file system commands and macros; a simple file naming convention, based on filename, filetype, and filemode (filemode = logical disk identifier or <link xlink:type="simple" xlink:href="../009/44009.xml">
minidisk</link>, a form of <link xlink:type="simple" xlink:href="../424/55424.xml">
drive letter assignment</link>)</entry>
<entry level="1" type="bullet">

 Records mapped to fixed-size blocks, that could be read or written by relative record number</entry>
<entry level="1" type="bullet">

 Files that could be created simply by writing to them, without the need for special 'create' operations</entry>
<entry level="1" type="bullet">

 Default filemodes, allowing disks to be searched in a fixed order</entry>
</list>
</p>
<p>

These were radical departures from the difficult file naming, job control (via JCL), and other requirements of IBM's "real" operating systems.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> (Some of these concepts had been goals for operating systems from other vendors, such as <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
 and <link xlink:type="simple" xlink:href="../006/413006.xml">
DEC</link>.)</p>
<p>

The CMS file system design, with its <link>
flat directory</link> structure, was kept deliberately simple. Creasy notes: "This structure of multiple disks, each with a single directory, was chosen to be simple but useful. Multi-level linked directories, with files stored in common areas, had been the design trend when we began. We simplified the design of this and other components of CMS to reduce implementation complexity."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

Application programs running under CMS executed within the same address space. They accessed system services, such as the CMS file system, through a simple programming interface to the <it>CMS nucleus</it>, which resided in low memory within the CMS virtual machine. A variety of system calls were provided, most of which would be familiar to current CMS programmers. (Since applications ran in the CMS virtual machine, they could potentially misbehave, by overwriting CMS data, using privileged instructions, or taking other actions that could take over or crash the virtual machine. Of course, doing so could <it>not</it> affect other virtual machines, which were all mutually isolated; nor could it damage the underlying control program. Unlike most operating systems, CP crashes rarely stemmed from application errors &ndash; and were thus themselves relatively rare.)</p>

</sec>
<sec>
<st>
Historical notes</st>
<p>

The following notes provide brief quotes, primarily from Pugh, Varian, and Creasy [see references], illustrating the development context of CP-40. Direct quotes rather than paraphrases are provided here, because the authors' perspectives color their interpretations. Also see <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link> for additional context.</p>
<p>

<list>
<entry level="1" type="bullet">

 <b>Genesis of the CP-40 project:</b></entry>
<entry level="2" type="bullet">

 CSC's Rasmussen felt "very dubious" about TSS and decided that his idle CSC resources should be put to use creating a "credible time-sharing system for the S/360", which became known as CP-40. Project leader was Robert Creasy, who had been a <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
 programmer.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
<entry level="2" type="bullet">

 CP-40 goals included both conducting research (obtaining and analyzing data about systems and software, including the use of associative memory) and meeting CSC's own computing requirements via time-sharing. Varian adds: "The project’s real purpose was to build a time-sharing system, but the other objectives were genuine, too, and they were always emphasized in order to disguise the project’s “counter-strategic” aspects." Creasy describes CP/CMS goals this way: It was to be "a second generation time-sharing system for the newly announced IBM System/360...[that would] support all the activities of the Cambridge center, including such diverse activities as operating system research, application development, and report preparation by programmers, scientists, secretaries, and managers. Soon after its inception, it was convenient for the system to be recognized and financially supported from outside of the center as a tool to evaluate and test the performance of operating systems."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></entry>
<entry level="2" type="bullet">

 CSC's research was important to IBM, because at the time, "not much was really known about virtual memory systems." Varian quotes L.W. Comeau: "[IBM's] commitment to virtual memory was backed with no successful experience.... What was frightening is that nobody who was setting this virtual memory direction at IBM knew why [the contemporary virtual memory system Ferranti] Atlas didn’t work." (Comeau later concluded that the Atlas had suffered from <link xlink:type="simple" xlink:href="../245/660245.xml">
thrashing</link>, which was not studied until it was observed on the IBM M44/44X and on CP-40.)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref></entry>
<entry level="1" type="bullet">

 <b>CP-40 design:</b> Pugh writes that: "In 1964...IBM Research were recommending the use of virtual-machine principles to time-sharing planners...[which were] picked up by the Cambridge [CSC] team, who wanted, among other things, a system capable of testing operating systems." A key design decision, made by Creasy and Comeau at the end of 1964, was to base CP-40 not just on virtual memory but on <it>virtual machines</it> (at first called <it>pseudo-machines</it>, until the later term was appropriated from the IBM M44/44X project &ndash; which Creasy describes as having "similar but independent ideas."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> Creasy provides a clear description of CP's virtualization strategy, based on the S/360 <link xlink:type="simple" xlink:href="../772/47772.xml">
instruction set</link>, which consisted of privileged 'supervisor state' instructions distinct from normal 'problem state' instructions: "Each [CP] virtual machine program is actually executed [entirely] in problem state.... Privileged instructions...[are] reproduced by CP within the virtual machines...." By running an OS in problem state, all the 'tricky' instructions would automatically be intercepted by the hardware. This left just one main virtualization problem: memory references. "Experience [with CTSS]...suggested the need for dynamic program relocation...to break programs into pieces which could be moved into, out of, and within the memory independently of each other."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <b>CP-40 virtual machines:</b> </entry>
<entry level="2" type="bullet">

 Earlier research projects involving the virtual machine concept, such as the IBM M44/44X, had not attempted to create an exact virtual duplicate of a real machine. Creasy: "[They were] close enough...to prove that 'close enough' did not count."</entry>
<entry level="2" type="bullet">

 CP-40 took the bold step of <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link>, creating fourteen virtual S/360 environments, each with a fixed virtual memory size of 256K, mapped access to disk partitions, and spooled access to unit record devices (e.g. printers). Comeau: "[Creating full virtualization] permitted simultaneous development of CP and CMS; it allowed us to measure non-virtual systems, OS and DOS, in a virtual memory environment, and it also provided a high level of integrity and security."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></entry>
<entry level="2" type="bullet">

 In addition to revealing the value of full virtualization, the experimental IBM M44/44X "implanted the idea that the virtual machine concept is not necessarily less efficient than more conventional approaches" &ndash; a core assumption in the CP-40 architecture, and one that ultimately proved very successful.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></entry>
<entry level="2" type="bullet">

 CP-40 would soon support "up to a dozen virtual System/360 machines" under terminal control [most sources state fourteen]. (CP-67 later "exploited...address-translation...and increased speed...to double the capacity" of CP-40.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref>)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <b>CMS under CP-40:</b> </entry>
<entry level="2" type="bullet">

 About the decision to separate CMS and CP, Creasy writes: "The implementation of CTSS illustrated the necessity of modular design for system evolution. Although successful as a production system, the interconnections and dependencies of its supervisor design made extension and change difficult. A key concept of the CP/CMS design was the bifurcation of computer resource management and user support. In effect, the integrated design [of CTSS] was split into CP and CMS." The value of experience gained on the CTSS project cannot be overstated.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></entry>
</list>
</p>
<p>

<list>
<entry level="2" type="bullet">

 About early CMS, Creasy writes: CMS "provided single user service unencumbered by the problems of sharing, allocation, and protection."<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref> Early CMS development involved booting CMS under BPS, an early S/360 operating system, until CMS was far enough along to boot stand-alone. Eventually development moved to virtual machines under CP.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 R.J. Adair, R.U. Bayles, L.W. Comeau, and R.J. Creasy, "A virtual machine system for the 360/40", <it>IBM Cambridge Scientific Center report 320-2007,</it> Cambridge, MA, May, 1966&ndash; description of CP-40 and its implementation at CSC, cited in Varian and Creasy [below]</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 L.W. Comeau, "CP-40, the Origin of VM/370", <it>Proceedings of SEAS AM82</it> (September 1982)&ndash; description of CP-40, cited in Varian [below]</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 R. J. Creasy, "The origin of the VM/370 time-sharing system", <it>IBM Journal of Research &amp; Development</it>, Vol. 25, No. 5 (September 1981), <it>pp.</it> 483-490, available on-line at <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/rd/255/ibmrd2505M.pdf">
research.ibm.com</weblink>&ndash; perspective on CP/CMS and VM history by the CP-40 project lead</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 A. B. Lindquist, R. R. Seeber, and L. W. Comeau, "A Time Sharing System Using an Associative Memory,” <it>Proc. IEEE</it> Vol. 54, <it>pp.</it> 1774-1779 (1966).&ndash; CP-40 implementation details</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 E.W. Pugh, L.R. Johnson, and John H. Palmer, <it>IBM's 360 and early 370 systems,</it> MIT Press, Cambridge MA and London, ISBN 0-262-16123-0&ndash; extensive (819&nbsp;<it>pp.</it>) treatment of IBM's offerings during this period. The limited coverage of CP/CMS in such a definitive work is telling.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Melinda Varian, <it>VM and the VM community, past present, and future,</it> SHARE 89 Sessions 9059-9061, 1997; available online at <weblink xlink:type="simple" xlink:href="http://www.princeton.edu/~melinda/25paper.pdf">
www.princeton.edu/~melinda</weblink>&ndash; an essential source for CP/CMS and VM history</entry>
</list>
</p>
<p>

<b>Citations</b></p>
<p>

<reflist>
<entry id="1">
Varian, op. cit., p. 11 (the "CAT box")</entry>
<entry id="2">
Pugh <it>et al., op. cit., p.</it> 741 (note 218 to Ch. 6)</entry>
<entry id="3">
A. B. Lindquist <it>et al.,</it> "A time-sharing system using an associative memory", <it>Proceedings of the IEEE 54,</it> pp. 1774-1779.</entry>
<entry id="4">
Varian, <it>op. cit., pp.</it> 14 &ndash; novelty of CMS interface</entry>
<entry id="5">
Creasy, <it>op. cit., p.</it> 489 &ndash; flat file system</entry>
<entry id="6">
Varian, <it>op. cit., pp.</it> 3, 9, 16 &ndash; genesis of CP-40 project</entry>
<entry id="7">
Creasy, <it>op. cit., p.</it> 485 &ndash; design goals</entry>
<entry id="8">
W. O'Neill, "Experience using a time sharing multiprogramming system with dynamic address relocation hardware", <it>Proc. AFIPS Computer Conference 30</it> (Spring Joint Computer Conference, 1967), <it>pp.</it> 611-621 &ndash; thrashing on IBM M44/44X</entry>
<entry id="9">
L.W. Comeau, "Operating System/360 Paging Studies", <it>IBM Storage Hierarchy System Symposium,</it> December 1966 &ndash; thrashing on the Atlas [cited in Varian, ''op. cit., p.'' 17]</entry>
<entry id="10">
Creasy, <it>op. cit., p.</it> 485 &ndash; similar to but independent of IBM M44/44X</entry>
<entry id="11">
Creasy, <it>op. cit., p.</it> 486 &ndash; virtualization strategy: problem state execution, plus address translation</entry>
<entry id="12">
Varian, <it>op. cit., p.</it> 9, 13</entry>
<entry id="13">
L.W. Comeau, "CP-40, the Origin of VM/370", <it>Proceedings of SEAS AM82,</it> September 1982, p. 40, 42-43 [cited in Varian, ''op. cit., pp.'' 9, 13]</entry>
<entry id="14">
L. Talkington, "A Good Idea and Still Growing", <it>White Plains Development Center Newsletter</it>, Vol. 2, No. 3 (March 1969) [quoted in Varian, ''op. cit., p.'' 10, Note 26]</entry>
<entry id="15">
Pugh <it>et al., op. cit., pp.</it> 364-365</entry>
<entry id="17">
Creasy, <it>op. cit., p.</it> 485. &ndash; scope of CMS</entry>
<entry id="16">
Creasy, <it>op. cit., p.</it> 485 &ndash; separating CP from CMS</entry>
<entry id="18">
Varian, <it>op. cit., p.</it> 12, 15-16 &ndash; CMS booting under BPS</entry>
</reflist>
</p>


</sec>
<sec>
<st>
Family tree</st>


<p>

<table style="border:2px solid; text-align:left; vertical-align:middle; margin:6pt; padding:6pt">
<row>
<col colspan="3" style="background: #ccf; border-bottom:1px solid">
<b>CP/CMS family relationships</b>
&nbsp;&nbsp;&nbsp;&nbsp;→&nbsp;<it>derivation</it>&nbsp;&nbsp;&nbsp;&nbsp;&amp;gt;&amp;gt;&nbsp;<it>strong influence</it>&nbsp;&nbsp;&nbsp;&nbsp;&amp;gt;&nbsp;<it>some influence/precedence''</it></col>
</row>
<row>
<col style="border-right:1px solid" rowspan="7">
 &nbsp;<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../141/254141.xml">
CTSS</link></O>
&nbsp;</col>
</row>
<row>
<col colspan="3" style="border-bottom:1px solid">
 &amp;gt; <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link></col>
</row>
<row>
<col style="border-right:1px solid" rowspan="2">
 &amp;gt;&amp;gt; <link>
CP-40/CMS</link> → <link>
 CP[-67]/CMS</link>&nbsp;</col>
<col>
 → <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/370</link> → VM/XA versions → <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/ESA</link> → <link xlink:type="simple" xlink:href="../680/1266680.xml">
z/VM</link></col>
</row>
<row>
<col>
 → <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../581/6190581.xml">
VP/CSS</link></O>
</col>
</row>
<row>
<col colspan="3" style="border-top:1px solid">
 &amp;gt; <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link></col>
</row>
<row>
<col colspan="3" style="border-top:1px solid">
 &amp;gt; <link>
TSO</link> for <link xlink:type="simple" xlink:href="../423/19161423.xml">
OS/MVT</link> → for <link>
OS/VS2</link> → for <link xlink:type="simple" xlink:href="../649/19649.xml">
MVS</link> → ... → for <link xlink:type="simple" xlink:href="../122/39122.xml">
z/OS</link></col>
</row>
<row>
<col colspan="3" style="border-top:1px solid">
 &amp;gt;&amp;gt; <link xlink:type="simple" xlink:href="../847/18847.xml">
MULTICS</link> and most other <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link>platforms</col>
</row>
<row>
<col colspan="4" style="background: #ccf; text-align: right;"></col>
</row>
</table>
</p>
<p>

This <it>simplified</it> framework provides links to major <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> systems that influenced or were influenced by <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
. Many other important systems emerged during this period; <it>cf.</it> <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../548/19278548.xml">
Manchester/Ferranti Atlas</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../524/4524.xml">
Burroughs</link></institution>
</company>
, <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../952/7952.xml">
DEC</link></company>
, and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../721/225721.xml">
Honeywell</link></company>
 for examples. Also see <link xlink:type="simple" xlink:href="../200/8341200.xml">
time-sharing system evolution</link>.</p>


</sec>
</bdy>
</article>
