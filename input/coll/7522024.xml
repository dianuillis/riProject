<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:48:12[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<platform  confidence="0.8" wordnetid="103961939">
<artifact  confidence="0.8" wordnetid="100021939">
<surface  confidence="0.8" wordnetid="104362025">
<instrumentality  confidence="0.8" wordnetid="103575240">
<horizontal_surface  confidence="0.8" wordnetid="103536348">
<device  confidence="0.8" wordnetid="103183080">
<machine  confidence="0.8" wordnetid="103699975">
<header>
<title>IBM System/360 Model 67</title>
<id>7522024</id>
<revision>
<id>228870076</id>
<timestamp>2008-07-30T19:43:41Z</timestamp>
<contributor>
<username>John W. Kennedy</username>
<id>149824</id>
</contributor>
</revision>
<categories>
<category>Computing platforms</category>
<category>IBM System/360 mainframe line</category>
<category>Virtual machines</category>
<category>Computing by computer model</category>
</categories>
</header>
<bdy>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../294/29294.xml">
System/360</link>, <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link>,&nbsp;and <link xlink:type="simple" xlink:href="../182/7283182.xml">
History of IBM</link></it>
</indent>

The <b>IBM System/360 Model 67</b> (<b>S/360-67</b>) was an important <link xlink:type="simple" xlink:href="../872/14872.xml">
IBM mainframe</link> model in the late <link xlink:type="simple" xlink:href="../545/34545.xml">
1960s</link>. It first shipped in July 1966. Unlike the rest of the <link xlink:type="simple" xlink:href="../294/29294.xml">
S/360</link> series, it included features to facilitate <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> applications, notably <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> hardware and <link xlink:type="simple" xlink:href="../733/80733.xml">
32-bit</link> addressing. The S/360-67 was otherwise compatible with the rest of the <link xlink:type="simple" xlink:href="../294/29294.xml">
S/360</link> series.<p>

The S/360-67 was intended to satisfy the needs of key <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> customers, notably <link xlink:type="simple" xlink:href="../061/19061.xml">
MIT</link>, where <link xlink:type="simple" xlink:href="../147/254147.xml">
Project MAC</link> had become a notorious IBM sales failure. The S/360-67 was essentially a general-purpose version of the customized system that IBM bid in its <link xlink:type="simple" xlink:href="../147/254147.xml">
Project MAC</link> proposal.</p>
<p>

<link xlink:type="simple" xlink:href="../020/64020.xml">
Multiprocessor</link> configurations of the S/360-67 were available; for example, in 1968, the <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../740/31740.xml">
University of Michigan</link></university>
 installed the dual-processor version of the S/360-67 for its ageless <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../432/148432.xml">
MTS</link></O>
 system (which had been moved in 1967, from a S/360-50, to a uniprocessor S/360-67 with paging and a high-speed drum).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

<sec>
<st>
Announcement</st>
<p>

IBM announced the S/360-67 in its August 16, 1965 "blue letters" (a standard mechanism used by IBM to make product announcements). IBM stated that:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref>
<list>
<entry level="1" type="bullet">

 "Special bid restrictions have been removed from the System/360 Model 67" (i.e., it was now generally available)</entry>
<entry level="1" type="bullet">

 It included "multiprocessor configurations, with a high degree of system availability", with up to four processing units</entry>
<entry level="1" type="bullet">

 It had "its own powerful operating system...[the] Time Sharing System monitor (TSS)" offering "virtually instantaneous access to and response from the computer" to "take advantage of the unique capabilities of a multiprocessor system"</entry>
<entry level="1" type="bullet">

 It offered "dynamic relocation of problem programs using the dynamic address translation facilities of the 2067 Processing Unit, permitting response, within seconds, to many simultaneous users"</entry>
</list>
</p>

</sec>
<sec>
<st>
Software</st>
<p>

When the S/360-67 was announced in August 1965, IBM also announced <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link>, an ill-fated time-sharing operating system project that was canceled in 1971 (having also being canceled in 1969, but reprieved).</p>
<p>

Far more successful on the S/360-67 was <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
. This was the first <link xlink:type="simple" xlink:href="../596/8273596.xml">
fully-virtualized</link> <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> operating system, and evolved from the ground-breaking research system <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link>. CP/CMS proved quite important:
<list>
<entry level="1" type="bullet">

 It delivered high-performance time-sharing.</entry>
<entry level="1" type="bullet">

 It validated the S/360-67 architecture.</entry>
<entry level="1" type="bullet">

 It introduced and employed many <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> and <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> concepts, still evolving in contemporary research systems such as the <link xlink:type="simple" xlink:href="../627/8209627.xml">
IBM M44/44X</link>, <computer wordnetid="103082979" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<machine wordnetid="103699975" confidence="0.8">
<link xlink:type="simple" xlink:href="../548/19278548.xml">
Manchester/Ferranti Atlas</link></machine>
</device>
</instrumentality>
</artifact>
</computer>
, and the emerging <link xlink:type="simple" xlink:href="../659/58659.xml">
GE 645</link> (which was being built for the <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../847/18847.xml">
Multics</link></O>
 project)</entry>
<entry level="1" type="bullet">

 It ultimately spawned both a <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> service industry and IBM's <link xlink:type="simple" xlink:href="../018/315018.xml">
VM/CMS</link> operating system.</entry>
</list>
</p>
<p>

At the time of the S/360-67, software was "bundled" into computer hardware purchases; see <link>
"IBM's unbundling of software and services"</link>. In particular, IBM operating systems were available without additional charge to IBM customers. <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 was unusual in that it was delivered as unsupported <link xlink:type="simple" xlink:href="../204/7218204.xml">
Type-III software</link> in source code form &ndash; meaning that most S/360-67 users ran an <it>unsupported</it> operating system. The need for self-support and community support helped lead to the creation of a strong S/360-67 user community, a precursor to the <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> movement.</p>

</sec>
<sec>
<st>
Virtual memory</st>
<p>

The S/360-67 design included a radical new component for implementing <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link>, referred to as the "<link>
Blaauw Box</link>" after its designer <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../002/1267002.xml">
Gerry Blaauw</link></scholar>
</employee>
</scientist>
</causal_agent>
</alumnus>
</worker>
</intellectual>
</person>
</physical_entity>
. This device was originally designed during the main S/360 project, but had been excluded from the S/360 design; it was revived for IBM's failed proposal to <link xlink:type="simple" xlink:href="../147/254147.xml">
Project MAC</link>, for a customized S/360, and finally came to fruition in the S/360-67. The "Blaauw Box" used a somewhat different approach from that implemented later in the <link xlink:type="simple" xlink:href="../785/59785.xml">
S/370</link> series in the "DAT box". The S/360-67 provided a 24- or 32-bit address space &ndash; unlike the strictly 24-bit address space of other S/360 and early S/370 systems, and the 31-bit address space of S/370-XA available on later S/370s. The S/360-67 virtual address space was divided into <it>pages</it> (of 4KB)<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> grouped into <it>segments</it> (of 1MB); pages were dynamically mapped onto the processor's real memory. Referencing a page that was not in memory caused a <link xlink:type="simple" xlink:href="../143/1157143.xml">
page fault</link>, which in turn could be intercepted and processed by an operating system <link xlink:type="simple" xlink:href="../824/638824.xml">
interrupt handler</link>.</p>
<p>

The S/360-67's virtual memory system was capable of meeting three distinct goals:</p>
<p>

<list>
<entry level="1" type="bullet">

 <b>Large address space.</b> It mapped physical memory onto a larger pool of virtual memory, which could be dynamically swapped in and out of real memory as needed from random-access storage (typically: disk or drum storage).</entry>
<entry level="1" type="bullet">

 <b>Isolated OS components.</b> It made it possible to remove most of the operating system's memory footprint from the user's environment, thereby increasing the memory available for application use, and reducing the risk of applications intruding into or corrupting operating system data and programs.</entry>
<entry level="1" type="bullet">

 <b>Multiple address spaces.</b> By implementing multiple virtual <link xlink:type="simple" xlink:href="../144/507144.xml">
address space</link>s, each for a different user, each user could potentially have a private <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>.</entry>
</list>
</p>
<p>

The first goal removed (for decades, at least) a crushing limitation of earlier machines: running out of physical storage. The second enabled substantial improvements in security and reliability. The third, in conjunction with other <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> capabilities discussed below, enabled the implementation of true <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machines</link>, rather than simply sharing a single machine among many users (via the multiplexing techniques previously employed). The virtual machine capability ultimately had the broadest impact.</p>

</sec>
<sec>
<st>
Virtualization</st>

<p>

<indent level="1">

<it>See also: <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link>&nbsp;and <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link></it>
</indent>
The S/360-67 included various hardware and microcode features that enabled <link xlink:type="simple" xlink:href="../596/8273596.xml">
full virtualization</link> of the raw S/360 hardware. The full-virtualization concept was pioneered with CP-40 on custom hardware; its implementation on the S/360-67 made CP-67 possible.</p>
<p>

Full virtualization requires that every salient feature of the hardware be reflected into one of several <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link>s &ndash; including the full instruction set, input/output operations, interrupts, memory access, and whatever other elements are used by the software that runs on the bare machine, and that is intended to run in a virtual machine. The obvious test of virtualization is whether an operating system intended for stand-alone use can successfully run inside a virtual machine. </p>
<p>

(Note that, in CP-67, certain model-dependent and diagnostic instructions were not virtualized, notably the DIAG instruction. Ultimately, in later development at IBM and elsewhere, DIAG instructions were used to create a non-virtualized interface, to what became called a <link xlink:type="simple" xlink:href="../216/1267216.xml">
hypervisor</link>. Client operating systems could use this mechanism to communicate directly with the control program; this offered dramatic performance improvements.)</p>
<p>

It is important to note that full hardware virtualization was <it>not</it> an original design goal for the S/360-67 (contemporary documents and observers make this clear, despite revisionist claims to the contrary). Active input from IBM customers and IBM researchers &ndash; notably from personnel at IBM's <artifact wordnetid="100021939" confidence="0.8">
<facility wordnetid="103315023" confidence="0.8">
<link xlink:type="simple" xlink:href="../862/7145862.xml">
Cambridge Scientific Center</link></facility>
</artifact>
 (CSC), and especially the <link xlink:type="simple" xlink:href="../207/7506207.xml">
CP-40</link> team &ndash; helped change project priorities. Without this "underground" effort, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 could not have been successful.</p>
<p>

In many respects, it can be stated without hyperbole that IBM's CP-67 and CP/CMS products anticipated (and heavily influenced) contemporary virtualization software, such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../250/8175250.xml">
VMware Workstation</link></software>
, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
, and <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../015/312015.xml">
Microsoft Virtual PC</link></software>
.</p>

</sec>
<sec>
<st>
Legacy</st>
<p>

The S/360-67 had an important legacy. After the failure of <link xlink:type="simple" xlink:href="../358/6253358.xml">
TSS/360</link>, IBM was pleasantly surprised by the blossoming of a <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../784/315784.xml">
CP/CMS</link></O>
 time-sharing community on the S/360-67 platform. A large number of commercial, academic, and service bureau sites installed the system. By taking advantage of IBM's lukewarm support for time-sharing, and by sharing information and resources (including source code modifications), they built and supported a generation of time-sharing centers.</p>
<p>

The unique features of the S/360-67 were initially <it>not</it> carried into IBM's next product series, the <link xlink:type="simple" xlink:href="../785/59785.xml">
System/370</link>, although at least one model, the 370/145, had the Refer and Change storage bits implemented from the start. This was largely fallout from a bitter and highly-visible political battle over the merits of time-sharing versus batch processing. Time-sharing lost.</p>
<p>

However, IBM faced increasing customer demand for time-sharing and virtual memory capabilities. IBM also could not ignore the large number of S/360-67 time-sharing installations &ndash; including the new industry of <link xlink:type="simple" xlink:href="../958/30958.xml">
time-sharing</link> vendors, such as <company wordnetid="108058098" confidence="0.8">
<enterprise wordnetid="108056231" confidence="0.8">
<business wordnetid="108061042" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../513/6190513.xml">
National CSS</link></institution>
</business>
</enterprise>
</company>
 and <link xlink:type="simple" xlink:href="../177/772177.xml">
IDC</link>, that were quickly achieving commercial success.</p>
<p>

Eventually, in 1972, IBM added virtual memory options to the S/370 series, a move seen by many as a vindication of work done on the S/360-67 project. The survival and success of IBM's <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../018/315018.xml">
VM</link></O>
 family, and of virtualization technology in general, also owe much to the S/360-67.</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

 A. Padegs, "System/360 and Beyond", <it>IBM Journal of Research &amp; Development, vol. 25 no. 5, pp.</it> 377-390, September 1981 [available on-line at <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/journal/rd/255/ibmrd2505D.pdf">
www.research.ibm.com</weblink></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 E.W. Pugh, L.R. Johnson, and John H. Palmer, <it>IBM's 360 and early 370 systems,</it> MIT Press, Cambridge MA and London, ISBN 0-262-16123-0 [Extensive (819&nbsp;''pp.'') treatment of IBM's offerings during this period.]</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Melinda Varian, <it>VM and the VM community, past present, and future,</it> SHARE 89 Sessions 9059-9061, 1977; available online at <weblink xlink:type="simple" xlink:href="http://www.princeton.edu/~melinda/25paper.pdf">
www.princeton.edu/~melinda</weblink></entry>
</list>
</p>
<p>

Additional papers involving the S/360-67 can be found in the references to <link xlink:type="simple" xlink:href="../460/8177460.xml">
History of CP/CMS</link>.</p>
<p>

<b>Citations</b></p>
<p>

<reflist>
<entry id="1">
Pugh, <it>op. cit., p.</it> 364 &ndash; MTS on dual processor S/360-67 in 1968</entry>
<entry id="2">
Varian, <it>op. cit., p.</it> 17 (Note 54) &ndash; S/360-67 announcement</entry>
<entry id="3">
Varian, <it>op. cit., p.</it> 28 &ndash; S/360-67 page size of 4K</entry>
</reflist>
</p>
<p>

<b>External Links</b>
<list>
<entry level="1" type="bullet">

 http://www.cs.newcastle.ac.uk/events/anniversaries/40th/images/ibm360_672/index.html &ndash; Pictures of an IBM S/360-67 at Newcastle (UK) University</entry>
<entry level="1" type="bullet">

 http://www.multicians.org/thvv/360-67.html &ndash; Tom Van Vleck's notes about the S/360-67</entry>
<entry level="1" type="bullet">

 http://cap-lore.com/Software/CP.html &ndash; Norm Hardy's notes about virtual machines and the S/360-67</entry>
</list>
</p>

</sec>
</bdy>
</machine>
</device>
</horizontal_surface>
</instrumentality>
</surface>
</artifact>
</platform>
</article>
