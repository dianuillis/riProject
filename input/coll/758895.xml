<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:39:23[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>History of software engineering</title>
<id>758895</id>
<revision>
<id>242265950</id>
<timestamp>2008-10-01T15:32:22Z</timestamp>
<contributor>
<username>Cityuni</username>
<id>7981416</id>
</contributor>
</revision>
<categories>
<category>Software engineering</category>
<category>History of software</category>
</categories>
</header>
<bdy>

<table class="infobox">
<row>
<col style="background: #ccf; text-align:center;">
 <b><link xlink:type="simple" xlink:href="../519/386519.xml">
History of computing</link></b></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../636/13636.xml">
Hardware before 1960</link></col>
</row>
<row>
<col>
<link>
Hardware 1960s to present</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../959/397959.xml">
Hardware in Soviet Bloc countries</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../413/3271413.xml">
Computer science</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../395/55395.xml">
Operating systems</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../167/16142167.xml">
Personal computers</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../037/16785037.xml">
Laptops</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../895/758895.xml">
Software engineering</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../120/896120.xml">
Programming languages</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../560/2894560.xml">
Artificial intelligence</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../914/13914.xml">
Graphical user interface</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../692/13692.xml">
Internet</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../777/4192777.xml">
World Wide Web</link></col>
</row>
<row>
<col>
<link xlink:type="simple" xlink:href="../401/32401.xml">
Computer and video games</link></col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col>
<record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/6249.xml">
Timeline of computing</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
 <p>

<list>
<entry level="1" type="bullet">

<link>
Timeline of computing 2400 BC–1949</link></entry>
<entry level="1" type="bullet">

<link>
1950–1979</link></entry>
<entry level="1" type="bullet">

<link>
1980–1989</link></entry>
<entry level="1" type="bullet">

<link>
1990&mdash;</link></entry>
<entry level="1" type="bullet">


Computing timelines|More timelines...</entry>
</list>
</p>
</col>
</row>
<row>
<col style="border-bottom: 1px solid #ccc"></col>
</row>
<row>
<col align="center">

History of computing|More...</col>
</row>
</table>

<link xlink:type="simple" xlink:href="../010/27010.xml">
Software engineering</link> has evolved steadily from its founding days in the <link xlink:type="simple" xlink:href="../583/34583.xml">
1940s</link> until today in the <link xlink:type="simple" xlink:href="../240/19671240.xml">
2000s</link>. Applications have evolved continuously.
The ongoing goal to improve technologies and practices, seeks to improve the productivity of practitioners and the quality of applications to users.
<sec>
<st>
 The Pioneering Era </st>

<p>

The most important development was that new computers were coming out almost every year or two, rendering existing ones obsolete. Software people had to rewrite all their programs to run on these new machines. 
Programmers did not have computers on their desks and had to go to the "machine room". 
Jobs were run by signing up for machine time or by operational staff. Jobs were run by putting punched cards for input into the machine's card reader and waiting for results to come back on the printer. 
The field was so new that the idea of management by schedule was non-existent. Making predictions of a project's completion date was almost impossible. 
Computer hardware was application-specific. Scientific and business tasks needed different machines. 
Due to the need to frequently translate old software to meet the needs of new machines, high-order languages like FORTRAN, COBOL, and ALGOL were developed. 
Hardware vendors gave away systems software for free as hardware could not be sold without software. A few companies sold the service of building custom software but no software companies were selling packaged software. 
The notion of reuse flourished. As software was free, user organizations commonly gave it away. Groups like IBM's scientific user group SHARE offered catalogs of reusable components. 
Academia did not yet teach the principles of computer science. 
Modular programming and data abstraction were already being used in programming.</p>

</sec>
<sec>
<st>
 1945 to 1965: The origins </st>

<p>

The term <it>software engineering</it> first appeared in the late <link xlink:type="simple" xlink:href="../573/34573.xml">
1950s</link> and early <link xlink:type="simple" xlink:href="../545/34545.xml">
1960s</link>. Programmers have always known about civil, electrical, and computer engineering and debated what engineering might mean for software.</p>
<p>

The <link>
NATO Science Committee</link> sponsored two conferences<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> on software engineering in <link xlink:type="simple" xlink:href="../655/34655.xml">
1968</link> (Garmisch, Germany&nbsp;&mdash; see ) and <link xlink:type="simple" xlink:href="../610/34610.xml">
1969</link>, which gave the field its initial boost. Many believe these conferences marked the official start of the profession of <it>software engineering</it>.</p>

</sec>
<sec>
<st>
 1965 to 1985: The software crisis </st>

<p>

Software engineering was spurred by the so-called <it><link xlink:type="simple" xlink:href="../012/27012.xml">
software crisis</link></it> of the <link xlink:type="simple" xlink:href="../545/34545.xml">
1960s</link>, <link xlink:type="simple" xlink:href="../555/34555.xml">
1970s</link>, and <link xlink:type="simple" xlink:href="../557/34557.xml">
1980s</link>, which identified many of the problems of software development. Many software projects ran over budget and schedule. Some projects caused property damage. A few projects caused <link xlink:type="simple" xlink:href="../221/8221.xml">
loss of life</link>. The software crisis was originally defined in terms of <link xlink:type="simple" xlink:href="../899/424899.xml">
productivity</link>, but evolved to emphasize <link xlink:type="simple" xlink:href="../455/12115455.xml">
quality</link>. Some used the term <it>software crisis</it> to refer to their inability to hire enough qualified programmers.</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Cost and <link xlink:type="simple" xlink:href="../338/6832338.xml">
Budget Overruns</link>:</b> The <link xlink:type="simple" xlink:href="../737/14387737.xml">
OS/360</link> operating system was a classic example. This decade-long project from the 1960s eventually produced one of the most complex software systems at the time. OS/360 was one of the first large (1000 programmers) software projects. <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../652/11652.xml">
Fred Brooks</link></scientist>
</person>
 claims in <it><link>
The Mythical Man Month</link></it> that he made a multi-million dollar mistake of not developing a coherent <link xlink:type="simple" xlink:href="../364/48364.xml">
architecture</link> before starting development.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Property Damage:</b> Software defects can cause property damage. Poor <link xlink:type="simple" xlink:href="../015/2571015.xml">
software security</link> allows hackers to steal identities, costing time, money, and reputations.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Life and Death:</b> Software defects can kill. Some <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded systems</link> used in <link xlink:type="simple" xlink:href="../350/26350.xml">
radiotherapy</link> machines failed so catastrophically that they administered <link xlink:type="simple" xlink:href="../776/575776.xml">
lethal dose</link>s of <link xlink:type="simple" xlink:href="../856/25856.xml">
radiation</link> to patients.  The most famous of these failures is the <it><link xlink:type="simple" xlink:href="../212/315212.xml">
Therac 25</link></it> incident.</entry>
</list>
</p>
<p>

<physical_entity wordnetid="100001930" confidence="0.8">
<peer wordnetid="109626238" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<link xlink:type="simple" xlink:href="../127/383127.xml">
Peter G. Neumann</link></associate>
</scientist>
</causal_agent>
</colleague>
</specialist>
</person>
</expert>
</peer>
</physical_entity>
 has kept a contemporary list of software problems and disasters at <weblink xlink:type="simple" xlink:href="http://catless.ncl.ac.uk/Risks">
Computer Risks</weblink>.</p>
<p>

The software crisis has been slowly fizzling out, because it is unrealistic to remain in crisis mode for more than 20 years. SEs are accepting that the problems of SE are truly difficult and only hard work over many decades can solve them.</p>

</sec>
<sec>
<st>
 1985 to 1989: No silver bullet </st>

<p>

For decades, solving the software crisis was paramount to researchers and companies producing software tools. Seemingly, they trumpeted every new technology and practice from the <link xlink:type="simple" xlink:href="../726/34726.xml">
1970</link>s to the <link xlink:type="simple" xlink:href="../635/34635.xml">
1990</link>s as a <it><link xlink:type="simple" xlink:href="../739/528739.xml">
silver bullet</link></it> to solve the software crisis.</p>
<p>

Tools, discipline, <link xlink:type="simple" xlink:href="../883/161883.xml">
formal methods</link>, process, and professionalism were touted as silver bullets:</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Tools</b>: Especially emphasized were tools: <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../695/27695.xml">
Structured programming</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
, <link xlink:type="simple" xlink:href="../757/22757.xml">
object-oriented programming</link>, <link xlink:type="simple" xlink:href="../071/627071.xml">
CASE</link> tools, <link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link>, <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
, <link xlink:type="simple" xlink:href="../430/164430.xml">
documentation</link>, <link xlink:type="simple" xlink:href="../065/27065.xml">
standards</link>, and <link xlink:type="simple" xlink:href="../169/32169.xml">
Unified Modeling Language</link> were touted as silver bullets.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Discipline:</b> Some pundits argued that the software crisis was due to the lack of <link xlink:type="simple" xlink:href="../487/267487.xml">
discipline</link> of programmers.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Formal methods:</b> Some believed that if formal engineering methodologies would be applied to <link xlink:type="simple" xlink:href="../932/248932.xml">
software development</link>, then production of software would become as predictable an <link xlink:type="simple" xlink:href="../543/14543.xml">
industry</link> as other branches of <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link>. They advocated proving all programs correct.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Process:</b> Many advocated the use of defined <link xlink:type="simple" xlink:href="../766/4746766.xml">
processes</link> and <link xlink:type="simple" xlink:href="../565/27565.xml">
methodologies</link> like the <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../492/7492.xml">
Capability Maturity Model</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Professionalism:</b> This led to work on a code of <link xlink:type="simple" xlink:href="../258/9258.xml">
ethic</link>s, <link xlink:type="simple" xlink:href="../412/40412.xml">
license</link>s, and <link xlink:type="simple" xlink:href="../460/24460.xml">
professionalism</link>.</entry>
</list>
</p>
<p>

In <link xlink:type="simple" xlink:href="../761/34761.xml">
1986</link>, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../652/11652.xml">
Fred Brooks</link></scientist>
</person>
 published the <it><product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<oeuvre wordnetid="103841417" confidence="0.8">
<end_product wordnetid="103287178" confidence="0.8">
<link xlink:type="simple" xlink:href="../899/302899.xml">
No Silver Bullet</link></end_product>
</oeuvre>
</artifact>
</creation>
</product>
</it> article, arguing that no individual <link xlink:type="simple" xlink:href="../816/29816.xml">
technology</link> or practice would ever make a 10-fold improvement in productivity within 10 years.</p>
<p>

Debate about silver bullets raged over the following decade. Advocates for <link xlink:type="simple" xlink:href="../242/1242.xml">
Ada</link>, <link xlink:type="simple" xlink:href="../674/2816674.xml">
components</link>, and <link xlink:type="simple" xlink:href="../766/4746766.xml">
processes</link> continued arguing for years that their favorite technology would be a silver bullet. Skeptics disagreed. Eventually, almost everyone accepted that no silver bullet would ever be found. Yet, claims about <it>silver bullets</it> pop up now and again, even today.</p>
<p>

Some interpret <it>no silver bullet</it> to mean that software engineering failed. The search for a single key to success never worked. All known technologies and practices have only made incremental improvements to productivity and quality. Yet, there are no silver bullets for any other profession, either. Others interpret <it>no silver bullet</it> as proof that software engineering has finally matured and recognized that projects succeed due to hard work.</p>
<p>

However, it could also be said that there are, in fact, a range of <it>silver bullets</it> today, including lightweight methodologies (see "<link xlink:type="simple" xlink:href="../042/24042.xml">
Project management</link>"), spreadsheet calculators, customized <link xlink:type="simple" xlink:href="../173/33173.xml">
browsers</link>, in-site search engines, database report generators, integrated design-test coding-editors with memory/differences/undo, and specialty shops that generate niche software, such as information websites, at a fraction of the cost of totally customized website development.  Nevertheless, the field of software engineering appears too complex and diverse for a single "silver bullet" to improve most issues, and each issue accounts for only a small portion of all software problems.</p>

</sec>
<sec>
<st>
 1990 to 1999: Prominence of the Internet </st>
<p>

The rise of the <link xlink:type="simple" xlink:href="../539/14539.xml">
Internet</link> led to very rapid growth in the demand for international information display/e-mail systems on the world wide web.  Programmers were required to handle illustrations, maps, photographs, and other images, plus simple animation, at a rate never before seen, with few well-known methods to optimize image display/storage (such as the use of thumbnail images).</p>
<p>

The growth of browser usage, running on the HTML language, changed the way in which information-display and retrieval was organized.  The wide-spread network connections led to the growth and prevention of international <link xlink:type="simple" xlink:href="../196/18994196.xml">
computer virus</link>es on MS Windows computers, and the vast proliferation of spam e-mail became a major design issue in e-mail systems, flooding communication channels and requiring semi-automated pre-screening. Keyword-search systems evolved into web-based <link xlink:type="simple" xlink:href="../023/4059023.xml">
search engine</link>s, and many software systems had to be re-designed, for international searching, depending on <link xlink:type="simple" xlink:href="../946/187946.xml">
Search Engine Optimization</link> (SEO) techniques.  Human natural-language translation systems were needed to attempt to translate the information flow in multiple foreign languages, with many software systems being designed for multi-language usage, based on design concepts from human translators.  Typical computer-user bases went from hundreds, or thousands of users, to, often, many-millions of international users.</p>

</sec>
<sec>
<st>
 2000 to Present: Lightweight Methodologies </st>
<p>

With the expanding demand for software in many smaller organizations, the need for inexpensive software solutions led to the growth of simpler, faster methodologies that developed running software, from requirements to deployment, quicker &amp; easier.  The use of rapid-prototyping evolved to entire <it>lightweight methodologies</it>, such as <belief wordnetid="105941423" confidence="0.8">
<doctrine wordnetid="105943300" confidence="0.8">
<link xlink:type="simple" xlink:href="../352/10352.xml">
Extreme Programming</link></doctrine>
</belief>
 (XP), which attempted to simplify many areas of software engineering, including requirements gathering and reliability testing for the growing, vast number of small software systems.  Very large software systems still used heavily-documented methodologies, with many volumes in the documentation set; however, smaller systems had a simpler, faster alternative approach to managing the development and maintenance of software calculations and algorithms, information storage/retrieval and display.</p>

</sec>
<sec>
<st>
 Major developments </st>

<p>

There are a number of areas where the evolution of software engineering is notable:</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Emergence as a profession:</b> By the early <link xlink:type="simple" xlink:href="../557/34557.xml">
1980s</link>, software engineering had already emerged as a bona fide profession, to stand beside computer science and traditional engineering. See also <link xlink:type="simple" xlink:href="../948/473948.xml">
software engineering professionalism</link>.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Role of women:</b> In the <link xlink:type="simple" xlink:href="../583/34583.xml">
1940s</link>, <link xlink:type="simple" xlink:href="../573/34573.xml">
1950s</link>, and <link xlink:type="simple" xlink:href="../545/34545.xml">
1960s</link>, men often filled the more prestigious and better paying <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link> <link xlink:type="simple" xlink:href="../251/9251.xml">
engineering</link> roles, but often delegated the writing of software to <link xlink:type="simple" xlink:href="../183/33183.xml">
women</link>.  <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../590/12590.xml">
Grace Hopper</link></person>
, <link xlink:type="simple" xlink:href="../514/9138514.xml">
Jamie Fenton</link> and many other unsung women filled many <link xlink:type="simple" xlink:href="../311/5311.xml">
programming</link> <link xlink:type="simple" xlink:href="../993/314993.xml">
jobs</link> during the first several decades of software engineering. Today, many fewer women work in software engineering than in other professions, a complex problem related to <link xlink:type="simple" xlink:href="../165/27165.xml">
sexual discrimination</link>, <link xlink:type="simple" xlink:href="../909/429909.xml">
cyberculture</link>, education, and individual identity, and one which many academic and professional organizations are trying hard to solve.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Processes:</b> <know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../565/27565.xml">
Processes</link></method>
</know-how>
 have become a big part of software engineering and are hailed for their potential to improve software and sharply criticized for their potential to constrict programmers.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

<b>Cost of hardware:</b> The relative <link xlink:type="simple" xlink:href="../789/166789.xml">
cost</link> of software versus hardware has changed substantially over the last 50 years. When <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframes</link> were expensive and required large support staffs, the few organizations buying them also had the resources to fund large, expensive custom software engineering projects. Computers are now much more numerous and much more powerful, which has several effects on software. The larger market can support large projects to create <link xlink:type="simple" xlink:href="../273/2425273.xml">
commercial off the shelf</link> software, as done by companies such as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
. The cheap machines allow each programmer to have a terminal capable of fairly rapid <link xlink:type="simple" xlink:href="../739/5739.xml">
compilation</link>. The programs in question can use techniques such as <link xlink:type="simple" xlink:href="../619/12619.xml">
garbage collection</link>, which make them easier and faster for the programmer to write. On the other hand, many fewer organizations are interested in employing programmers for large custom software projects, instead using <link xlink:type="simple" xlink:href="../273/2425273.xml">
commercial off the shelf</link> software as much as possible.</entry>
</list>
</p>

</sec>
<sec>
<st>
 Prominent Figures in the History of Software Engineering </st>

<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../018/10018.xml">
Edsger Dijkstra</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../747/10817747.xml">
 Ken Thompson</link> (inventor of <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
)</entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../218/8218.xml">
Dennis Ritchie</link></scientist>
</person>
 (inventor of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
)</entry>
<entry level="1" type="bullet">

 <expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<pioneer wordnetid="110434725" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<originator wordnetid="110383816" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../05x/Tektronix_405x.xml">
Brian Kernighan</link></scholar>
</originator>
</writer>
</causal_agent>
</alumnus>
</communicator>
</creator>
</scientist>
</intellectual>
</specialist>
</pioneer>
</interior_designer>
</person>
</physical_entity>
</expert>
 (co-author of the first book on the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 programming language with <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../218/8218.xml">
Dennis Ritchie</link></scientist>
</person>
, coauthor of the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../456/1456.xml">
AWK</link></programming_language>
 and <link xlink:type="simple" xlink:href="../640/1608640.xml">
AMPL</link> programming languages)</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<pioneer wordnetid="110434725" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<originator wordnetid="110383816" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../965/3965.xml">
Bill Joy</link></research_worker>
</originator>
</causal_agent>
</laureate>
</computer_user>
</creator>
</recipient>
</scientist>
</acquirer>
</engineer>
</programmer>
</pioneer>
</honoree>
</person>
</physical_entity>
 (inventor of <link xlink:type="simple" xlink:href="../494/32494.xml">
vi</link>, early author of <link xlink:type="simple" xlink:href="../807/1223807.xml">
BSD</link> Unix, and originator of <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../071/29071.xml">
SunOS</link></O>
, which became <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
)</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../216/55216.xml">
Anders Hejlsberg</link></research_worker>
</employee>
</scientist>
</causal_agent>
</worker>
</specialist>
</interior_designer>
</person>
</expert>
</physical_entity>
 (developer of <physical_entity wordnetid="100001930" confidence="0.8">
<communicator wordnetid="109610660" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<compiler wordnetid="109946957" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<writer wordnetid="110794014" confidence="0.8">
<link xlink:type="simple" xlink:href="../273/38273.xml">
Turbo Pascal</link></writer>
</causal_agent>
</compiler>
</person>
</communicator>
</physical_entity>
)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../942/15942.xml">
John Von Neumann</link> (originator of the <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> concept)</entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../331/71331.xml">
John Backus</link></scientist>
</person>
 (inventor of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../168/11168.xml">
Fortran</link></programming_language>
)</entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../713/3713.xml">
Bjarne Stroustrup</link></person>
 (developer of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../038/72038.xml">
C++</link></programming_language>
)</entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../449/1449.xml">
Alan Kay</link></scientist>
</person>
 (pioneering work on object-oriented programming: Originator of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../319/28319.xml">
Smalltalk</link></programming_language>
)</entry>
<entry level="1" type="bullet">

 <skilled_worker wordnetid="110605985" confidence="0.8">
<expert wordnetid="109617867" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<interior_designer wordnetid="110210648" confidence="0.8">
<specialist wordnetid="110631941" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<serviceman wordnetid="110582746" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<inventor wordnetid="110214637" confidence="0.8">
<creator wordnetid="109614315" confidence="0.8">
<military_officer wordnetid="110317007" confidence="0.8">
<blogger wordnetid="109860415" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../792/51792.xml">
James Gosling</link></scholar>
</causal_agent>
</alumnus>
</worker>
</computer_user>
</blogger>
</military_officer>
</creator>
</inventor>
</scientist>
</serviceman>
</engineer>
</intellectual>
</programmer>
</specialist>
</interior_designer>
</person>
</physical_entity>
</expert>
</skilled_worker>
 (developer of <link xlink:type="simple" xlink:href="../696/39696.xml">
Oak</link>, the precursor of <message wordnetid="106598915" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<link xlink:type="simple" xlink:href="../881/15881.xml">
Java</link></request>
</message>
)</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<research_worker wordnetid="110523076" confidence="0.8">
<link xlink:type="simple" xlink:href="../597/537597.xml">
Alan Cooper</link></research_worker>
</scientist>
</causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
 (developer of <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../382/6097382.xml">
Visual Basic</link></programming_language>
)</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://channel9.msdn.com/ShowPost.aspx?PostID=224935">
Tony Williams</weblink> (co-inventor of <link xlink:type="simple" xlink:href="../795/2664795.xml">
COM</link> - interesting interview)</entry>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../642/21642.xml">
Niklaus Wirth</link></scientist>
</person>
 inventor of <link xlink:type="simple" xlink:href="../068/4068.xml">
Pascal</link> and <link xlink:type="simple" xlink:href="../824/20824.xml">
Modula</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://homepages.cs.ncl.ac.uk/brian.randell/NATO/">
The NATO Software Engineering Conferences</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

 Brian Randell: <weblink xlink:type="simple" xlink:href="http://homepages.cs.ncl.ac.uk/brian.randell/NATO/">
The NATO Software Engineering Conferences</weblink> (The site includes the original two NATO-reports from 1968 and 1969 as well as photographs of the participants and some of the sessions at Garmisch)</entry>
</list>
</p>

</sec>
</bdy>
</article>
