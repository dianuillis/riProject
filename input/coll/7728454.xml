<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:05:23[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<process  confidence="0.8" wordnetid="100029677">
<physical_entity  confidence="0.8" wordnetid="100001930">
<phenomenon  confidence="0.8" wordnetid="100034213">
<consequence  confidence="0.8" wordnetid="111410625">
<header>
<title>Primatte chromakey technology</title>
<id>7728454</id>
<revision>
<id>201333765</id>
<timestamp>2008-03-27T15:05:22Z</timestamp>
<contributor>
<username>SmackBot</username>
<id>433328</id>
</contributor>
</revision>
<categories>
<category>Visual effects</category>
<category>Orphaned articles from March 2008</category>
<category>Film and video technology</category>
<category>All orphaned articles</category>
<category>Special effects</category>
</categories>
</header>
<bdy>
<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="44px" src="Wiki_letter_w.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>This article is  as few or no other articles <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Special:Whatlinkshere&amp;target=Primatte_chromakey_technology&amp;namespace=0">
link to it</weblink>.</b>
Please help  in articles on <weblink xlink:type="simple" xlink:href="http://www.google.com/search?hl=en&amp;as_qdr=all&amp;q=+site%3Aen.wikipedia.org+%22Primatte+chromakey+technology%22">
related topics</weblink>. <it>(March 2008)''</it></col>
</row>
</table>
</p>
<p>


<b>Primatte</b> is a high-end <link xlink:type="simple" xlink:href="../953/46953.xml">
chroma key</link> technology used in motion picture, television and photographic host applications to remove solid colored backgrounds (<link xlink:type="simple" xlink:href="../953/46953.xml">
greenscreen</link> or <link xlink:type="simple" xlink:href="../953/46953.xml">
bluescreen</link> usually) and replace them with <link xlink:type="simple" xlink:href="../816/41816.xml">
transparency</link> to facilitate ‘background replacement’. It uses a unique <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> based on three multi-faceted <link xlink:type="simple" xlink:href="../470/23470.xml">
polyhedron</link>s floating in <link xlink:type="simple" xlink:href="../989/25989.xml">
RGB</link> <link xlink:type="simple" xlink:href="../081/6081.xml">
colorspace</link> that are used to isolate color regions in the foreground image.  Primatte is often referred to as a <link xlink:type="simple" xlink:href="../715/1136715.xml">
compositing</link> technology and is usually used as a <link xlink:type="simple" xlink:href="../761/187761.xml">
plug-in</link> for host products such as <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../204/813204.xml">
Adobe After Effects</link></software>
, <skilled_worker wordnetid="110605985" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<editor wordnetid="110044879" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../893/24893.xml">
Adobe Photoshop</link></causal_agent>
</worker>
</editor>
</person>
</physical_entity>
</skilled_worker>
, <link xlink:type="simple" xlink:href="../392/1666392.xml">
Autodesk Media and Entertainment</link> Inferno or Flame, <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../788/6201788.xml">
Eyeon Fusion</link></software>
 and several other compositing and editing software packages.
<image location="left" width="250px" src="kasagirl.jpg" type="thumb">
</image>

<image location="left" width="250px" src="kasagirlcmp.jpg" type="thumb">
</image>
</p>


<sec>
<st>
 Workflow </st>
<p>

Primatte is usually activated on a foreground image with a person or other foreground object filmed or digitized against a solid colored background or backing screen; usually a <link xlink:type="simple" xlink:href="../953/46953.xml">
bluescreen</link> or a <link xlink:type="simple" xlink:href="../953/46953.xml">
greenscreen</link>. Using the Primatte tool set, the solid colored background area is removed and replaced with transparency. This allows the user to replace the solid colored background with a background image of his choice.</p>
<p>

If the foreground object was filmed close to the backing screen or with less than ideal lighting conditions, the foreground object will usually have ‘spill’ somewhere on it. This is most common when filming blonde people against a blue or greenscreen as their translucent hair will absorb the backing screen color. Using the Primatte tool set, this ‘colorspill’ can be removed and replaced with several options to achieve a realistic result.</p>
<p>

Another problem is chromakeying images that were created on <link xlink:type="simple" xlink:href="../028/11028.xml">
film stock</link> is that some film stocks have a distinct ‘<link xlink:type="simple" xlink:href="../853/5393853.xml">
film grain</link>’ to them. A large amount of film grain will often cause rough edges around the foreground object. Again, using the Primatte tool set, these rough edges can be minimized to achieve a smooth transition between the edges of the ‘chroma keyed’ foreground object and the user selected background image.</p>

</sec>
<sec>
<st>
 History </st>
<p>

The Primatte algorithm was created by Yasushi Mishima while working at IMAGICA Corporation in Tokyo, Japan in 1992. The basic algorithm utilized in Primatte was originally presented at the 8th NICOGRAPH Conference and the 23rd Imaging Technology Conference and a U.S. patent was granted in 1994.</p>
<p>

It was initially released as a stand-alone product on <link xlink:type="simple" xlink:href="../013/28013.xml">
Silicon Graphics</link> <link xlink:type="simple" xlink:href="../181/68181.xml">
workstations</link> but it was later determined to be more useful as a ‘plug-in’ actuated from within a host application. This alleviated the need to save the images, exit the host compositing application, start Primatte, load the images, create the chroma key, save the images, start the host application, load the images and continue creating the composition. Since then it has been ported to almost every major compositing and editing software application on the market today. The current version is the fourth generation of the Primatte technology and has enhanced features such as an ‘Auto-Compute’ feature that automatically detects the backing screen color, eliminates it and does clean-up on the foreground and backing screen area noise making Primatte almost a 'one step' operation. It is now available on the <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../072/26072.xml">
Red Hat Linux</link></O>
, SGI <link xlink:type="simple" xlink:href="../537/14537.xml">
IRIX</link> and the Apple <link xlink:type="simple" xlink:href="../979/19006979.xml">
Macintosh</link> platforms.</p>

</sec>
<sec>
<st>
 The Algorithm </st>
<p>

The Primatte chromakey algorithm is a sophisticated method of color space <link xlink:type="simple" xlink:href="../717/505717.xml">
segmentation</link> that can be easily explained to help a user achieve maximum effectiveness with the tool. Basically Primatte segments all the colors in the foreground image into one of four separate categories. The result is a 'spill suppressed' foreground image and a <link xlink:type="simple" xlink:href="../476/491476.xml">
matte</link> which is used to apply the modified foreground to a suitable background.</p>
<p>

Primatte works in 3D RGB color space. Here is a visual representation of the Primatte algorithm after an image has been processed.
<image location="none" width="250px" src="3D_viewer_window_1.jpg" type="thumb">
<caption>

3D Viewer Window
</caption>
</image>
</p>
<p>

By operating the Primatte interface, the user essentially creates three <link xlink:type="simple" xlink:href="../087/19049087.xml">
concentric</link>, multi-faceted <link xlink:type="simple" xlink:href="../470/23470.xml">
polyhedrons</link>. These can be pictured as three globes (or polyhedrons or polys), one within the other, which share a common center point. The creation of these polyhedrons separates all possible foreground colors into one of four regions; inside the small polyhedron (1), between the small and medium polyhedrons (2), between the medium and the large polyhedrons (3) and outside the large polyhedron (4).
<image location="none" width="400px" src="Primatte_Polys.jpg" type="thumb">
<caption>

Primatte Algorithm Regions
</caption>
</image>

The four regions created are described as follows:</p>
<p>

Region 1 (inside the small polyhedron) - This region contains all of the foreground image colors that are considered 100% background. These are the green or blue or whatever colors that were used as the backing color of the foreground image. </p>
<p>

Region 2 (between the small and medium polyhedrons) - This region contains all the foreground colors that are at the edges of the foreground object(s), in glass, glass reflections, shadows, sheets of water and other transparent and semi-transparent color regions. These color regions also have spill suppression applied to them to remove color spill from the backing screen. </p>
<p>

Region 3 (between the medium and large polyhedrons) - This region contains all the foreground image colors that are 100% foreground but have spill suppression applied to them to remove color spill from the backing screen. Otherwise they are 100% solid foreground colors. </p>
<p>

Region 4 (outside the large polyhedron) - This region contains all the 100% foreground image colors that are not modified from the original foreground image. There is no spill suppression applied to these colors. </p>
<p>

<image location="none" width="450px" src="Primatte_Polys2.jpg" type="thumb">
</image>

In the first step in using Primatte, <b>Select BG Color</b>, the user is asked to indicate the backing color on the original foreground image. The sample should usually be taken from a 'medium shaded' area near the foreground object. By 'medium shaded' area, it is meant that if green is the backing color and the green area of the foreground image has many shades of green ranging from very pale green to almost black, a shade of green in-between these extreme ranges should be chosen. If good results are not obtained using this sample, Primatte should be reset and another sample taken using a slightly darker or lighter shade of green. The first sample of Primatte often determines the final result as the center point of all three polyhedrons is created based on this first sample.</p>
<p>

<b>NOTE:</b> An alternative method of keying in the Primatte Version 4 release is an <b>Auto-Compute</b> button the algorithmically detects the background color, eliminates it and does foreground and background noise removal. All the user might have to do is clean up some spill n the image.</p>
<p>

A single <link xlink:type="simple" xlink:href="../665/23665.xml">
pixel</link> may be selected or a range of pixels (snail trail or rectangular sample). If a range of pixels is taken, the sample will be averaged to get a single color sample. This single pixel or averaged color sample then becomes the center of the small polyhedron. A few other shades around that color are included in the original small polyhedron. </p>
<p>

After making a sample of the backing screen color in the first step, the result is a small golf ball-shaped poly as shown in the following image. </p>
<p>

<image location="none" width="250px" src="Primatte_redball_1.jpg" type="thumb">
</image>
</p>
<p>

The second step in using Primatte is to clean up the backing color area by adding additional shades of green or blue to the small poly. This second step, <b>Clean BG Noise</b>, is usually executed while viewing the black and white <b>Matte View</b>. </p>
<p>

<image location="left" width="300px" src="Bg_noise_before.jpg" type="thumb">
<caption>

Before BG Noise Removal
</caption>
</image>

<image location="left" width="300px" src="Bg_noise_after.jpg" type="thumb">
<caption>

After BG Noise Removal
</caption>
</image>
</p>

<p>

While in the <b>Clean BG Noise</b> sampling mode, the user samples the white milky regions as shown in the left-hand image above. As the user samples these regions, they turn to black as shown in the right-hand image above.</p>
<p>

What is happening in the Primatte algorithm is that these new shades of green (the white milky areas) are added to the small poly where all the shades of green or blue are moved. The next two images show the new pixels sampled (white dots) in relation to the small poly and the image next to it shows how the small poly extends outward to encompass the newly sampled colors into the small poly. </p>
<p>

<image location="left" width="250px" src="3DSmPoly3a.jpg" type="thumb">
</image>

<image location="left" width="250px" src="3DSmPoly3b.jpg" type="thumb">
</image>
</p>

<p>

The advantage of this technique is that the polyhedron distorts to enclose only the shades of green that are in the backing screen. Other shades of green around these colors are left undisturbed in the foreground. Other chromakeyers expand from a golf ball-sized shape to a baseball to a basketball to a beach ball. Since it expands in all directions, many shades of green are relegated to 100% background making it hard to get good edges around the foreground objects.</p>
<p>

Now that the user has created a small polyhedron, he must shape the medium and large polys. A default medium and large poly are both automatically created and are then modified based on the next couple of Primatte operations. The third Primatte step, <b>Clean FG Noise</b>, is to sample and eliminate gray areas in the 100% foreground area of the image. </p>
<p>

<image location="left" width="300px" src="Fg_noise_before.jpg" type="thumb">
<caption>

Before FG Noise Removal
</caption>
</image>

<image location="left" width="300px" src="Fg_noise_after.jpg" type="thumb">
<caption>

After FG Noise Removal
</caption>
</image>
</p>

<p>

Again, the user makes several samples on the dark, grayish areas on the foreground object until it is solid white in color. Primatte is shaping the large polyhedron with each color region that is sampled. Care should be taken in both this and the previous steps to not sample too close to the edges of the foreground object. Getting too close to the foreground object's edges will result in hard edges around the foreground object. Primatte uses these samples to modify and shape the medium and large polys to the desired shape. At this point, the matte or key has been created and would allow the foreground objects to be composited into a new background image. </p>
<p>

If the user changes the display mode from the black and white <b>Matte View</b> to the color <b>Composite View</b>, there is usually 'color spill' on the edges (and sometimes the center) of the foreground objects. When on the edges of the foreground object, this spill comes from where the edges of the foreground object blended into the backing color. If it is on the center of the foreground object, it usually results from reflected color from the backing screen. The next Primatte step, either <b>Spill Sponge</b>, <b>Fine Tuning</b> or <b>Spill(-)</b>, can now be used to eliminate this spill color.</p>
<p>

What is happening in the Primatte algorithm while this next step is performed? Here is what the various tools in Primatte do to the Polyhedrons when they are used: </p>
<p>

<image location="none" width="400px" src="Polys4.jpg" type="thumb">
</image>

The <b>Spill Sponge</b> bulges the large polyhedron in the color region specified. A color region is specified by clicking on the image in a particular area with spill present. For example, if the user clicks on some spill on the cheek of a foreground person, Primatte goes to the section of the large polyhedron closest to that particular flesh tone and bulges the polyhedron there. As a result, the flesh tones move from outside the large poly to in-between the medium and large polys. This is Region 3 and is 100% foreground with spill suppression. As a result of the suppression, the spill is removed from that cheek color and all other shades of that color on the foreground. The user would then continue to sample areas of the image where spill exists and each sample would remove spill from another color region.</p>
<p>

When all spill has been removed, the user should have a final composite. As a last step, go back to the <b>Matte View</b> and make sure that gray, transparent areas have not appeared in the foreground area. If there are any, the <b>Matte Sponge</b> operation mode should be selected and those gray pixels are sampled until they have all turned white again.</p>
<p>

The <b>Matte Sponge</b> and <b>Spill Sponge</b> tools bulge or dent the polyhedrons a pre-selected amount. If the desired results are not achieved or the results are too extreme for the image, a manual method can be applied. The user should choose the Fine Tuning sliders, select a color region of interest and then move the appropriate slider to get the desired results.</p>
<p>

For example, to remove spill, select a region of the composite image with spill on it. Move the spill or large poly slider to the right a little bit, the large poly will bulge and the spill should disappear. Move it a little more, if necessary. Moving this slider to the right removes spill (moves the colors from outside the large poly to between the medium and large polyhedrons) and moving it to the left, dents the large poly and moves that color region to outside the large poly.</p>
<p>

If the user samples a foreground object shadow and then moves the <b>Matte</b> or medium poly slider to the right, the shadow will become more transparent. This is useful for matching composited shadows to shadows on the plate photography. It can also be used to make clouds or smoke more transparent. </p>
<p>

If some foreground detail disappears during the composite, the user can select where the detail should be and then move the detail or small poly slider to the left. This dents the small poly in that color region and releases the detail pixels from the small poly into the visible region between the small and medium polyhedrons.
The <b>Spill Sponge</b> and <b>Matte Sponge</b> tools are 'shortcut tools' that automatically move the sliders a pre-selected amount as a timesaving step for the user. Other 'shortcut tools' include the <b>Make FG Trans.</b> tool and the <b>Restore Detail</b> tool.</p>
<p>

<image location="none" width="400px" src="Polys5.jpg" type="thumb">
</image>

These 'shortcut tools' are one-step operations where the user clicks on a color region of interest and Primatte performs a pre-calculated operation. Most operations using Primatte would only require these tools, but the manual operation of the sliders is always an option. </p>
<p>

The <b>Spill(-)</b> tool bulges the large poly a small amount incrementally in the color region that is clicked on and the <b>Spill(+)</b> tool dents it a small amount with each click. The <b>Matte(-)</b> and <b>Matte(+)</b> tools do the same to the medium poly and the <b>Detail(-)</b> and <b>Detail(+)</b> do it to the small poly. </p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<link>
Computer Generated Imagery</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../953/46953.xml">
Chroma key</link></entry>
<entry level="1" type="bullet">

<link>
Special Effects</link></entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.primatte.com">
Primatte Web Site</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.seanet.com/~bradford/bluscrn.html">
The Blue Screen/Chromakey Page</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://entertainment.howstuffworks.com/blue-screen.htm">
How Blue Screens Work</weblink></entry>
</list>
</p>

</sec>
</bdy>
</consequence>
</phenomenon>
</physical_entity>
</process>
</article>
