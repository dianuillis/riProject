<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 22:56:06[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Block nested loop</title>
<id>7806581</id>
<revision>
<id>201777800</id>
<timestamp>2008-03-29T09:11:08Z</timestamp>
<contributor>
<username>Andreas Kaufmann</username>
<id>72502</id>
</contributor>
</revision>
<categories>
<category>Database algorithms</category>
</categories>
</header>
<bdy>

A <b>block-nested loop</b> is an <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link> used to <link xlink:type="simple" xlink:href="../204/665204.xml">
join</link> two relations in a <link xlink:type="simple" xlink:href="../873/25873.xml">
relational database</link>.<p>

This algorithm is a variation on the simple <link xlink:type="simple" xlink:href="../299/7806299.xml">
nested loop join</link> used to join two relations <math>R</math> and <math>S</math> (the "outer" and "inner" join operands, respectively). Suppose <math>|R| &amp;lt; |S|</math>. In a traditional nested loop join, <math>S</math> will be scanned once for every tuple of <math>R</math>. If there are many qualifying <math>R</math> tuples, and particularly if there is no applicable index for the join key on <math>S</math>, this operation will be very expensive.</p>
<p>

The block nested loop join algorithm improves on the simple nested loop join by only scanning <math>S</math> once for every <it>group</it> of <math>R</math> tuples. For example, one variant of the block nested loop join reads an entire <link xlink:type="simple" xlink:href="../911/11254911.xml">
page</link> of <math>R</math> tuples into memory and loads them into a <link xlink:type="simple" xlink:href="../833/13833.xml">
hash table</link>. It then scans <math>S</math>, and probes the hash table to find <math>S</math> tuples that match any of the tuples in the current page of <math>R</math>. This reduces the number of scans of <math>S</math> that are necessary.</p>
<p>

A more aggressive variant of this algorithm loads as many pages of <math>R</math> as can be fit in the available memory, loading all such tuples into a hash table, and then repeatedly scans <math>S</math>. This further reduces the number of scans of <math>S</math> that are necessary. In fact, this algorithm is essentially a special-case of the classic <link xlink:type="simple" xlink:href="../584/1983584.xml">
hash join</link> algorithm.</p>
<p>

The block nested loop runs in <math>O(P_r P_s/M)</math> I/Os where <math>M</math> is the number of available pages of internal memory and <math>P_r</math> and <math>P_s</math> is size of <math>R</math> and <math>S</math> respectively in pages. Note
that block nested loop runs in <math>O(P_r+P_s)</math> I/Os if <math>R</math> fits in the available internal memory.</p>

</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
