<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:04:56[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Genetic algorithm in economics</title>
<id>7836244</id>
<revision>
<id>227851189</id>
<timestamp>2008-07-25T16:20:13Z</timestamp>
<contributor>
<username>CRGreathouse</username>
<id>1077900</id>
</contributor>
</revision>
<categories>
<category>Optimization algorithms</category>
<category>Econometrics</category>
<category>Genetic algorithms</category>
</categories>
</header>
<bdy>

<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../254/40254.xml">
Genetic algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
s are used to <link xlink:type="simple" xlink:href="../795/3224795.xml">
model</link> the learning behaviour of <principle wordnetid="105913538" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<generalization wordnetid="105913275" confidence="0.8">
<link xlink:type="simple" xlink:href="../752/3736752.xml">
economic agents</link></generalization>
</idea>
</principle>
. The term "genetic algorithm" is often abbreviated as GA. The genetic algorithm is a particular class of <link xlink:type="simple" xlink:href="../837/190837.xml">
evolutionary algorithm</link> inspired by <link xlink:type="simple" xlink:href="../101/418101.xml">
evolutionary biology</link>. A genetic algorithm is defined as basic if it only contains a method for reproduction and experimentation. It is defined as augmented if it contains a selection operator as well.<p>

Genetic algorithms are <link xlink:type="simple" xlink:href="../704/407704.xml">
implemented</link> as a <link xlink:type="simple" xlink:href="../416/375416.xml">
computer simulation</link> in which a <link xlink:type="simple" xlink:href="../949/22949.xml">
population</link> of abstract representations (called <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../480/555480.xml">
chromosomes</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 or strings) of <link xlink:type="simple" xlink:href="../808/1556808.xml">
candidate solutions</link> (called individuals, or agents) to an optimization problem evolves toward better solutions. Traditionally, solutions are represented in binary as strings of 0s and 1s, but other encodings are also possible. The evolution usually starts from a population of randomly generated individuals and happens in generations. In each generation, the fitness of every individual in the population is evaluated, multiple individuals are stochastically selected from the current population (based on their fitness), and modified (mutated or recombined) to form a new population. The new population is then  used in the next iteration of the algorithm.</p>
<p>

The genetic algorithm has increasingly been applied to economics over the last two decades. It has been used to characterize a variety of models including the <link xlink:type="simple" xlink:href="../440/1476440.xml">
cobweb model</link>, the <link xlink:type="simple" xlink:href="../973/1539973.xml">
overlapping generations model</link>, <link xlink:type="simple" xlink:href="../924/11924.xml">
game theory</link> and <link xlink:type="simple" xlink:href="../107/347107.xml">
asset pricing</link>.</p>

<sec>
<st>
 Design </st>

<p>

The genetic algorithm generally consists of a population of n agents with m strings. These strings are often initially randomly generated but are then updated every g periods. Each string is assigned a fitness value through a defined method which is used as a measure of performance. The strings are updated through a series of operators. The basic genetic algorithm generally consists of three unique operators: the reproduction operator, which attempts to imitate successful agents and the two experimentation operators, crossover and mutation, which are implemented to bring diversity into the system. The augmented genetic algorithm includes an election operator, which adds a selection criteria.</p>

<ss1>
<st>
 Reproduction </st>

<p>

The first operator, reproduction, works by attempting to imitate. In general, it selects another agent to observe its fitness value. If its fitness value is greater than its own, then it elects to adopt the other agent's string. Otherwise, it preserves it own. These strings are then placed into an offspring pool to undergo the mutation operators, crossover and mutation. Most functions are <link xlink:type="simple" xlink:href="../222/292222.xml">
stochastic</link> and designed so that a small proportion of less fit solutions are selected. This helps keep the diversity of the population large, preventing premature convergence on poor solutions. Popular and well-studied selection methods include <link xlink:type="simple" xlink:href="../703/371703.xml">
roulette wheel selection</link> and <link xlink:type="simple" xlink:href="../156/491156.xml">
tournament selection</link>.</p>

</ss1>
<ss1>
<st>
 Crossover </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../546/554546.xml">
crossover (genetic algorithm)</link></it>
</indent>

</p>
</ss1>
<ss1>
<st>
 Mutation </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../213/555213.xml">
mutation (genetic algorithm)</link></it>
</indent>

</p>
</ss1>
<ss1>
<st>
 Election </st>

<p>

These processes ultimately result in the offspring pool  of strings that is different from the initial parent pool. The election operator then works by comparing the fitness of the parent strings to the potential fitness of the offspring pool. If the offspring string has a higher fitness value, it will replace the parent string in the population. Otherwise, the parent string will stay. Generally the average fitness will have increased by this procedure for the population, since only the best strings are selected.</p>

</ss1>
</sec>
<sec>
<st>
 Genetic Algorithm in the Cobweb Model </st>

<p>

The <link xlink:type="simple" xlink:href="../440/1476440.xml">
cobweb model</link> is a simple supply and demand model for a good over t periods. Firms (agents) make a production quantity decision in a given period, however their output is not produced until the following period. Thus, the firms are going to have to use some sort of method to forecast what the future price will be. The GA is used as a sort of learning behaviour for the firms. Initially their quantity production decisions are random, however each period they learn a little more. The result is the agents converge within the area of the <link xlink:type="simple" xlink:href="../753/65753.xml">
rational expectations</link> (RATEX) equilibrium for the stable and unstable case. If the election operator is used, the GA converges exactly to the RATEX equilibrium.</p>
<p>

There are two type of learning methods these agents can be deployed with: social learning and individual learning. In social learning, each firm is endowed with a single string (which is used as its quantity production decision). It then compares this string against other firm's strings. In the individual learning case, agents are endowed with a pool strings. These strings are then compared against other strings within the agent's population pool. This can be thought of as mutual competing ideas within a firm whereas in the social case, it can be thought of as firm's learning from more successful firms. Note that in the social case and in the individual learning case with identical cost functions, that this is a homogeneous solution, that is all agent's production decisions are identical. However, if the cost functions are not identical, this will result in a heterogeneous solution, where firms produce different quantities (note that they are still locally homogeneous, that is within the firm's own pool all the strings are identical).</p>
<p>

After all agent's have made a quantity production decision, the quantities are aggregated and plugged into a demand function to get a price. Each firm's profit is then calculated. Fitness values are then calculated as a function of profits. After the offspring pool is generated, hypothetical fitness values are calculated. These hypothetical values are based on some sort of estimation of the price level, often just by taking the previous price level.</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 J Arifovic, 'Genetic Algorithm Learning and the Cobweb Model ', Journal of Economic Dynamics and Control, vol. 18, Issue 1, (January 1994), 3-28.</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sfu.ca/crabe/">
Centre for Adaptive Behaviour in Economics</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.econ.iastate.edu/tesfatsi/getalife.htm">
Agent-Based Computational Economics and Artificial Life: A Brief Intro</weblink></entry>
</list>
</p>

</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
