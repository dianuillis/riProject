<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:42:01[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>CDC Cyber</title>
<id>826507</id>
<revision>
<id>244552905</id>
<timestamp>2008-10-11T11:41:36Z</timestamp>
<contributor>
<username>Ghettoblaster</username>
<id>6603820</id>
</contributor>
</revision>
</header>
<bdy>

The <b>CDC Cyber</b> range of <link xlink:type="simple" xlink:href="../266/20266.xml">
mainframe</link>-class <link xlink:type="simple" xlink:href="../153/37153.xml">
supercomputer</link>s were the primary products of <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../032/58032.xml">
Control Data Corporation</link></institution>
</company>
 (CDC) during the 1970s and 1980s.  In their day, they were the computer architecture of choice for scientific and mathematically intensive computing.  Applications include modeling fluid flow, material science stress analysis, electrochemical machining analysis,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> probabilistic analysis,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> energy and academic computing,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> and radiation shielding modeling.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> <p>

Since the Cybers were discontinued, advances in processing power (see <link xlink:type="simple" xlink:href="../418/39418.xml">
Moore's law</link>) led to most modern desktop computers having more power than the best supercomputer of the era.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref>  Today, computers are built for PC prices which outperform multi-million dollar systems from ten years ago.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>

<sec>
<st>
 Models </st>
<p>

The Cyber line included five very different models of computer:
<list>
<entry level="1" type="bullet">

 The 70 and 170 series based on the architecture of the <link xlink:type="simple" xlink:href="../661/58661.xml">
CDC 6600</link> and <link xlink:type="simple" xlink:href="../742/655742.xml">
CDC 7600</link></entry>
<entry level="1" type="bullet">

 The 180 series developed by a team in Canada</entry>
<entry level="1" type="bullet">

 The 200 series based on the <link xlink:type="simple" xlink:href="../447/937447.xml">
CDC STAR-100</link></entry>
<entry level="1" type="bullet">

 The CYBERPLUS or Advanced Flexible Processor (AFP)</entry>
<entry level="1" type="bullet">

 The Cyber-18 minicomputer based on the <link xlink:type="simple" xlink:href="../370/9576370.xml">
CDC 1700</link></entry>
</list>
</p>
<p>

Primarily aimed at large office applications instead of the traditional supercomputer tasks, some of the Cyber machines nevertheless included basic <link xlink:type="simple" xlink:href="../205/58205.xml">
vector instructions</link> for added performance in "traditional" CDC roles.</p>

</sec>
<sec>
<st>
 CDC Cyber 70 and 170 series </st>
<p>

<image location="right" width="300px" src="CDC_Cyber_170_CPU_architecture.png" type="thumb">
<caption>

Hardware architecture of the CDC Cyber 170 series computer
</caption>
</image>

The Cyber 70 and 170 architectures were successors to the earlier <link xlink:type="simple" xlink:href="../661/58661.xml">
CDC 6600</link> and <link xlink:type="simple" xlink:href="../742/655742.xml">
CDC 7600</link> series and therefore shared almost all of the earlier architecture's characteristics.  The Cyber-70 series was a minor upgrade from the earlier systems.  The Cyber-170 series represented CDCs move from discrete <link xlink:type="simple" xlink:href="../820/1886820.xml">
electronic components</link> and <link>
core memory</link> to <link xlink:type="simple" xlink:href="../150/15150.xml">
integrated circuits</link> and <link xlink:type="simple" xlink:href="../007/1313007.xml">
semiconductor memory</link>.  The Cyber-170/700 series was a late-1970s refresh of the Cyber-170 line.</p>
<p>

The central <link xlink:type="simple" xlink:href="../218/5218.xml">
processor</link> (CPU) and central memory (CM) operated in units of 60-bit <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<category wordnetid="105838765" confidence="0.8">
<unit_of_measurement wordnetid="113583724" confidence="0.8">
<definite_quantity wordnetid="113576101" confidence="0.8">
<type wordnetid="105840188" confidence="0.8">
<kind wordnetid="105839024" confidence="0.8">
<link xlink:type="simple" xlink:href="../344/1613344.xml">
words</link></kind>
</type>
</definite_quantity>
</unit_of_measurement>
</category>
</concept>
</idea>
.  In CDC lingo, the term "byte" referred to 12-bit entities (which coincided with the word size used by the peripheral processors).  Characters were six bits, operation codes were six bits, and central memory addresses were 18 bits. Central processor instructions were either 15 bits or 30 bits.
The 18-bit addressing inherent to the Cyber 170 series imposed a limit of 262,144 (256K) words of main memory, which was <link xlink:type="simple" xlink:href="../709/27709.xml">
semiconductor</link> memory in this series.  The central processor had no I/O instructions, relying upon the peripheral processor (PP) units to do I/O.</p>
<p>

A Cyber 170-series system consisted of one or two <link xlink:type="simple" xlink:href="../218/5218.xml">
CPU</link>s that ran at either 25 or 40 MHz, and was equipped with 10, 14 or 20 peripheral processors (PP), and up to 24 high-performance <link xlink:type="simple" xlink:href="../370/2470370.xml">
channel controller</link>s for high-speed <link xlink:type="simple" xlink:href="../558/14558.xml">
I/O</link>. Due to the relatively slow memory reference times of the CPU (in some models, memory reference instructions were slower than floating point divides), the higher end CPUs (e.g., Cyber-74, Cyber-76, Cyber-175, and Cyber-176) were equipped with 8 words of high-speed memory used as an instruction cache. Any loop that fit into the cache (which was sometimes called <it>in-stack</it>) would run without referencing main memory for instruction fetch.  The lower-end models did not contain an instruction stack.  However since up to four instructions were packed into each 60-bit word, some degree of prefetching was inherent in the design.</p>
<p>

As with predecessor systems, the Cyber 170 series had eight 18-bit address <register wordnetid="106507041" confidence="0.8">
<record wordnetid="106647206" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../432/486432.xml">
register</link></written_record>
</evidence>
</indication>
</record>
</register>
s (A0 through A7), eight 18-bit index registers (B0 through B7), and eight 60-bit operand registers (X0 through X7).  Seven of the A registers were tied to their corresponding X register.  Setting A1 through A5 read that address and fetched it into the corresponding X1 through X5 register.  Likewise, setting register A6 or A7 wrote the corresponding X6 or X7 register to central memory at the address written to the A register.  A0 was effectively a scratch register.</p>
<p>

The higher end CPUs consisted of multiple <link xlink:type="simple" xlink:href="../828/9828.xml">
functional units</link> (e.g., shift, increment, floating add) which allowed some degree of parallel execution of instructions.  This parallelism allowed assembly programmers to minimize the effects of the system's slow memory fetch time by <it>pre-fetching</it> data from central memory well before that data was needed.  By interleaving independent instructions between the memory fetch instruction and the instructions manipulating the fetched operand, the time occupied by the memory fetch could be used for other computation. With this technique, coupled with the handcrafting of tight loops that fit within the instruction stack, a skilled Cyber assembly programmer could write extremely efficient code that made the most of the power of the hardware.</p>
<p>

The peripheral processor subsystem used a technique known as <it>barrel and slot</it> to share the execution unit; each PP had its own memory and registers, but the processor (the slot) itself executed one instruction from each PP in turn (the barrel). This is a crude form of hardware <link xlink:type="simple" xlink:href="../857/6857.xml">
multiprogramming</link>. The peripheral processors had 4096 bytes of 12-bit memory words and an 18-bit accumulator register. Each PP had access to all <link xlink:type="simple" xlink:href="../558/14558.xml">
I/O</link> channels and all of the system's central memory (CM) in addition to the PP's own memory.  The PP instruction set lacked, for example, extensive arithmetic capabilities and did not run user code; the peripheral processor subsystem's purpose was to process I/O and thereby free the more powerful central processor unit(s) to running user computations.</p>
<p>

A feature of the 'lower Cyber' CPUs was the <it>Compare Move Unit</it> (CMU).  It provided four additional instructions intended to aid text processing applications.  In an unusual departure from the rest of the 15- and 30-bit instructions, these were 60-bit instructions (3 actually used all 60 bits, the other used 30 bits, but its alignment required 60 bits to be used).  The instructions were move a short string, move a long string, compare strings, and compare a collated string.  They operated on 6-bit fields (numbered 1 through 10) in central memory.  For example, a single instruction could specify "move the 72 character string starting at word 1000 character 3 to location 2000 character 9".  The CMU hardware was not included in the higher-end Cyber CPUs, because handcoded loops could run as fast or faster than the CMU instructions.</p>
<p>

Later systems typically ran CDC's <it><link xlink:type="simple" xlink:href="../363/8716363.xml">
NOS</link></it> (Network Operating System). Version 1 of NOS continued to be updated until about 1981; NOS version 2 was released early 1982. Besides NOS, the only other operating systems commonly used on the 170 series was <it>NOS/BE</it> or its predecessor <it><link xlink:type="simple" xlink:href="../953/6975953.xml">
SCOPE</link></it>, a product of CDC's Sunnyvale division.  These operating systems provided <link xlink:type="simple" xlink:href="../958/30958.xml">
time sharing</link> of batch and interactive applications.  The predecessor to NOS was <it><link xlink:type="simple" xlink:href="../989/5929989.xml">
KRONOS</link></it> which was in common use up until 1975 or so.  Due to the strong dependency of developed applications on the particular installation's character set, many installations chose to run the older operating systems than convert their applications.  Other installations would patch newer versions of the operating system to use the older character set to maintain application compatibility.
<link xlink:type="simple" xlink:href="../123/15411123.xml">
Desktop CYBER</link> emulates CDC Cyber 70 and 170 series mainframes in software running on modern desktop PCs.</p>

</sec>
<sec>
<st>
 CDC Cyber 180 series </st>
<p>

As the computing world standardized to an eight-bit <link xlink:type="simple" xlink:href="../365/3365.xml">
byte</link> size, CDC customers started pushing for the Cyber machines to do the same. The result was a new series of systems that could operate in both 60- and 64-bit modes.  The 64-bit operating system was called <link>
NOS/VE</link>, and supported the <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> capabilities of the hardware.  The older 60-bit operating systems, <link xlink:type="simple" xlink:href="../363/8716363.xml">
NOS</link> and NOS/BE, could run in a special address space for compatibility with the older systems.</p>
<p>

The true 180-mode machines were microcoded processors that could, and did, support both instruction sets simultaneously.  Their hardware was completely different from the earlier 6000/70/170 machines.  The small 170-mode exchange package was mapped into the much larger 180-mode exchange package; within the 180-mode exchange package, there was a VMID—virtual machine identifier—that determined whether the 8/16/64-bit twos complement 180 instruction set or the 12/60-bit ones complement 170 instruction set was executed.</p>
<p>

There were 3 true 180s in the initial lineup, codenamed P1, P2, P3.  P2 &amp; P3 were larger water-cooled designs from Arden Hills.  The P1 was a novel air-cooled, 60-board cabinet designed by a group in Toronto; the P1 ran on 60 Hz current (no motor-generator sets needed).  A fourth high-end 180 codenamed THETA was also under development.</p>
<p>

The 180s were initially marketed as 170/8xx machines with no mention of the new 8/64-bit system inside.  However, the primary control program was a 180-mode program known as EI (Environmental Interface).  The 170 operating system (NOS) utilized a single, large, fixed page within the main memory.  There were a few clues that an alert user could pick up on, such as the "building page tables" message that flashed on the operator's console at startup and deadstart panels with 16 (instead of 12) toggle switches per PP word on the P2 &amp; P3.</p>
<p>

The peripheral processors in the true 180s were always 16-bit machines with the sign bit determining whether a 16/64 bit or 12/60 bit PP instruction was being executed.  The single word I/O instructions in the PPs were always 16-bit instructions, so at deadstart the PPs could set up the proper environment to run both EI plus NOS and the customer's existing 170-mode software.  To hide this process from the customer, earlier in the 1980s CDC had ceased distribution of the source code for its DDS (Deadstart Diagnostic Sequence) package and turned it into the proprietary CTI (Common Tests &amp; Initialization) package.</p>
<p>

The initial 170/800 lineup was:  170/825 (P1), 170/835 (P2), 170/855 (P3), 170/865 and 170/875.  The 825 was released initially after some delay loops had been added to its microcode; it seemed the design folks in Toronto had done a little too well and it was too close to the P2 in performance.  The 865 and 875 models were revamped 170/760 heads (1 or 2 processors with 6600/7600-style parallel functional units) with larger memories.  The 865 used normal 170 memory; the 875 took its faster main processor memory from the <it>Cyber 205</it> line.</p>
<p>

A year or two after the initial release, CDC announced the 800-series' true capabilities to its customers, and the true 180s were relabeled as the 180/825 (P1), 180/835 (P2), and 180/855 (P3).  At some point the model 815 was introduced with the delayed microcode and the faster microcode was restored to the model 825.  Eventually the THETA was released as the <it>Cyber 990</it>.</p>

</sec>
<sec>
<st>
 CDC Cyber 200 series </st>
<p>

In 1974 CDC introduced the <link xlink:type="simple" xlink:href="../447/937447.xml">
STAR</link> architecture.  The STAR was an entirely new 64-bit design with <link xlink:type="simple" xlink:href="../354/32354.xml">
virtual memory</link> and <link xlink:type="simple" xlink:href="../205/58205.xml">
vector processing</link> instructions added for high performance on a certain class of math tasks.  The STAR's vector pipeline was a <it>memory to memory</it> pipe, which supported vector lengths of up to 65,536 elements.  Unfortunately, the latencies of the vector pipeline were very long, so peak speed was approached only when very long vectors were used.  The scalar processor was relatively slow in comparison to the <link xlink:type="simple" xlink:href="../742/655742.xml">
CDC 7600</link>.  As such, the original STAR proved to be a great disappointment when it was released (see <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
Amdahl's Law</link>).  However many of its problems seemed solvable.</p>
<p>

In the late 1970s, CDC addressed some of these issues with the <it>Cyber 203</it>.  The new name kept with their new branding, and perhaps to distance itself from the STAR's failure.  The Cyber 203 contained redesigned scalar processing and <it>loosely coupled</it> I/O design, but retained the STAR's vector pipeline.</p>
<p>

In 1979, the <it>Cyber 205</it> replaced the STAR vector pipeline with redesigned vector pipelines: both scalar and vector units utilized <link xlink:type="simple" xlink:href="../937/205937.xml">
ECL</link> IC technology with <link xlink:type="simple" xlink:href="../280/232280.xml">
freon</link> cooling.  Cyber 205 systems were available with two or four vector pipelines, with the 4-pipe version theoretically delivering 400 64-bit MFLOPs and 800 32-bit MFLOPs.  These speeds were rarely seen in practice other than by handcrafted <link xlink:type="simple" xlink:href="../368/1368.xml">
assembly language</link>. The ECL ICs contained 20 to 30 gates of logic, with the <link xlink:type="simple" xlink:href="../143/3747143.xml">
clock tree</link> networks being tuned by hand-crafted coax length adjustment.  It is worth noting that the instruction set would be considered V-<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../622/7622.xml">
CISC</link></group>
</collection>
</class>
 (very complex instruction set) among modern processors.  any</p>
</sec>
</bdy>
</article>
