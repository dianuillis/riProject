<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:12:48[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Gödel numbering for sequences</title>
<id>8371092</id>
<revision>
<id>238215422</id>
<timestamp>2008-09-13T20:45:09Z</timestamp>
<contributor>
<username>RI-Bill</username>
<id>522805</id>
</contributor>
</revision>
<categories>
<category>Recursion theory</category>
</categories>
</header>
<bdy>

A <b><it>Gödel numbering for sequences</it></b> provides us an effective way to represent each finite sequence of natural numbers as a single natural number. Of course, the <mathematical_relation wordnetid="113783581" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../196/45196.xml">
embedding</link></function>
</concept>
</idea>
</mathematical_relation>
 is surely possible set theoretically, but the emphasis is on the effectiveness of the functions manipulating such representations of sequences: the operations on sequences (accessing individual members, concatenation) can be "implemented" with using <link xlink:type="simple" xlink:href="../338/1139338.xml">
total recursive function</link>s.<p>

It is usually used to build sequential “<link xlink:type="simple" xlink:href="../817/93817.xml">
data type</link>s” in the realm of arithmetic-based formalizations of some fundamental notions of mathematics. It is a specific case of the more general idea of <link>
Gödel number</link>ing.</p>
<p>

E.g. <link xlink:type="simple" xlink:href="../469/26469.xml">
recursive function theory</link> can be regarded as a formalization of notion “<link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>”, and if we regard it as a <link xlink:type="simple" xlink:href="../015/23015.xml">
programming language</link>, we can mimic <link xlink:type="simple" xlink:href="../052/2052.xml">
array</link>s, <link xlink:type="simple" xlink:href="../382/208382.xml">
list</link>s by encoding a sequence of natural numbers in a single natural number — to achieve this, we can use various <link xlink:type="simple" xlink:href="../527/21527.xml">
number theoretic</link> ideas. Using the <link xlink:type="simple" xlink:href="../556/11556.xml">
fundamental theorem of arithmetic</link> is a straightforward way, but there are also more ergonomic approaches, e.g. using <link xlink:type="simple" xlink:href="../848/1145848.xml">
pairing function</link> combined with <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../713/7713.xml">
Chinese remainder theorem</link></proposition>
</theorem>
</message>
</statement>
 in a sophisticated way.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>

<sec>
<st>
 Gödel numbering </st>

<p>

<indent level="1">

<it>Main article: <link>
Gödel number</link></it>
</indent>

It is a sweeping idea, it can be used to not only sequences, but also whole “architectures” of sophisticated “machines”. We can encode e.g. <link xlink:type="simple" xlink:href="../156/198156.xml">
Markov algorithm</link>s,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> and also <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
s<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> in the realm of natural numbers, this can be used e.g. to prove that the expressing power of recursive function theory is no less than that of  the former machine-like formalizations of algorithm.</p>

</sec>
<sec>
<st>
 Accessing members </st>

<p>

We expect from any such representation of sequences that we can get back all the information from it that is contained by the original sequence: most important, to access each individual member. We are not sticked necessarily to require that also the length can be obtained directly: even if we want to handle sequences of different length, we can store length data as a surplus member, or as the other member of an ordered pair with using a <link xlink:type="simple" xlink:href="../848/1145848.xml">
pairing function</link>.</p>
<p>

Anyway, we expect that this obtaining back information can be done in an effective way, by an appropriate total recursive function.</p>
<p>

We want a totally recursive function <it>f</it> that satisfies:
For all <it>n</it> and for any <it>n</it>-length sequence of natural numbers <math>\langle a_0,\dots a_{n-1} \rangle</math>, there exists an appropriate natural number <it>a</it>, called the Gödel number of the sequence such that for all <it>i</it> in the range of 0 … n-1
<indent level="1">

<math>f(a,i) = a_i</math>
</indent>

There exist effective functions enabling us to obtain back each member of the original sequence from a Gödel number of the sequence. Moreover, there are ways to define some in a <link xlink:type="simple" xlink:href="../113/360113.xml">
constructive</link> way, thus we are not forced to be satisfied with mere  <link xlink:type="simple" xlink:href="../113/360113.xml">
proofs of existence</link>.</p>

<ss1>
<st>
 Gödel's β-function lemma </st>

<p>

By an ingenious use of <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../713/7713.xml">
Chinese remainder theorem</link></proposition>
</theorem>
</message>
</statement>
, we can define constructively such a recursive function  <math>\beta</math> (using simple number-theoretical functions, all of which can be defined in a total recursive way) fulfilling the "<link xlink:type="simple" xlink:href="../448/14171448.xml">
specification</link>s" given above. Also Gödel defined the <math>\beta</math> function with using Chinese remainder theorem in his article written in 1931. This is a <link xlink:type="simple" xlink:href="../829/24829.xml">
primitive recursive function</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

Thus, for all <it>n</it> and for any <it>n</it>-length sequence of natural numbers <math>\langle a_0,\dots a_{n-1} \rangle</math>, there exists an appropriate natural number <it>a</it>, called the Gödel number of the sequence such that<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref>
<indent level="1">

<math>\beta(a,i) = a_i</math>
</indent>

</p>
<ss2>
<st>
 Using a pairing function </st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../848/1145848.xml">
Pairing function</link></it>
</indent>

Our specific solution will depend on a pairing function — there are several ways to implement the latter, let us select one. Now, we can <link xlink:type="simple" xlink:href="../ury/30th_century.xml">
abstract</link> from the details of the “<link xlink:type="simple" xlink:href="../704/407704.xml">
implementation</link>” of the pairing function, we need only to know its “<link xlink:type="simple" xlink:href="../746/620746.xml">
interface</link>”: let <math>\pi</math>, <it>K</it>, <it>L</it> denote the pairing function and its two <link xlink:type="simple" xlink:href="../097/3909097.xml">
projection</link> functions, respectively, satisying <link xlink:type="simple" xlink:href="../448/14171448.xml">
specification</link>
<indent level="1">

<math>K\left(\pi\left(x,y\right)\right) = x</math>
</indent>
:<math>L\left(\pi\left(x,y\right)\right) = y</math>
we shall not discuss and formalize the axiom for excluding alien objects here, it is now not so important.</p>

</ss2>
<ss2>
<st>
 Using the Chinese remainder theorem </st>


<ss3>
<st>
 Implementation of the β function </st>

<p>

Using the <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../713/7713.xml">
Chinese remainder theorem</link></proposition>
</theorem>
</message>
</statement>
, we can prove that implementing <math>\beta</math> as
<indent level="1">

<math>\beta(s,i) = \mathrm{rem}\left(K\left(s\right),\left(i+1\right)\cdot L\left(s\right)+1\right)</math>
</indent>
will work, according to the specification we expect <math>\beta</math> to satisfy. We can use a more concise form by an <link xlink:type="simple" xlink:href="../066/1698066.xml">
abuse of notation</link> (sort of <link xlink:type="simple" xlink:href="../688/279688.xml">
pattern matching</link>):
<indent level="1">

<math>\beta\left(\pi\left(x_0,m\right),i\right) = \mathrm{rem}\left(x_0, \left(i+1\right)\cdot m+1\right)</math>
</indent>
Let us achieve even more readability by more <link xlink:type="simple" xlink:href="../133/939133.xml">
modularity</link> and <link xlink:type="simple" xlink:href="../559/1086559.xml">
reuse</link> (as these notions are used in computer science<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref>): defining <math>\forall i&amp;lt;n</math> the sequence <math>m_i = (i+1)\cdot m+1</math>,
enables us to write
<indent level="1">

<math>\beta\left(\pi\left(x_0,m\right),i\right) = \mathrm{rem}\left(x_0, m_i\right)</math>
</indent>
We shall use this <math>m_i</math> notation also in the proof.</p>

</ss3>
<ss3>
<st>
 Hand-tuned assumptions </st>

<p>

For proving the correctness of the above definition of <math>\beta</math> function, we shall use (and prove) several auxiliary theorems, lemmas . These have their own assumptions. Now we try to find out these assumptions, calibrating / tuning their strength carefully: they should not be said in an either superfluously sharp, or unsatisfactorily weak form.</p>
<p>

Let <math>a_0,\dots a_{n-1}</math> be a sequence of natural numbers.
Let <it>m</it> be chosen to satisfy
<indent level="1">

<math>\forall i \in \overline n \setminus \left\{0\right\} \left(i \mid m\right)</math>
</indent>
:<math>\forall i &amp;lt; n \left( a_i &amp;lt; m_i \right)</math>
The first assumption is meant as
<indent level="1">

<math>1 \mid m \land \dots \land n-1 \mid m</math>
</indent>
It is needed to achieve that the assumption of the Chinese remainder theorem (that of being pairwise <link xlink:type="simple" xlink:href="../556/6556.xml">
coprime</link>) can be met. In the literature, sometimes this requirement is replaced with a stronger one, e.g. <link xlink:type="simple" xlink:href="../113/360113.xml">
constructively</link> built with the <link xlink:type="simple" xlink:href="../606/10606.xml">
factorial</link> function,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> but the proof uses just that many strength as formulated here.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

The second assumption does not concern the Chinese remainder theorem in any way. It will have importance in proving that the specification for <math>\beta</math> is met eventually.  It ensures that an <math>\tilde x</math> solution of the simultanous congruence system
<indent level="1">

<math>x \equiv a_i \pmod{m_i}</math> for each <it>i</it> ranging 0,… , n-1
</indent>
also satisfies
<indent level="1">

<math>a_i = \mathrm{rem}(\tilde x, m_i)</math><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref>
</indent>
A stronger assumption for <it>m</it> requiring <math>\forall i &amp;lt; n \; (a_i &amp;lt; m)</math> automatically satisfies it (if we define the notation <math>m_i</math> as above).</p>

</ss3>
</ss2>
</ss1>
<ss1>
<st>
 Proof that (coprimality) assumption for Chinese remainder theorem is met </st>

<p>

We shall prove that the (coprimality) assumption for Chinese remainder theorem is met.</p>
<p>

As mentioned in section <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Hand-tuned+assumptions%22])">
Hand-tuned assumptions</link>, we prescribed that
<indent level="1">

<math>\forall i \in \overline n \setminus \left\{0\right\} \left(i \mid m\right)</math>
</indent>
thus we can use it.</p>
<p>

What we want to prove is that we can produce a sequence of pairwise <link xlink:type="simple" xlink:href="../556/6556.xml">
coprime</link> numbers in a way that will turn out to correspond to the <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Implementation+of+the+=CE=B2+function%22])">
Implementation of the β function</link> in a sense.</p>
<p>

In details:
<indent level="1">

<math>\forall i&amp;lt;n,j &amp;lt; n \; \left( i \neq j \rightarrow \mathrm{coprime}\left(m_i,m_j\right) \right)</math>
</indent>
let us remember, <math>\forall i&amp;lt;n</math> we defined <math>m_i = (i+1)\cdot m+1</math>.</p>
<p>

Let us use <link xlink:type="simple" xlink:href="../418/25418.xml">
reductio ad absurdum</link>!</p>
<p>

Negation of the original statement:
<indent level="1">

<math>\exists i&amp;lt;n,j &amp;lt; n \; \left( i \neq j \land \lnot \mathrm{coprime}\left(m_i,m_j\right) \right)</math>
</indent>

</p>
<ss3>
<st>
 First steps </st>

<p>

We know what “coprime” relation means (in a lucky way, its negation can be formulated in a concise form), thus, let us substitute  in the appropriate way:
<indent level="1">

<math>\exists i&amp;lt;n,j &amp;lt; n \; \left( i \neq j \land \exists p \in \mathrm{Prime} \; \left( p \mid m_i \land p \mid m_j \right) \right)</math>
</indent>
Using a “more” <link xlink:type="simple" xlink:href="../068/421068.xml">
prenex normal form</link> (but note allowing a constraint-like notation in quantifiers):
<indent level="1">

<math>\exists i&amp;lt;n,j &amp;lt; n,p \in \mathrm{Prime} \; \left( i \neq j \land p \mid m_i \land p \mid m_j \right)</math>
</indent>

Because of a theorem on <link xlink:type="simple" xlink:href="../492/49492.xml">
divisibility</link>, <math>p \mid m_i \land p \mid m_j</math> allows us to say also
<indent level="1">

<math>p \mid m_i - m_j</math>
</indent>

Substituting the <link xlink:type="simple" xlink:href="../964/7964.xml">
definens</link> of <math>m_\dots</math>-sequence notation, we get <math>m_i - m_j = (i-j) \cdot m</math>, thus (as <link xlink:type="simple" xlink:href="../446/90446.xml">
equality</link> axioms postulate identity to be  a <link xlink:type="simple" xlink:href="../167/48167.xml">
congruence relation</link> <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>) we get
<indent level="1">

<math> p \mid (i-j) \cdot m</math>
</indent>
Using that <it>p</it> is a <link>
prime element</link> (note: not the <link>
irreducible element</link> property is used!), we get
<indent level="1">

<math>p \mid i-j \lor p \mid m</math>
</indent>

</p>
</ss3>
<ss3>
<st>
 Resorting to the first hand-tuned assumption </st>

<p>

Now this is the point in the proof where we must resort to our assumption
<indent level="1">

<math>\forall i \in \overline n \setminus \left\{0\right\} \left(i \mid m\right)</math>
</indent>
let us remember, we have planned this assumption calibrated carefully to be as weak as possible, but strong enough to enable us to use it now.</p>
<p>

The assumed negation of the original statement (let us remember, we use reductio ad absurdum) contains an appropriate existential statement using indices <math>i&amp;lt;n\land j&amp;lt;n \land i\neq j</math>, this entails <math>i-j \in \overline n \setminus \left\{0\right\}</math>, thus the mentioned assumption can be applied, so <math>i-j \mid m</math> holds.</p>

</ss3>
<ss2>
<st>
 Using an (object) theorem of the propositional calculus as a lemma </st>

<p>

We can prove by several means <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref> known in <link xlink:type="simple" xlink:href="../154/18154.xml">
propositional calculus</link>, that
<indent level="1">

<math>\left(A \lor \left( A \rightarrow B\right)\right) \leftrightarrow B</math>
</indent>
holds.</p>
<p>

Because <math>i-j \mid m</math> entails (by the <link xlink:type="simple" xlink:href="../463/200463.xml">
transitivity</link> property of the <link xlink:type="simple" xlink:href="../492/49492.xml">
divisibility</link> relation) that <math>p \mid i-j \rightarrow p \mid m</math>, thus (as equality axioms postulate identiy to be  a congruence relation <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref>)
<indent level="1">

<math>p \mid m</math>
</indent>
can be proven.</p>

</ss2>
<ss2>
<st>
 Reaching the contradiction </st>

<p>

The negation of original statement contained
<indent level="1">

<math>p \mid m_i</math>
</indent>
and we have just proved
<indent level="1">

<math>p \mid m</math>
</indent>
thus also
<indent level="1">

<math>p \mid m_i - \left(i+1\right)\cdot m</math>
</indent>
should hold.
But, after substituting the <link xlink:type="simple" xlink:href="../964/7964.xml">
definiens</link> for <math>m_i</math>, we shall see
<indent level="1">

<math>m_i - \left(i+1\right) = 1</math>
</indent>
Thus, summarizing the above three statements, by <link xlink:type="simple" xlink:href="../463/200463.xml">
transitivity</link> of the <link xlink:type="simple" xlink:href="../446/90446.xml">
equality</link>, also
<indent level="1">

<math>p \mid 1</math>
</indent>
should hold. But let us look up the quantification of <it>p</it> in the negation of the original statement: <it>p</it> is <link xlink:type="simple" xlink:href="../420/91420.xml">
existentially quantified</link> and restricted to primes <math>\exists p \in \mathrm{Prime}</math></p>
<p>

The above statement together with the above quantification of <it>p</it> establish the contradiction we wanted to reach.</p>

</ss2>
<ss2>
<st>
 End of reductio ad absurdum </st>

<p>

By reaching contradiction with its negation, we have just proven the original statement:
<indent level="1">

<math>\forall i&amp;lt;n,j&amp;lt;n \; \left( i \neq j \rightarrow \mathrm{coprime}\left(m_i,m_j\right)\right)</math>
</indent>

</p>
</ss2>
</ss1>
<ss1>
<st>
 The system of simultaneous congruences </st>

<p>

We build a system of simultaneous congruences
<indent level="1">

<math>x \equiv a_0 \pmod{m_0}</math>
</indent>
::<math>\vdots</math>
<indent level="1">

<math>x \equiv a_{n-1} \pmod{m_{n-1}}</math>
</indent>

We can write it in a more concise way:
<indent level="1">

<math>\forall i &amp;lt; n \; \left(x \equiv a_i \pmod{m_i}\right)</math>
</indent>

In the followings, many statements will be said, all beginning with <math>\forall i &amp;lt; n \; \left(\dots\right)</math>. To achieve a more ergonomic treatment, from now on all statements will be regarded in the scope of an <math>\forall i &amp;lt; n \; \left(\dots\right)</math> qantification. Thus: <math>\forall i &amp;lt; n (</math> begins!</p>
<p>

Let us chose a solution <math>x_0</math> for the system of simultaneous congruences. At least one solution must exist, because <math>m_0,\dots m_{n-1}</math> are pairwise comprime (that's what we have been proving so long in the previous sections!), thus we can refer to the Chinese remainder theorem's ensuring solution. Thus, from now on, we can regard <math>x_0</math> satisfying
<indent level="1">

<math>x_0 \equiv a_i \pmod{m_i}</math>
</indent>
it means (by definition of <link xlink:type="simple" xlink:href="../087/20087.xml">
modular arithmetic</link>) that
<indent level="1">

<math>\mathrm{rem}\left(x_0,m_i\right) = \mathrm{rem}\left(a_i,m_i\right)</math>
</indent>

</p>
<ss2>
<st>
 Resorting to the second hand-tuned assumption </st>

<p>

Again, we must resort to the assumptions whose strength we specifically “tuned” for using in the proof. But now, it is the second assumption (which does not concern the Chinese remainder theorem in any way) that we need: “<math>\forall i &amp;lt; n \; \left(a_i &amp;lt; m_i \right)</math>”. Let us remember: we are now in the scope of a “big” quantification for <it>i</it>, thus we don't repeat its quantification for each statement.</p>
<p>

The second hand-tuned assumption <math>a_i &amp;lt; m_i</math> will join in at this point, because it entails that
<indent level="1">

<math>\mathrm{rem}\left(a_i,m_i\right) = a_i</math>
</indent>
Now by <link xlink:type="simple" xlink:href="../463/200463.xml">
transitivity</link> of <link xlink:type="simple" xlink:href="../446/90446.xml">
equality</link> we get
<indent level="1">

<math>\mathrm{rem}\left(x_0,m_i\right) = a_i</math>
</indent>

</p>
</ss2>
<ss2>
<st>
 QED </st>

<p>

Our original goal was to prove that the definition
<indent level="1">

<math>\beta\left(\pi\left(x_0,m\right),i\right) = \mathrm{rem}\left(x_0,m_i\right)</math>
</indent>
is good for achieving what we declared in the specification of <math>\beta</math>: we want <math>\beta\left(\pi\left(x_0,m\right),i\right) = a_i</math> to hold.</p>
<p>

That's it, it can be seen now by <link xlink:type="simple" xlink:href="../463/200463.xml">
transitivity</link> of <link xlink:type="simple" xlink:href="../446/90446.xml">
equality</link>, looking at the above three equations.</p>
<p>

Scope of <it>i</it> ends here.</p>

</ss2>
</ss1>
<ss1>
<st>
 Existence and uniqueness </st>

<p>

We have just proven the correctness of the definition of <math>\beta</math>: its specification requiring
<indent level="1">

<math>\forall a_0,\dots, a_{n-1}\;\exists s\;\forall i &amp;lt; n \; \beta(s,i) = a_i</math>
</indent>
is met. Although proving this was the most important, if we want to establish an encoding scheme for sequences, but we have to fill in some gaps yet. These are related notions similar to <link xlink:type="simple" xlink:href="../420/91420.xml">
existence</link> and <link xlink:type="simple" xlink:href="../894/276894.xml">
uniqueness</link> (although on uniqueness, “at most one” should be meant here, and the conjunction of both is delayed as a final result).</p>

<ss2>
<st>
 Uniqueness of encoding, achieved by minimalization </st>

<p>

Because let us remember, our ultimate question is: what number should stand for the encoding of sequence <math>\left\langle a_0,\dots,a_{n-1}\right\rangle</math>? The specification declares only an existential quantification, not yet a functional connection. We want a <link xlink:type="simple" xlink:href="../113/360113.xml">
constructive</link> and algorithmic way, even more, a (total) recursive function for the encoding.</p>

</ss2>
<ss2>
<st>
 Totality, because minimalization is restricted to special functions </st>

<p>

This gap can be filled in in a straightforward way: we shall use <link xlink:type="simple" xlink:href="../197/693197.xml">
minimalization</link>, and the totality of the resulting function is ensured by everything we have proven till now (i.e. the correctness of the definition of <math>\beta</math> by meeting its specification). In fact, the specification
<indent level="1">

<math>\forall a_0,\dots, a_{n-1}\;\exists s\;\forall i &amp;lt; n \; \beta(s,i) = a_i</math>
</indent>
plays a role here of a more general notion (“special function”<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref>). The importance of this notion is that it enables us to split off the (sub)class of  (total) recursive functions from the (super)class of partial recursive functions. In brief, the specification says exactly: a function <it>f</it>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref>
satisfying specification
<indent level="1">

<math>f\left(a_0,\dots, a_{n-1}, s\right) = 0 \leftrightarrow \forall i &amp;lt; n \; \left(\beta(s,i) = a_i\right)</math>
</indent>
is a special function, i.e. for each fixed combination of all-but-last arguments, the function <it>f</it> has <mathematical_relation wordnetid="113783581" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../210/264210.xml">
root</link></function>
</mathematical_relation>
 in its last argument:
<indent level="1">

<math>\forall a_0,\dots,a_{n-1}\;\exists s\; \left(f\left(a_0,\dots,a_{n-1},s\right)=0\right)</math>
</indent>

</p>
</ss2>
<ss2>
<st>
 The Gödel numbering function g can be chosen to be total recursive </st>

<p>

Thus, let us choose the minimal possible number that fits well in the specification of the <math>\beta</math> function <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>:
<indent level="1">

<math>g : \mathbb N^n \to \mathbb N</math>
</indent>
:<math>\left\langle a_0,\dots,a_{n-1}\right\rangle \longmapsto \mu a . \left[ \forall i &amp;lt; n \; \left(\beta\left(a,i\right) = a_i\right)\right]</math>
and it can be proven (using the notions of the previous section ) that <it>g</it> is (total) recursive.</p>

</ss2>
</ss1>
<ss1>
<st>
 Access of length </st>

<p>

If we use the above scheme for encoding sequences only in contexts where the length of the sequences is fixed, then no problem arises. In other words, we can use them in an <link xlink:type="simple" xlink:href="../533/103533.xml">
analogous</link> way as <link xlink:type="simple" xlink:href="../052/2052.xml">
array</link>s are used in programming.</p>
<p>

But sometimes we need dynamically stretching sequences, or we need to deal with sequences whose length cannot be <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../025/4614025.xml">
type</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
d in a static way. In other words, we may encode sequences in an analogous way as we use <link xlink:type="simple" xlink:href="../382/208382.xml">
list</link>s in programming.</p>
<p>

An example for both cases: if we make the Gödel numbering of a Turing machine, then the each row in matrix of the “program” can be represented with tuples, sequences of fixed length (thus, without storing the length), because the number of the columns is fixed.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref> But if we want to reason about configuration-like things (of Turing-machines), and specially, we want to encode the significant part of the tape of a running Turing machine, then we have to represent sequences together with their length. Moreover, we can mimic dynamically stretching sequences by representing sequence concatenation (or at least, augmenting a sequence with one more element) with a [totally] recursive function.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>
<p>

Length can be stored stored simply as a surplus member:<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref>
<indent level="1">

<math>g : \mathbb N^* \to \mathbb N</math>
</indent>
:<math>\left\langle a_0,\dots,a_{n-1}, a_n\right\rangle \longmapsto \mu a . \left[ a_0 = n \land \forall i &amp;lt; n \; \left(\beta\left(a,i+1\right) = a_i\right)\right]</math></p>
<p>

The corresponding modification of the proof is straightforward, by adding a surplus
<indent level="1">

<math>x \equiv n \pmod{m_0}</math>
</indent>
to the system of simultaneous congruences (provided that the surplus member index is chosen to be 0). Also the assumptions etc. have to be modificated accordingly.</p>

</ss1>
</sec>
<sec>
<st>
 Notes </st>

<p>

<reflist>
<entry id="1">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 56–58</entry>
<entry id="2">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Csir94%22])">
Csirmaz 1994</link>: 99–100 (see <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
online</weblink>)</entry>
<entry id="3">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 72–74</entry>
<entry id="4">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 52–55</entry>
<entry id="5">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Smu03%22])">
Smullyan 2003</link>: 56 (= Chpt IV, | 5, note 1)</entry>
<entry id="6">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 58 (= Thm 3.46)</entry>
<entry id="7">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Hugh89%22])">
Hughes 1989</link> (see <weblink xlink:type="simple" xlink:href="http://www.math.chalmers.se/~rjmh/Papers/whyfp.html">
online</weblink>)</entry>
<entry id="8">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Bur98%22])">
Burris 1998</link>: Supplementary Text, <weblink xlink:type="simple" xlink:href="http://www.math.uwaterloo.ca/~snburris/htdocs/scav/fo_arith/fo_arith.html">
Arithmetic I</weblink>, Lemma 4</entry>
<entry id="9">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Csir94%22])">
Csirmaz 1994</link>: 100 (see <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
online</weblink>)</entry>
<entry id="10">
see also related notions Referential transparency, and also a dual notion Leibniz's law / <link xlink:type="simple" xlink:href="../398/630398.xml">
identity of indiscernibles</link></entry>
<entry id="11">
either proof theoretic (algebraic steps); or semantic (<link xlink:type="simple" xlink:href="../362/30362.xml">
truth table</link>, <link xlink:type="simple" xlink:href="../229/1027229.xml">
method of analytic tableaux</link>, <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<chart wordnetid="106999802" confidence="0.8">
<visual_communication wordnetid="106873252" confidence="0.8">
<link xlink:type="simple" xlink:href="../701/61701.xml">
Venn diagram</link></visual_communication>
</chart>
</concept>
</idea>
, <link xlink:type="simple" xlink:href="../684/10854684.xml">
Veitch diagram / Karnaugh map</link>)</entry>
<entry id="12">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 45 (= Def 3.1.)</entry>
<entry id="13">
E.g. defined by
<indent level="1">

<math>f : \mathbb N^{n+1} \to \mathbb N</math>
</indent>
:<math>f\left(a_0,\dots, a_{n-1}, s\right) = \begin{cases}0 &amp; \mathrm{if}\;\forall i &amp;lt; n \; \left(\beta(s,i) = a_i\right) \\ 1 &amp; \mathrm{if}\;\exists i &amp;lt; n \; \left( \beta(s,i) \neq a_i \right)\end{cases}</math>
</entry>
<entry id="14">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Csir94%22])">
Csirmaz 1994</link>: 100 (see <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
online</weblink>)</entry>
<entry id="15">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Mon76%22])">
Monk 1976</link>: 53 (= Def 3.20, Lem 3.21)</entry>
<entry id="17">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Csir94%22])">
Csirmaz 1994</link>: 100 (see <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
online</weblink>)</entry>
<entry id="16">
<link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Csir94%22])">
Csirmaz 1994</link>: 101 (=Thm 10.7, Conseq 10.8), see <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
online</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

  <cite id="Bur98" style="font-style:normal" class="book">Burris, Stanley N.&#32;(1998).&#32;"<weblink xlink:type="simple" xlink:href="http://www.math.uwaterloo.ca/~snburris/htdocs/scav/fo_arith/fo_arith.html">
Supplementary Text, Arithmetic I</weblink>", Logic for Mathematics and Computer Science.&#32;Prentice Hall. ISBN 0-13-285974-2.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Csir94" style="font-style:normal" class="book">Csirmaz, László;&#32;Hajnal, András&#32;(1994).&#32;"<weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/l10.ps.gz">
Rekurzív függvények</weblink>", Matematikai logika&#32;(postsript + gzip)&#32;(in Hungarian),&#32;Budapest:&#32;Eötvös Loránd University.</cite>&nbsp; Each chapter is downloadable seriatim on <weblink xlink:type="simple" xlink:href="http://www.renyi.hu/~csirmaz/">
author's page</weblink>.</entry>
<entry level="1" type="bullet">

  <cite id="Hugh89"> <cite style="font-style:normal">Hughes, John&#32;(1989).&#32;"<weblink xlink:type="simple" xlink:href="http://www.math.chalmers.se/~rjmh/Papers/whyfp.html">
Why Functional Programming Matters</weblink>". <it>Computer Journal</it>&#32;<b>32</b>&#32;(2): 98–107.</cite>&nbsp;</cite></entry>
<entry level="1" type="bullet">

  <cite id="Mon76" style="font-style:normal" class="book">Monk, J. Donald&#32;(1976). Mathematical Logic, Graduate Texts in Mathematics.&#32;New York • Heidelberg • Berlin:&#32;Springer-Verlag.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Smu92" style="font-style:normal" class="book"><person wordnetid="100007846" confidence="0.9508927676800064">
<philosopher wordnetid="110423589" confidence="0.9173553029164789">
<writer wordnetid="110794014" confidence="0.9508927676800064">
<logician wordnetid="110269785" confidence="0.9173553029164789">
<mathematician wordnetid="110301261" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../517/56517.xml">
Smullyan, Raymond Merrill</link></mathematician>
</logician>
</writer>
</philosopher>
</person>
&#32;(1992). Gödel's Incompleteness Theorems.&#32;Oxford University Press. ISBN 0195046722.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite id="Smu03" style="font-style:normal" class="book"><person wordnetid="100007846" confidence="0.9508927676800064">
<philosopher wordnetid="110423589" confidence="0.9173553029164789">
<writer wordnetid="110794014" confidence="0.9508927676800064">
<logician wordnetid="110269785" confidence="0.9173553029164789">
<mathematician wordnetid="110301261" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../517/56517.xml">
Smullyan, Raymond Merrill</link></mathematician>
</logician>
</writer>
</philosopher>
</person>
&#32;(2003). Gödel nemteljességi tételei&#32;(in Hungarian).&#32;Budapest:&#32;Typotex. ISBN 963 9326 99 2.</cite>&nbsp; Translation of <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22Smu92%22])">
Smullyan 1992</link>.</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

  <cite id="Reference-Burris-1998" style="font-style:normal" class="book">Burris, Stanley N.&#32;(1998).&#32;"<weblink xlink:type="simple" xlink:href="http://www.math.uwaterloo.ca/~snburris/htdocs/scav/fo_arith/fo_arith.html">
Supplementary Text, Arithmetic I</weblink>", Logic for Mathematics and Computer Science.&#32;Prentice Hall. ISBN 0-13-285974-2.</cite>&nbsp;</entry>
</list>
</p>

</sec>
</bdy>
</article>
