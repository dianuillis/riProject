<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:43:42[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Computational tree logic</title>
<id>840894</id>
<revision>
<id>237272347</id>
<timestamp>2008-09-09T12:40:54Z</timestamp>
<contributor>
<username>Cweise</username>
<id>7817881</id>
</contributor>
</revision>
<categories>
<category>Wikipedia articles needing context</category>
<category>Wikipedia introduction cleanup</category>
<category>Modal logic</category>
<category>Logic in computer science</category>
</categories>
</header>
<bdy>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-style" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="40x40px" src="Ambox_style.png">
</image>
</p>
</col>
<col style="" class="mbox-text">
 The introduction to this article provides <b>insufficient context</b> for those unfamiliar with the subject.
Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Computational_tree_logic&amp;action=edit">
improve the article</weblink> with a .</col>
</row>
</table>


<b>Computation tree logic (CTL)</b> is a branching-time <link xlink:type="simple" xlink:href="../654/27654.xml">
logic</link>, meaning that its model of time is a tree-like structure in which the future is not determined; there are different paths in the future, any one of which might be an actual path that is realised.
<sec>
<st>
 Syntax of CTL </st>
<p>

The <link xlink:type="simple" xlink:href="../723/25723.xml">
Language</link> of <link xlink:type="simple" xlink:href="../582/404582.xml">
Well-Formed CTL Formulae</link> is generated by the following unambiguous (wrt bracketing) <message wordnetid="106598915" confidence="0.8">
<subject wordnetid="106599788" confidence="0.8">
<language wordnetid="106282651" confidence="0.8">
<link xlink:type="simple" xlink:href="../759/6759.xml">
Context-Free Grammar</link></language>
</subject>
</message>
:</p>
<p>

<indent level="1">

<math>\phi::=\bot |\top |p|(\neg\phi)|(\phi\and\phi)|(\phi\or\phi)|
(\phi\Rightarrow\phi)|(\phi\Leftrightarrow\phi)|AX\phi|EX\phi|AF\phi|EF\phi|AG\phi|EG\phi|
A[\phi U \phi]|E[\phi U \phi]</math>
</indent>

where <math>p</math> ranges over a set of <link xlink:type="simple" xlink:href="../066/4472066.xml">
atomic formula</link>s. Not all of these connectives are needed - for example, 
<math>\{\neg, \and, AX, AU, EU\}</math> comprises a complete set of connectives, and the others can be defined using them.</p>
<p>

<list>
<entry level="1" type="bullet">

<math>A</math> means 'along All paths' <it>(Inevitably)''</it></entry>
<entry level="1" type="bullet">

<math>E</math> means 'along at least (there Exists) one path' <it>(possibly)''</it></entry>
</list>
</p>
<p>

For example, the following is a well-formed CTL formula:</p>
<p>

<indent level="1">

<math>EF EG p \Rightarrow AF r </math>
</indent>

The following is not a well-formed CTL formula:</p>
<p>

<indent level="1">

<math>EF \big(r U q\big) </math>
</indent>

The problem with this string is that <math>U</math> can occur only when paired with an <math>A</math> or an <math>E</math>.  It uses <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../983/10983.xml#xpointer(//*[./st=%22Vocabulary%22])">
atomic propositions</link></instrumentality>
</artifact>
</system>
 as its building blocks to make statements about the states of a system.  CTL then combines these propositions into formulas using <link xlink:type="simple" xlink:href="../153/18153.xml">
logical operator</link>s and <link>
temporal operator</link>s.</p>


<ss1>
<st>
 Syntax of CTL* </st>
<p>

CTL can be thought of as part of a larger logic, CTL*. In CTL* there is a separation to path-choosing operators <math>E</math> and <math>A</math>, and to operators that operate along a chosen path, <math>F, G, X</math></p>

</ss1>
</sec>
<sec>
<st>
Operators</st>

<ss1>
<st>
Logical operators</st>

<p>

The <link xlink:type="simple" xlink:href="../153/18153.xml">
logical operators</link> are the usual ones: <math>\neg,\or,\and,\Rightarrow</math> and <math>\Leftrightarrow</math>. Along with these operators CTL formulas can also make use of the boolean constants <link xlink:type="simple" xlink:href="../748/228748.xml">
true</link> and <link xlink:type="simple" xlink:href="../749/228749.xml">
false</link>.</p>

</ss1>
<ss1>
<st>
Temporal operators</st>
<p>

The temporal operators are the following:
<list>
<entry level="1" type="bullet">

 Quantifiers over paths</entry>
<entry level="2" type="bullet">

<b>A</b> <math>\phi</math> - <b>A</b>ll: <math>\phi</math> has to hold on all paths starting from the current state.</entry>
<entry level="2" type="bullet">

<b>E</b> <math>\phi</math> - <b>E</b>xists: there exists at least one path starting from the current state where <math>\phi</math> holds.</entry>
<entry level="1" type="bullet">

 Path-specific quantifiers</entry>
<entry level="2" type="bullet">

<b>X</b> <math>\phi</math> - Ne<b>x</b>t: <math>\phi</math> has to hold at the next state (this operator is sometimes noted <b>N</b> instead of <b>X</b>).</entry>
<entry level="2" type="bullet">

<b>G</b> <math>\phi</math> - <b>G</b>lobally: <math>\phi</math> has to hold on the entire subsequent path.</entry>
<entry level="2" type="bullet">

<b>F</b> <math>\phi</math> - <b>F</b>inally: <math>\phi</math> eventually has to hold (somewhere on the subsequent path).</entry>
<entry level="2" type="bullet">

<math>\phi</math> <b>U</b> <math>\psi</math> - <b>U</b>ntil: <math>\phi</math> has to hold until at some position <math>\psi</math> holds. This implies that <math>\psi</math> will be verified in the future.</entry>
<entry level="2" type="bullet">

<math>\phi</math> <b>W</b> <math>\psi</math> - <b>W</b>eak until: <math>\phi</math> has to hold until <math>\psi</math> holds. The difference with <b>U</b> is that there is no guarantee that <math>\psi</math> will ever be verified. The <b>W</b> operator is sometimes called "unless".</entry>
</list>
</p>
<p>

In CTL*, the temporal operators can be freely mixed. In CTL, the operator must always be grouped in two: one path operator followed by a state operator. See the examples bellow. CTL* is strictly more expressive than CTL.</p>

</ss1>
<ss1>
<st>
Minimal set of operators</st>
<p>

In CTL there is a minimal set of operators. All CTL formulas can be transformed to use only those operators. This is useful in <link xlink:type="simple" xlink:href="../157/321157.xml">
model checking</link>. One minimal set of operators is: {false, <math>\or, \neg</math>, <b>EG</b>, <b>EU</b>, <b>EX</b>}.</p>
<p>

Some of the transformation used for temporal operator are:
<list>
<entry level="1" type="bullet">

<b>EF</b><math>\phi</math> == <b>E</b>[true'''U'''(<math>\phi</math>)]   ( because <b>F</b><math>\phi</math> == [true'''U'''(<math>\phi</math>)] )</entry>
<entry level="1" type="bullet">

<b>AX</b><math>\phi</math> == <math>\neg</math><b>EX</b>(<math>\neg</math><math>\phi</math>)</entry>
<entry level="1" type="bullet">

<b>AG</b><math>\phi</math> == <math>\neg</math><b>EF</b>(<math>\neg</math><math>\phi</math>) == <math>\neg</math> <b>E</b>[true'''U'''(<math>\neg</math><math>\phi</math>)]</entry>
<entry level="1" type="bullet">

<b>AF</b><math>\phi</math> == <b>A</b>[true'''U'''<math>\phi</math>] == <math>\neg</math><b>EG</b>(<math>\neg</math><math>\phi</math>)</entry>
<entry level="1" type="bullet">

<b>A</b>[<math>\phi</math>'''U'''<math>\psi</math>] == <math>\neg</math>( <b>E</b>[(<math>\neg</math><math>\psi</math>)'''U'''<math>\neg</math>(<math>\phi</math><math>\or</math><math>\psi</math>)] <math>\or</math> <b>EG</b>(<math>\neg</math><math>\psi</math>) )</entry>
</list>
</p>


</ss1>
</sec>
<sec>
<st>
Semantics of CTL</st>

<ss1>
<st>
Definition</st>
<p>

CTL formulae are interpreted over <link xlink:type="simple" xlink:href="../417/396417.xml">
Transition Systems</link> as formally defined below.</p>
<p>

Let <math>\mathcal{M}=(S,\rightarrow,L)</math> be a model for CTL
<indent level="1">

with <math>s \in S, \phi \in F</math> where F is the set of <link xlink:type="simple" xlink:href="../582/404582.xml">
wffs</link> over the <link xlink:type="simple" xlink:href="../723/25723.xml">
Language</link> of <math>\mathcal{M}</math>.
</indent>

Then the relation of semantic entailment <math>(\mathcal{M}, s \models \phi)</math> is defined by <link xlink:type="simple" xlink:href="../399/211399.xml">
Structural Induction</link> on <math>\phi</math>:
<list>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models \top \Big) \land \Big( (\mathcal{M}, s) \not\models \bot \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models p \Big) \Leftrightarrow \Big( p \in L(s) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models \neg\phi \Big) \Leftrightarrow \Big( (\mathcal{M}, s) \not\models \phi \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models \phi_1 \land \phi_2 \Big) \Leftrightarrow \Big( \big((\mathcal{M}, s) \models \phi_1 \big) \land \big((\mathcal{M}, s) \models \phi_2 \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models \phi_1 \lor \phi_2 \Big) \Leftrightarrow \Big( \big((\mathcal{M}, s) \models \phi_1 \big) \lor \big((\mathcal{M}, s) \models \phi_2 \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models \phi_1 \Rightarrow \phi_2 \Big) \Leftrightarrow \Big( \big((\mathcal{M}, s) \not\models \phi_1 \big) \lor \big((\mathcal{M}, s) \models \phi_2 \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\bigg( (\mathcal{M}, s) \models \phi_1 \Leftrightarrow \phi_2 \bigg) \Leftrightarrow \bigg( \Big( \big((\mathcal{M}, s) \models \phi_1 \big) \land \big((\mathcal{M}, s) \models \phi_2 \big) \Big) \lor \Big( \neg \big((\mathcal{M}, s) \models \phi_1 \big) \land \neg \big((\mathcal{M}, s) \models \phi_2 \big) \Big) \bigg)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models AX\phi \Big) \Leftrightarrow \Big( \forall \langle s \rightarrow s_1 \rangle \big( (\mathcal{M}, s_1) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models EX\phi \Big) \Leftrightarrow \Big( \exists \langle s \rightarrow s_1 \rangle \big( (\mathcal{M}, s_1) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models AG\phi \Big) \Leftrightarrow \Big( \forall \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \forall i \big( (\mathcal{M}, s_i) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models EG\phi \Big) \Leftrightarrow \Big( \exists \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \forall i \big( (\mathcal{M}, s_i) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models AF\phi \Big) \Leftrightarrow \Big( \forall \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \exists i \big( (\mathcal{M}, s_i) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\Big( (\mathcal{M}, s) \models EF\phi \Big) \Leftrightarrow \Big( \exists \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \exists i \big( (\mathcal{M}, s_i) \models \phi \big) \Big)</math></entry>
<entry level="1" type="number">

 <math>\bigg( (\mathcal{M}, s) \models A[\phi_1 U \phi_2] \bigg) \Leftrightarrow \bigg( \forall \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \exists i \Big( \big( (\mathcal{M}, s_i) \models \phi_2 \big) \land \big( \forall (j &amp;lt; i) (\mathcal{M}, s_j) \models \phi_1 \big) \Big) \bigg)</math></entry>
<entry level="1" type="number">

 <math>\bigg( (\mathcal{M}, s) \models E[\phi_1 U \phi_2] \bigg) \Leftrightarrow \bigg( \exists \langle s_1 \rightarrow s_2 \rightarrow \ldots \rangle (s=s_1) \exists i \Big( \big( (\mathcal{M}, s_i) \models \phi_2 \big) \land \big( \forall (j &amp;lt; i) (\mathcal{M}, s_j) \models \phi_1 \big) \Big) \bigg)</math></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Characterisation of CTL</st>
<p>

Rules 10-15 above refer to computation paths in models and are what ultimately characterise the "Computation Tree";
they are assertions about the nature of the infinitely deep computation tree rooted at the given state <math>s</math>.</p>

</ss1>
<ss1>
<st>
Semantic equivalence</st>
<p>

The CTL formulae <math>\phi</math> and <math>\psi</math> are said to be semantically equivalent iff any state in any model which satisfies one also satisfies the other.
<indent level="1">

This is denoted <math>\phi \equiv \psi</math>
</indent>

It can be seen that A and E are duals (meaning one can be defined using the other). Furthermore so are G and F, being universal and existential computation tree quantifiers respectively.</p>
<p>

Hence an instance of <link>
De Morgan's Laws</link> can be formulated in CTL:
<indent level="1">

<math>\neg AF\phi \equiv EG\neg\phi</math>
</indent>
:<math>\neg EF\phi \equiv AG\neg\phi</math>
<indent level="1">

<math>\neg AX\phi \equiv EX\neg\phi</math>
</indent>

From these facts it can be derived that:
<indent level="1">

<math>AF\phi \equiv A[\top U \phi]</math>
</indent>
:<math>EF\phi \equiv E[\top U \phi]</math></p>
<p>

In fact, it can be shown using these identities that a subset of the CTL temporal connectives is adequate iff it contains at least one of <math>\{AX,EX\}</math> and at least one of <math>\{EG,AF,AU\}</math>.</p>
<p>

Some other important identities:
<indent level="1">

<math>AG\phi \equiv \phi \land AX AG \phi</math>
</indent>
:<math>EG\phi \equiv \phi \land EX EG \phi</math>
<indent level="1">

<math>AF\phi \equiv \phi \lor AX AF \phi</math>
</indent>
:<math>EF\phi \equiv \phi \lor EX EF \phi</math>
<indent level="1">

<math>A[\phi U \psi] \equiv \psi \lor (\phi \land AX A [\phi U \psi])</math>
</indent>
:<math>E[\phi U \psi] \equiv \psi \lor (\phi \land EX E [\phi U \psi])</math></p>

</ss1>
</sec>
<sec>
<st>
Examples</st>
<p>

Let "P" mean "I like chocolate" and Q mean "It's warm outside."</p>
<p>

<list>
<entry level="1" type="bullet">

<b>AG</b>.P</entry>
<entry level="1" type="indent">

"I will like chocolate from now on, no matter what happens."</entry>
<entry level="1" type="bullet">

<b>EF</b>.P</entry>
<entry level="1" type="indent">

"It's possible I may like chocolate some day, at least for one day."</entry>
<entry level="1" type="bullet">

<b>AF</b>.<b>EG</b>.P</entry>
<entry level="1" type="indent">

"It's always possible (AF) that I will suddenly start liking chocolate for the rest of time." (Note: not just the rest of my life, since my life is finite, while <b>G</b> is infinite).</entry>
<entry level="1" type="bullet">

<b>EG</b>.<b>AF</b>.P</entry>
<entry level="1" type="indent">

"This is a critical time in my life.  Depending on what happens next (E), it's possible that for the rest of time (G), there will always be some time in the future (AF) when I will like chocolate. However, if the wrong thing happens next, then all bets are off and there's no guarantee about whether I'll ever like chocolate."</entry>
<entry level="1" type="bullet">

<b>A</b>(P<b>U</b>Q)</entry>
<entry level="1" type="indent">

"From now until it's warm outside, I will like chocolate every single day.  Once it's warm outside, all bets are off as to whether I'll like chocolate anymore.  Oh, and it's guaranteed to be warm outside eventually, even if only for a single day."</entry>
<entry level="1" type="bullet">

<b>E</b>((<b>EX</b>.P)<b>U</b>(<b>AG</b>.Q))</entry>
<entry level="1" type="indent">

"It's possible that: there will eventually come a time when it will be warm forever (AG.Q) and that before that time there will always be <it>some</it> way to get me to like chocolate the next day (EX.P)."</entry>
</list>
</p>

</sec>
<sec>
<st>
Relations with other logics</st>

<p>

Computation tree logic (CTL) is a subset of CTL* as well as of the <link xlink:type="simple" xlink:href="../953/6158953.xml">
 modal µ calculus</link>. More interestingly, CTL is a fragment of Alur, Henzinger and Kupferman's <link>
Alternating-time Temporal Logic</link> (ATL).</p>

<p>

Computation tree logic (CTL) and <link xlink:type="simple" xlink:href="../307/710307.xml">
Linear temporal logic</link> (LTL) are both a subset of CTL*. CTL and <link xlink:type="simple" xlink:href="../307/710307.xml">
LTL</link> are not equivalent and they have a common subset.
<list>
<entry level="1" type="bullet">

<b>FG</b>.P exists in LTL but not in CTL.</entry>
<entry level="1" type="bullet">

<b>AG</b>(P<math>\Rightarrow</math>((<b>EX</b>.Q)<math>\land</math>(<b>EX</b>¬Q))) exists in CTL but not in LTL.</entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../557/6762557.xml">
Probabilistic CTL</link></entry>
<entry level="1" type="bullet">

<link>
Fair Computation tree logic</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../307/710307.xml">
Linear temporal logic</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

  <cite style="font-style:normal">Michael Huth and Mark Ryan&#32;(2004).&#32;"Logic in Computer Science (Second Edition)": 207.&#32;Cambridge University Press. ISBN 0-521-54310-X.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite style="font-style:normal">Emerson, E. A. and Halpern, J. Y.&#32;(1985).&#32;"Decision  procedures and expressiveness in the temporal logic of branching time". <it>Journal of Computer and System Sciences</it>&#32;<b>30</b>&#32;(1): 1–24. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1016%2F0022-0000%2885%2990001-7">
10.1016/0022-0000(85)90001-7</weblink>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite style="font-style:normal">Clarke, E. M., Emerson, E. A., and Sistla, A. P.&#32;(1986).&#32;"Automatic verification of finite-state concurrent systems using temporal logic specifications". <it>ACM Transactions on Programming Languages and Systems</it>&#32;<b>8</b>&#32;(2): 244–263. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F5397.5399">
10.1145/5397.5399</weblink>.</cite>&nbsp;</entry>
<entry level="1" type="bullet">

  <cite style="font-style:normal" class="book">Emerson, E. A.&#32;(1990).&#32;"Temporal and modal logic",&#32;in J. van Leeuwen (ed.): Handbook of Theoretical Computer Science, vol. B.&#32;MIT Press,&#32;pp. 955-1072. ISBN 0-262-22039-3.</cite>&nbsp;</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.inf.unibz.it/~artale/FM/slide4.pdf">
Teaching slides of CTL</weblink></entry>
</list>
</p>


</sec>
</bdy>
</article>
