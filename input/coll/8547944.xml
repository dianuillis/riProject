<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:24:40[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Lehmer&apos;s GCD algorithm</title>
<id>8547944</id>
<revision>
<id>240903054</id>
<timestamp>2008-09-25T14:16:32Z</timestamp>
<contributor>
<username>Jafet</username>
<id>1031429</id>
</contributor>
</revision>
</header>
<bdy>

<b>Lehmer's GCD algorithm</b>, named after <person wordnetid="100007846" confidence="0.9508927676800064">
<mathematician wordnetid="110301261" confidence="0.9173553029164789">
<link xlink:type="simple" xlink:href="../706/379706.xml">
Derrick Henry Lehmer</link></mathematician>
</person>
, is a rather fast <link xlink:type="simple" xlink:href="../354/12354.xml">
GCD</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>, an improvement on the simpler but slower <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../377/10377.xml">
Euclidean algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
.
<sec>
<st>
 Algorithm </st>
<p>

Lehmer noted that that most of the <link xlink:type="simple" xlink:href="../640/332640.xml">
quotient</link>s from each step of the division part of the standard algorithm are small. (For example, <person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Knuth</link></scientist>
</person>
 observed that the quotients 1, 2, and 3 comprise 67.7% of all quotients<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>.)</p>
<p>

Say we want to obtain the GCD of the two integers <it>a</it> and <it>b</it>. Let <it>a</it>&nbsp;&amp;ge;&nbsp;<it>b</it>.
<list>
<entry level="1" type="bullet">

 If <it>b</it> contains only one digit (in the chosen <link xlink:type="simple" xlink:href="../207/701207.xml">
base</link>, say <math>\beta=1000</math> or <math>\beta=2^{32}</math>), use some other method, such as the <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../377/10377.xml">
Euclidean algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
, to obtain the result.</entry>
<entry level="1" type="bullet">

 If <it>a</it> and <it>b</it> differ in the length of digits, perform a division so that <it>a</it> and <it>b</it> are equal in length, with length equal to <it>m</it>.</entry>
<entry level="1" type="bullet">

 Iterate until one of <it>a</it> or <it>b</it> is zero:</entry>
<entry level="2" type="bullet">

 Decrease <it>m</it> by one. Let <it>x</it> be the leading (most significant) digit in <it>a</it>, <math>x=a \text{ div } \beta^m</math> and <it>y</it> the leading digit in <it>b</it>, <math>y=b \text{ div } \beta^m</math>.</entry>
<entry level="2" type="bullet">

 Initialize a 2 by 3 <link xlink:type="simple" xlink:href="../728/19008728.xml">
matrix</link> <math>\textstyle \begin{bmatrix} A &amp; B &amp; x\\ C &amp; D &amp; y \end{bmatrix}</math> to an extended <link xlink:type="simple" xlink:href="../718/59718.xml">
identity matrix</link> <math>\textstyle \begin{bmatrix} 1 &amp; 0 &amp; x \\ 0 &amp; 1 &amp; y\end{bmatrix}</math>, and perform the euclidean algorithm simultaneously on the pairs <math>(x+A,y+C)</math> and <math>(x+B,y+D)</math>, until the quotients differ. That is, iterate:</entry>
<entry level="3" type="bullet">

 Compute the quotients <it>w</it>1 of the long divisions of (<it>x</it> + <it>A</it>) by (<it>y</it> + <it>C</it>) and <it>w</it>2 of (<it>x</it> + <it>B</it>) by (<it>y</it> + <it>D</it>) respectively. Also let <it>w</it> be the (not computed) quotient from the current long division in the chain of long divisions of the euclidean algorithm.</entry>
<entry level="3" type="bullet">

 If <it>w</it>1 &amp;ne; <it>w</it>2, then break out of the inner iteration. Else set <it>w</it> to <it>w</it>1 (or <it>w</it>2).</entry>
<entry level="3" type="bullet">

 Set our current matrix</entry>
<entry level="4" type="indent">

<math>\textstyle \begin{bmatrix} A &amp; B &amp; x \\ C &amp; D &amp; y \end{bmatrix}</math></entry>
<entry level="3" type="indent">

 to</entry>
<entry level="4" type="indent">

 <math>\textstyle \begin{bmatrix} 0 &amp; 1 \\ 1 &amp; -w \end{bmatrix} \cdot \begin{bmatrix} A &amp; B &amp; x \\ C &amp; D &amp; y \end{bmatrix} = \begin{bmatrix} C &amp; D &amp;y \\ A - wC &amp; B - wD &amp; x-wy \end{bmatrix}</math></entry>
<entry level="3" type="bullet">

 If <it>B</it> = 0, we have reached a <it>deadlock</it>; perform a normal step of the euclidean algorithm with <it>a</it> and <it>b</it>, and recompute the matrix. </entry>
<entry level="2" type="bullet">

 Set <it>a</it> to <it>aA</it> + <it>bB</it> and <it>b</it> to <it>Ca</it> + <it>Db</it> (again simultaneously). This applies the steps of the euclidean algorithm that were performed on the leading digits in compressed form to the long integers <it>a</it> and <it>b</it>. Restart the outer iteration.</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../095/8095.xml">
Knuth</link></scientist>
</person>
, <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../358/31358.xml">
The Art of Computer Programming</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
 vol 2 "Seminumerical algorithms"</it>, chapter 4.5.3 Theorem E.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<list>
<entry level="1" type="bullet">

 Kapil Paranjape, <weblink xlink:type="simple" xlink:href="http://www.imsc.res.in/~kapil/crypto/notes/node11.html">
Lehmer's Algorithm</weblink></entry>
</list>


</p>
</sec>
</bdy>
</article>
