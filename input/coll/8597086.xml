<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:28:11[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<structure  confidence="0.8" wordnetid="105726345">
<form  confidence="0.8" wordnetid="105930736">
<header>
<title>Von Neumann universal constructor</title>
<id>8597086</id>
<revision>
<id>233249751</id>
<timestamp>2008-08-21T03:43:40Z</timestamp>
<contributor>
<username>William R. Buckley</username>
<id>332451</id>
</contributor>
</revision>
<categories>
<category>Artificial life</category>
<category>Cellular automaton patterns</category>
</categories>
</header>
<bdy>

<image location="right" width="400px" src="Nobili_Pesavento_2reps.png" type="thumb">
<caption>

The first implementation of von Neumann's self-reproducing universal constructor.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> Three generations of machine are shown, the second has nearly finished constructing the third. The lines running to the right are the tapes of genetic instructions, which are copied along with the body of the machines. The machine shown runs in a 32-state version of von Neumann's cellular automata environment, not his original 29-state specification.
</caption>
</image>
<p>

<person wordnetid="100007846" confidence="0.9508927676800064">
<scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../942/15942.xml">
John von Neumann</link></scientist>
</person>
's <b>Universal Constructor</b> is a <link xlink:type="simple" xlink:href="../053/1600053.xml">
self-replicating machine</link> in a <link xlink:type="simple" xlink:href="../342/54342.xml">
cellular automata</link> environment.  It was designed in the 1940s, without the use of a computer.  The fundamental details of the machine were published in von Neumann's book <it>Theory of Self-Reproducing Automata</it>, completed in 1966 by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../641/6479641.xml">
 Arthur W. Burks</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
 after von Neumann's death.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

<link xlink:type="simple" xlink:href="../009/2234009.xml">
Von Neumann's specification</link> defined the machine as using 29 states, these states constituting means of signal carriage and logical operation, and acting upon signals represented as bit streams.  A 'tape' of cells encodes the sequence of actions to be performed by the machine.  Using a writing head (termed a construction arm) the machine can print out (construct) a new pattern of cells, allowing it to make a complete copy of itself, and the tape. </p>

<sec>
<st>
 Purpose </st>

<p>

Von Neumann's design has traditionally been understood to be a demonstration of the logical requirements for machine self-replication.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> However it is clear that far simpler machines can achieve self-replication. Examples include trivial crystal-like growth, template replication and <physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../101/6998101.xml">
Langton's loops</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
. But von Neumann was interested in something more profound: construction universality and evolution. <weblink xlink:type="simple" xlink:href="http://www.walenz.org/vonNeumann/page0110.html">
http://www.walenz.org/vonNeumann/page0110.html</weblink></p>
<p>

Note that the simpler self-replicating CA structures (especially, <link>
Byl's loop</link> and the <physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../439/7035439.xml">
Chou-Reggia loop</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
) cannot exist in a wide variety of forms and thus have very limited <link xlink:type="simple" xlink:href="../109/812109.xml">
evolvability</link>. Other CA structures such as the <link xlink:type="simple" xlink:href="../129/6998129.xml">
Evoloop</link> are somewhat evolvable but still don't support open-ended evolution. Commonly, simple replicators do not fully contain the machinery of construction, there being a degree to which the replicator is information copied by its surrounding environment. Although the Von Neumann design is a logical construction, it is in principle a design that could be instantiated as a physical machine. The issue of the environmental contribution to replication is somewhat open, since there are different conceptions of raw material and its availability.</p>
<p>

The concept of a universal constructor is non-trivial because of the existence of <structure wordnetid="105726345" confidence="0.8">
<form wordnetid="105930736" confidence="0.8">
<link>
garden of eden patterns</link></form>
</structure>
 but a simple definition is that a universal constructor is able to construct any finite pattern of non-excited (quiescent) cells.</p>
<p>

Von Neumann's crucial insight is that part of the replicator has a double use; being both an active component of the construction mechanism, and being the target of a passive copying process. This part is played by the tape of instructions in Von Neumann's combination of universal constructor plus instruction tape. </p>
<p>

The combination of a universal constructor and a tape of instructions would i) allow self-replication, and also ii) guarantee that the open-ended complexity growth observed in biological organisms was possible.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> The image below illustrates this possibility.</p>
<p>

This insight is all the more remarkable because it preceded the discovery of the genetic information store in biological systems. The <link xlink:type="simple" xlink:href="../955/7955.xml">
DNA</link> molecule processed by separate mechanisms that carry out its instructions and copy the DNA for insertion for the newly constructed cell. The ability to achieve open-ended evolution lies in the fact that, just as in nature, errors (<link xlink:type="simple" xlink:href="../702/19702.xml">
mutations</link>) in the copying of the genetic tape can lead to viable variants of the automaton, which can then evolve via <link xlink:type="simple" xlink:href="../147/21147.xml">
natural selection</link>.</p>
<p>

<image location="center" width="700px" src="Pesavento_replicator_inherited_mutations.png" type="thumb">
<caption>

A demonstration of the ability of von Neumann's machine to support inheritable mutations. (1) At an earlier timestep, a mutation was manually added to the second generation machine's tape. (2) Later generations both display the <link xlink:type="simple" xlink:href="../543/24543.xml">
phenotype</link> of the mutation (a drawing of a flower) and pass the mutation on to their children, since the tape is copied each time. This example illustrates how von Neumann's design allows for complexity growth (in theory) since the tape could specify a machine that is more complex than the one making it.
</caption>
</image>
</p>

</sec>
<sec>
<st>
 Implementation </st>

<p>

<link xlink:type="simple" xlink:href="../641/6479641.xml">
Arthur Burks</link> and others extended the work of von Neumann, giving a much clearer and complete set of details regarding the design and operation of von Neumann's self-replicator. The work of J. W. Thatcher is particularly noteworthy, for he greatly simplified the design. Still, their work did not yield a complete design, cell by cell, of a configuration capable of demonstrating self-replication.</p>
<p>

<link xlink:type="simple" xlink:href="../581/18886581.xml">
Renato Nobili</link> and Umberto Pesavento published the first fully-implemented self-reproducing universal constructor in 1995, nearly fifty years after von Neumann's work.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> They used a 32-state cellular automaton (CA) instead of von Neumann's original <link xlink:type="simple" xlink:href="../009/2234009.xml">
29-state specification</link>, extending it to allow for easier signal-crossing and a more compact design. They also published an implementation of a universal constructor within the original 29-state CA but not one capable of complete replication - the configuration cannot duplicate its tape, nor can it trigger its offspring; the configuration can only construct, and its offspring are not self-replicable.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> </p>
<p>

In 2007, Nobili published a 32-state implementation that uses <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link>
run-length encoding</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 to greatly reduce the size of the tape. <weblink xlink:type="simple" xlink:href="http://www.pd.infn.it/~rnobili/wjvn/index.htm">
http://www.pd.infn.it/~rnobili/wjvn/index.htm</weblink> </p>
<p>

In 2008, William R. Buckley published two configurations which are self-replicators within the original 29-state CA of von Neumann.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> Buckley also claims that the crossing of signal within von Neumann 29-state cellular automata is not necessary to the construction of self-replicators.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref> Buckley also points out that for the purposes of evolution, each replicator should return to its original configuration after replicating, in order to be capable (in theory) of making more than one copy. As published, the 1995 design of Nobili-Pesavento does not fulfill this requirement but the 2007 design of Nobili does.</p>
<p>

Mange reports an implementation of a universal constructor that is consistent with the designs of von Neumann.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></p>
<p>

Takada et al. proposed a universal constructor directly implemented upon an asynchronous cellular automaton, rather than upon a synchronous cellular automaton.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>

<ss1>
<st>
 Comparison of implementations </st>

<p>

<table style="text-align:center" class="wikitable">
<row>
<header>
implementation</header>
<header>
source</header>
<header>
ruleset</header>
<header>
rectangular area</header>
<header>
number of cells</header>
<header>
length of tape</header>
<header>
timesteps for replication</header>
</row>
<row>
<header>
Buckley, 2008<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></header>
<col>
 replicator.mc <weblink xlink:type="simple" xlink:href="http://tomas.rokicki.com/golly-1.5a-win.zip">
http://tomas.rokicki.com/golly-1.5a-win.zip</weblink></col>
<col>
original 29-state</col>
<col>
312&nbsp;&amp;times;&nbsp;132</col>
<col>
18,589</col>
<col>
294,844</col>
<col>
261 × 109</col>
</row>
<row>
<header>
Nobili-Pesavento, 1995 <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></header>
<col>
 <weblink xlink:type="simple" xlink:href="http://www.sq3.org.uk/Evolution/JvN/">
http://www.sq3.org.uk/Evolution/JvN/</weblink></col>
<col>
Nobili 32-state</col>
<col>
97&nbsp;&amp;times;&nbsp;170</col>
<col>
6,329</col>
<col>
145,315</col>
<col>
63.4 × 109</col>
</row>
<row>
<header>
Nobili, 2007</header>
<col>
 SR_CCN_AP.EVN <weblink xlink:type="simple" xlink:href="http://www.pd.infn.it/~rnobili/wjvn/index.htm">
http://www.pd.infn.it/~rnobili/wjvn/index.htm</weblink><weblink xlink:type="simple" xlink:href="http://sourceforge.net/mailarchive/forum.php?thread_name=aac498730807310217udbc6fd8y809c16003ceb3782%40mail.gmail.com&amp;forum_name=golly-test">
http://sourceforge.net/mailarchive/forum.php?thread_name=aac498730807310217udbc6fd8y809c16003ceb3782%40mail.gmail.com&amp;forum_name=golly-test</weblink></col>
<col>
Nobili 32-state</col>
<col>
97&nbsp;&amp;times;&nbsp;100</col>
<col>
5,313</col>
<col>
56,325</col>
<col>
9.59 × 109</col>
</row>
</table>
</p>

</ss1>
</sec>
<sec>
<st>
 Practicality </st>


<ss1>
<st>
 Computational cost </st>

<p>

All the implementations of von Neumann's self-reproducing machine require considerable resources to run on computer. For example, in the Nobili-Pesavento 32-state implementation shown above, while the body of the machine is just 6,329 non-empty cells (within a rectangle of size 97x170), it requires a tape that is 145,315 cells long, and takes 63 billion timesteps to replicate. A simulator running at 1,000 timesteps per second would take over 2 years to make the first copy. In 1995, when the first implementation was published, the authors had not seen their own machine replicate. However, in 2008, the <link xlink:type="simple" xlink:href="../547/1095547.xml">
hashlife</link> algorithm was extended to support the 29-state and 32-state rulesets in <weblink xlink:type="simple" xlink:href="http://golly.sourceforge.net">
Golly</weblink>. On a modern desktop PC, replication now takes only a few minutes, although a significant amount of memory is required.</p>

</ss1>
<ss1>
<st>
 Evolvability </st>

<p>

Von Neumann's stated problem was evolution <weblink xlink:type="simple" xlink:href="http://www.walenz.org/vonNeumann/page0110.html">
http://www.walenz.org/vonNeumann/page0110.html</weblink>: how is the complexity growth and evolvability of biological organisms possible? His machine shows how it is logically possible, by using a universal constructor, but does not show how it is possible in practice. In his unfinished work he briefly considers conflict and interactions between replicators <weblink xlink:type="simple" xlink:href="http://www.walenz.org/vonNeumann/page0147.html">
http://www.walenz.org/vonNeumann/page0147.html</weblink> but in practice his model is not likely to become a useful unit of evolution because it is too fragile.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref></p>

</ss1>
</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

<physical_entity wordnetid="100001930" confidence="0.8">
<automaton wordnetid="109825519" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<anomaly wordnetid="109606527" confidence="0.8">
<link xlink:type="simple" xlink:href="../101/6998101.xml">
Langton's loops</link></anomaly>
</causal_agent>
</person>
</automaton>
</physical_entity>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../606/18885606.xml">
Nobili cellular automata</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../270/25270.xml">
Quine (computing)</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../053/1600053.xml">
Self-replicating machine</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../948/3168948.xml">
Santa Claus machine</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../009/2234009.xml">
Von Neumann cellular automata</link></entry>
<entry level="1" type="bullet">

<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<rule wordnetid="105846054" confidence="0.8">
<link xlink:type="simple" xlink:href="../261/2082261.xml">
Wireworld</link></rule>
</concept>
</idea>
</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>
<p>

<reflist>
<entry id="1">
 <cite style="font-style:normal">Pesavento, Umberto&#32;(1995).&#32;"<weblink xlink:type="simple" xlink:href="http://web.archive.org/web/20070418081628/http://dragonfly.tam.cornell.edu/~pesavent/pesavento_self_reproducing_machine.pdf">
An implementation of von Neumann's self-reproducing machine</weblink>"&#32;(<link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>). <it>Artificial Life</it>&#32;<b>2</b>&#32;(4): 337-354.&#32;MIT Press.</cite>&nbsp;</entry>
<entry id="2">
von Neumann, John;&#32;Burks, Arthur W.&#32;(1966).&#32;"<weblink xlink:type="simple" xlink:href="http://www.walenz.org/vonNeumann/index.html">
Theory of Self-Reproducing Automata.</weblink>"&#32;(Scanned book online).&#32;  www.walenz.org.&#32;Retrieved on <link>
2008-02-29</link>.</entry>
<entry id="3">
 <cite style="font-style:normal">McMullin, B.&#32;(2000).&#32;"<weblink xlink:type="simple" xlink:href="http://www.eeng.dcu.ie/~alife/bmcm-alj-2000/">
John von Neumann and the Evolutionary Growth of Complexity: Looking Backwards, Looking Forwards...</weblink>". <it>Artificial Life</it>&#32;<b>6</b>&#32;(4): 347-361.</cite>&nbsp;</entry>
<entry id="4">
 <cite id="CITEREFNobiliPesavento1996" style="font-style:normal">Nobili, Renato&#32;&amp;&#32;Pesavento, Umberto&#32;(1996),&#32;<weblink xlink:type="simple" xlink:href="http://www.pd.infn.it/%7Ernobili/pdf_files/jvnconstr.pdf">
"Generalised von Neumann's Automata"</weblink>&#32;(<link xlink:type="simple" xlink:href="../077/24077.xml">
PDF</link>), in&#32;Besussi, E.&#32;&amp;&#32;Cecchini, A.,&#32;<it>Proc. Artificial Worlds and Urban Studies, Conference 1</it>, Venice: DAEST, </cite>&nbsp;</entry>
<entry id="5">
 <cite id="CITEREFBuckley2008" style="font-style:normal">Buckley, William R.&#32;(2008),&#32;"Signal Crossing Solutions in von Neumann Self-replicating Cellular Automata", in&#32;Andrew Adamatzky, Ramon Alonso-Sanz, 
Anna Lawniczak, Genaro Juarez Martinez, Kenichi Morita, Thomas Worsch,&#32;<it>Proc. Automata 2008</it>, Luniver Press</cite>&nbsp;</entry>
<entry id="6">
 <cite id="CITEREFMangeStaufferPeparaoloTempesti2004" style="font-style:normal">Mange, Daniel; Stauffer, A.; Peparaolo, L.&#32;&amp;&#32;Tempesti, G.&#32;(2004),&#32;"A Macroscopic View of Self-replication",&#32;<it>Proceedings of the IEEE</it>&#32;<b>92</b>(12):  1929–1945</cite>&nbsp;</entry>
<entry id="7">
 <cite id="CITEREFTakadaIsokawaPeperMatsui2004" style="font-style:normal">Takada, Yousuke; Isokawa, Teijiro; Peper, Ferdinand&#32;&amp;&#32;Matsui, Nobuyuki&#32;(2004),&#32;"Universal Construction on Self-Timed Cellular Automata", in&#32;Sloot, P.M.A.,&#32;<it>ACRI 2004, LNCS 3305</it>, pp. 21-30</cite>&nbsp;</entry>
</reflist>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://golly.sourceforge.net">
Golly - the Cellular Automata Simulation Accelerator</weblink> Very fast implementation of state transition and support for JvN, GoL, Wolfram, and other systems.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.sq3.org.uk/Evolution/JvN/">
von Neumann's Self-Reproducing Universal Constructor</weblink> The original Nobili-Pesavento source code, animations and Golly files of the replicators.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.donhopkins.com/drupal/node/41">
John von Neumann's 29 state Cellular Automata Implemented in OpenLaszlo</weblink> by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<link xlink:type="simple" xlink:href="../424/1223424.xml">
Don Hopkins</link></scientist>
</causal_agent>
</person>
</physical_entity>
</entry>
</list>


</p>

</sec>
</bdy>
</form>
</structure>
</article>
