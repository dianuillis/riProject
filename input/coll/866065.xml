<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:45:23[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Extensible Firmware Interface</title>
<id>866065</id>
<revision>
<id>243685231</id>
<timestamp>2008-10-07T16:43:18Z</timestamp>
<contributor>
<username>MuzikJunky</username>
<id>4018503</id>
</contributor>
</revision>
<categories>
<category>BIOS</category>
<category>Macintosh firmware</category>
</categories>
</header>
<bdy>

<image location="right" width="300px" src="Efi-simple.svg" type="thumb">
<caption>

Extensible Firmware Interface’s position in the software stack.
</caption>
</image>

The <b>Extensible Firmware Interface</b> (<b>EFI</b>) is a specification that defines a software <link xlink:type="simple" xlink:href="../275/41275.xml">
interface</link> between an <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> and platform <link xlink:type="simple" xlink:href="../155/41155.xml">
firmware</link>. EFI is intended as a significantly improved replacement of the old legacy <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 firmware interface historically used by all <link xlink:type="simple" xlink:href="../803/49803.xml">
IBM PC-compatible</link> <link xlink:type="simple" xlink:href="../137/18457137.xml">
personal computer</link>s.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
The EFI specification was originally developed by <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link>, and is now managed by the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../258/2312258.xml">
Unified EFI Forum</link></company>
 and is officially known as <b>Unified EFI</b> (<b>UEFI</b>).
<sec>
<st>
 History </st>
<p>

The original motivation for EFI came during early development of the first Intel-HP <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 systems in the mid-1990s. PC BIOS limitations (16-bit processor mode, 1 MB addressable space, <link xlink:type="simple" xlink:href="../917/348917.xml">
PC AT</link> hardware dependencies, etc.) were seen as clearly unacceptable for the larger server platforms Itanium was targeting. The initial effort to address these concerns was initially called <b>Intel Boot Initiative</b> and was later renamed to EFI.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref></p>
<p>

EFI specification 1.02 was released by Intel on December 12, 2000. (Version 1.01 was the original issue; it had incorrect legal and trademark information and was quickly withdrawn.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>)</p>
<p>

EFI specification 1.10 was released by Intel on December 1, 2002. It included the EFI driver model as well as several minor enhancements to 1.02.</p>
<p>

In 2005, Intel contributed this specification to the <link xlink:type="simple" xlink:href="../258/2312258.xml">
UEFI Forum</link>, who is now responsible for its development<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> and promotion. EFI was renamed to Unified EFI (UEFI) to reflect this; most documentation uses both terms interchangeably. </p>
<p>

The UEFI Forum released version 2.1 of the UEFI specification on January 7, 2007; as of March 2007, it is the latest publicly available specification. It added and improved <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptography</link>, network authentication, and the <link xlink:type="simple" xlink:href="../249/45249.xml">
User Interface</link> Architecture (Human Interface Infrastructure in UEFI).</p>

</sec>
<sec>
<st>
 Contents </st>
<p>

<image location="right" width="320px" src="Efi_flowchart_extended.jpg" type="thumb">
<caption>

Interaction between the EFI boot manager and EFI drivers
</caption>
</image>

The interface defined by the EFI specification includes data tables that contain platform information, and boot and runtime services that are available to the OS loader and OS.</p>
<p>

Some existing enhancements to PC BIOS, such as the <link xlink:type="simple" xlink:href="../697/2432697.xml">
Advanced Configuration and Power Interface</link> (ACPI) and <link xlink:type="simple" xlink:href="../002/1741002.xml">
System Management BIOS</link> (SMBIOS), are also present in EFI, as they do not rely on a 16-bit runtime interface.</p>

<ss1>
<st>
 Services </st>
<p>

EFI defines <it>boot services</it>, which include text and graphical console support on various devices, bus, block and file services, and <it>runtime services</it>, such as date, time and <link xlink:type="simple" xlink:href="../874/173874.xml">
NVRAM</link> services.</p>

</ss1>
<ss1>
<st>
Device drivers </st>
<p>

In addition to standard architecture-specific device drivers, the EFI specification provides for a processor-independent device driver environment, called <b>EFI Byte Code</b> or <b>EBC</b>. System firmware is required by the UEFI specification to carry an interpreter for any EBC images that reside in or are loaded into the environment. In that sense, EBC is similar to <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/209452.xml">
Open Firmware</link></system_of_measurement>
</standard>
, the hardware-independent firmware used in <link xlink:type="simple" xlink:href="../281/24281.xml">
PowerPC</link>-based <link xlink:type="simple" xlink:href="../979/19006979.xml">
Apple Macintosh</link> and <company wordnetid="108058098" confidence="0.8">
<institution wordnetid="108053576" confidence="0.8">
<link xlink:type="simple" xlink:href="../980/26980.xml">
Sun Microsystems</link></institution>
</company>
 <link xlink:type="simple" xlink:href="../954/36954.xml">
SPARC</link> computers, amongst others.</p>
<p>

Some architecture-specific (non-EBC) EFI device driver types can have interfaces for use from the operating system. This allows the OS to rely on EFI for basic graphics and network support until OS specific drivers are loaded.</p>

</ss1>
<ss1>
<st>
 Boot manager </st>
<p>

An <b>EFI boot manager</b> is also used to select and load the operating system, removing the need for a dedicated <link xlink:type="simple" xlink:href="../909/40909.xml#xpointer(//*[./st=%22Boot+loader%22])">
boot loader</link> mechanism (the OS boot loader is an EFI application).</p>

</ss1>
<ss1>
<st>
 Disk support </st>
<p>

In addition to the standard PC disk partition scheme, <link xlink:type="simple" xlink:href="../389/55389.xml">
Master boot record</link> (MBR), EFI adds support for a <link xlink:type="simple" xlink:href="../892/2543892.xml">
GUID Partition Table</link> (GPT), which does not suffer from the same limitations, for example, MBR can only support up to 4 partitions and up to 2TB per partition, GPT does not have these limitations. The EFI specification does not include a description for a <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>; implementations of EFI typically support <link xlink:type="simple" xlink:href="../045/53045.xml">
FAT32</link> as their file system.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>

</ss1>
<ss1>
<st>
 The EFI shell </st>
<p>

The EFI community has created an <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> <environment wordnetid="113934596" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<situation wordnetid="113927383" confidence="0.8">
<link xlink:type="simple" xlink:href="../397/2281397.xml">
shell environment</link></situation>
</state>
</environment>
;<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref> rather than booting directly into a full OS, on some implementations, the user can boot to the <b>EFI shell</b>. The shell is an EFI application; it can reside directly within the platform ROM, or on a device for which the drivers are in ROM.</p>
<p>

The shell can be used to execute other EFI applications, such as setup, OS install, diagnostic or configuration utilities, and system flash updates; it can also be used to play CDs or DVDs without having to boot to a complete operating system, provided that an EFI application with the appropriate features is written. Shell commands also make it possible to copy or move files and directories between supported file systems. Drivers can be loaded and unloaded, and a complete TCP/IP stack can also be used from within the shell.</p>
<p>

The EFI shell supports scripting through <b>.nsh files</b>, which are analogous to DOS <link xlink:type="simple" xlink:href="../030/15264030.xml">
batch file</link>s.</p>
<p>

Shell command names are often inherited from the <link xlink:type="simple" xlink:href="../146/8146.xml">
DOS</link> <link xlink:type="simple" xlink:href="../915/71915.xml">
command line interpreter</link> <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../187/71187.xml">
COMMAND.COM</link></software>
 or the <link xlink:type="simple" xlink:href="../035/32035.xml">
Unix shell</link>. The shell can be viewed as a functional replacement for the DOS <link xlink:type="simple" xlink:href="../707/6707.xml">
command line interface</link> and the BIOS <link xlink:type="simple" xlink:href="../618/496618.xml">
text user interface</link>.</p>

</ss1>
<ss1>
<st>
 Extensions </st>
<p>

Extensions to EFI can be loaded from virtually any <link xlink:type="simple" xlink:href="../629/780629.xml">
non-volatile</link> storage device attached to the computer. For example, an <link xlink:type="simple" xlink:href="../922/69922.xml">
original equipment manufacturer</link> (OEM) can sell systems with an EFI partition on the hard drive, which would add additional functions to the standard EFI firmware stored on the motherboard’s <link xlink:type="simple" xlink:href="../934/18934934.xml">
ROM</link>.</p>

</ss1>
</sec>
<sec>
<st>
Implementation and adoption</st>

<ss1>
<st>
 Intel Platform Innovation Framework for EFI </st>
<p>

The Intel Platform Innovation Framework for EFI (also known as “the Framework”) is a set of specifications developed by Intel in conjunction with EFI. While EFI specifies the OS-to-firmware interface, the Framework specifies the structure used to build the firmware beneath the OS-to-firmware interface.</p>
<p>

In particular, the Framework includes all the steps needed to initialize the platform after power-on. These inner workings of firmware are not defined as part of the EFI specification, but some are part of the <link xlink:type="simple" xlink:href="../013/10311013.xml">
Platform Initialization Specification</link> developed by <link xlink:type="simple" xlink:href="../065/866065.xml">
UEFI</link>. The Framework has been tested on Intel <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../989/140989.xml">
XScale</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
, Intel <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 and <link xlink:type="simple" xlink:href="../046/15046.xml">
IA32</link> platforms.</p>
<p>

Compatibility with x86 operating systems that require “legacy BIOS” interfaces to operate is handled through a <b>compatibility support module</b> (CSM). The CSM includes a 16-bit <link xlink:type="simple" xlink:href="../823/3823.xml">
binary</link> (CSM16) supplied by a BIOS vendor and a “thunk” layer to connect CSM16 to the Framework.</p>
<p>

Intel developed a reference codebase for the Framework, codenamed “Tiano”. Tiano is a complete, <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../019/290019.xml">
legacy-free</link></instrumentality>
</artifact>
</system>
 firmware implementation that includes support for EFI. Tiano does not include the 16-bit portion of the CSM, but provides the interfaces required to add one supplied by a <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 vendor. <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> does not make the complete Tiano implementation available to end-users.</p>
<p>

A portion of the Tiano codebase (“the Foundation”) has been released as <link xlink:type="simple" xlink:href="../758/18938758.xml">
open source</link> to the <weblink xlink:type="simple" xlink:href="http://www.tianocore.org/">
TianoCore project</weblink> as the <b>EFI Developer Kit</b> (EDK). This implementation covers EFI and some hardware initialization code, but does not constitute feature-complete firmware by itself. Several licenses have been used for this code, including the <link xlink:type="simple" xlink:href="../111/18933111.xml">
BSD license</link> and the <link xlink:type="simple" xlink:href="../373/3596373.xml">
Eclipse Public License</link>.</p>
<p>

Products based on EFI, <link xlink:type="simple" xlink:href="../065/866065.xml">
UEFI</link> &amp; the Framework specifications are available through independent BIOS vendors, such as <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../470/3031470.xml">
Phoenix Technologies</link></company>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../819/1265819.xml">
American Megatrends</link></company>
 (AMI) and <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../669/4248669.xml">
Insyde Software</link></company>
. Some vendor implementations are entirely based on the Tiano implementation, while others are designed to be specification compliant without relying on Intel’s reference implementation.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref></p>

</ss1>
<ss1>
<st>
 Platforms that use UEFI or the Framework </st>
<p>

<link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link>’s first <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 workstations and servers, released in 2000, supported EFI 1.02.</p>
<p>

<link xlink:type="simple" xlink:href="../973/13973.xml">
Hewlett-Packard</link>’s first <link xlink:type="simple" xlink:href="../340/1109340.xml">
Itanium 2</link> systems, released in 2002, supported EFI 1.10; they were able to boot <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>, <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
, <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../554/7580554.xml">
FreeBSD</link></horizontal_surface>
</surface>
</artifact>
</platform>
 and <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
; <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
 added support in June, 2003.</p>
<p>

All Itanium or Itanium 2 systems that ship with EFI compliant firmware must also comply with all <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../499/10709499.xml">
DIG64</link></company>
 specifications.</p>
<p>

In November <link xlink:type="simple" xlink:href="../163/36163.xml">
2003</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../838/570838.xml">
Gateway</link></company>
 introduced the Gateway 610 Media Center, the first x86 Windows-based computer system to use firmware based on the Framework, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../669/4248669.xml">
Insyde Software's</link></company>
 InsydeH2O. It still relied on a legacy BIOS implemented as a compatibility support module to boot Windows.</p>
<p>

In January <link xlink:type="simple" xlink:href="../164/36164.xml">
2006</link>, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple Inc.</link></company>
 shipped its first <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link>-based <link xlink:type="simple" xlink:href="../979/19006979.xml">
Macintosh</link> computers. These systems use EFI and the Framework instead of <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/209452.xml">
Open Firmware</link></system_of_measurement>
</standard>
, which had been used on its previous PowerPC-based systems.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref> On April 5, 2006, Apple first released <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../118/4637118.xml">
Boot Camp</link></software>
, which produces a Windows drivers disk and a non-destructive partitioning tool to allow the installation of Windows XP or Vista without requiring a reinstallation of Mac OS X. A firmware update was also released that added legacy BIOS support to its EFI implementation. Subsequent Macintosh models shipped with the newer firmware. Now all current Macintosh systems are also able to boot <link xlink:type="simple" xlink:href="../160/1903160.xml">
legacy</link> <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
BIOS</link></generic>
 <link xlink:type="simple" xlink:href="../194/22194.xml">
Operating Systems</link> such as Windows XP and Vista.</p>
<p>

The grand majority of Intel motherboards ship with Framework-based firmware. During 2005, more than one million Intel systems shipped with the Framework.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref> New mobile, desktop and server products, using the Framework, started shipping in 2006. For instance, all boards that use the Intel 945 chipset series use the Framework. However, the production firmware usually does not include EFI support, and is limited to legacy BIOS.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref></p>
<p>

Since 2005, EFI has also been implemented on non-PC architectures, such as <link xlink:type="simple" xlink:href="../630/46630.xml">
embedded system</link>s based on <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../989/140989.xml">
XScale</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 cores.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></p>
<p>

The EDK includes an NT32 target, which allows EFI firmware and EFI applications to run within a <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> application.</p>
<p>

In <link xlink:type="simple" xlink:href="../165/36165.xml">
2007</link> <link xlink:type="simple" xlink:href="../973/13973.xml">
HP</link> released the 8000 series <link xlink:type="simple" xlink:href="../512/189512.xml">
multifunction printer</link>s with EFI compliant firmware.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref></p>
<p>

In 2008, many more systems have transitioned to use the UEFI technology. Some of the systems do not have the UEFI boot mode turned on, they only support the legacy OS boot via CSM, but systems with the UEFI mode turned on are shipping, for example, IBM x3450 server, MSI motherboards with ClickBIOS, HP EliteBook Notebook and Tablet PCs, etc. It is projected that by late 2009 or early 2010, more than 50% of the shipping x64 units will be UEFI based.</p>

</ss1>
<ss1>
<st>
 Operating systems </st>
<p>

<list>
<entry level="1" type="bullet">

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
 systems have been able to use EFI at boot time since early 2000, using the <link xlink:type="simple" xlink:href="../296/4011296.xml">
elilo</link> EFI boot loader or, more recently,  EFI versions of grub.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref></entry>
<entry level="1" type="bullet">

<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../704/36704.xml">
HP-UX</link></O>
 has used EFI as its boot mechanism on IA-64 systems since 2002.</entry>
<entry level="1" type="bullet">

HP <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
 has used EFI since its initial evaluation release in December 2003, and for production releases since January 2005<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref>.</entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../856/856.xml">
Apple</link></company>
 has adopted EFI for its line of <link xlink:type="simple" xlink:href="../317/3698317.xml">
Intel-based Macs</link>. <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../975/641975.xml">
Mac OS X v10.4</link></version>
 Tiger for Intel and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../664/2001664.xml">
Mac OS X v10.5</link></version>
 Leopard support EFI v1.10 in 32-bit mode, even on 64-bit CPUs (newer Macs have 64-bit EFI).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref></entry>
</list>
</p>

<ss2>
<st>
Microsoft Windows</st>
<p>

The <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 versions of <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
 (Advanced Server Limited Edition and Datacenter Server Limited Edition) supported EFI 1.1 in 2002.</p>
<p>

<version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../068/208068.xml">
Windows Server 2003</link></version>
 for <link xlink:type="simple" xlink:href="../454/15454.xml">
IA-64</link>, <link>
Windows XP 64-bit Edition</link>, and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../941/33941.xml">
Windows 2000</link></version>
 Advanced Server Limited Edition, all of which are for the Intel <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../454/15454.xml">
Itanium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 family of processors, support EFI, a requirement of the platform through the <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../499/10709499.xml">
DIG64</link></company>
 specification.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref></p>
<p>

Microsoft introduced UEFI support for x64 Windows operating systems with <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/2361042.xml">
Windows Server 2008</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml#xpointer(//*[./st=%22Service+Pack+1%22])">
Windows Vista Service Pack 1</link></version>
.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref> Microsoft claims that the lack of official support for EFI booting on 32-bit CPUs is due to lack of support from PC manufacturers and vendors. Microsoft’s migration to x64 operating systems is not supportable by EFI 1.10, since the x86-64 processor extensions required by x64 operating systems were not a supported processor binding. Support for x86-64 was added in <link xlink:type="simple" xlink:href="../065/866065.xml">
UEFI</link> 2.0.</p>
<p>

Microsoft has released a video with Andrew Ritz and Jamie Schwarz explaining Pre-OS support involving UEFI on Windows Vista and Windows Server 2008.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref></p>

</ss2>
</ss1>
</sec>
<sec>
<st>
 Graphic feature</st>
<p>

EFI supports graphical menus and features, such as is implemented on Aptio or Great Wall UEFI.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref></p>

</sec>
<sec>
<st>
Criticism</st>
<p>

EFI has been criticized for bringing more complexity to the system, without bringing significant advantages<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2221%22])">21</ref> and disabling fully open-source BIOS replacements like <link xlink:type="simple" xlink:href="../153/5259153.xml">
OpenBIOS</link> and <link xlink:type="simple" xlink:href="../246/1556246.xml">
coreboot</link>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2222%22])">22</ref></p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../374/244374.xml">
x86-64</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../697/2432697.xml">
Advanced Configuration and Power Interface</link> (ACPI)</entry>
<entry level="1" type="bullet">

<generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../473/Form_4473.xml">
Basic Input/Output System</link></generic>
 (BIOS)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../909/40909.xml">
Booting</link></entry>
<entry level="1" type="bullet">

<software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../246/1556246.xml">
Coreboot</link></software>
</entry>
<entry level="1" type="bullet">

<pause wordnetid="115271008" confidence="0.8">
<extension wordnetid="115272382" confidence="0.8">
<time_interval wordnetid="115269513" confidence="0.8">
<delay wordnetid="115272029" confidence="0.8">
<link xlink:type="simple" xlink:href="../659/998659.xml">
El Torito</link></delay>
</time_interval>
</extension>
</pause>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../231/9053231.xml">
Functional specification</link></entry>
<entry level="1" type="bullet">

<structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../416/5321416.xml">
Live USB</link></distribution>
</arrangement>
</structure>
</entry>
<entry level="1" type="bullet">

<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../452/209452.xml">
Open Firmware</link></system_of_measurement>
</standard>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../153/5259153.xml">
OpenBIOS</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../002/1741002.xml">
System Management BIOS</link> (SMBIOS)</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../916/3362916.xml">
System Management Mode</link></entry>
<entry level="1" type="bullet">

<company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../258/2312258.xml">
Unified EFI Forum</link></company>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
Michael Kinney. “<weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/magazine/computing/it09006.pdf">
Solving BIOS Boot Issues with EFI</weblink>”. <it>Intel DeveloperUPDATEMagazine</it>. September 2000, p. 1.</entry>
<entry id="2">
Dong Wei, <it>Beyond BIOS</it> (foreword), Intel Press, 2006, ISBN 9-780974-364902</entry>
<entry id="3">
See the Revision History section of specification version 1.10</entry>
<entry id="4">
Unified EFI Forum. “<weblink xlink:type="simple" xlink:href="http://www.uefi.org/about/">
UEFI - About UEFI</weblink>"</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://fat-driver.tianocore.org">
fat-driver.Tianocore.org</weblink> for info on EFI FAT driver. (requires registration)</entry>
<entry id="6">
[https://efi-shell.tianocore.org/ efi-shell.tianocore.org] for EFI shell information</entry>
<entry id="7">
<weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/framework/">
Intel Platform Innovation Framework for EFI</weblink> on the <link xlink:type="simple" xlink:href="../617/14617.xml">
Intel</link> site</entry>
<entry id="8">
Apple Computer. “<weblink xlink:type="simple" xlink:href="http://developer.apple.com/documentation/MacOSX/Conceptual/universal_binary/universal_binary_diffs/chapter_3_section_10.html">
Universal Binary Programming Guidelines, Second Edition: Extensible Firmware Interface (EFI)</weblink>"</entry>
<entry id="9">
Intel, <it><weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/framework/overview2.htm">
Framework Overview</weblink>''</it></entry>
<entry id="10">
An Intel pdf with information about EFI on their boards <weblink xlink:type="simple" xlink:href="http://www.intel.com/cd/channel/reseller/asmo-na/eng/336115.htm">
http://www.intel.com/cd/channel/reseller/asmo-na/eng/336115.htm</weblink></entry>
<entry id="11">
<weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/framework/overview1.htm">
Overview of the Intel Platform Innovation Framework</weblink></entry>
<entry id="12">
HP Printer’s site [https://h30046.www3.hp.com/campaigns/2007/promo/edgeline-mfp/index.php?regioncode=NA&amp;langcode=USENG]</entry>
<entry id="13">
<weblink xlink:type="simple" xlink:href="http://packages.debian.org/sid/grub-efi">
EFI version of Grub (Debian Linux)</weblink> - Retrieved on 1 May 2008.</entry>
<entry id="14">
<weblink xlink:type="simple" xlink:href="http://h71000.www7.hp.com/openvms/os/openvms-release-history.html">
HP OpenVMS Release History</weblink> - Retrieved on 16 September 2008</entry>
<entry id="15">
<weblink xlink:type="simple" xlink:href="http://refit.sourceforge.net/info/vista.html">
rEFIt - Windows Vista and EFI</weblink></entry>
<entry id="17">
<weblink xlink:type="simple" xlink:href="http://apcmag.com/apc/v3.nsf/0/E666E4A0A303D9AACA25712C008166C4">
Microsoft bombshell: no EFI support for Vista</weblink></entry>
<entry id="16">
Microsoft Windows Server TechCenter. “<weblink xlink:type="simple" xlink:href="http://technet2.microsoft.com/WindowsServer/en/Library/6b03fad7-665e-49f3-8e7d-e1a6a5be9cf01033.mspx">
Extensible Firmware Interface</weblink>"</entry>
<entry id="19">
<weblink xlink:type="simple" xlink:href="http://channel9.msdn.com/showpost.aspx?postid=292774">
Microsoft Pre-OS Video</weblink></entry>
<entry id="18">
Foley, Mary Jo&#32;(2007-07-08).&#32;"<weblink xlink:type="simple" xlink:href="http://blogs.zdnet.com/microsoft/?p=559">
Vista SP1 beta 1 to launch in mid-July</weblink>".&#32;  <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../858/435858.xml">
ZDNet</link></web_site>
.&#32;Retrieved on <link>
2007-07-20</link>.</entry>
<entry id="21">
<weblink xlink:type="simple" xlink:href="http://kerneltrap.org/node/6884">
 Linux: Linus On The Extensible Firmware Interface</weblink></entry>
<entry id="20">
<weblink xlink:type="simple" xlink:href="http://apcmag.com/5862/intel_shows_pc_booting_windows_with_uefi_firmware">
Intel shows PC booting Windows with UEFI firmware</weblink></entry>
<entry id="22">
<weblink xlink:type="simple" xlink:href="http://archive.fosdem.org/2007/interview/ronald+g+minnich">
Interview: Ronald G Minnich</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.uefi.org/">
UEFI Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.ddj.com/dept/embedded/199500688?cid=RSSfeed_DDJ_All">
EFI Architecture</weblink> Dr. Dobbs Portal Article</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://gnu-efi.sourceforge.net/">
EFI Linux gnu toolchain (gnu-efi)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://elilo.sourceforge.net/">
EFI Linux Loader project (ELILO)</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://refit.sourceforge.net/">
rEFIt, a boot menu and maintenance toolkit for EFI-based machines</weblink>.</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/efi/">
Intel’s EFI page</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.intel.com/technology/Framework/">
Intel’s Framework page</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://softwarecommunity.intel.com/articles/eng/2553.htm">
Intel List of commands</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.tianocore.org/">
Intel-sponsored open-source EFI Framework initiative</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc/system/platform/firmware/efibrief.mspx">
Microsoft’s official stance on EFI</weblink></entry>
</list>
</p>


</sec>
</bdy>
</article>
