<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:54:12[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Malleability (cryptography)</title>
<id>87027</id>
<revision>
<id>221020320</id>
<timestamp>2008-06-22T18:15:22Z</timestamp>
<contributor>
<username>Siddhant</username>
<id>270584</id>
</contributor>
</revision>
<categories>
<category>Cryptography</category>
</categories>
</header>
<bdy>

<b>Malleability</b> is a property of some <link xlink:type="simple" xlink:href="../432/18934432.xml">
cryptographic</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s. An encryption algorithm is malleable if it is possible for an adversary to transform a <link xlink:type="simple" xlink:href="../294/10294.xml">
ciphertext</link> into another ciphertext which decrypts to a related <link xlink:type="simple" xlink:href="../935/157935.xml">
plaintext</link>.  That is, given an encryption of a plaintext <math>m</math>, it is possible to generate another ciphertext which decrypts to <math>f(m)</math>, for a known function <math>f</math>, without necessarily knowing or learning <math>m</math>.<p>

Malleability is often an undesirable property in a general-purpose cryptosystem, since it allows an attacker to modify the contents of a message.  For example, suppose that a bank uses a stream cipher to hide its financial information, and a user sends an encrypted message containing, say, "TRANSFER $0000100.00 TO ACCOUNT #199."  If an attacker can modify the message on the wire, and can guess the format of the unencrypted message, the attacker could be able to change the amount of the transaction, or the recipient of the funds, e.g.  "TRANSFER $0100000.00 TO ACCOUNT #227."</p>
<p>

On the other hand, some cryptosystems are malleable by design. In other words, in some circumstances it may be viewed as a feature that anyone can transform an encryption of <math>m</math> into a valid encryption of <math>f(m)</math>  (for some restricted class of functions <math>f</math>) without necessarily learning <math>m</math>. Such schemes are known as <link xlink:type="simple" xlink:href="../073/4939073.xml">
homomorphic encryption</link> schemes.</p>
<p>

A cryptosystem may be <link xlink:type="simple" xlink:href="../585/960585.xml">
semantically secure</link> against <link xlink:type="simple" xlink:href="../852/63852.xml">
chosen plaintext attack</link>s or even non-adaptive <link xlink:type="simple" xlink:href="../586/103586.xml">
chosen ciphertext attack</link>s (CCA1) while still being malleable. However, security against adaptive chosen ciphertext attacks (CCA2) is equivalent to non-malleability.</p>

<sec>
<st>
Example malleable cryptosystems</st>
<p>

In a <link xlink:type="simple" xlink:href="../007/49007.xml">
stream cipher</link>, the ciphertext is produced by taking the <link xlink:type="simple" xlink:href="../979/105979.xml">
exclusive or</link> of the plaintext and a <link xlink:type="simple" xlink:href="../210/23210.xml">
pseudorandom</link> stream based on a secret key <math>k</math>, as <math>E(m) = m \oplus S(k)</math>. An adversary can construct an encryption of <math>m \oplus t</math> for any <math>t</math>, as <math>E(m) \oplus t = m \oplus t \oplus S(k) = E(m \oplus t)</math>.</p>
<p>

In the <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> cryptosystem, a plaintext <math>m</math> is encrypted as <math>E(m) = m^e \bmod n</math>, where <math>(e,n)</math> is the public key. Given such a ciphertext, an adversary can construct an encryption of <math>mt</math> for any <math>t</math>, as <math>E(m) \cdot t^e \bmod n = (mt)^e \bmod n = E(mt)</math>. For this reason, RSA is commonly used together with padding methods such as <link xlink:type="simple" xlink:href="../249/1579249.xml">
OAEP</link> or PKCS1.</p>
<p>

In the <link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal</link> cryptosystem, a plaintext <math>m</math> is encrypted as <math>E(m) = (g^b, m A^b)</math>, where <math>(g,A)</math> is the public key. Given such a ciphertext <math>(c_1, c_2)</math>, an adversary can compute <math>(c_1, t \cdot c_2)</math>, which is a valid encryption of <math>tm</math>, for any <math>t</math>.
In contrast, the <link xlink:type="simple" xlink:href="../406/1564406.xml">
Cramer-Shoup system</link> (which is based on ElGamal) is not malleable.</p>
<p>

In the <link xlink:type="simple" xlink:href="../685/480685.xml">
Paillier</link>, <link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal</link>, and <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link> cryptosystems, it is also possible to combine <it>several</it> ciphertexts together in a useful way to produce a related ciphertext. In Paillier, given only the public-key and an encryption of <math>m_1</math> and <math>m_2</math>, one can compute a valid encryption of their sum <math>m_1+m_2</math>. In ElGamal and in RSA, one can combine encryptions of <math>m_1</math> and <math>m_2</math> to obtain a valid encryption of their product <math>m_1 m_2</math>.</p>

</sec>
</bdy>
</article>
