<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:48:19[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<condition  confidence="0.8" wordnetid="113920835">
<family  confidence="0.8" wordnetid="108078020">
<state  confidence="0.8" wordnetid="100024720">
<problem  confidence="0.8" wordnetid="114410605">
<difficulty  confidence="0.8" wordnetid="114408086">
<header>
<title>Set cover problem</title>
<id>870399</id>
<revision>
<id>231634412</id>
<timestamp>2008-08-13T07:25:22Z</timestamp>
<contributor>
<username>Moonriddengirl</username>
<id>4066002</id>
</contributor>
</revision>
<categories>
<category>NP-complete problems</category>
<category>Set families</category>
</categories>
</header>
<bdy>

The <b>set covering problem</b> is a classical question in <link xlink:type="simple" xlink:href="../323/5323.xml">
computer science</link> and <link xlink:type="simple" xlink:href="../132/6132.xml">
complexity theory</link>. As input you are given several sets. They may have some elements in common. You must select a minimum number of these sets so that the sets you have picked contain all the elements that are contained in any of the sets in the input. It was one of <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../564/2012564.xml">
Karp's 21 NP-complete problems</link></difficulty>
</problem>
</state>
</condition>
 shown to be <class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../466/39466.xml">
NP-complete</link></group>
</collection>
</class>
 in 1972.<p>

More formally, given a universe <math>\mathcal{U}</math> and a family <math>\mathcal{S}</math> of subsets of <math>\mathcal{U}</math>,
a <it>cover</it> is a subfamily <math>\mathcal{C}\subseteq\mathcal{S}</math> of sets whose union is <math>\mathcal{U}</math>. In the set covering <link xlink:type="simple" xlink:href="../336/8336.xml">
decision problem</link>, the input is a pair <math>(\mathcal{U},\mathcal{S})</math> and an integer <math>k</math>; the question is whether
there is a set covering of size <math>k</math> or less. In the set covering <link xlink:type="simple" xlink:href="../536/1126536.xml">
optimization problem</link>, the input is a pair <math>(\mathcal{U},\mathcal{S})</math>, and the task is to find a set covering which uses the fewest sets. </p>
<p>

The decision version of set covering is <link xlink:type="simple" xlink:href="../466/39466.xml">
NP complete</link>, and the optimization version of set cover is <link xlink:type="simple" xlink:href="../681/54681.xml">
NP hard</link>.</p>
<p>

Set covering is equivalent to the <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/4052189.xml">
Hitting set</link></difficulty>
</problem>
</state>
</condition>
 problem. It is easy to see this by observing that an instance of set covering can
be viewed as an arbitrary <link xlink:type="simple" xlink:href="../431/244431.xml">
bipartite graph</link>, with sets represented by vertices on the left, the universe represented by vertices on the
right, and edges representing the inclusion of elements in sets. The task is then to find a minimum cardinality subset of left-vertices which covers all of the right-vertices. In the Hitting set problem, the objective is to cover the left-vertices using a minimum subset of the right vertices. Converting from one problem to the other is therefore achieved by interchanging the two sets of vertices.</p>
<p>

The set covering problem can be seen as a finite version of the notion of <link xlink:type="simple" xlink:href="../042/6042.xml">
compactness</link> in <link xlink:type="simple" xlink:href="../954/29954.xml">
topology</link>, where the elements of certain infinite families of sets can be covered by choosing only finitely many of them.</p>

<ss1>
<st>
 Greedy algorithm </st>

<p>

The greedy algorithm for set covering chooses sets according to one rule: at each stage, choose the set which contains the largest number of uncovered elements. It can be shown that this algorithm achieves an approximation ratio of <math>H(s)</math>, where <math>s</math> is the size of the largest set and <math>H(n)</math> is the <math>n</math>-th <link xlink:type="simple" xlink:href="../729/214729.xml">
harmonic number</link>:</p>
<p>

<indent level="1">

<math> H(n) = \sum_{k=1}^{n} \frac{1}{k} \le \ln{n} +1</math>
</indent>

<image width="150px" src="SetCoverGreedy.gif" type="frame">
<caption>

Tight example for the greedy algorithm with k=3
</caption>
</image>

There is a standard example on which the greedy algorithm achieves an approximation ratio of <math>\log_2(n)/2</math>.
The universe consists of <math>n=2^{(k+1)}-2</math> elements. The set system consists of <math>k</math> pairwise disjoint sets 
<math>S_1,\ldots,S_k</math> with sizes <math>2,4,8,\ldots,2^k</math> respectively, as well as two additional disjoint sets <math>T_0,T_1</math>,
each of which contains half of the elements from each <math>S_i</math>. On this input, the greedy algorithm takes the sets
<math>S_k,\ldots,S_1</math>, in that order, while the optimal solution consists only of <math>T_0</math> and <math>T_1</math>.
An example of such an input for <math>k=3</math> is pictured on the right.</p>
<p>

Inapproximability results show that the greedy algorithm is essentially the best-possible polynomial time approximation algorithm for set cover
(see <condition wordnetid="113920835" confidence="0.8">
<family wordnetid="108078020" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../399/870399.xml#xpointer(//*[./st=%22Inapproximability+results%22])">
Inapproximability results</link></difficulty>
</problem>
</state>
</family>
</condition>
 below), under plausible complexity assumptions.</p>

</ss1>
<ss1>
<st>
 Low-frequency systems </st>

<p>

If each element occurs in at most <math>f</math> sets, then a solution can be found in polynomial time which approximates the
optimum to within a factor of <math>f</math>. The algorithm formulates the set covering instance as an <link>
integer program</link>, which is
relaxed to a <link xlink:type="simple" xlink:href="../730/43730.xml">
linear program</link>. The resulting linear program can be solved in polynomial time (e.g. using the <link xlink:type="simple" xlink:href="../203/4331203.xml">
Ellipsoid method</link>), and the solutions are rounded to obtain an approximate integral solution.</p>

</ss1>
<ss1>
<st>
 Inapproximability results </st>

<p>

Lund and Yannakakis (1994) showed that set covering cannot be approximated in polynomial time to within a factor of 
<math>(\log_2{n})/2\approx{}0.72\ln{n}</math>, unless <b>NP</b> has quasi-polynomial time algorithms. Feige (1998)
improved this lower bound to <math>(1-o(1))\cdot\ln{n}</math> under the same assumptions, which essentially matches
the approximation ratio achieved by the greedy algorithm. Raz and Safra established a lower bound
of <math>c\cdot\ln{n}</math>, where <math>c</math> is a constant, under the stronger assumption that <b>P</b><math>\not=</math><b>NP</b>.
A similar result with a higher value of <math>c</math> was recently proved by Alon, Moshkovitz, and Safra.</p>

</ss1>
<sec>
<st>
 Related problems </st>
<p>

<list>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../382/391382.xml">
Vertex cover</link></difficulty>
</problem>
</state>
</condition>
</entry>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../636/2017636.xml">
Set packing</link></difficulty>
</problem>
</state>
</condition>
</entry>
<entry level="1" type="bullet">

 <link>
Edge cover</link></entry>
<entry level="1" type="bullet">

 <condition wordnetid="113920835" confidence="0.8">
<state wordnetid="100024720" confidence="0.8">
<problem wordnetid="114410605" confidence="0.8">
<difficulty wordnetid="114408086" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/4052189.xml">
Hitting set</link></difficulty>
</problem>
</state>
</condition>
: dual problem of set cover</entry>
</list>
</p>

</sec>
<sec>
<st>
 References </st>

<p>

<list>
<entry level="1" type="bullet">

 <person wordnetid="100007846" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../651/4939651.xml">
Noga Alon</link></person>
, <link>
Dana Moshkovitz</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../029/15875029.xml">
Muli Safra</link></scientist>
. <it>Algorithmic construction of sets for k-restrictions</it>. ACM Transactions on Algorithms (TALG), v.2 n.2, p.153-177, April 2006.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../475/4108475.xml">
Thomas H. Cormen</link></scientist>
, <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../884/1400884.xml">
Charles E. Leiserson</link></scientist>
, <link xlink:type="simple" xlink:href="../057/68057.xml">
Ronald L. Rivest</link>, and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../993/3489993.xml">
Clifford Stein</link></scientist>
. <it><work wordnetid="104599396" confidence="0.8">
<product wordnetid="104007894" confidence="0.8">
<creation wordnetid="103129123" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<book wordnetid="106410904" confidence="0.8">
<publication wordnetid="106589574" confidence="0.8">
<link xlink:type="simple" xlink:href="../226/3499226.xml">
Introduction to Algorithms</link></publication>
</book>
</artifact>
</creation>
</product>
</work>
</it>, Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Section 35.3, The set-covering problem, pp.1033&ndash;1038.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Uriel Feige</link>. <it>A Threshold of ln <math>n</math> for Approximating Set Cover</it>. Journal of the ACM (JACM), v.45 n.4, p.634 - 652, July 1998.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Carsten Lund</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<honoree wordnetid="110183757" confidence="0.8">
<laureate wordnetid="110249011" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<acquirer wordnetid="109764201" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<recipient wordnetid="109627906" confidence="0.8">
<link xlink:type="simple" xlink:href="../467/14970467.xml">
Mihalis Yannakakis</link></recipient>
</scientist>
</acquirer>
</causal_agent>
</laureate>
</honoree>
</person>
</physical_entity>
. <it>On the hardness of approximating minimization problems</it>. Journal of the ACM (JACM), v.41 n.5, p.960-981, Sept. 1994</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 <link>
Ran Raz</link> and <scientist wordnetid="110560637" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../029/15875029.xml">
Muli Safra</link></scientist>
. <it>A sub-constant error-probability low-degree test, and a sub-constant error-probability PCP characterization of NP</it>. Proceedings of STOC 1997, pp. 475-484, 1997.</entry>
</list>
</p>

</sec>
<sec>
<st>
 External links </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.nlsde.buaa.edu.cn/~kexu/benchmarks/set-benchmarks.htm">
Benchmarks with Hidden Optimum Solutions for Set Covering, Set Packing and Winner Determination</weblink></entry>
</list>
</p>


</sec>
</bdy>
</difficulty>
</problem>
</state>
</family>
</condition>
</article>
