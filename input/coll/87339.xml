<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:53:02[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<event  confidence="0.8" wordnetid="100029378">
<rule  confidence="0.8" wordnetid="105846932">
<act  confidence="0.8" wordnetid="100030358">
<psychological_feature  confidence="0.8" wordnetid="100023100">
<procedure  confidence="0.8" wordnetid="101023820">
<activity  confidence="0.8" wordnetid="100407535">
<algorithm  confidence="0.8" wordnetid="105847438">
<header>
<title>Naive Bayes classifier</title>
<id>87339</id>
<revision>
<id>244403416</id>
<timestamp>2008-10-10T17:06:14Z</timestamp>
<contributor>
<username>Merphant</username>
<id>1926</id>
</contributor>
</revision>
<categories>
<category>Statistical classification</category>
<category>Bayesian statistics</category>
<category>Classification algorithms</category>
</categories>
</header>
<bdy>

A <b>naive Bayes classifier</b> is a simple probabilistic <link xlink:type="simple" xlink:href="../224/1579224.xml">
classifier</link> based on applying <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../569/49569.xml">
Bayes' theorem</link></proposition>
</theorem>
</message>
</statement>
 with strong (naive) <link xlink:type="simple" xlink:href="../593/27593.xml">
independence</link> assumptions. A more descriptive term for the underlying probability model would be "<link xlink:type="simple" xlink:href="../593/27593.xml">
independent</link> feature model".<p>

In simple terms, a naive Bayes classifier assumes that the presence (or absence) of a particular feature of a class is unrelated to the presence (or absence) of any other feature. For example, a fruit may be considered to be an apple if it is red, round, and about 4" in diameter.  Even though these features depend on the existence of the other features, a naive Bayes classifier considers all of these properties to independently contribute to the probability that this fruit is an apple.  </p>
<p>

Depending on the precise nature of the probability model, naive Bayes classifiers can be trained very efficiently in a <link xlink:type="simple" xlink:href="../926/20926.xml">
supervised learning</link> setting.  In many practical applications, parameter estimation for naive Bayes models uses the method  of <link xlink:type="simple" xlink:href="../806/140806.xml">
maximum likelihood</link>; in other words, one can work with the naive Bayes model without believing in <representation wordnetid="105926676" confidence="0.8">
<interpretation wordnetid="105928513" confidence="0.8">
<link xlink:type="simple" xlink:href="../890/4890.xml">
Bayesian probability</link></interpretation>
</representation>
 or using any Bayesian methods.</p>
<p>

In spite of their naive design and apparently over-simplified assumptions, naive Bayes classifiers often work much better in many complex real-world situations than one might expect. Recently, careful analysis of the Bayesian classification problem has shown that there are some theoretical reasons for the apparently unreasonable <link xlink:type="simple" xlink:href="../469/896469.xml">
efficacy</link> of naive Bayes classifiers (<weblink xlink:type="simple" xlink:href="http://www.cs.unb.ca/profs/hzhang/publications/FLAIRS04ZhangH.pdf">
Zhang04</weblink>). An advantage of the naive Bayes classifier is that it requires a small amount of training data to estimate the parameters (means and variances of the variables) necessary for classification. Because independent variables are assumed, only the variances of the variables for each class need to be determined and not the entire covariance matrix. </p>

<sec>
<st>
 The naive Bayes probabilistic model </st>

<p>

Abstractly, the probability model for a classifier is a conditional model</p>
<p>

<indent level="1">

<math>p(C \vert F_1,\dots,F_n)\,</math>
</indent>

over a dependent class variable <math>C</math> with a small number of outcomes or <it>classes</it>, conditional on several feature variables <math>F_1</math> through <math>F_n</math>.  The problem is that if the number of features <math>n</math> is large or when a feature can take on a large number of values, then basing such a model on probability tables is infeasible.  We therefore reformulate the model to make it more tractable.</p>
<p>

Using <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../569/49569.xml">
Bayes' theorem</link></proposition>
</theorem>
</message>
</statement>
, we write</p>
<p>

<indent level="1">

<math>p(C \vert F_1,\dots,F_n) = \frac{p(C) \ p(F_1,\dots,F_n\vert C)}{p(F_1,\dots,F_n)}. \,</math>
</indent>

In plain English the above equation can be written as
<indent level="1">

<math>\mbox{posterior} = \frac{\mbox{prior} \times \mbox{likelihood}}{\mbox{evidence}}. \,</math>
</indent>

In practice we are only interested in the numerator of that fraction, since the denominator does not depend on <math>C</math> and the values of the features <math>F_i</math> are given, so that the denominator is effectively constant.
The numerator is equivalent to the <link xlink:type="simple" xlink:href="../637/879637.xml">
joint probability</link> model</p>
<p>

<indent level="1">

<math>p(C, F_1, \dots, F_n)\,</math>
</indent>

which can be rewritten as follows, using repeated applications of the definition of <link xlink:type="simple" xlink:href="../791/5791.xml">
conditional probability</link>:</p>
<p>

<indent level="1">

<math>p(C, F_1, \dots, F_n)\,</math>
</indent>

<indent level="2">

<math>= p(C) \ p(F_1,\dots,F_n\vert C)</math>
</indent>

<indent level="2">

<math>= p(C) \ p(F_1\vert C) \ p(F_2,\dots,F_n\vert C, F_1)</math>
</indent>

<indent level="2">

<math>= p(C) \ p(F_1\vert C) \ p(F_2\vert C, F_1) \ p(F_3,\dots,F_n\vert C, F_1, F_2)</math>
</indent>

<indent level="2">

<math>= p(C) \ p(F_1\vert C) \ p(F_2\vert C, F_1) \ p(F_3\vert C, F_1, F_2) \ p(F_4,\dots,F_n\vert C, F_1, F_2, F_3)</math>
</indent>

<indent level="2">

<math>= p(C) \ p(F_1\vert C) \ p(F_2\vert C, F_1) \ p(F_3\vert C, F_1, F_2) \ \dots p(F_n\vert C, F_1, F_2, F_3,\dots,F_{n-1})</math>
</indent>

and so forth.  Now the "naive" <link xlink:type="simple" xlink:href="../135/801135.xml">
conditional independence</link> assumptions come into play: assume that each feature <math>F_i</math> is conditionally <link xlink:type="simple" xlink:href="../593/27593.xml">
independent</link> of every other feature <math>F_j</math> for <math>j\neq i</math>.  This means that</p>
<p>

<indent level="1">

<math>p(F_i \vert C, F_j) = p(F_i \vert C)\,</math>
</indent>

and so the joint model can be expressed as</p>
<p>

<indent level="1">

<math>p(C, F_1, \dots, F_n)
= p(C) \ p(F_1\vert C) \ p(F_2\vert C) \ p(F_3\vert C) \ \cdots\,</math>
</indent>

<indent level="1">

<math>= p(C) \prod_{i=1}^n p(F_i \vert C).\,</math>
</indent>

This means that under the above independence assumptions, the conditional distribution over the class variable <math>C</math> can be expressed like this:</p>
<p>

<indent level="1">

<math>p(C \vert F_1,\dots,F_n) = \frac{1}{Z}  p(C) \prod_{i=1}^n p(F_i \vert C)</math>
</indent>

where <math>Z</math> is a scaling factor dependent only on <math>F_1,\dots,F_n</math>, i.e., a constant if the values of the feature variables are known.</p>
<p>

Models of this form are much more manageable, since they factor into a so-called <it>class prior</it> <math>p(C)</math> and independent probability distributions <math>p(F_i\vert C)</math>.  If there are <math>k</math> classes and if a model for <math>p(F_i)</math> can be expressed in terms of <math>r</math> parameters, then the corresponding naive Bayes model has (<it>k</it> &amp;minus; 1) + <it>n</it> <it>r</it> <it>k</it> parameters.  In practice, often <math>k=2</math> (binary classification) and <math>r=1</math> (<structure wordnetid="105726345" confidence="0.8">
<arrangement wordnetid="105726596" confidence="0.8">
<distribution wordnetid="105729036" confidence="0.8">
<link xlink:type="simple" xlink:href="../189/199189.xml">
Bernoulli variables</link></distribution>
</arrangement>
</structure>
 as features) are common, and so the total number of parameters of the naive Bayes model is <math>2n+1</math>, where <math>n</math> is the number of binary features used for prediction.</p>

</sec>
<sec>
<st>
 Parameter estimation </st>

<p>

All model parameters (<it>i.e.</it>, class priors and feature probability distributions) can be approximated with relative frequencies from the training set. These are maximum likelihood estimates of the probabilities. Non-discrete features need to be <link xlink:type="simple" xlink:href="../017/330017.xml">
discretized</link> first. Discretization can be <link>
unsupervised</link> (ad-hoc selection of bins) or <link>
supervised</link> (binning guided by information in training data).</p>
<p>

If a given class and feature value never occur together in the training set then the frequency-based probability estimate will be zero. This is problematic since it will wipe out all information in the other probabilities when they are multiplied. It is therefore often desirable to incorporate a small-sample correction in all probability estimates such that <link xlink:type="simple" xlink:href="../598/2045598.xml">
no probability is ever set to be exactly zero</link>.</p>

</sec>
<sec>
<st>
 Constructing a classifier from the probability model </st>

<p>

The discussion so far has derived the independent feature model, that is, the naive Bayes <link>
probability model</link>.  The naive Bayes <link xlink:type="simple" xlink:href="../543/1508543.xml">
classifier</link> combines this model with a <link>
decision rule</link>.  One common rule is to pick the hypothesis that is most probable; this is known as the <it><link xlink:type="simple" xlink:href="../433/1792433.xml">
maximum a posteriori</link></it> or <it>MAP</it> decision rule.  The corresponding classifier is the function <math>\mathrm{classify}</math> defined as follows:</p>
<p>

<indent level="1">

<math>\mathrm{classify}(f_1,\dots,f_n) = \mathop{\mathrm{argmax}}_c \ p(C=c) \prod_{i=1}^n p(F_i=f_i\vert C=c).</math>
</indent>

</p>
</sec>
<sec>
<st>
 Discussion </st>

<p>

One should notice that the independence assumption may lead to some unexpected results in the calculation of posteriori probability. In some circumstances when there is a dependency between observations, the above-mentioned probability may contradict with the second axiom of probability by which any probability must be less than or equal to one.</p>
<p>

Despite the fact that the far-reaching independence assumptions are often inaccurate, the naive Bayes classifier has several properties that make it surprisingly useful in practice. In particular, the decoupling of the class conditional feature distributions means that each distribution can be independently estimated as a one dimensional distribution. This in turn helps to alleviate problems stemming from the <link xlink:type="simple" xlink:href="../776/787776.xml">
curse of dimensionality</link>, such as the need for data sets that scale exponentially with the number of features. Like all probabilistic classifiers under the MAP decision rule, it arrives at the correct classification as long as the correct class is more probable than any other class; hence class probabilities do not have to be estimated very well. In other words, the overall classifier is robust enough to ignore serious deficiencies in its underlying naive probability model. Other reasons for the observed success of the naive Bayes classifier are discussed in the literature cited below.</p>

</sec>
<sec>
<st>
 Example: document classification </st>

<p>

Here is a worked example of naive Bayesian classification to the <link xlink:type="simple" xlink:href="../441/1331441.xml">
document classification</link> problem.
Consider the problem of classifying documents by their content, for example into <link xlink:type="simple" xlink:href="../368/28368.xml">
spam</link> and non-spam <link xlink:type="simple" xlink:href="../738/9738.xml">
E-mail</link>s. Imagine that documents are drawn from a number of classes of documents which can be modelled as sets of words where the (independent) probability that the i-th word of a given document occurs in a document from class <it>C</it> can be written as </p>
<p>

<indent level="1">

<math>p(w_i \vert C)\,</math>
</indent>

(For this treatment, we simplify things further by assuming that the probability of a word in a document is independent of the length of a document, or that all documents are of the same length.)</p>
<p>

Then the probability of a given document <it>D</it>, given a class <it>C</it>, is</p>
<p>

<indent level="1">

<math>p(D\vert C)=\prod_i p(w_i \vert C)\,</math>
</indent>

The question that we desire to answer is: "what is the probability that a given document <it>D</it> belongs to a given class <it>C</it>?" In other words, what is <math>p(C \vert D)\,</math>?</p>
<p>

Now, by their definition, (see <link>
Probability axiom</link>)</p>
<p>

<indent level="1">

<math>p(D\vert C)={p(D\cap C)\over p(C)}</math>
</indent>

and </p>
<p>

<indent level="1">

<math>p(C\vert D)={p(D\cap C)\over p(D)}</math>
</indent>

Bayes' theorem manipulates these into a statement of probability in terms of <link xlink:type="simple" xlink:href="../968/44968.xml">
likelihood</link>.</p>
<p>

<indent level="1">

<math>p(C\vert D)={p(C)\over p(D)}\,p(D\vert C)</math>
</indent>

Assume for the moment that there are only two classes, <it>S</it> and &amp;not;<it>S</it> (e.g. spam and not spam). </p>
<p>

<indent level="1">

<math>p(D\vert S)=\prod_i p(w_i \vert S)\,</math>
</indent>

and</p>
<p>

<indent level="1">

<math>p(D\vert\neg S)=\prod_i p(w_i\vert\neg S)\,</math>
</indent>

Using the Bayesian result above, we can write:</p>
<p>

<indent level="1">

<math>p(S\vert D)={p(S)\over p(D)}\,\prod_i p(w_i \vert S)</math>
</indent>

<indent level="1">

<math>p(\neg S\vert D)={p(\neg S)\over p(D)}\,\prod_i p(w_i \vert\neg S)</math>
</indent>

Dividing one by the other gives:</p>
<p>

<indent level="1">

<math>{p(S\vert D)\over p(\neg S\vert D)}={p(S)\,\prod_i p(w_i \vert S)\over p(\neg S)\,\prod_i p(w_i \vert\neg S)}</math>
</indent>

Which can be re-factored as:</p>
<p>

<indent level="1">

<math>{p(S\vert D)\over p(\neg S\vert D)}={p(S)\over p(\neg S)}\,\prod_i {p(w_i \vert S)\over p(w_i \vert\neg S)}</math>
</indent>

Thus, the probability ratio p(<it>S</it> | <it>D</it>) / p(&amp;not;<it>S</it> | <it>D</it>) can be expressed in terms of a series of <link xlink:type="simple" xlink:href="../035/45035.xml">
likelihood ratio</link>s. 
The actual probability p(<it>S</it> | <it>D</it>) can be easily computed from log (p(<it>S</it> | <it>D</it>) / p(&amp;not;<it>S</it> | <it>D</it>)) based on the observation that p(<it>S</it> | <it>D</it>) + p(&amp;not;<it>S</it> | <it>D</it>) = 1. </p>
<p>

Taking the <link xlink:type="simple" xlink:href="../860/17860.xml">
logarithm</link> of all these ratios, we have:</p>
<p>

<indent level="1">

<math>\ln{p(S\vert D)\over p(\neg S\vert D)}=\ln{p(S)\over p(\neg S)}+\sum_i \ln{p(w_i\vert S)\over p(w_i\vert\neg S)}</math>
</indent>

(This technique of "<link>
log-likelihood ratio</link>s" is a common technique in statistics.
In the case of two mutually exclusive alternatives (such as this example), the conversion of a log-likelihood ratio to a probability takes the form of a <link xlink:type="simple" xlink:href="../210/87210.xml">
sigmoid curve</link>: see <link xlink:type="simple" xlink:href="../068/172068.xml">
logit</link> for details.)</p>
<p>

Finally, the document can be classified as follows.  It is spam if <math>\ln{p(S\vert D)\over p(\neg S\vert D)} &amp;gt; 0</math>, otherwise it is not spam.</p>

</sec>
<sec>
<st>
 See also </st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../929/515929.xml">
Bayesian spam filtering</link></entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../996/203996.xml">
Bayesian network</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <link>
Random Naive Bayes</link></entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../974/98974.xml">
Linear classifier</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../571/49571.xml">
Bayesian inference</link> (esp. as Bayesian techniques relate to <link xlink:type="simple" xlink:href="../847/459847.xml">
spam</link>)</entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../500/90500.xml">
Boosting</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../180/49180.xml">
Fuzzy logic</link></entry>
<entry level="1" type="bullet">

 <information wordnetid="105816287" confidence="0.8">
<datum wordnetid="105816622" confidence="0.8">
<link xlink:type="simple" xlink:href="../631/226631.xml">
Logistic regression</link></datum>
</information>
</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../542/1729542.xml">
Neural network</link>s</entry>
<entry level="1" type="bullet">

 <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../563/4141563.xml">
Predictive analytics</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
</entry>
<entry level="1" type="bullet">

 <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../777/172777.xml">
Perceptron</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</entry>
<entry level="1" type="bullet">

 <know-how wordnetid="105616786" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../309/65309.xml">
Support vector machine</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</method>
</rule>
</event>
</know-how>
</entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

 Domingos, Pedro &amp; Michael Pazzani (1997) "On the optimality of the simple Bayesian classifier under zero-one loss". <it>Machine Learning</it>, 29:103–­137. <it>(also online at <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/">
CiteSeer</weblink>: <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/domingos97optimality.html">
http://citeseer.ist.psu.edu/domingos97optimality.html</weblink>)''</it></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Rish, Irina. (2001). "An empirical study of the naive Bayes classifier". IJCAI 2001 Workshop on Empirical Methods in Artificial Intelligence. <it>(available online: <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/people/r/rish/papers/RC22230.pdf">
PDF</weblink>, <weblink xlink:type="simple" xlink:href="http://www.research.ibm.com/people/r/rish/papers/ijcai-ws.ps">
PostScript</weblink>)''</it></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Hand, DJ, &amp; Yu, K. (2001). "Idiot's Bayes - not so stupid after all?" International Statistical Review.  Vol 69 part 3, pages 385-399. ISSN 0306-7734.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Mozina M, Demsar J, Kattan M, &amp; Zupan B. (2004). "Nomograms for Visualization of Naive Bayesian Classifier". In Proc. of PKDD-2004, pages 337-348. <it>(available online: <weblink xlink:type="simple" xlink:href="http://www.ailab.si/blaz/papers/2004-PKDD.pdf">
PDF</weblink>)''</it></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Maron, M. E. (1961). "Automatic Indexing: An Experimental Inquiry." Journal of the ACM (JACM) 8(3):404–417. <it>(available online: <weblink xlink:type="simple" xlink:href="http://delivery.acm.org/10.1145/330000/321084/p404-maron.pdf?key1=321084&amp;key2=9636178211&amp;coll=GUIDE&amp;dl=ACM&amp;CFID=56729577&amp;CFTOKEN=37855803">
PDF</weblink>)''</it></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Minsky, M. (1961). "Steps toward Artificial Intelligence." Proceedings of the IRE 49(1):8-30.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 McCallum, A. and Nigam K.  "A Comparison of Event Models for Naive Bayes Text Classification".  In AAAI/ICML-98 Workshop on Learning for Text Categorization, pp. 41-48. Technical Report WS-98-05. AAAI Press. 1998.  <it>(available online: <weblink xlink:type="simple" xlink:href="http://www.kamalnigam.com/papers/multinomial-aaaiws98.pdf">
PDF</weblink>)''</it></entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Harry Zhang "The Optimality of Naive Bayes". (available online: <weblink xlink:type="simple" xlink:href="http://www.cs.unb.ca/profs/hzhang/publications/FLAIRS04ZhangH.pdf">
PDF</weblink>)''</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 S.Kotsiantis, P. Pintelas, Increasing the Classification Accuracy of Simple Bayesian Classifier, Lecture Notes in Artificial Intelligence,  AIMSA 2004, Springer-Verlag Vol 3192, pp. 198-207, 2004 (http://www.math.upatras.gr/~esdlab/en/members/kotsiantis/improvingNB.pdf)</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 S. Kotsiantis, P. Pintelas, Logitboost of Simple Bayesian Classifier, Computational Intelligence in Data mining Special Issue of the Informatica Journal, Vol 29 (1), pp. 53-59, 2005 (http://www.math.upatras.gr/~esdlab/en/members/kotsiantis/05_Kotsiantis-Logitboost%20of%20simble%20bayesian..._No%205.pdf)</entry>
</list>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/30545.html">
Naive Bayesian learning</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.biomedcentral.com/1471-2105/7/514">
Hierarchical Naive Bayes Classifiers for uncertain data</weblink> (an extension of the Naive Bayes classifier).</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.convo.co.uk/x02/">
Online application of a Naive Bayes classifier</weblink> (emotion modelling), with a full explanation.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.bayesnews.xpg.com.br/">
BayesNews - Bayesian RSS Reader</weblink> (useful for personal news clipping).</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="definition">

Software</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://paul.luminos.nl/documents/show_document.php?d=198">
Naive Bayes implementation in Visual Basic</weblink> (includes executable and source code).</entry>
<entry level="1" type="bullet">

 An interactive <software wordnetid="106566077" confidence="0.9508927676800064">
<format wordnetid="106636806" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../268/20268.xml">
Microsoft Excel</link></format>
</software>
 spreadsheet <weblink xlink:type="simple" xlink:href="http://downloads.sourceforge.net/naivebayesclass/NaiveBayesDemo.xls?use_mirror=osdn">
Naive Bayes implementation</weblink> using <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../778/32778.xml">
VBA</link></programming_language>
 (requires enabled macros) with viewable source code.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://jbnc.sourceforge.net/">
jBNC - Bayesian Network Classifier Toolbox</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://popfile.sourceforge.net/">
POPFile </weblink> Perl-based email proxy system classifies email into user-defined "buckets", including spam.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://cmp.felk.cvut.cz/cmp/software/stprtool/">
Statistical Pattern Recognition Toolbox for Matlab</weblink>.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.lwebzem.com/cgi-bin/res/naive_bayes_tm_classifier.cgi">
Document Classification Using Naive Bayes Classifier with Perl</weblink>.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.sux0r.org">
sux0r</weblink> An <link xlink:type="simple" xlink:href="../758/18938758.xml">
Open Source</link> <link xlink:type="simple" xlink:href="../885/75885.xml">
Content management system</link> with a focus on Naive Bayesian categorization and probabilistic content.</entry>
</list>
</p>


</sec>
</bdy>
</algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
</article>
