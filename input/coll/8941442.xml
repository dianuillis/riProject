<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:37:59[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Beginthread</title>
<id>8941442</id>
<revision>
<id>209570186</id>
<timestamp>2008-05-01T22:56:08Z</timestamp>
<contributor>
<username>Oldneuro</username>
<id>1470175</id>
</contributor>
</revision>
<categories>
<category>Threads</category>
<category>Process.h</category>
</categories>
</header>
<bdy>

In the <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C programming language</link></programming_language>
, the beginthread function is <link xlink:type="simple" xlink:href="../406/4329406.xml">
declared</link> in <link xlink:type="simple" xlink:href="../344/6872344.xml">
process.h</link> <link xlink:type="simple" xlink:href="../847/77847.xml">
header file</link>.<p>

This function creates a new <link xlink:type="simple" xlink:href="../303/45303.xml">
thread of execution</link> within the current process. </p>

<sec>
<st>
Prototype</st>
<p>

<indent level="1">

unsigned long _beginthread(void(* Func)(void*), unsigned Stack_size, void *Arg); 
</indent>

</p>
<ss1>
<st>
Func</st>
<p>

Thread execution starts at the beginning of the function func. To terminate the thread correctly, func must call <link xlink:type="simple" xlink:href="#xpointer(//*[./st=%22_endthread%22])">
_endthread</link>, freeing memory allocated by the run time library to support the thread.</p>

</ss1>
<ss1>
<st>
Stack_size</st>
<p>

The operating system allocates a stack for the thread containing the number of bytes specified by stack_size. If the value of stack_size is zero, the operating system creates a stack the same size as that of the main thread.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>

</ss1>
<ss1>
<st>
Arg</st>
<p>

The operating system passes Arg to Func when execution begins. Arg can be any 32-bit value cast to void*.</p>

</ss1>
</sec>
<sec>
<st>
Return value</st>
<p>

Returns the operating system handle of the newly created thread. If unsuccessful, the function returns -1 and sets <link xlink:type="simple" xlink:href="../660/412660.xml">
errno</link>.</p>

<ss1>
<st>
Compiler switches</st>
<p>

To compile a program using multiple threads with the Microsoft C/C++ Compiler, you must specify the /MT switch (or /MTd, for debug programs).</p>

</ss1>
</sec>
<sec>
<st>
References</st>
<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://msdn2.microsoft.com/en-gb/library/kdzttdcb(VS.80).aspx">
MSDN _beginthread</weblink></entry>
</reflist>
</p>

</sec>
</bdy>
</article>
