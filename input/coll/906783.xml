<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 17:52:08[mciao0828] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Constructible function</title>
<id>906783</id>
<revision>
<id>105208273</id>
<timestamp>2007-02-02T23:10:45Z</timestamp>
<contributor>
<username>DIDouglass</username>
<id>656202</id>
</contributor>
</revision>
<categories>
<category>Computational complexity theory</category>
</categories>
</header>
<bdy>

In <link xlink:type="simple" xlink:href="../132/6132.xml">
complexity theory</link>, a <b>time-constructible function</b> is a function <it>f</it> from <link xlink:type="simple" xlink:href="../474/21474.xml">
natural numbers</link> to natural numbers with the property that <it>f</it>(<it>n</it>) can be constructed from <it>n</it> by a <invention wordnetid="105633385" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../403/30403.xml">
Turing machine</link></method>
</know-how>
</invention>
 in the time of order <it>f</it>(<it>n</it>).<p>

There are two different definitions of a time-constructible function. In the first definition, a function is called time-constructible if there exists a Turing machine <it>M</it> which, given a string 1<it>n</it> consisting of <it>n</it> ones, stops after exactly <it>f</it>(<it>n</it>) steps. In the second definition, <it>f</it> is called time-constructible, if there exists a Turing machine <it>M</it> which, given a string 1<it>n</it>, outputs the binary representation of <it>f</it>(<it>n</it>) in <it><link xlink:type="simple" xlink:href="../578/44578.xml">
O</link></it>(<it>f</it>(<it>n</it>)) time (a unary representation may be used instead, since the two can be interconverted in <it>O</it>(<it>f</it>(<it>n</it>)) time).  The second definition is slightly more general but, for most applications, either definition can be used.</p>
<p>

Similarly <it>f</it> is <b>space-constructible</b> if there is a Turing machine that halts after using exactly <it>f</it>(<it>n</it>) cells. Equivalently, it is space-constructible if there exists a Turing machine <it>M</it> which outputs the binary (or unary) representation of <it>f</it>(<it>n</it>), while using only <it><link xlink:type="simple" xlink:href="../578/44578.xml">
O</link></it>(<it>f</it>(<it>n</it>)) space.</p>
<p>

All the commonly used functions <it>f</it>(<it>n</it>) (such as <it>n</it>, <it>nk</it>, 2<it>n</it>) are time-constructible and space-constructible, as long as <it>f</it>(<it>n</it>) is at least <it>cn</it> for a constant <it>c</it> &amp;gt; 0. No function which is <it><link xlink:type="simple" xlink:href="../578/44578.xml">
o</link></it>(<it>n</it>) can be time-constructible unless it is eventually constant, since there is insufficient time to read the entire input. However, <it>log</it>(<it>n</it>) is a space-constructible function.</p>
<p>

Time-constructible functions are used in complexity theory results such as the <link xlink:type="simple" xlink:href="../120/184120.xml">
time hierarchy theorem</link>. They are important because the time hierarchy theorem relies on Turing machines that must determine in <it><link xlink:type="simple" xlink:href="../578/44578.xml">
O</link></it>(<it>f</it>(<it>n</it>)) time whether an algorithm has taken more than <it>f</it>(<it>n</it>) steps.  This is, of course, impossible without being able to calculate <it>f</it>(<it>n</it>) in that time.  Such results are typically true for all natural functions <it>f</it> but not necessarily true for artificially constructed <it>f</it>. To formulate them precisely, it is necessary to have a precise definition for <it>a natural function f</it> for which the theorem is true. Time-constructible functions are often used to provide such definition.</p>
<p>

Space-constructible functions are used similarly, for example in the <link xlink:type="simple" xlink:href="../050/663050.xml">
space hierarchy theorem</link>.</p>
<p>

<it>This article incorporates material from  on <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../623/161623.xml">
PlanetMath</link></web_site>
, which is licensed under the .</it>
</p>
</bdy>
</article>
