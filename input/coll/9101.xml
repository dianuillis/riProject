<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:24:34[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<header>
<title>Device driver</title>
<id>9101</id>
<revision>
<id>242209871</id>
<timestamp>2008-10-01T09:57:41Z</timestamp>
<contributor>
<username>Knownot</username>
<id>7507082</id>
</contributor>
</revision>
<categories>
<category>Digital electronics</category>
<category>Articles to be expanded since June 2008</category>
<category>Motherboard</category>
<category>All articles to be expanded</category>
<category>Operating system technology</category>
<category>Computer buses</category>
<category>Device drivers</category>
</categories>
</header>
<bdy>

In computing, a <b>device driver</b> or <b>software driver</b> is a <link xlink:type="simple" xlink:href="../783/5783.xml">
computer program</link> allowing higher-level computer programs to interact with a <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link> device.<p>

A driver typically communicates with the device through the <link xlink:type="simple" xlink:href="../631/6631.xml">
computer bus</link> or communications subsystem to which the hardware is connected. When a calling program invokes a <link xlink:type="simple" xlink:href="../988/40988.xml">
routine</link> in the driver, the driver issues commands to the device. Once the device sends data back to the driver, the driver may invoke routines in the original calling program. Drivers are hardware-dependent and <link xlink:type="simple" xlink:href="../194/22194.xml">
operating-system</link>-specific. They usually provide the <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link> handling required for any necessary asynchronous time-dependent hardware interface.</p>

<sec>
<st>
Purpose</st>
<p>

A device driver simplifies programming by acting as a translator between a device and the applications or <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s that use it.  The higher-level code can be written independently of whatever specific hardware device it may control.   Every version of a device, such as a <link xlink:type="simple" xlink:href="../272/5272.xml">
printer</link>, requires its own specialized commands. In contrast, most applications access devices (such as sending a file to a printer) by using high-level, generic commands, such as PRINTLN.  The driver accepts these generic statements and converts them into the low-level commands required by the device.</p>

</sec>
<sec>
<st>
Design</st>

<p>

Device drivers can be abstracted into logical and physical layers. Logical layers process data for a class of devices such as ethernet ports or disk drives. Physical layers communicate with specific device instances. For example, a serial port needs to handle standard communication protocols such as <link>
 XON/XOFF</link> that are common for all serial port hardware. This would be managed by a serial port logical layer. However, the logical layer needs to communicate with a particular serial port chip. <link xlink:type="simple" xlink:href="../219/35219.xml">
16550 UART</link> hardware differs from PL-011. The physical layer addresses these chip-specific variations. Conventionally, OS requests go to the logical layer first. In turn, the logical layer calls upon the physical layer to implement OS requests in terms understandable by the hardware. Inversely, when a hardware device needs to respond to the OS, it uses the physical layer to speak to the logical layer.</p>
<p>

In <link xlink:type="simple" xlink:href="../510/18510.xml">
Linux</link>, device drivers can be built either as parts of the kernel or separately as loadable <link xlink:type="simple" xlink:href="../658/371658.xml">
module</link>s. <link>
Makedev</link> includes a list of the devices in Linux: ttyS (terminal), lp (<link xlink:type="simple" xlink:href="../616/100616.xml">
parallel port</link>), hd (disk), loop (<link xlink:type="simple" xlink:href="../138/3864138.xml">
loopback disk device</link>), sound  (these include <link xlink:type="simple" xlink:href="../371/41371.xml">
mixer</link>, <link xlink:type="simple" xlink:href="../291/28291.xml">
sequencer</link>, <link xlink:type="simple" xlink:href="../020/44020.xml">
dsp</link>, and audio)...  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref></p>
<p>

The <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link> .sys files and Linux .ko modules are loadable device drivers. The advantage of loadable device drivers is that they can be loaded only when necessary and then unloaded, thus saving <link>
kernel memory</link>.</p>

</sec>
<sec>
<st>
Development</st>
<p>

Writing a device driver requires an in-depth understanding of how the hardware and the software of a given <link xlink:type="simple" xlink:href="../196/81196.xml">
platform</link> function.  Drivers "...operate in a highly privileged environment and can cause disaster if they get things wrong..."  <ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> In contrast, most user-level software on modern <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link>s can be stopped without greatly affecting the rest of the system.  Even drivers executing in <link xlink:type="simple" xlink:href="../467/93467.xml">
user mode</link> can crash a system if the device is erroneously programmed. These factors make it more difficult and dangerous to diagnose problems.</p>
<p>

Thus drivers are usually written by <link xlink:type="simple" xlink:href="../010/27010.xml">
software engineer</link>s who come from the companies that develop the hardware. This is because they have better information than most outsiders about the design of their hardware. Moreover, it was traditionally considered in the hardware <link xlink:type="simple" xlink:href="../104/63104.xml">
manufacturer</link>'s interest to guarantee that their clients can use their hardware in an optimum way. Typically, the <it>logical device driver</it> (LDD) is written by the operating system vendor, while the <it>physical device driver</it> (PDD) is implemented by the device vendor. But in recent years non-vendors have written numerous device drivers, mainly for use with <link xlink:type="simple" xlink:href="../635/10635.xml">
free operating systems</link>. In such cases, it is important that the hardware manufacturer provides information on how the device communicates.  Although this information can instead be learned by <link xlink:type="simple" xlink:href="../488/18935488.xml">
reverse engineering</link>, this is much more difficult with hardware than it is with software.</p>
<p>

Microsoft has attempted to reduce system instability due to poorly written device drivers by creating a new framework for driver development, called <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../667/3669667.xml">
Windows Driver Foundation</link></software>
 (WDF).  This includes <link xlink:type="simple" xlink:href="../572/4211572.xml">
User-Mode Driver Framework</link> (UMDF) that encourages development of certain types of drivers - primarily those that implement a <link xlink:type="simple" xlink:href="../867/1324867.xml">
message-based protocol</link> for communicating with their devices - as user mode drivers.  If such drivers malfunction, they do not cause system instability.  The <link xlink:type="simple" xlink:href="../476/3669476.xml">
Kernel-Mode Driver Framework</link> (KMDF) model continues to allow development of kernel-mode device drivers, but attempts to provide standard implementations of functions that are well known to cause problems, including cancellation of I/O operations, power management, and plug and play device support.</p>
<p>

Apple has an open-source framework for developing drivers on <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> called the <link xlink:type="simple" xlink:href="../903/3088903.xml">
I/O Kit</link>.</p>

</sec>
<sec>
<st>
Kernel-mode vs User-mode</st>
<p>

Device drivers, particularly on modern Windows platforms, can run in <link xlink:type="simple" xlink:href="../954/3991954.xml">
kernel-mode</link> (<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../185/3446185.xml">
Ring 0</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
) or in <link xlink:type="simple" xlink:href="../467/93467.xml">
user-mode</link> (<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<model wordnetid="110324560" confidence="0.8">
<assistant wordnetid="109815790" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../185/3446185.xml">
Ring 3</link></causal_agent>
</worker>
</assistant>
</model>
</person>
</physical_entity>
).<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> The primary benefit of running a driver in user mode is improved stability, since a poorly written user mode device driver cannot crash the system by overwriting kernel memory.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> On the other hand, user-/kernel-mode transitions usually impose a considerable performance overhead, thereby prohibiting user-mode drivers for low latency and high throughput requirements.</p>

</sec>
<sec>
<st>
Device driver applications</st>
<p>

Because of the diversity of modern <link xlink:type="simple" xlink:href="../615/13615.xml">
hardware</link> and operating systems, many ways exist in which drivers can be used. Drivers are used for <link xlink:type="simple" xlink:href="../746/620746.xml">
interfacing</link> with:
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../272/5272.xml">
Printer</link>s</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../214/390214.xml">
Video adapter</link>s</entry>
<entry level="1" type="bullet">

 <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../613/243613.xml">
Network card</link></generic>
s</entry>
<entry level="1" type="bullet">

 <generic wordnetid="107899976" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/28184.xml">
Sound card</link></generic>
s</entry>
<entry level="1" type="bullet">

 Local <link xlink:type="simple" xlink:href="../631/6631.xml">
bus</link>es of various sorts - in particular, for <link xlink:type="simple" xlink:href="../749/201749.xml">
bus mastering</link> on modern systems</entry>
<entry level="1" type="bullet">

 Low-<link xlink:type="simple" xlink:href="../827/15612827.xml">
bandwidth</link> <link xlink:type="simple" xlink:href="../558/14558.xml">
I/O</link> buses of various sorts (for <link xlink:type="simple" xlink:href="../598/24598.xml">
pointing device</link>s such as <link xlink:type="simple" xlink:href="../056/7056.xml">
mice</link>, <link xlink:type="simple" xlink:href="../281/18842281.xml">
keyboard</link>s, <bus wordnetid="102924116" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../073/32073.xml">
USB</link></bus>
, etc.)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../300/5300.xml">
computer storage</link> devices such as <link xlink:type="simple" xlink:href="../777/13777.xml">
hard disk</link>, <recording wordnetid="104063868" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<sound_recording wordnetid="104262678" confidence="0.8">
<memory_device wordnetid="103744840" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<phonograph_record wordnetid="103924069" confidence="0.8">
<medium wordnetid="106254669" confidence="0.8">
<link xlink:type="simple" xlink:href="../902/18959902.xml">
CD-ROM</link></medium>
</phonograph_record>
</device>
</memory_device>
</sound_recording>
</instrumentality>
</artifact>
</recording>
 and <link xlink:type="simple" xlink:href="../891/10891.xml">
floppy disk</link> buses (<connection wordnetid="103091374" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../778/2778.xml">
ATA</link></connection>
, <link xlink:type="simple" xlink:href="../151/174151.xml">
SATA</link>, <link xlink:type="simple" xlink:href="../313/28313.xml">
SCSI</link>)</entry>
<entry level="1" type="bullet">

 Implementing support for different <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>s</entry>
<entry level="1" type="bullet">

 Implementing support for <link xlink:type="simple" xlink:href="../625/317625.xml">
image scanner</link>s and <link xlink:type="simple" xlink:href="../797/52797.xml">
digital camera</link>s</entry>
</list>
</p>
<p>

Common levels of abstraction for device drivers are
<list>
<entry level="1" type="bullet">

 For hardware:</entry>
<entry level="2" type="bullet">

 Interfacing directly</entry>
<entry level="2" type="bullet">

 Writing to or reading from a <link xlink:type="simple" xlink:href="../818/12843818.xml">
Device Control Register</link></entry>
<entry level="2" type="bullet">

 Using some higher-level interface (e.g. <substance wordnetid="100019613" confidence="0.8">
<paper wordnetid="114974264" confidence="0.8">
<card wordnetid="102962545" confidence="0.8">
<part wordnetid="113809207" confidence="0.8">
<material wordnetid="114580897" confidence="0.8">
<link xlink:type="simple" xlink:href="../850/2045850.xml">
Video BIOS</link></material>
</part>
</card>
</paper>
</substance>
)</entry>
<entry level="2" type="bullet">

 Using another lower-level device driver (e.g. file system drivers using disk drivers)</entry>
<entry level="2" type="bullet">

 Simulating work with hardware, while doing something entirely different</entry>
<entry level="1" type="bullet">

 For software:</entry>
<entry level="2" type="bullet">

 Allowing the operating system direct access to hardware resources</entry>
<entry level="2" type="bullet">

 Implementing only <link xlink:type="simple" xlink:href="../491/333491.xml">
primitive</link>s</entry>
<entry level="2" type="bullet">

 Implementing an interface for non-driver software (e.g. <link xlink:type="simple" xlink:href="../998/151998.xml">
TWAIN</link>)</entry>
<entry level="2" type="bullet">

 Implementing a language, sometimes quite high-level (e.g. <link xlink:type="simple" xlink:href="../080/24080.xml">
PostScript</link>)</entry>
</list>
</p>
<p>

Choosing and installing the correct device drivers for given hardware is often a key component of computer system configuration.</p>

</sec>
<sec>
<st>
Virtual device drivers</st>
<p>

A particular variant of device drivers are <it>virtual device drivers</it>. They are used to emulate a hardware device, particularly in <link xlink:type="simple" xlink:href="../356/18311356.xml">
virtualization</link> environments, for example when an <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
 program is run on a <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> computer or when a guest <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> is run on, for example, a <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../852/590852.xml">
Xen</link></software>
 host. Instead of enabling the guest operating system to dialog with hardware, virtual device drivers take the opposite role and emulate a piece of hardware, so that the guest operating system and its drivers running inside a <link xlink:type="simple" xlink:href="../353/32353.xml">
virtual machine</link> can have the illusion of accessing real hardware. Attempts by the guest operating system to access the hardware are routed to the virtual device driver in the host operating system as e.g. <link xlink:type="simple" xlink:href="../988/40988.xml">
function call</link>s. The virtual device driver can also send simulated processor-level events like <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link>s into the virtual machine.</p>
<p>

Virtual devices are also used in a non-virtualized environment.  For example a virtual <link xlink:type="simple" xlink:href="../613/243613.xml">
network adapter</link> is used with a <link xlink:type="simple" xlink:href="../130/147130.xml">
virtual private network</link>, while a virtual <link xlink:type="simple" xlink:href="../777/13777.xml">
disk</link> device is used with <link xlink:type="simple" xlink:href="../409/87409.xml">
iSCSI</link>.</p>

</sec>
<sec>
<st>
Open drivers</st>
<p>

<list>
<entry level="1" type="bullet">

 Printers: <link xlink:type="simple" xlink:href="../418/414418.xml">
CUPS</link>.</entry>
<entry level="1" type="bullet">

 Scanners: <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../695/585695.xml">
SANE</link></software>
.</entry>
<entry level="1" type="bullet">

 Video: <link xlink:type="simple" xlink:href="../083/11135083.xml">
Vidix</link>, <structure wordnetid="104341686" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<area wordnetid="102735688" confidence="0.8">
<library wordnetid="103660909" confidence="0.8">
<room wordnetid="104105893" confidence="0.8">
<link xlink:type="simple" xlink:href="../631/1160631.xml">
Direct Rendering Infrastructure</link></room>
</library>
</area>
</artifact>
</structure>
</entry>
</list>
</p>
<p>

<message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../145/46145.xml">
Solaris</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
 descriptions of commonly used device drivers 
<list>
<entry level="1" type="bullet">

 fas: Fast/wide SCSI controller</entry>
<entry level="1" type="bullet">

 hme: Fast (10/100 Mb/sec) Ethernet</entry>
<entry level="1" type="bullet">

 isp: Differential SCSI controllers and the SunSwift card</entry>
<entry level="1" type="bullet">

 glm: UltraSCSI controllers</entry>
<entry level="1" type="bullet">

 scsi:	Small Computer Serial Interface (SCSI) devices</entry>
<entry level="1" type="bullet">

 sf: soc+ or socal Fiber Channel Arbitrated Loop (FCAL)</entry>
<entry level="1" type="bullet">

 soc: SPARC Storage Array (SSA) controllers</entry>
<entry level="1" type="bullet">

 socal: Serial optical controllers for FCAL (soc+)</entry>
</list>
</p>

</sec>
<sec>
<st>
Driver APIs</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link></it>
</indent>
* <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../539/165539.xml">
Advanced Linux Sound Architecture</link></software>
 (ALSA) - The standard modern Linux sound driver interface
<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../903/3088903.xml">
I/O Kit</link> - an open-source framework from <link xlink:type="simple" xlink:href="../856/856.xml">
Apple</link> for developing <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link> device drivers</entry>
<entry level="1" type="bullet">

 <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../509/654509.xml">
Installable File System</link></instrumentality>
</artifact>
</system>
 (IFS) - a <link xlink:type="simple" xlink:href="../739/2052739.xml">
filesystem API</link> for IBM OS/2 and Microsoft Windows NT</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../684/650684.xml">
Network Driver Interface Specification</link> (NDIS) - a standard <link xlink:type="simple" xlink:href="../613/243613.xml">
network card</link> driver API</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../479/418479.xml">
Open Data-Link Interface</link> (ODI) - a network card API similar to NDIS</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../695/585695.xml">
Scanner Access Now Easy</link></software>
 (SANE) - a public domain interface to raster image scanner hardware </entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../780/1708780.xml">
Uniform Driver Interface</link> (UDI) - a cross platform driver interface project</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../679/5385679.xml">
Windows Display Driver Model</link> (WDDM) - the graphic display driver architecture for <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../667/3669667.xml">
Windows Driver Foundation</link></software>
 (WDF)</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../077/252077.xml">
Windows Driver Model</link> (WDM)</entry>
</list>
</p>

</sec>
<sec>
<st>
 Identifiers </st>
<p>

<list>
<entry level="1" type="bullet">

<link>
Device id</link> is the device identifier and <link>
Vendor id</link> is the vendor identifier.</entry>
</list>
</p>

<p>

<table class="metadata plainlinks ambox ">
<row>
<col>

ambox-notice" style=""</col>
</row>
<row>
<col class="mbox-image"><p>

<image width="36px" src="Wiki_letter_w.svg">
</image>
</p>
</col>
<col style="" class="mbox-text">
 <b>Please help <weblink xlink:type="simple" xlink:href="http://localhost:18088/wiki/index.php?title=Device_driver&amp;action=edit">
improve this section</weblink> by expanding it.</b> Further information might be found on the  or at . 
<it>(June 2008)''</it></col>
</row>
</table>

</p>

</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../951/991951.xml">
Class driver</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../155/41155.xml">
Firmware</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link></entry>
<entry level="1" type="bullet">

<link>
Makedev</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../042/1464042.xml">
Open source hardware</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../952/469952.xml">
Printer driver</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../907/1233907.xml">
udev</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://linux.about.com/od/commands/l/blcmdl8_MAKEDEV.htm">
MAKEDEV - Linux Command - Unix Command</weblink></entry>
<entry id="2">
"<weblink xlink:type="simple" xlink:href="http://www.linux-tutorial.info/modules.php?name=Tutorial&amp;pageid=255">
Device Driver Basics</weblink>".</entry>
<entry id="3">
"<weblink xlink:type="simple" xlink:href="http://technet2.microsoft.com/windowsserver/en/library/eb1936c0-e19c-4a17-a1a8-39292e4929a41033.mspx?mfr=true">
User-mode vs. Kernel-mode Drivers</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
&#32;(2003-03-01).&#32;Retrieved on <link>
2008-03-04</link>.</entry>
<entry id="4">
"<weblink xlink:type="simple" xlink:href="http://blogs.msdn.com/iliast/archive/2006/10/10/Introduction-to-the-User_2D00_Mode-Driver-Framework.aspx">
Introduction to the User-Mode Driver Framework (UMDF)</weblink>".&#32;  <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../001/19001.xml">
Microsoft</link></company>
&#32;(2006-10-10).&#32;Retrieved on <link>
2008-03-04</link>.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>

<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.microsoft.com/whdc">
Microsoft Windows Hardware Developer Central</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.rcnp.osaka-u.ac.jp/unix/DOCUMENTATION/HTML/AA-PUBVD-TE_html/TITLE.html">
Writing Device Drivers:  A Tutorial</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://linuxdriverproject.org/twiki/bin/view/Main/CompanyProcess">
If you wish to have Linux drivers written for your device</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.kroah.com/log/linux/free_drivers_faq.html">
Free Linux Driver Development Questions and Answers</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.linuxhardware.org/">
Linux hardware</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.linux.org/hardware/">
Linux-Friendly Hardware</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.howstuffworks.com/864-episode-22-understanding-drivers-video.htm">
Understanding Drivers</weblink> at <web_site wordnetid="106359193" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../125/479125.xml">
HowStuffWorks</link></web_site>
</entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;·  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;·  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;·  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;·  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;·  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;·  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;·  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;·  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;·  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;·  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;·  <link>
Supervisor mode</link>)&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;·  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;·  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;·  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;·  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;·  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;·  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;·  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;·  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;·  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;·  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;·  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;·  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;·  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;·   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;·  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more…</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;·  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;·  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;·  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;·  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;·  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;·  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;·  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</article>
