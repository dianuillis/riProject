<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 23:58:31[mciao0827] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<artifact  confidence="0.8" wordnetid="100021939">
<instrumentality  confidence="0.8" wordnetid="103575240">
<engine  confidence="0.8" wordnetid="103287733">
<motor  confidence="0.8" wordnetid="103789946">
<device  confidence="0.8" wordnetid="103183080">
<machine  confidence="0.8" wordnetid="103699975">
<header>
<title>Okapi BM25</title>
<id>9511414</id>
<revision>
<id>234775442</id>
<timestamp>2008-08-28T13:12:09Z</timestamp>
<contributor>
<username>FlaBot</username>
<id>228773</id>
</contributor>
</revision>
<categories>
<category>Data search engines</category>
</categories>
</header>
<bdy>

<b>Okapi BM25</b> is a ranking function used by search engines to rank matching documents according to their relevance to a given search query. It is based on the probabilistic retrieval framework developed in the 1970s and 1980s by <link>
Stephen E. Robertson</link>, <link>
Karen Spärck Jones</link>, and others.<p>

The name of the actual ranking function is BM25. To set the right context, however, it usually referred to as "Okapi BM25", since the Okapi information retrieval system, implemented at <village wordnetid="108672738" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../867/17867.xml">
London</link></village>
's <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../484/533484.xml">
City University</link></university>
 in the 1980s and 1990s, was the first system to implement this function.</p>
<p>

BM25, and its newer variants, e.g. BM25F (a version of BM25 that can take document structure and anchor text into account), represent state-of-the-art retrieval functions used in document retrieval, such as Web search.</p>

<ss1>
<st>
 The ranking function </st>

<p>

BM25 is a bag-of-words retrieval function that ranks a set of documents based on the query terms appearing in each document, regardless of the inter-relationship between the query terms within a document (e.g., their relative proximity). It is not a single function, but actually a whole family of scoring functions, with slightly different components and parameters. One of the most prominent instantiations of the function is as follows.</p>
<p>

Given a query <math>Q</math>, containing keywords <math>q_1, ..., q_n</math>, the BM25 score of a document <math>D</math> is:</p>
<p>

<math>
  score(D,Q) = \sum_{i=1}^{n} IDF(q_i) \cdot \frac{f(q_i, D) \cdot (k_1 + 1)}{f(q_i, D) + k_1 \cdot (1 - b + b \cdot \frac{|D|}{avgdl})},
</math></p>
<p>

where <math>f(q_i, D)</math> is <math>q_i</math>'s term frequency in the document <math>D</math>, <math>|D|</math> is the length of the document <math>D</math> (number of words), and <math>avgdl</math> is the average document length in the text collection from which documents are drawn. <math>k_1</math> and <math>b</math> are free parameters, usually chosen as <math>k_1 = 2.0</math> and <math>b = 0.75</math>.
<math>IDF(q_i)</math> is the IDF (inverse document frequency) weight of the query term <math>q_i</math>. It is usually computed as:</p>
<p>

<math>
  IDF(q_i) = \log \frac{N - n(q_i) + 0.5}{n(q_i) + 0.5},
</math></p>
<p>

where <math>N</math> is the total number of documents in the collection, and <math>n(q_i)</math> is the number of documents containing <math>q_i</math>.</p>


<p>

The IDF component is where the probabilistic nature of BM25 becomes apparent. Suppose a query term <math>q</math> appears in <math>n(q)</math> documents. Then a randomly picked document <math>D</math> will contain the term with probability <math>\frac{n(q)}{N}</math> (where <math>N</math> is again the set of documents in the collection). Therefore, the <link xlink:type="simple" xlink:href="../062/18985062.xml">
information</link> content of the message "<math>D</math> contains <math>q</math>" is:
<math>-\log \frac{n(q)}{N} = \log \frac{N}{n(q)}.</math></p>

<p>

Now suppose we have two query terms <math>q_1</math> and <math>q_2</math>. If the two terms occur in documents entirely independently of each other, then the probability of seeing both <math>q_1</math> and <math>q_2</math> in a randomly picked document <math>D</math> is:
<math>\frac{n(q_1)}{N} \cdot \frac{n(q_2)}{N},</math>
and the information content of such an event is:
<math>\sum_{i=1}^{2} \log \frac{N}{n(q_i)}.</math>
With a small variation, this is exactly what is expressed by the IDF component of BM25.</p>

</ss1>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

 Stephen E. Robertson, Steve Walker, Susan Jones, Micheline Hancock-Beaulieu, and Mike Gatford. Okapi at TREC-3. In Proceedings of the Third Text REtrieval Conference (TREC 1994). Gaithersburg, USA, November 1994.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Stephen E. Robertson, Steve Walker, and Micheline Hancock-Beaulieu. Okapi at TREC-7. In Proceedings of the Seventh Text REtrieval Conference. Gaithersburg, USA, November 1998.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Karen Spärck Jones, Steve Walker, and Stephen E. Robertson. A Probabilistic Model of Information Retrieval: Development and Comparative Experiments (parts 1 and 2). Information Processing and Management, 36(6):779-840. 2000.</entry>
</list>
</p>
<p>

<list>
<entry level="1" type="bullet">

 Nick Craswell, Hugo Zaragoza, Stephen Robertson. Microsoft Cambridge at TREC-14: Enterprise Track. In Proceedings of the Fourteenth Text REtrieval Conference (TREC 2005). Gaithersburg, USA, November 2005.  Describes application and tuning of Okapi BM25F.</entry>
</list>
</p>




</sec>
</bdy>
</machine>
</device>
</motor>
</engine>
</instrumentality>
</artifact>
</article>
