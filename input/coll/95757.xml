<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:56:02[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<plant_part  confidence="0.8" wordnetid="113086908">
<natural_object  confidence="0.8" wordnetid="100019128">
<kernel  confidence="0.8" wordnetid="113137010">
<header>
<title>Exokernel</title>
<id>95757</id>
<revision>
<id>238590297</id>
<timestamp>2008-09-15T14:45:28Z</timestamp>
<contributor>
<username>Tau ªolunga</username>
<id>1022029</id>
</contributor>
</revision>
<categories>
<category>Operating system technology</category>
<category>Operating system kernels</category>
</categories>
</header>
<bdy>

<image location="right" width="150px" src="Exokernel.svg" type="frame">
<caption>

Graphical overview of Exokernel
</caption>
</image>

<b>Exokernel</b> is an <link xlink:type="simple" xlink:href="../194/22194.xml">
operating system</link> <link xlink:type="simple" xlink:href="../394/50394.xml">
 kernel</link> developed by the <link xlink:type="simple" xlink:href="../061/19061.xml">
MIT</link> Parallel and Distributed Operating Systems group, and also a class of similar operating systems.<p>

The idea behind exokernels is to force as few <paradigm wordnetid="113804375" confidence="0.8">
<linguistic_relation wordnetid="113797142" confidence="0.8">
<inflection wordnetid="113803782" confidence="0.8">
<grammatical_relation wordnetid="113796779" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/60491.xml">
abstractions</link></grammatical_relation>
</inflection>
</linguistic_relation>
</paradigm>
 as possible on developers, enabling them to make as many decisions as possible about hardware abstractions. Exokernels are tiny, since functionality is limited to ensuring protection and <link xlink:type="simple" xlink:href="../389/41389.xml">
multiplexing</link> of resources, which are vastly simpler than conventional <link xlink:type="simple" xlink:href="../023/20023.xml">
microkernel</link>s' implementation of message passing and <link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic kernel</link>s' implementation of abstractions.</p>
<p>

Applications may request specific memory addresses, disk blocks, etc. The kernel only ensures that the requested resource is free, and the application is allowed to access it. This low-level hardware access allows the programmer to implement custom abstractions, and omit unnecessary ones, most commonly to improve a program's performance. It also allows programmers to choose what level of abstraction they want, high, or low.</p>
<p>

Exokernels can be seen as an application of the <link xlink:type="simple" xlink:href="../042/238042.xml">
end-to-end principle</link> to operating systems, in that they do not force an application program to layer its abstractions on top of other abstractions that were designed with different requirements in mind. For example, in the MIT Exokernel project, the Cheetah <link xlink:type="simple" xlink:href="../455/33455.xml">
web server</link> stores preformatted <message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../323/15323.xml">
Internet Protocol</link></rule>
</direction>
</protocol>
</message>
 packets on the disk, the kernel provides safe access to the disk by preventing unauthorized reading and writing, but how the disk is abstracted is up to the application or the libraries the application uses.</p>

<sec>
<st>
Motivation</st>
<p>

Traditionally kernel designers have sought to make individual hardware resources invisible to application programs by requiring the programs to interact with the hardware via some conceptual model. These models include <link xlink:type="simple" xlink:href="../280/1010280.xml">
file system</link>s for disk storage, virtual address spaces for memory, <link xlink:type="simple" xlink:href="../920/231920.xml">
schedulers</link> for task management, and <link xlink:type="simple" xlink:href="../068/85068.xml">
sockets</link> for network communication. These abstractions of the hardware make it easier to write programs in general, but limit performance and stifle experimentation in new abstractions. A security-oriented application might need a file system that does not leave old data on the disk, while a reliability-oriented application might need a file system that keeps such data for failure recovery.</p>
<p>

One might opt to remove the kernel completely and program directly to the hardware, but then the entire machine would be dedicated to the application being written. A compromise is possible; let the kernel allocate the physical resources of the machine (e.g. <link xlink:type="simple" xlink:href="../472/Species_8472.xml">
disk</link> blocks, <link xlink:type="simple" xlink:href="../911/11254911.xml">
memory page</link>s, and processor time) to multiple application programs, and let each program decide what to do with these resources. The program can link to an operating system library that implements familiar abstractions, or it can implement its own abstractions.</p>

</sec>
<sec>
<st>
MIT Exokernel</st>
<p>

MIT developed two exokernel-based operating systems, using two kernels: Aegis, a proof of concept with limited support for storage, and XOK, which applied the exokernel concept more thoroughly.</p>
<p>

An essential idea of the MIT exokernel system is that the operating system should act as an executive for small programs provided by the application software, which are constrained only by the requirement that the exokernel must be able to guarantee that they use the hardware safely.</p>

<ss1>
<st>
Design</st>
<p>

The MIT exokernel manages hardware resources as follows:</p>

<ss2>
<st>
Processor</st>
<p>

The kernel represents the processor resources as a timeline from which programs can allocate intervals of time. A program can yield the rest of its time slice to another designated program. The kernel notifies programs of processor events, such as <link xlink:type="simple" xlink:href="../289/15289.xml">
interrupt</link>s, <link xlink:type="simple" xlink:href="../231/59231.xml">
hardware exceptions</link>, and the beginning or end of a time slice. If a program takes a long time to handle an event, the kernel will penalize it on subsequent time slice allocations; in extreme cases the kernel can abort the program.</p>

</ss2>
<ss2>
<st>
Memory</st>
<p>

The kernel allocates physical memory pages to programs and controls the <link xlink:type="simple" xlink:href="../352/528352.xml">
translation lookaside buffer</link>. A program can share a page with another program by sending it a <it><link xlink:type="simple" xlink:href="../582/1068582.xml">
capability</link></it> to access that page. The kernel ensures that programs access only pages for which they have a capability.</p>

</ss2>
<ss2>
<st>
Disk storage</st>
<p>

The kernel identifies disk blocks to the application program by their physical block address, allowing the application to optimize data placement. When the program initializes its use of the disk, it provides the kernel with a function that the kernel can use to determine which blocks the program controls. The kernel uses this callback to verify that when it allocates a new block, the program claims only the block that was allocated in addition to those it already controlled.</p>

</ss2>
<ss2>
<st>
Networking</st>
<p>

The kernel implements a programmable <link xlink:type="simple" xlink:href="../296/1362296.xml">
packet filter</link>, which executes programs in a <link xlink:type="simple" xlink:href="../997/89997.xml">
byte code</link> language designed for easy security-checking by the kernel.</p>

</ss2>
</ss1>
<ss1>
<st>
Applications</st>
<p>

The available library operating systems for Exokernel include the custom ExOS system and an emulator for <link xlink:type="simple" xlink:href="../622/18932622.xml">
BSD</link>. In addition to these, the exokernel team created the Cheetah <link xlink:type="simple" xlink:href="../455/33455.xml">
web server</link>, which uses the kernel directly.</p>

</ss1>
</sec>
<sec>
<st>
History</st>

<p>

The exokernel concept has been around since at least <link xlink:type="simple" xlink:href="../337/18948337.xml">
1994</link>,<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> but <link xlink:type="simple" xlink:href="../251/891251.xml">
as of 2005</link> exokernels are still a research effort and have not been used in any major commercial operating systems. A concept operating exokernel system is <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../512/6246512.xml">
Nemesis</link></O>
, written by <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../796/31796.xml">
University of Cambridge</link></university>
, <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../569/39569.xml">
University of Glasgow</link></university>
, <company wordnetid="108058098" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../948/309948.xml">
Citrix Systems</link></company>
, and the <institute wordnetid="108407330" confidence="0.8">
<association wordnetid="108049401" confidence="0.8">
<link xlink:type="simple" xlink:href="../495/2672495.xml">
Swedish Institute of Computer Science</link></association>
</institute>
. <university wordnetid="108286163" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../879/18879.xml">
MIT</link></university>
 has also built several exokernel based systems, including <link xlink:type="simple" xlink:href="../757/95757.xml">
ExOS</link>.</p>



</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

<plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
Hybrid kernel</link></kernel>
</natural_object>
</plant_part>
</entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../216/1267216.xml">
Hypervisor</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel (computer science)</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../825/20825.xml">
Monolithic kernel</link></entry>
<entry level="1" type="bullet">

<link>
Nanokernel</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../546/1441546.xml">
Paravirtualization</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../531/2968531.xml">
Single address space operating system</link> (SASOS)</entry>
<entry level="1" type="bullet">

<link>
Dalex</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<list>
<entry level="1" type="bullet">

Engler, Dawson R.&#32;(1998).&#32;"<it><weblink xlink:type="simple" xlink:href="http://pdos.csail.mit.edu/exo/theses/engler/thesis.ps">
The Exokernel Operating System Architecture</weblink></it>"&#32;(PostScript). &#32;Retrieved on <link>
2006-09-22</link>.</entry>
<entry level="1" type="bullet">

Engler, Dawson R.; Kaashoek, M. Frans&#32;(1996).&#32;"<it><weblink xlink:type="simple" xlink:href="http://pdos.csail.mit.edu/papers/hotos-jeremiad.ps">
Exterminate All Operating System Abstractions</weblink></it>"&#32;(PostScript). &#32;Retrieved on <link>
2006-09-22</link>.</entry>
<entry level="1" type="bullet">

 <cite style="font-style:normal">Engler, Dawson R.; Kaashoek, M. Frans; O‚ÄôToole Jr., James&#32;(1995).&#32;"<weblink xlink:type="simple" xlink:href="http://delivery.acm.org/10.1145/230000/224076/p251-engler.pdf?key1=224076&amp;key2=2519598511&amp;coll=&amp;dl=ACM&amp;CFID=15151515&amp;CFTOKEN=6184618">
Exokernel: An Operating System Architecture for Application-Level Resource Management</weblink>"&#32;(PDF). <it>Proceedings of the fifteenth ACM symposium on Operating systems principles</it>: 251‚Äì266. <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../994/422994.xml">
doi</link></writing>
</written_communication>
</document>
:<weblink xlink:type="simple" xlink:href="http://dx.doi.org/10.1145%2F230000%2F224076%2Fp251-engler.pdf">
10.1145/230000/224076/p251-engler.pdf</weblink>. ISBN 0-89791-715-4. Retrieved on <link>
2006-09-22</link>.</cite>&nbsp;</entry>
</list>
</p>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/engler95exokernel.html">
Exokernel: An Operating System Architecture for Application-Level Resource Management - Engler, Kaashoek, Jr (ResearchIndex)</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.cs.cornell.edu/home/ulfar/ukernel/ukernel.html#current-exo">
Microkernels. The extent to which simple, efficient operations are a good choice in a kernel interface design.</weblink> by √ölfar Erlingsson and Athanasios Kyparlis</entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://osxt.com/index.php/IS/IS">
IntraServices</weblink></entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks collapsible autocollapse " cellspacing="0">
<row>
<header colspan="2" style=";" class="navbox-title">
<link xlink:type="simple" xlink:href="../194/22194.xml">
Operating system</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col style=";;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../395/55395.xml">
History</link>&nbsp;¬∑  <record wordnetid="106647206" confidence="0.8">
<chronology wordnetid="106503224" confidence="0.8">
<indication wordnetid="106797169" confidence="0.8">
<evidence wordnetid="106643408" confidence="0.8">
<timeline wordnetid="106504965" confidence="0.8">
<written_record wordnetid="106502378" confidence="0.8">
<link xlink:type="simple" xlink:href="../968/247968.xml">
Timeline</link></written_record>
</timeline>
</evidence>
</indication>
</chronology>
</record>
&nbsp;¬∑  <message wordnetid="106598915" confidence="0.8">
<information wordnetid="106634376" confidence="0.8">
<electronic_database wordnetid="106588511" confidence="0.8">
<lexical_database wordnetid="106638868" confidence="0.8">
<wordnet wordnetid="106639428" confidence="0.8">
<database wordnetid="106637824" confidence="0.8">
<link xlink:type="simple" xlink:href="../119/229119.xml">
Developement</link></database>
</wordnet>
</lexical_database>
</electronic_database>
</information>
</message>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../531/981531.xml">
List</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../394/50394.xml">
Kernel</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
General</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../023/20023.xml">
Microkernel</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../023/20023.xml#xpointer(//*[./st=%22Nanokernel%22])">
Nanokernel</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Types</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../825/20825.xml">
monolithic</link>&nbsp;¬∑  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../041/4345041.xml">
hybrid</link></kernel>
</natural_object>
</plant_part>
&nbsp;¬∑  <plant_part wordnetid="113086908" confidence="0.8">
<natural_object wordnetid="100019128" confidence="0.8">
<kernel wordnetid="113137010" confidence="0.8">
<link xlink:type="simple" xlink:href="../757/95757.xml">
exokernel</link></kernel>
</natural_object>
</plant_part>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";padding-left:0em;padding-right:0em;;" class="navbox-group">
Components</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../467/93467.xml">
Kernel space</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../658/371658.xml">
Loadable kernel module</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../101/9101.xml">
device driver</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../467/93467.xml">
User space</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../109/555109.xml">
Userland</link></col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
<link xlink:type="simple" xlink:href="../806/15395806.xml">
Process management</link></col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../178/45178.xml">
Process</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../857/6857.xml">
Multiprogramming</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../289/15289.xml">
Interrupt</link>&nbsp;¬∑  Modes: (<link xlink:type="simple" xlink:href="../596/167596.xml">
Protected mode</link>&nbsp;¬∑  <link>
Supervisor mode</link>)&nbsp;¬∑  <link xlink:type="simple" xlink:href="../857/6857.xml">
Computer multitasking</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../920/231920.xml">
Scheduling</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../904/6904.xml">
Context switch</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../857/6857.xml">
Cooperative multitasking</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../566/2204566.xml">
Preemptive multitasking</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../954/3991954.xml">
CPU modes</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../303/45303.xml">
Thread (computer science)</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Memory management</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../373/515373.xml">
Memory protection</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../131/1323131.xml">
Segmentation</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../193/311193.xml">
Paging</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../112/177112.xml">
Memory management unit</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../803/28803.xml">
Segmentation fault</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../943/573943.xml">
General protection fault</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Examples</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../304/18933304.xml">
AmigaOS</link></O>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link>&nbsp;¬∑  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
IBM OS/2</link></O>
&nbsp;¬∑  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../027/20027.xml">
MS-DOS</link></O>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../890/18890.xml">
Windows</link>&nbsp;¬∑  <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../297/6097297.xml">
Linux</link></O>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../642/31642.xml">
UNIX</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../658/1178658.xml">
OpenSolaris</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../640/20640.xml">
Mac OS X</link>&nbsp;¬∑   <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../889/360889.xml">
ReactOS</link></O>
&nbsp;¬∑  <it><link xlink:type="simple" xlink:href="../916/71916.xml">
more‚Ä¶</link>''</it></col>
</row>
<row style="height:2px">

</row>
<row>
<col style=";;" class="navbox-group">
Miscellaneous concepts</col>
<col style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<link xlink:type="simple" xlink:href="../679/6885679.xml">
Boot loader</link>&nbsp;¬∑  <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../253/432253.xml">
PXE</link></system_of_measurement>
</standard>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../ury/24th_century.xml">
API</link>&nbsp;¬∑  <system wordnetid="104377057" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<link xlink:type="simple" xlink:href="../131/351131.xml">
Virtual file system</link></instrumentality>
</artifact>
</system>
&nbsp;¬∑  <link xlink:type="simple" xlink:href="../071/2550071.xml">
Virtual tape library</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../592/4122592.xml">
Computer network</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../293/12293.xml">
GUI</link>&nbsp;¬∑  <link xlink:type="simple" xlink:href="../511/425511.xml">
HAL</link></col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</kernel>
</natural_object>
</plant_part>
</article>
