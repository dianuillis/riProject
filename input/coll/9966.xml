<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 15:25:10[mciao0826] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<region  confidence="0.8" wordnetid="108630985">
<field  confidence="0.8" wordnetid="108569998">
<location  confidence="0.8" wordnetid="100027167">
<tract  confidence="0.8" wordnetid="108673395">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<geographical_area  confidence="0.8" wordnetid="108574314">
<header>
<title>Elliptic curve cryptography</title>
<id>9966</id>
<revision>
<id>243112931</id>
<timestamp>2008-10-05T05:45:09Z</timestamp>
<contributor>
<username>Lightbot</username>
<id>7178666</id>
</contributor>
</revision>
<categories>
<category>Finite fields</category>
<category>Asymmetric-key cryptosystems</category>
<category>Cryptography</category>
</categories>
</header>
<bdy>

<b>Elliptic curve cryptography (ECC)</b> is an approach to <link xlink:type="simple" xlink:href="../222/24222.xml">
public-key cryptography</link> based on the algebraic structure of <link xlink:type="simple" xlink:href="../225/10225.xml">
elliptic curve</link>s over <link xlink:type="simple" xlink:href="../615/11615.xml">
finite field</link>s. The use of elliptic curves in cryptography was suggested independently by <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../628/1587628.xml">
Neal Koblitz</link></scholar>
</decoder>
</mathematician>
</causal_agent>
</alumnus>
</associate>
</scientist>
</colleague>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
</peer>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref> and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<employee wordnetid="110053808" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<link xlink:type="simple" xlink:href="../384/6847384.xml">
Victor S. Miller</link></decoder>
</scholar>
</mathematician>
</employee>
</scientist>
</causal_agent>
</alumnus>
</worker>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> in 1985.<p>

Elliptic curves are also used in several <link xlink:type="simple" xlink:href="../491/15491.xml">
integer factorization</link> <link xlink:type="simple" xlink:href="../775/775.xml">
algorithm</link>s that have applications in cryptography, such as, <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../212/154212.xml">
Lenstra elliptic curve factorization</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</geographical_area>
</rule>
</event>
</tract>
</location>
</field>
</region>
, but this use of elliptic curves is <it>not</it> usually referred to as "elliptic curve cryptography."</p>

<sec>
<st>
Introduction</st>

<p>

Public key cryptography is based on the creation of mathematical puzzles that are difficult to solve without certain knowledge about how they were created, but easy to solve with that knowledge. The creator keeps that knowledge secret (the private key) and publishes the puzzle (the public key). The puzzle can then be used to scramble a message in a way that only the creator can unscramble. Early public key systems, such as the <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA algorithm</link>, used the product of two large <link xlink:type="simple" xlink:href="../666/23666.xml">
prime number</link>s as the puzzle: a user picks two large random primes as his private key, and publishes their product as his public key. While finding large primes and multiplying them together is computationally easy, reversing the process is thought to be hard (<it>see</it> <link xlink:type="simple" xlink:href="../741/1544741.xml">
RSA problem</link>).  However, due to recent progress in <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<premise wordnetid="106753800" confidence="0.8">
<postulate wordnetid="106753299" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/15491.xml">
factoring integers</link></proposition>
</postulate>
</premise>
</message>
</statement>
 (one way to solve the problem), FIPS 186-3 recommends that RSA public keys be at least 1024 bits long<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref> to provide adequate security.</p>
<p>

Another class of puzzle involves solving the equation <it>ab = c</it> for <it>b</it> when <it>a</it> and <it>c</it> are known. Such equations involving real or complex numbers are easily solved using <link xlink:type="simple" xlink:href="../860/17860.xml">
logarithm</link>s (i.e. <it>b=log(c)/log(a)</it>). However, in some large <link xlink:type="simple" xlink:href="../707/323707.xml">
finite group</link>s, finding solutions to such equations is quite difficult and is known as the <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link> problem. The mathematical theory of <link xlink:type="simple" xlink:href="../225/10225.xml">
elliptic curve</link>s provides a class of finite groups that have proven quite suitable for cryptographic use.</p>
<p>

An <it>elliptic curve</it> is a <link xlink:type="simple" xlink:href="../691/971691.xml">
plane curve</link> defined by an equation of the form </p>
<p>

<math>y^2 = x^3 + ax + b</math></p>
<p>

The set of points on such a curve—all solutions of the above equation together with a <link xlink:type="simple" xlink:href="../139/403139.xml">
point at infinity</link>—form an <link xlink:type="simple" xlink:href="../ury/30th_century.xml">
abelian group</link>, with the point at infinity as identity element. If the coordinates <it>x</it> and <it>y</it> are chosen from a <link xlink:type="simple" xlink:href="../615/11615.xml">
finite field</link>, the solutions form a finite abelian group. If the finite field is large, the discrete logarithm problem on such elliptic curve groups is believed to be more difficult than the corresponding problem in  the underlying finite field's multiplicative group. Thus keys in elliptic curve cryptography can be chosen to be much shorter for a comparable level of security compared to integer-based methods. (<it>See:</it> <link>
cryptographic key length</link>) </p>
<p>

As for other popular public key cryptosystems, no mathematical proof of difficulty has been published for ECC <link xlink:type="simple" xlink:href="../458/1292458.xml">
as of 2006</link>. However, the U.S. <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/21939.xml">
National Security Agency</link></agency>
 has endorsed ECC technology by including it in its <link xlink:type="simple" xlink:href="../099/1602099.xml">
Suite B</link> set of recommended algorithms and allows their use for protecting information classified up to <link xlink:type="simple" xlink:href="../962/3539962.xml">
top secret</link> with 384-bit keys.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%224%22])">4</ref> Although the RSA patent has expired, there are patents in force covering some aspects of ECC.</p>

</sec>
<sec>
<st>
Mathematical introduction</st>
<p>

<mathematical_relation wordnetid="113783581" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<function wordnetid="113783816" confidence="0.8">
<link xlink:type="simple" xlink:href="../225/10225.xml">
Elliptic curve</link></function>
</shape>
</line>
</curve>
</mathematical_relation>
s used in cryptography are typically defined over two types of <link xlink:type="simple" xlink:href="../615/11615.xml">
finite field</link>s: fields of odd <link xlink:type="simple" xlink:href="../621/1066621.xml#xpointer(//*[./st=%22The+case+of+fields%22])">
characteristic</link> (<math>\mathbb{F}_p</math>, where <math>p &amp;gt; 3</math> is a large prime number) and fields of characteristic two (<math>\mathbb{F}_{2^m}</math>). When the distinction is not important we denote both of them as <math>\mathbb{F}_q</math>, where <math>q=p</math> or <math>q=2^m</math>. In <math>\mathbb{F}_p</math> the elements are <link xlink:type="simple" xlink:href="../563/14563.xml">
integer</link>s (<math>0 \le x &amp;lt; p</math>) which are combined using <link xlink:type="simple" xlink:href="../087/20087.xml">
modular arithmetic</link>. The case of <math>\mathbb{F}_{2^m}</math> is slightly more complicated (see <link xlink:type="simple" xlink:href="../387/576387.xml">
finite field arithmetic</link> for details): one obtains different representations of the field elements as bitstrings for each choice of irreducible binary polynomial <math>f(x)</math> of degree <math>m</math>.</p>
<p>

The set of all pairs of <link xlink:type="simple" xlink:href="../835/298835.xml">
affine coordinates</link> <math>(x,y)</math> for <math>x, y \in \mathbb{F}_q</math> form the affine plane <math>\mathbb{F}_q \times \mathbb{F}_q</math>. An elliptic curve is the locus of points in the affine plane whose coordinates satisfy a certain cubic equation together with a point at infinity <math>O</math> (the point at which the locus in the projective plane intersects the line at infinity). In the case of characteristic p &amp;gt; 3 the <it>defining equation</it> of <math>E(\mathbb{F}_p)</math> can be written: 
<indent level="1">

<math>y^2 = x^3 + a x + b\,</math>
</indent>
where <math>a \in \mathbb{F}_p</math> and <math>b \in \mathbb{F}_p</math> are constants such that <math>4 a^3 + 27 b^2 \ne 0</math>. In the binary case the defining equation of <math>E(\mathbb{F}_{2^m})</math> can be written: 
<indent level="1">

<math>y^2 + x y = x^3 + a x^2 + b \,</math> 
</indent>
where <math>a \in \mathbb{F}_{2}</math> and <math>b \in \mathbb{F}_{2^m}</math> are constants and <math>b \ne 0</math>. Although the point at infinity <math>O</math> has no affine coordinates, it is convenient to represent it using a pair of coordinates which do not satisfy the defining equation, for example, <math>O=(0,0)</math> if <math>b \ne 0</math> and <math>O=(0,1)</math> otherwise. According to <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<curve wordnetid="113867641" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<link xlink:type="simple" xlink:href="../758/1108758.xml">
Hasse's theorem on elliptic curves</link></proposition>
</shape>
</line>
</theorem>
</curve>
</message>
</statement>
 the number of points on a curve is close to the size of the underlying field; more precisely: <math>(\sqrt q - 1)^2 \leq |E(\mathbb{F}_q)| \leq (\sqrt q + 1)^2</math>.</p>
<p>

The points on an elliptic curve form an <link xlink:type="simple" xlink:href="../ury/30th_century.xml">
abelian group</link> <math>(E(\mathbb{F}), +)</math> with <math>O</math>, the distinguished point at infinity, playing the role of additive identity. In other words, given two points <math>P, Q \in E(\mathbb{F}_q)</math>, there is a third point, denoted by <math>P+Q \,</math> on <math>E(\mathbb{F}_q)</math>, and the following relations hold for all <math>P, Q, R \in E(\mathbb{F}_q)</math>
<list>
<entry level="1" type="bullet">

 <math>P+Q = Q+P</math> (<it>commutativity</it>)</entry>
<entry level="1" type="bullet">

 <math>(P+Q)+R = P+(Q+R)</math> (<it>associativity</it>)</entry>
<entry level="1" type="bullet">

 <math>P+O = O+P = P</math> (<it>existence of an identity element</it>)</entry>
<entry level="1" type="bullet">

 there exists <math>(-P)</math> such that <math>-P + P = P + (-P) = O</math> (<it>existence of inverses</it>)</entry>
</list>
</p>
<p>

We already specified how <math>O</math> is defined. If we define the negative of a point <math>P = (x,y)</math> to be <math>-P = (x,-y)</math> for <math>P \in E(\mathbb{F}_p)</math> and <math>-P = (x,x+y)</math> for <math>P \in E(\mathbb{F}_{2^m})</math>, we can define the addition operation as follows:
<list>
<entry level="1" type="bullet">

 if <math>Q  =  O</math> then <math>P + Q = P</math></entry>
<entry level="1" type="bullet">

 if <math>Q  = -P</math> then <math>P + Q = O</math></entry>
<entry level="1" type="bullet">

 if <math>Q \ne P</math> then <math>P + Q = R</math>, where</entry>
<entry level="2" type="bullet">

 in the prime case <math>x_R = \lambda^2 - x_P - x_Q</math>, <math>y_R = \lambda(x_P - x_R) - y_P</math>, and <math>\lambda = \frac{y_Q-y_P}{x_Q-x_P}</math>, or</entry>
<entry level="2" type="bullet">

 in the binary case <math>x_R = \lambda^2 + \lambda + x_P + x_Q + a</math>, <math>y_R = \lambda (x_P + x_R) + x_R + y_P</math>, and <math>\lambda = \frac{y_P + y_Q}{x_P + x_Q}</math></entry>
</list>

(Geometrically, <math>P+Q</math> is the inverse of the third point of intersection of the cubic with the line through <math>P</math> and <math>Q</math>.)</p>
<p>

<list>
<entry level="1" type="bullet">

 if <math>Q  =  P</math> then <math>P + Q = R</math>, where</entry>
<entry level="2" type="bullet">

 in the prime case <math>x_R = \lambda^2 - 2 x_P</math>, <math>y_R = \lambda(x_P - x_R) - y_P</math>, and <math>\lambda = \frac{3 x_P^2 + a}{2 y_P}</math>, or</entry>
<entry level="2" type="bullet">

 in the binary case <math>x_R = \lambda^2 + \lambda + a</math>, <math>y_R = x_P^2 + (\lambda + 1) x_R</math>, and <math>\lambda = x_P + \frac{y_P}{x_P}</math></entry>
</list>

(Geometrically, <math>2P</math> is the inverse of the second point of intersection of the cubic with its tangent line at <math>P</math>.)</p>
<p>

<weblink xlink:type="simple" xlink:href="http://www.certicom.com/index.php/ecc-tutorial">
Certicom's Online ECC Tutorial</weblink> contains a Java applet that can be used to experiment with addition in different EC groups.</p>
<p>

We already described the underlying field <math>\mathbb{F}_q</math> and the group of points of elliptic curve <math>E(\mathbb{F}_q)</math> but there is yet another mathematical structure commonly used in cryptography &mdash; a <link xlink:type="simple" xlink:href="../327/52327.xml">
cyclic</link> <link xlink:type="simple" xlink:href="../011/28011.xml">
subgroup</link> of <math>E(\mathbb{F}_q)</math>. For any point <math>G</math> the set 
<indent level="1">

<math>(O, G, G+G, G+G+G, G+G+G+G, \ldots)</math> 
</indent>
is a cyclic group. It is convenient to use the following notation: <math>0 G = O</math>, <math>1 G = G</math>, <math>2G = G+G</math>, <math>3G = G+G+G</math>, etc. The calculation of <math>k G</math>, where <math>k</math> is an integer and <math>G</math> is a point, is called <it>scalar multiplication</it>.</p>

</sec>
<sec>
<st>
Cryptographic schemes</st>

<p>

Since the (additive) cyclic group described above can be considered similar to the (multiplicative) group of powers of an integer <math>g</math> modulo prime <math>p</math>: <math>(g^0, g, g^2, g^3, g^4, \ldots)</math>, the problem of finding <math>k</math> given points <math>k G</math> and <math>G</math> is called the <it>elliptic curve discrete logarithm problem</it> (ECDLP). The assumed hardness of several problems related to the <link xlink:type="simple" xlink:href="../334/181334.xml">
discrete logarithm</link> in the subgroup of <math>E(\mathbb{F}_q)</math> allows cryptographic use of elliptic curves. Most of the elliptic curve cryptographic schemes are related to the discrete logarithm schemes which were originally formulated for usual modular arithmetic:
<list>
<entry level="1" type="bullet">

 the <link xlink:type="simple" xlink:href="../958/3357958.xml">
Elliptic Curve Diffie-Hellman</link> key agreement scheme is based on the <link>
Diffie-Hellman</link> scheme,</entry>
<entry level="1" type="bullet">

 the <link xlink:type="simple" xlink:href="../525/450525.xml">
Elliptic Curve Digital Signature Algorithm</link> is based on the <link xlink:type="simple" xlink:href="../470/59470.xml">
Digital Signature Algorithm</link>,</entry>
<entry level="1" type="bullet">

 the <link xlink:type="simple" xlink:href="../447/1586447.xml">
ECMQV</link> key agreement scheme is based on the <link xlink:type="simple" xlink:href="../447/1586447.xml">
MQV</link> key agreement scheme.</entry>
</list>

Not all the DLP schemes should be ported to the elliptic curve domain. For example, the well known <link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal encryption</link> scheme was never standardized by official bodies and should not be directly used over an elliptic curve (the standard encryption scheme for ECC is called Elliptic Curve <link xlink:type="simple" xlink:href="../076/3530076.xml">
Integrated Encryption Scheme</link>). The main reason is that although it is straightforward to convert an arbitrary message (of limited length) to an integer modulo <math>p</math>, it is not that simple to convert a bitstring to a point of a curve (it is not true that for every <math>x</math> there is a <math>y</math> such that <math>(x,y) \in E(\mathbb{F}_q)</math>). (Another factor is that ElGamal scheme is vulnerable to chosen-ciphertext attacks.)</p>
<p>

Some believe that ECDLP-based cryptography is going to replace cryptography based on integer factorization (e.g., RSA) and finite-field cryptography (e.g., <link xlink:type="simple" xlink:href="../470/59470.xml">
DSA</link>). At the RSA Conference 2005, the <agency wordnetid="108337324" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/21939.xml">
National Security Agency</link></agency>
 (NSA) announced <link xlink:type="simple" xlink:href="../099/1602099.xml">
Suite B</link> which exclusively uses ECC for digital signature generation and key exchange. The suite is intended to protect both classified and unclassified national security systems and information.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%225%22])">5</ref></p>
<p>

Recently, a large number of cryptographic primitives based on bilinear mappings on various elliptic curve groups (such as the <link>
Weil</link> and <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<link xlink:type="simple" xlink:href="../933/245933.xml">
Tate</link></mathematician>
</scientist>
</causal_agent>
</person>
</physical_entity>
, eta and ate <curve wordnetid="113867641" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/1131644.xml">
pairing</link></shape>
</line>
</curve>
s) have been introduced. Schemes based on these primitives provide efficient <link xlink:type="simple" xlink:href="../892/385892.xml">
identity-based encryption</link> as well as pairing-based signatures, signcryption, <link xlink:type="simple" xlink:href="../944/63944.xml">
key agreement</link>, and proxy re-encryption (see <weblink xlink:type="simple" xlink:href="http://paginas.terra.com.br/informatica/paulobarreto/pblounge.html">
The Pairing-Based Crypto Lounge</weblink> as well as <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/1644154.xml">
P1363.3</link></system_of_measurement>
</standard>
).</p>

</sec>
<sec>
<st>
Implementation considerations</st>

<p>

Although the details of each particular elliptic curve scheme are described in the article referenced above some common implementation considerations are discussed here.</p>

<ss1>
<st>
Domain parameters</st>

<p>

To use ECC all parties must agree on all the elements defining the elliptic curve, that is <it>domain parameters</it> of the scheme. The field is defined by <math>p</math> in the prime case and the pair of <math>m</math> and <math>f</math> in the binary case. The elliptic curve is defined by the constants <math>a</math> and <math>b</math> used in its defining equation. Finally, the cyclic subgroup is defined by its <it>generator</it> (aka. <it>base point</it>) <math>G</math>. For cryptographic application the <link xlink:type="simple" xlink:href="../527/493527.xml">
order</link> of <math>G</math>, that is the smallest non-negative number <math>n</math> such that <math>n G = O</math>, must be prime. Since <math>n</math> is the size of a subgroup of <math>E(\mathbb{F}_q)</math> it follows from the <statement wordnetid="106722453" confidence="0.8">
<message wordnetid="106598915" confidence="0.8">
<theorem wordnetid="106752293" confidence="0.8">
<proposition wordnetid="106750804" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../150/31150.xml">
Lagrange's theorem</link></group>
</proposition>
</theorem>
</message>
</statement>
 that the number <math>h = \frac{|E|}{n}</math> is integer. In cryptographic applications this number <math>h</math>, called <it>cofactor</it>, at least must be small (<math>h \le 4</math>) and, preferably, <math>h = 1</math>. Let us summarize: in the prime case the domain parameters are <math>(p,a,b,G,n,h)</math> and in the binary case they are <math>(m,f,a,b,G,n,h)</math>.</p>
<p>

Unless there is an assurance that domain parameters were generated by a party trusted with respect to their use, the domain parameters <it>must</it> be validated before use.</p>
<p>

The generation of domain parameters is not usually done by each participant since this involves counting the number of points on a curve which is time-consuming and troublesome to implement. As a result several standard bodies published domain parameters of elliptic curves for several common field sizes:
<list>
<entry level="1" type="bullet">

 NIST, <weblink xlink:type="simple" xlink:href="http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf">
Recommended Elliptic Curves for Government Use</weblink></entry>
<entry level="1" type="bullet">

 SECG, <weblink xlink:type="simple" xlink:href="http://www.secg.org/download/aid-386/sec2_final.pdf">
SEC 2: Recommended Elliptic Curve Domain Parameters</weblink></entry>
</list>

Test vectors are also available <weblink xlink:type="simple" xlink:href="http://www.secg.org/download/aid-390/gec2.pdf">
http://www.secg.org/download/aid-390/gec2.pdf</weblink>.</p>
<p>

If one (despite the said above) wants to build his own domain parameters he should select the underlying field and then use one of the following strategies to find a curve with appropriate (i.e., near prime) number of points using one of the following methods:
<list>
<entry level="1" type="bullet">

 select a random curve and use a general point-counting algorithm, for example, <curve wordnetid="113867641" confidence="0.8">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<line wordnetid="113863771" confidence="0.8">
<shape wordnetid="100027807" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../006/3596006.xml">
Schoof's algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</shape>
</line>
</rule>
</event>
</curve>
 or <region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../018/3717018.xml">
Schoof-Elkies-Atkin algorithm</link></geographical_area>
</tract>
</location>
</field>
</region>
,</entry>
<entry level="1" type="bullet">

 select a random curve from a family which allows easy calculation of the number of points (e.g., Koblitz curves), or</entry>
<entry level="1" type="bullet">

 select the number of points and generate a curve with this number of points using <it>complex multiplication</it> technique.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%226%22])">6</ref></entry>
</list>
</p>
<p>

Several classes of curves are weak and shall be avoided:
<list>
<entry level="1" type="bullet">

 curves over <math>\mathbb{F}_{2^m}</math> with non-prime <math>m</math> are vulnerable to <link>
Weil descent</link> attacks.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%227%22])">7</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%228%22])">8</ref></entry>
<entry level="1" type="bullet">

 curves such that <math>n</math> divides <math>p^B-1</math> (where <math>p</math> is the characteristic of the field – <math>q</math> for a prime field, or <math>2</math> for a binary field) for sufficiently small <math>B</math> are vulnerable to MOV attack<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%229%22])">9</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2210%22])">10</ref> which applies usual DLP in a small degree extension field of <math>\mathbb{F}_p</math> to solve ECDLP.  The bound <math>B</math> should be chosen so that discrete logarithms in the field <math>\mathbb{F}_{p^B}</math> are at least as difficult to compute as discrete logs on the elliptic curve <math>E(\mathbb{F}_q)</math>.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2211%22])">11</ref></entry>
<entry level="1" type="bullet">

 curves such that <math>|E(\mathbb{F}_q)| = q</math> are vulnerable to the attack that maps the points on the curve to the additive group of <math>\mathbb{F}_q</math><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2212%22])">12</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2213%22])">13</ref><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2214%22])">14</ref></entry>
</list>
</p>

</ss1>
<ss1>
<st>
Key sizes</st>

<p>

Since all the fastest known algorithms that allow to solve the ECDLP (<link xlink:type="simple" xlink:href="../928/563928.xml">
baby-step giant-step</link>, <link xlink:type="simple" xlink:href="../817/1630817.xml">
Pollard's rho</link>, etc.), need <math>O(\sqrt{n})</math> steps, it follows that the size of the underlying field shall be roughly twice the security parameter. For example, for 128-bit security one needs a curve over <math>\mathbb{F}_q</math>, where <math>q \approx 2^{256}</math>. This can be contrasted with finite-field cryptography (e.g., <link xlink:type="simple" xlink:href="../470/59470.xml">
DSA</link>) which requires<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2215%22])">15</ref> 3072-bit public keys and 256-bit private keys, and integer factorization cryptography (e.g., <link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>) which requires 3072-bit public and private keys. The hardest ECC scheme (publicly) broken to date had a 109-bit key (that is about 55 bits of security). For the prime field case, it was broken near the beginning of 2003 using over 10,000 <chip wordnetid="103020034" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<microprocessor wordnetid="103760310" confidence="0.8">
<conductor wordnetid="103088707" confidence="0.8">
<device wordnetid="103183080" confidence="0.8">
<semiconductor_device wordnetid="104171831" confidence="0.8">
<link xlink:type="simple" xlink:href="../668/24668.xml">
Pentium</link></semiconductor_device>
</device>
</conductor>
</microprocessor>
</instrumentality>
</artifact>
</chip>
 class PCs running continuously for over 540 days (see <weblink xlink:type="simple" xlink:href="http://www.certicom.com/index.php?action=company,press_archive&amp;view=121">
http://www.certicom.com/index.php?action=company,press_archive&amp;view=121</weblink>). For the binary field case, it was broken in April 2004 using 2600 computers for 17 months (see <weblink xlink:type="simple" xlink:href="http://www.certicom.com/index.php?action=company,press_archive&amp;view=307">
http://www.certicom.com/index.php?action=company,press_archive&amp;view=307</weblink>).</p>

</ss1>
<ss1>
<st>
Projective coordinates</st>

<p>

A close examination of the addition rules shows that in order to add two points one needs not only several additions and multiplications in <math>\mathbb{F}_q</math> but also an inversion operation. The inversion (for given <math>x \in \mathbb{F}_q</math> find <math>y \in \mathbb{F}_q</math> such that <math>x y = 1</math>) is one to two orders of magnitude slower<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2216%22])">16</ref> than multiplication. Fortunately, points on a curve can be represented in different coordinate systems which do not require an inversion operation to add two points. Several such systems were proposed: in the <it>projective</it> system each point is represented by three coordinates <math>(X,Y,Z)</math> using the following relation: <math>x = \frac{X}{Z}</math>, <math>y = \frac{Y}{Z}</math>; in the <it>Jacobian system</it> a point is also represented with three coordinates <math>(X,Y,Z)</math>, but a different relation is used: <math>x = \frac{X}{Z^2}</math>, <math>y = \frac{Y}{Z^3}</math>; in the <it>modified Jacobian</it> system the same relations are used but four coordinates are stored and used for calculations <math>(X,Y,Z,aZ^4)</math>; and in the <it>Chudnovsky Jacobian</it> system five coordinates are used <math>(X,Y,Z,Z^2,Z^3)</math>. Note that there  may be different naming conventions, for example, <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/1644154.xml">
IEEE P1363</link></system_of_measurement>
</standard>
-2000 standard uses "projective coordinates" to refer to what is commonly called Jacobian coordinates. An additional speed-up is possible if mixed coordinates are used.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2217%22])">17</ref></p>

</ss1>
<ss1>
<st>
Fast reduction (NIST curves)</st>

<p>

Reduction modulo <math>p</math> (which is needed for addition and multiplication) can be executed much faster if the prime <math>p</math> is a pseudo-<class wordnetid="107997703" confidence="0.8">
<collection wordnetid="107951464" confidence="0.8">
<group wordnetid="100031264" confidence="0.8">
<link xlink:type="simple" xlink:href="../908/18908.xml">
Mersenne prime</link></group>
</collection>
</class>
 that is <math>p \approx 2^d</math>, for example, <math>p = 2^{521} - 1</math> or <math>p = 2^{256} - 2^{32} - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1</math>. Compared to <link>
Barrett reduction</link> there can be an order of magnitude speed-up.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2218%22])">18</ref> The curves over <math>\mathbb{F}_p</math> with pseudo-Mersenne <math>p</math> are recommended by NIST. Yet another advantage of the NIST curves is the fact that they use <math>a = -3</math> which improves addition in Jacobian coordinates.</p>

</ss1>
<ss1>
<st>
NIST-Recommended Elliptic Curves</st>

<p>

NIST recommends fifteen elliptic curves. Specifically, FIPS 186-2 has ten recommended finite fields. There are five prime fields <math>\mathbb{F}_p</math> for <math>p192</math>, <math>p224</math>, <math>p256</math>, <math>p384</math> and <math>p521</math>. For each of the prime fields one elliptic curve is recommended. There are five binary fields <math>\mathbb{F}_{2^m}</math> for <math>2^{163}</math>, <math>2^{233}</math>, <math>2^{283}</math>, <math>2^{409}</math>, and <math>2^{571}</math>.  For each of the binary fields one elliptic curve and one <peer wordnetid="109626238" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<cryptanalyst wordnetid="109981540" confidence="0.8">
<intellectual wordnetid="109621545" confidence="0.8">
<colleague wordnetid="109935990" confidence="0.8">
<scientist wordnetid="110560637" confidence="0.8">
<associate wordnetid="109816771" confidence="0.8">
<alumnus wordnetid="109786338" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<mathematician wordnetid="110301261" confidence="0.8">
<decoder wordnetid="109995398" confidence="0.8">
<scholar wordnetid="110557854" confidence="0.8">
<link xlink:type="simple" xlink:href="../628/1587628.xml">
Koblitz curve</link></scholar>
</decoder>
</mathematician>
</causal_agent>
</alumnus>
</associate>
</scientist>
</colleague>
</intellectual>
</cryptanalyst>
</person>
</physical_entity>
</peer>
 was selected. Thus five prime curves and ten binary curves. The curves were chosen for optimal security and implementation efficiency.<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2219%22])">19</ref></p>

</ss1>
<ss1>
<st>
Side-channel attacks</st>

<p>

Unlike DLP systems (where it is possible to use the same procedure for squaring and multiplication) the EC addition is significantly different for doubling (<math>P = Q</math>) and general addition (<math>P \ne Q</math>) depending on the coordinate system used. Consequently, it is important to counteract <link xlink:type="simple" xlink:href="../678/667678.xml">
side channel attack</link>s (e.g., timing and simple power analysis attacks) using, for example, fixed pattern window (aka. comb) methods<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%2220%22])">20</ref> (note that this does not increase the computation time).</p>

</ss1>
<ss1>
<st>
Patents</st>

<p>

<indent level="1">

<it>Main article: <link xlink:type="simple" xlink:href="../143/3225143.xml">
ECC patents</link></it>
</indent>
At least one ECC scheme (<link xlink:type="simple" xlink:href="../447/1586447.xml">
ECMQV</link>) and some implementation techniques are covered by patents. Uncertainty about the availability of unencumbered ECC has limited the acceptance of ECC.</p>

</ss1>
</sec>
<sec>
<st>
Implementations</st>


<ss1>
<st>
 Open source </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.openssl.org/">
OpenSSL: Open source library written in C with ECC library</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.cryptopp.com/">
Crypto++ : Open source library written in C++ with ECC</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.mozilla.org/projects/security/pki/nss/">
NSS: Open source crypto libraries with ECC</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://point-at-infinity.org/seccure/">
seccure: minimal footprint GPLed ECC tool with public key encryption and digital signatures</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://sks.merseine.nu/">
SKS: very small open source tool for ECC (like a simplified PGP)</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.calcurco.cat/eccGnuPG/index.en.html">
eccGnuPG: An experimental patch to GnuPG</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://cr.yp.to/ecdh.html">
Curve25519: A state-of-the-art Diffie-Hellman function by Dan Bernstein</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://discovery.csc.ncsu.edu/software/TinyECC/">
TinyECC: a software package providing ECC operations on TinyOS</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://libecc.sourceforge.net/">
libecc: Open source ECC library</weblink></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.bouncycastle.org/">
Bouncy Castle: Open source crypto package for Java and C# that includes ECC</weblink></entry>
</list>
</p>

</ss1>
<ss1>
<st>
 Proprietary/commercial </st>

<p>

<list>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.shamus.ie/">
MIRACL: Multiprecision Integer and Rational Arithmetic C/C++ Library</weblink></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../413/3302413.xml">
CNG</link> API in <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../648/2289648.xml">
Windows Vista</link></version>
 and <version wordnetid="107173585" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../042/2361042.xml">
Windows Server 2008</link></version>
 with <link xlink:type="simple" xlink:href="../801/1750801.xml">
managed</link> wrappers for CNG in <platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<link xlink:type="simple" xlink:href="../402/60402.xml">
.NET Framework</link></implement>
</horizontal_surface>
</tool>
</instrumentality>
</surface>
</artifact>
</platform>
 3.5</entry>
<entry level="1" type="bullet">

 <software wordnetid="106566077" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../928/2625928.xml">
Sun Java System Web Server</link></software>
 7.0 and later</entry>
<entry level="1" type="bullet">

 <message wordnetid="106598915" confidence="0.8">
<platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<request wordnetid="106513366" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../871/42871.xml">
Java SE</link></horizontal_surface>
</request>
</surface>
</artifact>
</platform>
</message>
 6</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../564/2070564.xml">
Java Card</link></entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.certicom.com/products">
Security Builder Crypto</weblink></entry>
</list>
</p>

</ss1>
</sec>
<sec>
<st>
See also</st>
<p>

<list>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../525/450525.xml">
ECDSA</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../958/3357958.xml">
ECDH</link></entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../447/1586447.xml">
ECMQV</link></entry>
<entry level="1" type="bullet">

 <link>
DNSCurve</link></entry>
</list>
</p>

</sec>
<sec>
<st>
Notes</st>
<p>

<reflist>
<entry id="1">
N. Koblitz, <it>Elliptic curve cryptosystems</it>, in <it>Mathematics of Computation</it> 48, 1987, pp. 203&ndash;209</entry>
<entry id="2">
V. Miller, <it>Use of elliptic curves in cryptography</it>, CRYPTO 85, 1985.</entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://csrc.nist.gov/publications/drafts/fips_186-3/Draft-FIPS-186-3%20_March2006.pdf">
FIPS 186-3, February, 2006, public comment version</weblink></entry>
<entry id="4">
http://www.nsa.gov/ia/Industry/crypto_suite_b.cfm Fact Sheet NSA Suite B Cryptography, U.S. National 
Security Agency</entry>
<entry id="5">
<weblink xlink:type="simple" xlink:href="http://www.nsa.gov/ia/industry/crypto_elliptic_curve.cfm">
The Case for Elliptic Curve Cryptography, NSA</weblink></entry>
<entry id="6">
G. Lay and H. Zimmer, <it>Constructing elliptic curves with given group order over large finite fields,</it> Algorithmic Number Theory Symposium, 1994.</entry>
<entry id="7">
S.D. Galbraith and N.P. Smart, <it>A cryptographic application of the Weil descent,</it> Cryptography and Coding, 1999.</entry>
<entry id="8">
P. Gaudry, F. Hess, and N.P. Smart, <weblink xlink:type="simple" xlink:href="http://www.hpl.hp.com/techreports/2000/HPL-2000-10.pdf">
Constructive and destructive facets of Weil descent on elliptic curves</weblink>, Hewlett Packard Laboratories Technical Report, 2000.</entry>
<entry id="9">
A. Menezes, T. Okamoto, and S.A. Vanstone, <it>Reducing elliptic curve logarithms to logarithms in a finite field,</it> IEEE Transactions on Information Theory, Volume 39, 1993.</entry>
<entry id="10">
L. Hitt, <weblink xlink:type="simple" xlink:href="http://eprint.iacr.org/2006/415">
On an Improved Definition of Embedding Degree</weblink>, IACR ePrint report 2006/415.</entry>
<entry id="11">
IEEE <weblink xlink:type="simple" xlink:href="http://grouper.ieee.org/groups/1363/P1363/index.html">
P1363</weblink>, section A.12.1</entry>
<entry id="12">
I. Semaev, <it>Evaluation of discrete logarithm in a group of P-torsion points of an elliptic curve in characteristic P,</it> Mathematics of Computation, number 67, 1998.</entry>
<entry id="13">
N. Smart, <it>The discrete logarithm problem on elliptic curves of trace one,</it> Journal of Cryptology, Volume 12, 1999.</entry>
<entry id="14">
T. Satoh and K. Araki, <it>Fermat quotients and the polynomial time discrete log algorithm for anomalous elliptic curves,</it> Commentarii Mathematici Universitatis Sancti Pauli, Volume 47, 1998.</entry>
<entry id="15">
NIST, <weblink xlink:type="simple" xlink:href="http://csrc.nist.gov/publications/nistpubs/800-57/SP800-57-Part1.pdf">
Recommendation for Key Management &mdash; Part 1: general</weblink>,  Special Publication 800-57, August 2005.</entry>
<entry id="17">
H. Cohen, A. Miyaji, T. Ono, <weblink xlink:type="simple" xlink:href="http://citeseer.ist.psu.edu/277895.html">
Efficient Elliptic Curve Exponentiation Using Mixed Coordinates</weblink>, ASIACRYPT 1998.</entry>
<entry id="16">
Y. Hitchcock, E. Dawson, A. Clark, and P. Montague, <weblink xlink:type="simple" xlink:href="http://anziamj.austms.org.au/V44/CTAC2001/Hitc/Hitc.pdf">
Implementing an efficient elliptic curve cryptosystem over GF(p) on a smart card</weblink>, 2002.</entry>
<entry id="19">
FIPS PUB 186-2, <weblink xlink:type="simple" xlink:href="http://csrc.nist.gov/publications/fips/fips186-2/fips186-2-change1.pdf">
Digital Signature Standard (DSS)</weblink>.</entry>
<entry id="18">
M. Brown, D. Hankerson, J. Lopez, and A. Menezes, <weblink xlink:type="simple" xlink:href="http://www.eng.auburn.edu/users/hamilton/security/pubs/Software_Implementation_of_the_NIST_Elliptic.pdf">
Software Implementation of the NIST Elliptic Curves Over Prime Fields</weblink>.</entry>
<entry id="20">
M. Hedabou, P. Pinel, and L. Beneteau, <weblink xlink:type="simple" xlink:href="http://eprint.iacr.org/2004/342.pdf">
A comb method to render ECC resistant against Side Channel Attacks</weblink>, 2004.</entry>
</reflist>
</p>

</sec>
<sec>
<st>
References</st>
<p>

<list>
<entry level="1" type="bullet">

 <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../238/1582238.xml">
Standards for Efficient Cryptography Group (SECG)</link></system_of_measurement>
</standard>
, <weblink xlink:type="simple" xlink:href="http://www.secg.org/download/aid-385/sec1_final.pdf">
SEC 1: Elliptic Curve Cryptography</weblink>, Version 1.0, September 20, 2000.</entry>
<entry level="1" type="bullet">

 D. Hankerson, A. Menezes, and S.A. Vanstone, <it>Guide to Elliptic Curve Cryptography</it>, Springer-Verlag, 2004.</entry>
<entry level="1" type="bullet">

 I. Blake, G. Seroussi, and N. Smart, <it>Elliptic Curves in Cryptography</it>, London Mathematical Society 265, Cambridge University Press, 1999.</entry>
<entry level="1" type="bullet">

 I. Blake, G. Seroussi, and N. Smart, editors, <it>Advances in Elliptic Curve Cryptography</it>, London Mathematical Society 317, Cambridge University Press, 2005.</entry>
<entry level="1" type="bullet">

 L. Washington, <it>Elliptic Curves: Number Theory and Cryptography</it>, Chapman &amp; Hall / CRC, 2003.</entry>
<entry level="1" type="bullet">

 Anoop MS, <weblink xlink:type="simple" xlink:href="http://hosteddocs.ittoolbox.com/AN1.5.07.pdf">
Elliptic Curve Cryptography -- An Implementation Tutorial</weblink>, Tata Elxsi, India, January 5, 2007.</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.nsa.gov/ia/industry/crypto_elliptic_curve.cfm">
The Case for Elliptic Curve Cryptography</weblink>, National Security Agency</entry>
<entry level="1" type="bullet">

 <weblink xlink:type="simple" xlink:href="http://www.certicom.com/index.php/ecc-tutorial">
Online Elliptic Curve Cryptography Tutorial</weblink>, Certicom Corp.</entry>
<entry level="1" type="bullet">

 K. Malhotra, S. Gardner, and R. Patz, Implementation of Elliptic-Curve Cryptography on Mobile Healthcare Devices, Networking, Sensing and Control, 2007 IEEE International Conference on, London, 15-17 April 2007 Page(s):239 - 244</entry>
</list>
</p>

<p>

<table style=";" class="navbox" cellspacing="0">
<row>
<col style="padding:2px;">
<table style="width:100%;background:transparent;color:inherit;;" class="nowraplinks  " cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<b>Algorithms:</b> <link xlink:type="simple" xlink:href="../287/14050287.xml">
CEILIDH</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../406/1564406.xml">
Cramer-Shoup</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../903/7903.xml">
DH</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../470/59470.xml">
DSA</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../958/3357958.xml">
ECDH</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../525/450525.xml">
ECDSA</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../894/1506894.xml">
EKE</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../458/59458.xml">
ElGamal encryption</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../473/2033473.xml">
ElGamal signature scheme</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../608/598608.xml">
GMR</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../076/3530076.xml">
IES</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../486/3200486.xml">
Lamport</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../447/1586447.xml">
MQV</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../582/481582.xml">
NTRUEncrypt</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../327/3513327.xml">
NTRUSign</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../685/480685.xml">
Paillier</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../283/451283.xml">
Rabin</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../385/25385.xml">
RSA</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../536/450536.xml">
Schnorr</link>&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<link xlink:type="simple" xlink:href="../061/2159061.xml">
SPEKE</link></rule>
</direction>
</protocol>
</message>
&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../670/1306670.xml">
SRP</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
&nbsp;&#124; 
<message wordnetid="106598915" confidence="0.8">
<protocol wordnetid="106665108" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<direction wordnetid="106786629" confidence="0.8">
<rule wordnetid="106652242" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../137/2587137.xml">
STS</link></method>
</rule>
</direction>
</know-how>
</protocol>
</message>
&nbsp;&#124; 
<region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../209/3963209.xml">
XTR</link></geographical_area>
</tract>
</location>
</field>
</region>
</p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even"><p>

<b>Theory:</b> <link xlink:type="simple" xlink:href="../334/181334.xml">
Discrete logarithm</link>&nbsp;&#124; 
<region wordnetid="108630985" confidence="0.8">
<field wordnetid="108569998" confidence="0.8">
<location wordnetid="100027167" confidence="0.8">
<tract wordnetid="108673395" confidence="0.8">
<geographical_area wordnetid="108574314" confidence="0.8">
<link xlink:type="simple" xlink:href="../966/9966.xml">
Elliptic curve cryptography</link></geographical_area>
</tract>
</location>
</field>
</region>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../741/1544741.xml">
RSA problem</link></p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd"><p>

<b>Standardization:</b> <link>
ANS X9F1</link>&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../159/549159.xml">
CRYPTREC</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../154/1644154.xml">
IEEE P1363</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../430/497430.xml">
NESSIE</link></system_of_measurement>
</standard>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../099/1602099.xml">
NSA Suite B</link></p>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even"><p>

<b>Misc:</b> <document wordnetid="106470073" confidence="0.8">
<written_communication wordnetid="106349220" confidence="0.8">
<writing wordnetid="106362953" confidence="0.8">
<link xlink:type="simple" xlink:href="../644/59644.xml">
Digital signature</link></writing>
</written_communication>
</document>
&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../312/7943312.xml">
Fingerprint</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../112/194112.xml">
PKI</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../356/296356.xml">
Web of trust</link>&nbsp;&#124; 
<link xlink:type="simple" xlink:href="../749/5749.xml">
Key size</link></p>
</col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<table style="width:100%;;;;" class="nowraplinks  navbox-subgroup" cellspacing="0">
<row>
<header colspan="2" style=";background:#ccf;" class="navbox-title">
&nbsp;<link xlink:type="simple" xlink:href="../432/18934432.xml">
Cryptography</link></header>
</row>
<row style="height:2px;">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<link xlink:type="simple" xlink:href="../066/520066.xml">
History of cryptography</link> | <link xlink:type="simple" xlink:href="../715/5715.xml">
Cryptanalysis</link> | 
Cryptography portal | <link xlink:type="simple" xlink:href="../585/449585.xml">
Topics in cryptography</link></col>
</row>
<row style="height:2px">

</row>
<row>
<col colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-even">
<event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../042/53042.xml">
Symmetric-key algorithm</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../594/4594.xml">
Block cipher</link> | <link xlink:type="simple" xlink:href="../007/49007.xml">
Stream cipher</link> | <link xlink:type="simple" xlink:href="../222/24222.xml">
Public-key cryptography</link> | <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<primitive wordnetid="109627462" confidence="0.8">
<link xlink:type="simple" xlink:href="../526/439526.xml">
Cryptographic hash function</link></primitive>
</causal_agent>
</person>
</physical_entity>
 | <link xlink:type="simple" xlink:href="../523/567523.xml">
Message authentication code</link> | <event wordnetid="100029378" confidence="0.8">
<rule wordnetid="105846932" confidence="0.8">
<act wordnetid="100030358" confidence="0.8">
<psychological_feature wordnetid="100023100" confidence="0.8">
<procedure wordnetid="101023820" confidence="0.8">
<activity wordnetid="100407535" confidence="0.8">
<algorithm wordnetid="105847438" confidence="0.8">
<link xlink:type="simple" xlink:href="../249/182249.xml">
Random numbers</link></algorithm>
</activity>
</procedure>
</psychological_feature>
</act>
</rule>
</event>
 | <link xlink:type="simple" xlink:href="../733/28733.xml">
Steganography</link></col>
</row>
</table>
</col>
</row>
</table>
</col>
</row>
</table>
</p>



</sec>
</bdy>
</geographical_area>
</entity>
</tract>
</location>
</field>
</region>
</article>
